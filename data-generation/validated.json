{
  "Post Text Editor: Input field for writing a new post": [
    {
      "description": "A minimalist text editor for writing a new post, consisting of a text input field with a subtle border, padding, and a hint of typography. The input field should be responsive, taking up the full width on mobile devices and shrinking to a comfortable size on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TextInput/></div>",
      "components": [
        {
          "name": "TextInput",
          "is_standalone": true,
          "description": "(standalone): A simple text input field with a label and minimal styling.",
          "html": "<div class=\"flex flex-col mb-4\"><label class=\"text-sm text-gray-600\" for=\"post-input\">Write a new post:</label><input id=\"post-input\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" placeholder=\"Start typing...\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field with a placeholder for writing a new post. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-col w-full p-4 md:p-6 lg:p-8\"><PostEditor/></div>",
      "components": [
        {
          "name": "PostEditor",
          "is_standalone": true,
          "description": "A standalone component that contains the text input field.",
          "html": "<div class=\"flex flex-col w-full\"><InputField/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "A standalone component that represents the text input field.",
          "html": "<textarea class=\"w-full p-2 pl-4 pr-4 bg-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\" placeholder=\"Write a new post...\" rows=\"5\"></textarea>"
        }
      ]
    }
  ],
  "Call to Action Button Text": [
    {
      "description": "The UI should be a call-to-action (CTA) button with custom text, responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<button class=\"ActionButton\"/>",
      "components": [
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{ctaButtonText}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first Call to Action (CTA) button with a clear and concise text.",
      "html": "<button class=\"cta-button\"><CallToActionButton/></button>",
      "components": [
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "A standalone component representing the CTA button.",
          "html": "<span class=\"text-sm font-bold text-white\">{cta_text}</span>"
        }
      ]
    }
  ],
  "Dropdown menu that expands inline within the content flow": [
    {
      "description": "The UI should be a dropdown menu that expands inline within the content flow. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<nav><DropdownToggle/><DropdownMenu><DropdownMenuItem/><DropdownMenuItem/><!-- Add more DropdownMenuItem components here --></DropdownMenu></nav>",
      "components": [
        {
          "name": "DropdownToggle",
          "is_standalone": true,
          "description": "A standalone component that triggers the dropdown menu.",
          "html": "<button class=\"text-sm font-bold py-2 px-4 rounded-md hover:bg-gray-100\">{toggle_text}</button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children and contains the dropdown menu items.",
          "html": "<ul class=\"list-none p-0 m-0 bg-white shadow-md rounded\">{children}</ul>"
        },
        {
          "name": "DropdownMenuItem",
          "is_standalone": true,
          "description": "A standalone component that represents an individual item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{item_href}\" class=\"text-sm text-gray-600\">{item_text}</a></li>"
        }
      ]
    }
  ],
  "Map filters": [
    {
      "description": "The UI should be a compact, responsive map filter component that allows users to select specific filters to narrow down their search. It should have a toggle button to expand and collapse the filter options.",
      "html": "<div class=\"flex flex-col w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><FilterToggle/><FilterList><!-- Filter options will be rendered here --></FilterList></div>",
      "components": [
        {
          "name": "FilterToggle",
          "is_standalone": true,
          "description": "Standalone component that toggles the filter options.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{toggle_label}</button>"
        },
        {
          "name": "FilterList",
          "is_standalone": false,
          "description": "Component that takes children (FilterOption components) and renders them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Product Feature Icon Size": [
    {
      "description": "The UI should display a product feature icon with a specific size. The icon should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ProductFeatureIcon/></div>",
      "components": [
        {
          "name": "ProductFeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon with a specific size.",
          "html": "<i class=\"fas fa-{icon_type} text-{icon_color} text-{icon_size}\"></i>"
        }
      ]
    },
    {
      "description": "The UI should display a product feature icon with a size indicator, which is responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"flex items-center\"><FeatureIcon/><IconSizeIndicator/></div>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a icon representing a product feature.",
          "html": "<i class=\"fas fa-{icon_type} text-2xl\" aria-label=\"{icon_label}\"></i>"
        },
        {
          "name": "IconSizeIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the size of the icon.",
          "html": "<span class=\"text-sm\">{icon_size}px</span>"
        }
      ]
    }
  ],
  "Statistics Section: Showcase impressive metrics and data": [
    {
      "description": "The Statistics Section should display impressive metrics and data in a visually appealing way, with clear headings, easy-to-read fonts, and sufficient whitespace to make the numbers stand out.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-3xl font-bold mb-4\">Key Statistics</h2><StatisticsSection><StatisticCard/><StatisticCard/><StatisticCard/></StatisticsSection></section>",
      "components": [
        {
          "name": "StatisticCard",
          "is_standalone": true,
          "description": "a standalone component that displays a single metric, consisting of a title, value, and optional description.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{statistic_title}</h3><p class=\"text-3xl font-bold\">{statistic_value}</p><p class=\"text-gray-600\">{statistic_description}</p></div>"
        },
        {
          "name": "StatisticsSection",
          "is_standalone": false,
          "description": "a component that takes children, wrapping multiple `StatisticCard`s in a container with a heading.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Email filtering and sorting options": [
    {
      "description": "The UI should be a compact and responsive email filtering and sorting options panel that can be easily accessed from an email inbox. It should have a minimalistic design with clear labels and intuitive icons. The panel should be adaptable to different screen sizes and devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-white rounded shadow-md\"><FilterPanel><EmailFilterOption/><EmailFilterOption/><EmailFilterOption/></FilterPanel><SortPanel><EmailSortOption/><EmailSortOption/><EmailSortOption/></SortPanel></div>",
      "components": [
        {
          "name": "EmailFilterOption",
          "is_standalone": true,
          "description": "(standalone) - A single filter option with a checkbox and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"checkbox\" id=\"{filterId}\" class=\"mr-2\"><label for=\"{filterId}\" class=\"text-sm\">{filterLabel}</label></div>"
        },
        {
          "name": "EmailSortOption",
          "is_standalone": true,
          "description": "(standalone) - A single sort option with a radio button and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"radio\" id=\"{sortId}\" class=\"mr-2\"><label for=\"{sortId}\" class=\"text-sm\">{sortLabel}</label></div>"
        },
        {
          "name": "FilterPanel",
          "is_standalone": false,
          "description": "(takes children) - The main filter panel that contains all the filter options.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg mb-2\">Filters</h5>{children}</div>"
        },
        {
          "name": "SortPanel",
          "is_standalone": false,
          "description": "(takes children) - The main sort panel that contains all the sort options.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg mb-2\">Sort by</h5>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Product Card": [
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    }
  ],
  "Control for adjusting a value within a range by dragging a handle along a track": [
    {
      "description": "The UI should display a slider with a handle that can be dragged along a track to adjust a value within a range. The slider should have a clear minimum and maximum value indication, and the current value should be displayed next to the slider.",
      "html": "<div class=\"flex items-center\"><RangeSlider><SliderTrack/><SliderHandle/><SliderValueDisplay/></RangeSlider></div>",
      "components": [
        {
          "name": "SliderTrack",
          "is_standalone": true,
          "description": "A standalone component that renders the track of the slider.",
          "html": "<div class=\"w-full h-1 rounded-full bg-gray-200 relative\"><!-- track background --><div class=\"h-full bg-gray-400 absolute\" style={{ width: `${trackProgress}%`, }}></div></div>"
        },
        {
          "name": "SliderHandle",
          "is_standalone": true,
          "description": "A standalone component that renders the draggable handle of the slider.",
          "html": "<div class=\"w-6 h-6 rounded-full bg-gray-800 absolute\" style={{ left: `${handleLeft}px`, }}></div>"
        },
        {
          "name": "SliderValueDisplay",
          "is_standalone": true,
          "description": "A standalone component that displays the current value of the slider.",
          "html": "<p class=\"text-gray-600\">{currentValue}</p>"
        },
        {
          "name": "RangeSlider",
          "is_standalone": false,
          "description": "A component that wraps the entire slider UI and takes children (`SliderTrack`, `SliderHandle`, and `SliderValueDisplay`).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Related Project Suggestions": [
    {
      "description": "The UI should be a list of suggested projects, each with a title, description, and a \"View Project\" button. The list should be displayed in a grid format, with 2-3 columns on larger screens and 1 column on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto pt-4\"><h2 class=\"text-lg font-bold mb-4\">Related Projects</h2><ProjectSuggestionsList><ProjectSuggestionCard/><ProjectSuggestionCard/><ProjectSuggestionCard/></ProjectSuggestionsList></div>",
      "components": [
        {
          "name": "ProjectSuggestionCard",
          "is_standalone": true,
          "description": "a standalone component that displays a single project suggestion.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><h3 class=\"text-lg font-bold\">{project_title}</h3><p class=\"text-gray-600\">{project_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Project</button></div>"
        },
        {
          "name": "ProjectSuggestionsList",
          "is_standalone": false,
          "description": "a component that takes children, displaying a list of `ProjectSuggestionCard`s.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Post/Tweet Box": [
    {
      "description": "A post/tweet box with a profile picture, username, input field, and a send button.",
      "html": "<div class=\"flex p-4\"><UserProfilePicture/><div class=\"flex-1 ml-4\"><Username/><PostInput><PostInput/></PostInput><SendButton/></div></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<img class=\"w-12 h-12 rounded-full\" src={profile_picture_url} alt=\"Profile Picture\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<span class=\"text-lg font-bold\">{username}</span>"
        },
        {
          "name": "PostInput",
          "is_standalone": false,
          "description": "Takes children",
          "html": "<textarea class=\"w-full p-2 pl-10 text-lg\" rows=\"3\" placeholder=\"What's on your mind?\">{children}</textarea>"
        },
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        }
      ]
    }
  ],
  "Product Description List": [
    {
      "description": "The UI should be a list of product descriptions, each containing a title, a short description, and optional additional details. The list should be responsive and adapt to different screen sizes. Each list item should have a clean and minimal design, with sufficient spacing between items.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Descriptions</h2><ProductDescriptionList><ProductDescriptionListItem/><ProductDescriptionListItem/><!-- Add more list items here --></ProductDescriptionList></section>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "(standalone): A single list item containing a title, description, and optional additional details.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-sm font-bold\">{title}</h3><p class=\"text-sm text-gray-600\">{description}</p>{additionalDetails && ( <ul class=\"list-disc pl-4\"><li>{additionalDetails}</li></ul>)}</div>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps the list of product descriptions.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, with each item displaying a product image, name, rating, price, and a brief description. The list should be responsive, with a maximum of 3 columns on large screens, 2 columns on medium screens, and 1 column on small screens.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Product Descriptions</h2><ul class=\"flex flex-wrap justify-center\"><ProductDescriptionList><!-- Repeat for each product description --><ProductDescriptionCard/></ProductDescriptionList></ul></div>",
      "components": [
        {
          "name": "ProductDescriptionCard",
          "is_standalone": true,
          "description": "A standalone component representing a single product description.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 p-4\"><img src=\"{product_image}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover mb-2\"/><h3 class=\"text-lg font-bold\">{product_name}</h3><p class=\"text-sm\">{product_rating}/ 5</p><p class=\"text-lg\">{product_price}</p><p class=\"text-sm\">{product_description}</p></li>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "A component that takes children, representing the list of product descriptions.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Button that performs an action within the flow of content, often used for quick actions": [
    {
      "description": "A small, inline button that is often used for quick actions within a flow of content. It should be styled to stand out slightly from the surrounding text, but not too much.",
      "html": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <InlineActionButton/>Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>",
      "components": [
        {
          "name": "InlineActionButton",
          "is_standalone": true,
          "description": "A standalone component that renders a small button that performs an action within a flow of content.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-1 px-2 rounded\">{action_text}</button>"
        }
      ]
    }
  ],
  "Contact list with details": [
    {
      "description": "The UI should be a responsive contact list with details, displaying a list of contacts with their names, emails, and phone numbers. The list should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-2xl font-bold mb-4\">Contact List</h1><ContactList><!-- Contact cards will be rendered here --></ContactList></div>",
      "components": [
        {
          "name": "ContactList",
          "is_standalone": false,
          "description": "A component that takes children, representing the list of contacts.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Blog categories display": [
    {
      "description": "The UI should display a list of blog categories with their respective names and a count of articles within each category. The list should be responsive and accessible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h2 class=\"text-lg font-bold mb-4\">Blog Categories</h2><BlogCategoryList/></div>",
      "components": [
        {
          "name": "BlogCategoryList",
          "is_standalone": true,
          "description": "A standalone component that renders a list of blog categories.",
          "html": "<ul class=\"list-none mb-0\">{categories.map((category) =>( <li key={category.id} class=\"mb-2\"><BlogCategoryItem>{category.name} ({category.articleCount})</BlogCategoryItem></li>))}</ul>"
        },
        {
          "name": "BlogCategoryItem",
          "is_standalone": false,
          "description": "A component that takes children, representing a single blog category with its name and article count.",
          "html": "<a href={`/categories/${categoryId}`} class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a list of blog categories in a responsive, mobile-first, and accessible manner. The categories should be displayed in a grid layout, with each category represented by a card that includes the category name and a brief description.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-lg font-bold\">Blog Categories</h2><BlogCategoryList><!-- category list will be rendered here --></BlogCategoryList></div>",
      "components": [
        {
          "name": "BlogCategoryList",
          "is_standalone": false,
          "description": "(takes children) - container component for the list of blog categories",
          "html": "<div class=\"grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of blog categories with their respective icons and names. The categories should be organized in a grid, with 2-3 categories per row on desktop and 1 category per row on mobile. Each category should have a border around it, with a hover effect to indicate interactivity. The category names should be in a clean, readable font.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><BlogCategoryList><BlogCategoryCard/><BlogCategoryCard/><BlogCategoryCard/><!-- Add more BlogCategoryCard components here --></BlogCategoryList></div>",
      "components": [
        {
          "name": "BlogCategoryCard",
          "is_standalone": true,
          "description": "a standalone component that displays a single blog category with its icon and name.",
          "html": "<div class=\"bg-white border border-gray-200 rounded p-4 hover:bg-gray-100 transition duration-300 ease-in-out\"><div class=\"flex flex-wrap items-center\"><img src={category_icon} alt={category_name} class=\"w-8 h-8 mr-4\"/><h2 class=\"text-lg font-bold\">{category_name}</h2></div></div>"
        },
        {
          "name": "BlogCategoryList",
          "is_standalone": false,
          "description": "a component that takes children (multiple `BlogCategoryCard` components) and organizes them in a grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Blog Post Preview Card": [
    {
      "description": "The UI should be a blog post preview card that displays a title, a brief summary, and a \"Read More\" button. The card should be responsive and adjust to different screen sizes. It should have a clean and minimalistic design.",
      "html": "<div class=\"max-w-md mx-auto bg-white rounded shadow-md overflow-hidden md:max-w-2xl\"><BlogPostPreviewCard/></div>",
      "components": [
        {
          "name": "BlogPostPreviewCard",
          "is_standalone": true,
          "description": "standalone component that contains all the elements of the blog post preview card.",
          "html": "<div class=\"p-4\"><BlogPostTitle/><BlogPostSummary/><ReadMoreButton/></div>"
        },
        {
          "name": "BlogPostTitle",
          "is_standalone": true,
          "description": "standalone component that displays the title of the blog post.",
          "html": "<h2 class=\"text-lg font-bold\">{title}</h2>"
        },
        {
          "name": "BlogPostSummary",
          "is_standalone": true,
          "description": "standalone component that displays a brief summary of the blog post.",
          "html": "<p class=\"text-gray-600\">{summary}</p>"
        },
        {
          "name": "ReadMoreButton",
          "is_standalone": true,
          "description": "standalone component that displays a \"Read More\" button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read More</button>"
        }
      ]
    }
  ],
  "Search bar for finding specific content": [
    {
      "description": "The UI should be a simple search bar with a input field and a search button. The search bar should be responsive, taking up the full width of the screen on mobile devices and adding some margins on larger screens. The input field should have a placeholder text and the search button should have an icon of a magnifying glass.",
      "html": "<nav class=\"flex justify-center md:w-3/4 md:mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field and search button.",
          "html": "<div class=\"flex items-center bg-white border border-gray-200 rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that is the input field.",
          "html": "<input type=\"search\" class=\"w-full px-4 py-2 rounded-md border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500\" placeholder=\"Search...\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that is the search button.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    }
  ],
  "Thread Favorites and Watching": [
    {
      "description": "The UI should display a list of threads that the user has favorited or is watching, with options to unfavorite or stop watching each thread.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Thread Favorites and Watching</h2><ThreadsList><ThreadCard/><ThreadCard/><!-- more ThreadCard components here --></ThreadsList></div>",
      "components": [
        {
          "name": "ThreadCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single thread's information.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{thread_title}</h3><p class=\"text-gray-600\">{thread_description}</p><div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_favorite ? 'Unfavorite' : 'Favorite'} </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_watching ? 'Stop Watching' : 'Watch'} </button></div></div>"
        },
        {
          "name": "ThreadsList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `ThreadCard` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of threads that the user has favorited or is watching, with each thread showing its title, a brief description, and buttons to unfavorite or unwatch.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-2xl font-bold mb-4\">Favorites and Watched Threads</h1><ThreadList><!-- thread cards will be inserted here --></ThreadList></div>",
      "components": [
        {
          "name": "ThreadList",
          "is_standalone": false,
          "description": "(takes children) - A container for the list of thread cards.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Course Cards/Grids": [
    {
      "description": "The UI should display a responsive grid of course cards, with each card showing the course title, instructor, and a call-to-action (CTA) button. The grid should be mobile-first, with cards stacking vertically on small screens and displaying in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4\"><CourseGrid><CourseCard/><CourseCard/><CourseCard/><!-- Add more CourseCard components here --></CourseGrid></div>",
      "components": [
        {
          "name": "CourseCard",
          "is_standalone": true,
          "description": "(standalone): A single course card component",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h3 class=\"text-lg\">{course_title}</h3><p class=\"text-gray-600\">{instructor}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text} </button></div>"
        },
        {
          "name": "CourseGrid",
          "is_standalone": false,
          "description": "(takes children): A container component that holds multiple `CourseCard` components",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive grid of course cards, with each card displaying a course title, description, and a call-to-action (CTA) button. The grid should be mobile-first, with a maximum of 3 columns on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:max-w-none lg:p-0\"><h1 class=\"text-2xl font-bold mb-4\">Courses</h1><CourseGrid><CourseCard/><CourseCard/><CourseCard/><!-- Add more CourseCard components here --></CourseGrid></div>",
      "components": [
        {
          "name": "CourseCard",
          "is_standalone": true,
          "description": "(standalone): A single course card component.",
          "html": "<div class=\"bg-white shadow-md rounded-lg overflow-hidden mb-4 lg:w-1/3 lg:mr-4\"><h2 class=\"text-lg font-bold\">{course_title}</h2><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Enroll Now</button></div>"
        },
        {
          "name": "CourseGrid",
          "is_standalone": false,
          "description": "(takes children): A container component for the course cards.",
          "html": "<div class=\"flex flex-wrap justify-center lg:flex-row\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a grid of course cards, with each card showing the course title, description, and a call-to-action (CTA) button. The grid should be responsive, with cards stacking vertically on smaller screens and displaying in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4\"><CourseGrid><CourseCard/><CourseCard/><!-- Add more CourseCard components here --></CourseGrid></div>",
      "components": [
        {
          "name": "CourseCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single course card.",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><h2 class=\"text-lg font-bold\">{course_title}</h2><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More </button></div>"
        },
        {
          "name": "CourseGrid",
          "is_standalone": false,
          "description": "A component that takes children (multiple CourseCard components) and renders them in a responsive grid.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Product title and rating display": [
    {
      "description": "The UI should display a product title and its corresponding rating, with the title in a larger font size and the rating displayed as a fraction of 5.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductTitle/><ProductRating/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "standalone component that displays the product title",
          "html": "<h2 class=\"text-3xl font-bold\">{productName}</h2>"
        },
        {
          "name": "ProductRating",
          "is_standalone": true,
          "description": "standalone component that displays the product rating",
          "html": "<p class=\"text-lg\">{rating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating. The rating should be displayed as a series of stars, with the number of filled stars indicating the rating. The product title should be prominent and easy to read.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductTitle/><RatingDisplay/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the product title.",
          "html": "<h2 class=\"text-2xl font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingDisplay",
          "is_standalone": true,
          "description": "a standalone component that displays the rating as a series of stars.",
          "html": "<div class=\"flex\">{rating}/5 <div class=\"flex\">{[...Array(5).keys()].map((_, i) =>( <i key={i} class={`text-yellow-400 ${i < rating ? 'fas fa-star' : 'far fa-star'}`}></i>))} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating. The product title should be prominent and easy to read, while the rating should be displayed succinctly alongside the title.",
      "html": "<div class=\"flex flex-wrap justify-between\"><ProductTitle/><RatingIndicator/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the product title.",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the product rating.",
          "html": "<div class=\"flex items-center\"><span class=\"text-sm\">{ratingValue}/ 5</span><span class=\"rating-icon\">{/* rating icon */}</span></div>"
        }
      ]
    }
  ],
  "Vertical or horizontal bar for scrolling through content that doesn't fit within the viewport": [
    {
      "description": "The UI should have a scrollbar that allows users to scroll through content that exceeds the viewport's width or height. The scrollbar should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"overflow-auto h-screen\"><ScrollbarContainer/><!-- content that exceeds the viewport's width or height --><div>Long content...</div></div>",
      "components": [
        {
          "name": "ScrollbarContainer",
          "is_standalone": true,
          "description": "(standalone): A container that wraps the scrollbar and its associated content.",
          "html": "<div class=\"fixed right-0 top-0 h-full\"><Scrollbar/></div>"
        },
        {
          "name": "Scrollbar",
          "is_standalone": true,
          "description": "(standalone): The scrollbar component that allows users to scroll through content.",
          "html": "<div class=\"w-2 bg-gray-300 rounded-lg\"><ScrollbarThumb/></div>"
        },
        {
          "name": "ScrollbarThumb",
          "is_standalone": true,
          "description": "(standalone): The draggable thumb of the scrollbar that indicates the scrolled position.",
          "html": "<div class=\"bg-gray-500 rounded-full w-full h-4\">{scrollbar_thumb_size}</div>"
        }
      ]
    }
  ],
  "Featured Video Play Button": [
    {
      "description": "The UI should display a play button overlaid on a featured video thumbnail, encouraging users to play the video.",
      "html": "<div class=\"relative w-full h-full flex justify-center\"><FeaturedVideoThumbnail/><div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"><PlayButton/></div></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "standalone, displays the video thumbnail.",
          "html": "<img src={video_thumbnail_url} alt=\"Featured Video Thumbnail\" class=\"w-full h-full object-cover rounded-lg\"/>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "standalone, displays a play button icon.",
          "html": "<button aria-label=\"Play Video\" class=\"bg-white rounded-full p-4 text-3xl font-bold\"><i class=\"fas fa-play text-lg\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "A large play button overlay on top of a featured video thumbnail, with a hover effect to indicate that it's clickable.",
      "html": "<!-- Container for the featured video thumbnail and play button --><div class=\"relative h-full w-full\"><!-- Featured video thumbnail --><img src=\"{video_thumbnail_url}\" alt=\"Featured video thumbnail\" class=\"w-full h-full object-cover\"\n/><!-- Play button overlay --><div class=\"absolute inset-0 flex items-center justify-center\"><FeaturedVideoPlayButton/></div></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<!-- Play button with a hover effect --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\"><!-- Play icon --><i class=\"fas fa-play text-lg\" aria-hidden=\"true\"></i><!-- Accessibility text for screen readers --><span class=\"sr-only\">Play featured video</span></button>"
        }
      ]
    }
  ],
  "Social Sharing: Buttons for sharing content": [
    {
      "description": "The UI should be a horizontal row of social media sharing buttons, each with an icon and a brief label. The buttons should be evenly spaced and have a subtle hover effect. On mobile devices, the buttons should stack vertically to accommodate smaller screens.",
      "html": "<div class=\"flex justify-center sm:flex-row flex-wrap\"><SocialShareButtonGroup><SocialShareButton/><SocialShareButton/><SocialShareButton/><!-- Add more social media buttons here --></SocialShareButtonGroup></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "Standalone component, represents a single social media sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><i class={`fab fa-${social_media_icon}`}></i><span class=\"ml-2\">{social_media_label}</span></button>"
        },
        {
          "name": "SocialShareButtonGroup",
          "is_standalone": false,
          "description": "Component that takes children, represents the container for the social media sharing buttons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    }
  ],
  "Time Pickers/Clock Icons": [
    {
      "description": "The UI should display a clock icon with a dropdown list of time options. When a time option is selected, the clock icon should display the selected time.",
      "html": "<div class=\"flex items-center\"><ClockIcon/><select class=\"ml-2\"><TimeOption>12:00 AM</TimeOption><TimeOption>12:30 AM</TimeOption><!-- more time options here --></select></div>",
      "components": [
        {
          "name": "ClockIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a clock icon.",
          "html": "<i class=\"fas fa-clock text-gray-500 text-lg\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "TimeOption",
          "is_standalone": false,
          "description": "A component that takes children (the time option text) and is used to render each time option in the dropdown list.",
          "html": "<option>{children}</option>"
        }
      ]
    }
  ],
  "Featured Video Poster Image": [
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component that displays a poster image, a play button, and optional video title and duration.",
      "html": "<div class=\"w-full h-full relative\"><VideoPosterImage/></div>",
      "components": [
        {
          "name": "VideoPosterImage",
          "is_standalone": true,
          "description": "standalone component that renders the poster image, play button, and optional video title and duration.",
          "html": "<div class=\"w-full h-full overflow-hidden rounded-lg shadow-md\"><!-- poster image --><img src={poster_image_url} alt={video_title} class=\"w-full h-full object-cover rounded-lg\"/><!-- play button --><div class=\"absolute bottom-4 left-4 flex justify-center\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg\"><i class=\"fas fa-play\"></i></button></div><!-- optional video title and duration --><div class=\"absolute bottom-4 right-4 text-white text-sm\"><p>{video_title}</p><p>{video_duration} minutes</p></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive, accessible, and SEO-friendly featured video poster image component. The image should be centered and take up the full width of the container on mobile devices and smaller screens, and resize to fit the container on larger screens.",
      "html": "<div class=\"container mx-auto p-4\"><FeaturedVideoPosterImage/></div>",
      "components": [
        {
          "name": "FeaturedVideoPosterImage",
          "is_standalone": true,
          "description": "(standalone): This component will contain the featured video poster image.",
          "html": "<img class=\"object-cover w-full h-64 md:h-80 lg:h-96 xl:h-112 mb-4\" src={poster_image_url} alt={poster_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component. It should display a poster image for a video, with an optional play button overlay.",
      "html": "<div class=\"container mx-auto p-4\"><FeaturedVideoPosterImage/></div>",
      "components": [
        {
          "name": "FeaturedVideoPosterImage",
          "is_standalone": true,
          "description": "(standalone): The main component for the featured video poster image.",
          "html": "<img src=\"{poster_image_url}\" alt=\"{video_title}\" class=\"w-full h-full object-cover rounded-lg shadow-lg\"/><!-- Optional play button overlay -->{play_button ? <PlayButton/>: null}"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "(standalone): An optional play button that can be overlaid on the poster image.",
          "html": "<button class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white text-black rounded-full p-2\"><span class=\"sr-only\">Play video</span><i class=\"fas fa-play\" aria-hidden=\"true\"></i></button>"
        }
      ]
    }
  ],
  "Callout Box Button": [
    {
      "description": "A Callout Box Button is a responsive, mobile-first UI component that displays a prominent button with a callout box containing additional information when hovered or focused. The callout box should be positioned above the button and have a subtle animation when appearing/dissappearing.",
      "html": "<div class=\"flex justify-center\"><CalloutBoxButton/></div>",
      "components": [
        {
          "name": "CalloutBoxButton",
          "is_standalone": true,
          "description": "Standalone component containing a button and a callout box.",
          "html": "<div class=\"relative inline-block\"><Button/><CalloutBox/></div>"
        },
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "Standalone component containing the additional information.",
          "html": "<div class=\"absolute bg-white p-4 rounded-md shadow-md text-sm text-gray-600\">{callout_text}</div>"
        },
        {
          "name": "Button",
          "is_standalone": true,
          "description": "Standalone component displaying the prominent button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-semibold py-2 px-4 rounded-lg\">{button_text}</button>"
        }
      ]
    }
  ],
  "Callout Box Background Image": [
    {
      "description": "The UI should be a callout box with a background image, having a heading, description, and a call-to-action button. The background image should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that wraps the entire callout box.",
          "html": "<div class=\"relative bg-cover bg-center h-full\" style={{ backgroundImage: `url(${background_image_url})` }}><div class=\"absolute inset-0 bg-gray-900 bg-opacity-50\"></div><CalloutHeader/><CalloutButton/></div>"
        },
        {
          "name": "CalloutHeader",
          "is_standalone": true,
          "description": "A standalone component that contains the heading and description.",
          "html": "<div class=\"absolute bottom-0 left-0 p-4 mb-4\"><h2 class=\"text-2xl font-bold\">{heading}</h2><p class=\"text-lg\">{description}</p></div>"
        },
        {
          "name": "CalloutButton",
          "is_standalone": true,
          "description": "A standalone component that contains the call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    }
  ],
  "Shader/Gradient backgrounds": [
    {
      "description": "The UI should display a container with a shader/gradient background that changes color depending on the screen size.",
      "html": "<div class=\"h-screen w-full\"><GradientBackground/></div>",
      "components": [
        {
          "name": "GradientBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a shader/gradient background.",
          "html": "<div class=\"h-full w-full bg-gradient-to-r from-{start_color} to-{end_color} md:bg-gradient-to-br lg:bg-gradient-to-t\"><!-- background container --></div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a shader/gradient background that adapts to different screen sizes and devices.",
      "html": "<section class=\"h-screen\"><GradientHero/></section>",
      "components": [
        {
          "name": "GradientHero",
          "is_standalone": true,
          "description": "(standalone) - A hero section with a shader/gradient background.",
          "html": "<section class=\"h-screen bg-gradient-to-r from-purple-400 to-orange-300\"><!-- Hero content goes here --><h1 class=\"text-3xl font-bold\">{hero_title}</h1><p class=\"text-lg\">{hero_subtitle}</p><!-- Call-to-action button --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></section>"
        }
      ]
    },
    {
      "description": "The UI should display a container with a shader/gradient background. The background should have a gradient effect with two colors: a light blue color (#87CEEB) and a darker blue color (#032B44). The gradient should be diagonally angled from top-left to bottom-right.",
      "html": "<div class=\"h-screen w-full flex items-center justify-center\"><GradientBackground/></div>",
      "components": [
        {
          "name": "GradientBackground",
          "is_standalone": true,
          "description": "A standalone component that wraps the gradient background.",
          "html": "<div class=\"h-full w-full bg-gradient-to-br from-[#87CEEB] to-[#032B44] rounded-md p-4\"></div>"
        }
      ]
    }
  ],
  "Graphic element showing the progress of a task or process": [
    {
      "description": "A responsive, horizontal progress bar that displays the progress of a task or process. The bar should be divided into two sections: a completed section (filled with a color, e.g., blue) and a remaining section (filled with a lighter color, e.g., gray). The progress bar should be accessible and responsive, adapting to different screen sizes and devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ProgressBar/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-2 bg-gray-200 rounded-full\"><div class=\"bg-blue-500 h-2 rounded-full\" style={{ width: `${progress_percent}%` }}></div><span class=\"sr-only\">{progress_percent}% complete</span></div>"
        }
      ]
    }
  ],
  "Location map display": [
    {
      "description": "The UI should display a location map with a marker indicating a specific location. The map should be responsive and adapt to different screen sizes. It should also be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><MapContainer><LocationMap/><MapMarker/></MapContainer></div>",
      "components": [
        {
          "name": "LocationMap",
          "is_standalone": true,
          "description": "(standalone): The container element for the map.",
          "html": "<div class=\"h-screen w-full overflow-hidden\"><div id=\"map\" class=\"h-full w-full\"></div></div>"
        },
        {
          "name": "MapMarker",
          "is_standalone": true,
          "description": "(standalone): The marker indicating a specific location.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"><div class=\"bg-red-500 rounded-full w-6 h-6\"></div></div>"
        },
        {
          "name": "MapContainer",
          "is_standalone": false,
          "description": "(takes children): The container element that wraps the map and marker.",
          "html": "<div class=\"relative\">{children}</div>"
        }
      ]
    }
  ],
  "Loading Animations/Spinners": [
    {
      "description": "The UI should display a loading animation/spinner that indicates to the user that the system is processing information. The animation should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "A standalone component that displays a loading animation.",
          "html": "<div class=\"rounded-full border-2 border-gray-500 h-12 w-12 animate-spin\"><div class=\"rounded-full border-2 border-gray-500 h-10 w-10 mx-auto\"></div></div>"
        }
      ]
    }
  ],
  "Author bio display": [
    {
      "description": "The UI should display an author's bio, including their name, profile picture, bio text, and social media links. The layout should be responsive, with the profile picture above the bio text on mobile devices and to the left of the bio text on larger screens.",
      "html": "<div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/3 xl:w-1/4 px-4 mb-4 md:mb-0\"><ProfilePicture/></div><div class=\"w-full md:w-2/3 xl:w-3/4 px-4\"><h2 class=\"text-lg font-bold\">{author_name}</h2><p class=\"text-gray-600\">{bio_text}</p><SocialMediaLinks/></div></div>",
      "components": [
        {
          "name": "SocialMediaLinks",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<ul class=\"flex justify-start mb-4\"><li class=\"mr-4\"><a href=\"{twitter_url}\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a></li><li class=\"mr-4\"><a href=\"{linkedin_url}\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a></li><li><a href=\"{github_url}\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></li></ul>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<img class=\"w-24 h-24 rounded-full mb-4\" src=\"{profile_picture_url}\" alt=\"{author_name}'s profile picture\"/>"
        }
      ]
    }
  ],
  "Roadmap/Gantt Charts": [
    {
      "description": "The UI should display a Gantt chart with a roadmap layout, showing a timeline of tasks and their dependencies. The chart should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><RoadmapHeader/><GanttChart><TaskCard/><TaskCard/><TaskCard/><DependencyLine/><DependencyLine/></GanttChart><TimelineMarkers/></div>",
      "components": [
        {
          "name": "RoadmapHeader",
          "is_standalone": true,
          "description": "(standalone): displays the title and description of the roadmap",
          "html": "<h1 class=\"text-3xl font-bold\">{roadmap_title}</h1><p class=\"text-lg\">{roadmap_description}</p>"
        },
        {
          "name": "GanttChart",
          "is_standalone": false,
          "description": "(takes children): renders the Gantt chart with tasks and dependencies",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "TaskCard",
          "is_standalone": true,
          "description": "(standalone): represents a single task on the Gantt chart",
          "html": "<div class=\"bg-white shadow-md rounded p-2\"><h2 class=\"text-lg\">{task_name}</h2><p class=\"text-sm\">{task_description}</p><p class=\"text-xs\">{task_duration} days</p></div>"
        },
        {
          "name": "DependencyLine",
          "is_standalone": true,
          "description": "(standalone): connects dependent tasks on the Gantt chart",
          "html": "<div class=\"border-l-2 border-dashed border-gray-300\"></div>"
        },
        {
          "name": "TimelineMarkers",
          "is_standalone": true,
          "description": "(standalone): displays the timeline labels and grid lines",
          "html": "<div class=\"flex justify-between\"><p class=\"text-sm\">{start_date}</p><p class=\"text-sm\">{end_date}</p><p class=\"text-sm\">{today_date}</p></div>"
        }
      ]
    }
  ],
  "Header Navigation Toggle": [
    {
      "description": "The UI should be a responsive header navigation toggle, which is a common design pattern for mobile-first navigation. The toggle should be accessible and SEO-friendly.",
      "html": "<header class=\"bg-gray-200 py-4 lg:py-8\"><div class=\"container mx-auto px-4 lg:px-8\"><Header/><NavToggle/><Nav><!-- navigation items will be inserted here --></Nav></div></header>",
      "components": [
        {
          "name": "Header",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-2xl font-bold\">{site_title}</h1>"
        },
        {
          "name": "NavToggle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"lg:hidden\" aria-label=\"Navigation toggle\"><span class=\"sr-only\">Toggle navigation</span><i class=\"fas fa-bars text-lg\"></i></button>"
        },
        {
          "name": "Nav",
          "is_standalone": false,
          "description": "takes children",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-end\">{children}</nav>"
        }
      ]
    }
  ],
  "Error/Success Messages": [
    {
      "description": "The UI should display error or success messages in a clear and concise manner, with a clear visual indicator of the message type (error or success). The message should be easily readable and accessible on various devices.",
      "html": "<div class=\"flex justify-center\"><ErrorMessage/><!-- or --><SuccessMessage/><!-- or --><MessageType/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "standalone component to display an error message",
          "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{error_message}</strong><span class=\"block\">{error_details}</span></div>"
        },
        {
          "name": "SuccessMessage",
          "is_standalone": true,
          "description": "standalone component to display a success message",
          "html": "<div class=\"bg-green-100 border border-green-500 text-green-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{success_message}</strong><span class=\"block\">{success_details}</span></div>"
        },
        {
          "name": "MessageType",
          "is_standalone": true,
          "description": "standalone component to display a generic message (can be used for error or success messages)",
          "html": "<div class=\"bg-{message_color}-100 border border-{message_color}-500 text-{message_color}-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{message}</strong><span class=\"block\">{message_details}</span></div>"
        }
      ]
    }
  ],
  "Navigation Menu Item Icon": [
    {
      "description": "The UI should be a navigation menu item with an icon, which is a clickable element that represents a single item in a navigation menu. The icon should be displayed to the left of the text.",
      "html": "<nav><NavigationMenuItemIcon/><!-- more navigation menu items --></nav>",
      "components": [
        {
          "name": "NavigationMenuItemIcon",
          "is_standalone": true,
          "description": "A standalone component that represents a single item in a navigation menu.",
          "html": "<li class=\"flex items-center py-2\"><i class=\"fas fa-{icon_type} mr-2 text-lg\" aria-hidden=\"true\"></i><span>{menu_item_text}</span></li>"
        }
      ]
    }
  ],
  "Calendar display": [
    {
      "description": "The UI should display a calendar with the current month and year, with each day of the month listed in a grid format. The calendar should be responsive and accessible on different devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CalendarHeader/><CalendarGrid><!-- grid of days will be inserted here --></CalendarGrid></div>",
      "components": [
        {
          "name": "CalendarHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the current month and year.",
          "html": "<div class=\"flex justify-between mb-4\"><h2 class=\"text-lg\">{current_month} {current_year}</h2><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Prev</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Next</button></div>"
        },
        {
          "name": "CalendarGrid",
          "is_standalone": false,
          "description": "A component that contains a grid of `DayCell` components, takes children to populate the calendar grid.",
          "html": "<table class=\"w-full\"><tbody><tr>{children} <!-- DayCell components will be inserted here --></tr><!-- additional rows will be inserted here --></tbody></table>"
        }
      ]
    }
  ],
  "Author Bio/Profile": [
    {
      "description": "The Author Bio/Profile component should display a concise summary of the author's information, including their name, profile picture, bio, and social media links. The component should be responsive, displaying the content in a vertical layout on mobile devices and a horizontal layout on larger screens.",
      "html": "<div class=\"flex flex-wrap justify-center xl:flex-nowrap xl:justify-between mb-4\"><AuthorProfilePicture/><div class=\"xl:ml-4 xl:w-1/2\"><AuthorName/><AuthorBio/><AuthorSocialMediaLinks><!-- social media links will be inserted here --></AuthorSocialMediaLinks></div></div>",
      "components": [
        {
          "name": "AuthorProfilePicture",
          "is_standalone": true,
          "description": "(standalone): a circular image component to display the author's profile picture.",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{author_name}\" class=\"rounded-full w-24 h-24 xl:w-32 xl:h-32 object-cover\"/>"
        },
        {
          "name": "AuthorName",
          "is_standalone": true,
          "description": "(standalone): a heading component to display the author's name.",
          "html": "<h2 class=\"text-lg xl:text-xl font-bold\">{author_name}</h2>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "(standalone): a paragraph component to display the author's bio.",
          "html": "<p class=\"text-sm xl:text-base\">{author_bio}</p>"
        },
        {
          "name": "AuthorSocialMediaLinks",
          "is_standalone": false,
          "description": "(takes children): a container component to display the author's social media links.",
          "html": "<ul class=\"list-none xl:flex xl:justify-between xl:items-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Tweet delete button for post removal": [
    {
      "description": "A small delete button with a trash can icon to remove a tweet from a post.",
      "html": "<button class=\"text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\"><TweetDeleteButton/></button>",
      "components": [
        {
          "name": "TweetDeleteButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-lg inline-block\"><i class=\"fas fa-trash-alt\"></i></span>"
        }
      ]
    }
  ],
  "Career opportunities display": [
    {
      "description": "The UI should display a list of career opportunities with their respective details, such as job title, location, and brief description. The list should be responsive, accessible, and easy to navigate on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Career Opportunities</h1><CareerOpportunitiesList/></section>",
      "components": [
        {
          "name": "CareerOpportunityCard",
          "is_standalone": true,
          "description": "A standalone component to display a single career opportunity.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{jobTitle}</h2><p class=\"text-gray-600\">{location}</p><p class=\"text-gray-600\">{briefDescription}</p><a class=\"text-blue-600 hover:text-blue-800\" href=\"{jobUrl}\">Learn More</a></div>"
        },
        {
          "name": "CareerOpportunitiesList",
          "is_standalone": false,
          "description": "A component that takes children, which will be a list of `CareerOpportunityCard` components.",
          "html": "<ul class=\"list-none mb-0 p-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Featured Image Grid": [
    {
      "description": "The UI should be a responsive image grid that showcases featured images. The grid should be mobile-first, with images stacked on top of each other on small screens and arranged in a grid on larger screens. Each image should have a subtle shadow and rounded corners.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><ImageGrid><ImageCard/><ImageCard/><ImageCard/><!-- Add more ImageCard components as needed --></ImageGrid></div>",
      "components": [
        {
          "name": "ImageGrid",
          "is_standalone": false,
          "description": "A container component that takes children. Represents the entire image grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": true,
          "description": "A standalone component that represents an individual image card.",
          "html": "<div class=\"bg-white rounded-md shadow-md\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><h2 class=\"text-lg font-bold\">{image_title}</h2><p class=\"text-gray-600\">{image_description}</p></div></div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Product Description List Item": [
    {
      "description": "The UI should display a list item that contains a product description, which includes a product title, a product rating, and a short product description. The component should be responsive, mobile-first, and accessible.",
      "html": "<ul class=\"flex flex-col gap-4 md:flex-row md:flex-wrap\"><ProductDescriptionListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<li class=\"flex flex-col gap-2\"><ProductTitle/><ProductRating/><ProductDescription/></li>"
        },
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "standalone component, displays the title of the product",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "ProductRating",
          "is_standalone": true,
          "description": "standalone component, displays the rating of the product",
          "html": "<div class=\"flex gap-1\">{rating} <span class=\"text-sm\">/ 5</span></div>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "standalone component, displays a short description of the product",
          "html": "<p>{productDescription}</p>"
        }
      ]
    }
  ],
  "Progress indicator spinner": [
    {
      "description": "A circular progress indicator spinner that fills up as progress is made. The spinner should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ProgressSpinner/></div>",
      "components": [
        {
          "name": "ProgressSpinner",
          "is_standalone": true,
          "description": "A standalone component that displays a circular progress indicator spinner.",
          "html": "<div class=\"w-12 h-12 border-4 border-gray-200 border-solid rounded-full animate-spin\"><!-- Spinner icon --><div class=\"w-full h-full border-2 border-gray-200 border-solid rounded-full\"></div><!-- Progress fill --><div class=\"absolute w-full h-full border-2 border-gray-200 border-solid rounded-full\" style={`--progress: ${progressPercentage}%`}><div class=\"w-full h-full border-2 border-gray-200 border-solid rounded-full\"></div></div></div>"
        }
      ]
    }
  ],
  "Sticky Header/Footer": [
    {
      "description": "The UI should have a sticky header at the top of the page, a main content area in the middle, and a sticky footer at the bottom of the page. The header and footer should remain fixed at the top and bottom of the page, respectively, even when the user scrolls.",
      "html": "<div class=\"h-screen flex flex-col\"><StickyHeader/><ContentArea><!-- main content goes here --></ContentArea><StickyFooter/></div>",
      "components": [
        {
          "name": "StickyHeader",
          "is_standalone": true,
          "description": "A standalone component that represents the sticky header.",
          "html": "<header class=\"sticky top-0 z-50 w-full h-16 bg-gray-800 text-white p-4 flex justify-center\"><!-- header content goes here --><h1>{header_title}</h1></header>"
        },
        {
          "name": "StickyFooter",
          "is_standalone": true,
          "description": "A standalone component that represents the sticky footer.",
          "html": "<footer class=\"sticky bottom-0 z-50 w-full h-16 bg-gray-800 text-white p-4 flex justify-center\"><!-- footer content goes here --><p>{copyright_text}</p></footer>"
        },
        {
          "name": "ContentArea",
          "is_standalone": false,
          "description": "A component that takes children, representing the main content area of the page.",
          "html": "<div class=\"flex-1 overflow-y-auto p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a sticky header and footer that remain at the top and bottom of the viewport, respectively, even when the user scrolls.",
      "html": "<div class=\"min-h-screen flex flex-col\"><StickyHeader/><MainContent><!-- page content goes here --></MainContent><StickyFooter/></div>",
      "components": [
        {
          "name": "StickyHeader",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<header class=\"sticky top-0 z-50 bg-white shadow-md py-2 px-4\"><!-- header content goes here --><nav><ul><li><a href=\"#\">Link 1</a></li><li><a href=\"#\">Link 2</a></li><li><a href=\"#\">Link 3</a></li></ul></nav></header>"
        },
        {
          "name": "StickyFooter",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<footer class=\"sticky bottom-0 bg-gray-200 py-2 px-4\"><!-- footer content goes here --><p>&copy; {year} My Website</p></footer>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"flex-grow p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Hero Overlay Gradient": [
    {
      "description": "The UI should be a hero section with a gradient overlay, typically used as a background image or video, with a clear call-to-action (CTA) on top of it.",
      "html": "<section class=\"h-screen relative\"><HeroGradientOverlay/><div class=\"absolute inset-0 flex items-center justify-center\"><HeroCTA>Insert CTA text or button here</HeroCTA></div></section>",
      "components": [
        {
          "name": "HeroGradientOverlay",
          "is_standalone": true,
          "description": "(standalone): The gradient overlay component.",
          "html": "<div class=\"absolute inset-0 bg-gradient-to-r from-purple-500 to-pink-500 opacity-80\"></div>"
        },
        {
          "name": "HeroCTA",
          "is_standalone": false,
          "description": "(takes children): The call-to-action component.",
          "html": "<div class=\"text-2xl font-bold text-white\">{children}</div>"
        }
      ]
    }
  ],
  "Horizontal strip displaying links to key sections of the website": [
    {
      "description": "A horizontal strip with links to key sections of the website, responsive and mobile-friendly, with a clean and minimal design.",
      "html": "<header><nav class=\"flex justify-between items-center py-4\"><NavStrip><NavItem/><!-- link to home --><NavItem/><!-- link to about --><NavItem/><!-- link to contact --></NavStrip></nav></header>",
      "components": [
        {
          "name": "NavItem",
          "is_standalone": true,
          "description": "(standalone) - a single link to a key section of the website",
          "html": "<a href={link_href} class=\"px-4\">{link_text}</a>"
        },
        {
          "name": "NavStrip",
          "is_standalone": false,
          "description": "(takes children) - the horizontal strip that contains the navigation items",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a horizontal strip displaying links to key sections of the website. The strip should be responsive, taking up the full width of the screen on mobile devices and becoming narrower on larger screens. The links should be evenly spaced and have a subtle hover effect.",
      "html": "<nav class=\"w-full bg-gray-100 py-4\"><NavigationBar/></nav>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<ul class=\"flex justify-between md:flex-wrap\"><li class=\"px-4\"><a href=\"#home\" class=\"hover:text-gray-600\">{home_label}</a></li><li class=\"px-4\"><a href=\"#about\" class=\"hover:text-gray-600\">{about_label}</a></li><li class=\"px-4\"><a href=\"#contact\" class=\"hover:text-gray-600\">{contact_label}</a></li><!-- Add more list items as needed --></ul>"
        }
      ]
    }
  ],
  "Recommended videos carousel": [
    {
      "description": "A responsive carousel displaying a list of recommended videos, with a maximum of 5 videos visible at a time. The carousel should be mobile-first, accessible, and SEO-friendly.",
      "html": "<section class=\"max-w-md mx-auto py-12\"><h2 class=\"text-2xl font-bold mb-4\">Recommended Videos</h2><Carousel><VideoCard/><VideoCard/><VideoCard/><CarouselIndicator/><CarouselIndicator/><CarouselIndicator/></Carousel></section>",
      "components": [
        {
          "name": "VideoCard",
          "is_standalone": true,
          "description": "(standalone): a single video card component with a thumbnail, title, and description",
          "html": "<div class=\"bg-white shadow-md rounded-lg p-4 mb-4\"><img src=\"{video_thumbnail}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover rounded-t-lg\"/><h3 class=\"text-lg font-bold\">{video_title}</h3><p class=\"text-gray-600\">{video_description}</p></div>"
        },
        {
          "name": "CarouselIndicator",
          "is_standalone": true,
          "description": "(standalone): a small circle indicator showing the current slide",
          "html": "<button class=\"w-4 h-4 bg-white rounded-full shadow-md mx-2 {active_class}\"><!-- indicator dot --></button>"
        },
        {
          "name": "Carousel",
          "is_standalone": false,
          "description": "(takes children): a carousel component that wraps the video cards and indicators",
          "html": "<div class=\"flex overflow-x-hidden\"><div class=\"flex flex-nowrap\">{children} </div><div class=\"flex justify-center mt-4\">{indicators} </div></div>"
        }
      ]
    }
  ],
  "Footer Newsletter Success": [
    {
      "description": "The UI should be a success message for a newsletter subscription, displayed in the footer of a website. It should be responsive, mobile-friendly, and accessible.",
      "html": "<footer><FooterNewsletterSuccess/></footer>",
      "components": [
        {
          "name": "FooterNewsletterSuccess",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"flex flex-wrap justify-center p-4 mb-4 bg-green-100 rounded\"><h5 class=\"text-xl text-green-600\">{success_message}</h5><p class=\"text-sm text-gray-600\">{thank_you_message}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{unsubscribe_text} </button></div>"
        }
      ]
    }
  ],
  "Bidding/Auction Functions": [
    {
      "description": "The UI should display a bidding/auction function with a countdown timer, a current bid indicator, a \"Place Bid\" button, and a list of previous bids. The design should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionContainer><AuctionTimer/><CurrentBidIndicator/><PlaceBidButton/><BidHistoryList><!-- list of previous bids will be rendered here --></BidHistoryList></AuctionContainer></div>",
      "components": [
        {
          "name": "AuctionTimer",
          "is_standalone": true,
          "description": "standalone component to display the countdown timer",
          "html": "<div class=\"text-2xl font-bold\">{time_left} seconds left</div>"
        },
        {
          "name": "CurrentBidIndicator",
          "is_standalone": true,
          "description": "standalone component to display the current bid",
          "html": "<div class=\"text-lg\">{current_bid} by {highest_bidder}</div>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "standalone component for the \"Place Bid\" button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        },
        {
          "name": "BidHistoryList",
          "is_standalone": false,
          "description": "component that takes children to display the list of previous bids",
          "html": "<ul>{children}</ul>"
        },
        {
          "name": "AuctionContainer",
          "is_standalone": false,
          "description": "component that takes children to wrap the entire bidding/auction function UI",
          "html": "<div class=\"shadow-md p-4 bg-white rounded\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of auctions, with each auction showing its title, current price, bidding information, and a \"Place Bid\" button. The bidding information should include the current highest bidder and the number of bids. The UI should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionList><AuctionCard/><AuctionCard/><!-- Add more auction cards here --></AuctionList></div>",
      "components": [
        {
          "name": "AuctionCard",
          "is_standalone": true,
          "description": "A standalone component representing a single auction.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded\"><h2 class=\"text-lg font-bold\">{auction_title}</h2><p class=\"text-gray-600\">{auction_description}</p><BidInfo/><PlaceBidButton/></div>"
        },
        {
          "name": "BidInfo",
          "is_standalone": true,
          "description": "A standalone component displaying the current highest bidder and number of bids.",
          "html": "<p class=\"text-sm text-gray-600 mb-2\">Current bid: {current_bid} by {highest_bidder_name} ({num_bids} bids)</p>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "A standalone component for the \"Place Bid\" button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        },
        {
          "name": "AuctionList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of auctions.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display an auction item with its details, current bid, and a bidding form. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionItemCard/><div class=\"flex flex-wrap justify-between mb-4\"><AuctionDetails/><CurrentBid/></div><BiddingForm><BidInput/><PlaceBidButton/></BiddingForm></div>",
      "components": [
        {
          "name": "AuctionItemCard",
          "is_standalone": true,
          "description": "(standalone): displays the auction item with its details",
          "html": "<div class=\"bg-white border border-gray-200 rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{item_name}</h2><p class=\"text-gray-600\">{item_description}</p></div>"
        },
        {
          "name": "AuctionDetails",
          "is_standalone": true,
          "description": "(standalone): displays the auction item details",
          "html": "<div class=\"text-gray-600\"><p>Ends: {auction_end_date}</p><p>Category: {category}</p></div>"
        },
        {
          "name": "CurrentBid",
          "is_standalone": true,
          "description": "(standalone): displays the current bid",
          "html": "<div class=\"text-lg font-bold\">{current_bid_amount} {currency}</div>"
        },
        {
          "name": "BiddingForm",
          "is_standalone": false,
          "description": "(takes children): allows users to place a bid",
          "html": "<form class=\"flex flex-wrap\">{children}</form>"
        },
        {
          "name": "BidInput",
          "is_standalone": true,
          "description": "(standalone): a input field for the bid amount",
          "html": "<input type=\"number\" class=\"w-full p-2 border border-gray-200\" value={bid_amount}/>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "(standalone): a button to submit the bid",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        }
      ]
    }
  ],
  "Section at the bottom of the page containing links, copyright information, and other details": [
    {
      "description": "The UI should be a footer section at the bottom of the page that contains links, copyright information, and other details. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented. The footer should have a dark background with light-colored text.",
      "html": "<footer class=\"bg-dark text-light pt-4 pb-2\"><Footer/></footer>",
      "components": [
        {
          "name": "Footer",
          "is_standalone": true,
          "description": "standalone component that wraps the entire footer section.",
          "html": "<div class=\"container mx-auto p-4\"><FooterLinks/><CopyrightInfo/><FooterDetails/></div>"
        },
        {
          "name": "FooterLinks",
          "is_standalone": true,
          "description": "standalone component that displays a list of links.",
          "html": "<ul class=\"list-none mb-4\"><li><a href=\"{link1_url}\" class=\"text-light\">{link1_text}</a></li><li><a href=\"{link2_url}\" class=\"text-light\">{link2_text}</a></li><!-- Add more links as needed --></ul>"
        },
        {
          "name": "CopyrightInfo",
          "is_standalone": true,
          "description": "standalone component that displays copyright information.",
          "html": "<p class=\"text-sm\">{copyright_info}</p>"
        },
        {
          "name": "FooterDetails",
          "is_standalone": true,
          "description": "standalone component that displays other details.",
          "html": "<p class=\"text-sm\">{footer_details}</p>"
        }
      ]
    }
  ],
  "Alert Close Button": [
    {
      "description": "The UI should be a small, rounded, and removable alert message with a close button on the right side. The close button should be a small \"x\" icon.",
      "html": "<div class=\"alert flex items-center justify-between py-2 px-4 mb-2\"><AlertMessage/><CloseButton/></div>",
      "components": [
        {
          "name": "AlertMessage",
          "is_standalone": true,
          "description": "standalone component that renders the alert message",
          "html": "<p class=\"text-sm\">{message}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "standalone component that renders the close button",
          "html": "<button class=\"bg-transparent hover:bg-gray-200 text-gray-400 hover:text-gray-600 rounded-full p-2\"><span aria-hidden=\"true\">×</span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a close button for an alert message, which is a small \"x\" icon on the top-right corner of the alert box. The button should be responsive and accessible.",
      "html": "<div class=\"alert\"><AlertCloseButton/><!-- alert message content here --></div>",
      "components": [
        {
          "name": "AlertCloseButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"text-gray-400 hover:text-gray-500 transition duration-300 ease-in-out\"><span aria-hidden=\"true\">×</span><span class=\"sr-only\">Close</span></button>"
        }
      ]
    },
    {
      "description": "A small, rounded button with an \"X\" icon, typically used to close an alert or notification.",
      "html": "<button class=\"alert-close-button\"><AlertCloseButton/></button>",
      "components": [
        {
          "name": "AlertCloseButton",
          "is_standalone": true,
          "description": "(Standalone)",
          "html": "<button class=\"p-2 rounded text-gray-500 hover:text-gray-800 transition\"><span aria-hidden=\"true\">×</span></button>"
        }
      ]
    }
  ],
  "Unfollow button to unsubscribe from users": [
    {
      "description": "The Unfollow button should be a simple, rounded rectangle with a grey background and white text. It should be centered horizontally and have a subtle animation when hovered.",
      "html": "<div class=\"flex justify-center mb-4\"><UnfollowButton/></div>",
      "components": [
        {
          "name": "UnfollowButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-white font-bold py-2 px-4 rounded\">Unfollow</button>"
        }
      ]
    }
  ],
  "Traveler Reviews and Ratings": [
    {
      "description": "The UI should display a list of traveler reviews and ratings, with each review including a rating (e.g. 5/5), username, review text, and date. The UI should be responsive, with a card-based layout that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 lg:p-8\"><h2 class=\"text-2xl font-bold mb-4\">Traveler Reviews and Ratings</h2><TravelerReviewList><TravelerReviewCard/><TravelerReviewCard/><!-- Add more reviews here --></TravelerReviewList></div>",
      "components": [
        {
          "name": "TravelerReviewCard",
          "is_standalone": true,
          "description": "a standalone component that displays a single traveler review",
          "html": "<div class=\"bg-white rounded-lg p-4 mb-4 shadow-md\"><div class=\"flex justify-between mb-2\"><h3 class=\"text-lg font-bold\">{username}</h3><span class=\"text-sm\">{rating}/5</span></div><p class=\"text-gray-600\">{review_text}</p><p class=\"text-sm text-gray-400\">{date}</p></div>"
        },
        {
          "name": "TravelerReviewList",
          "is_standalone": false,
          "description": "a component that takes children and displays a list of traveler reviews",
          "html": "<ul class=\"flex flex-wrap justify-center -mx-2\">{children}</ul>"
        }
      ]
    }
  ],
  "Help center link": [
    {
      "description": "The UI should display a link to the help center. The link should be accessible, visible, and responsive on different devices.",
      "html": "<nav class=\"md:flex md:items-center md:justify-between p-4\"><!-- other navigation links --><HelpCenterLink/></nav>",
      "components": [
        {
          "name": "HelpCenterLink",
          "is_standalone": true,
          "description": "a standalone component that renders a link to the help center.",
          "html": "<a href=\"{help_center_url}\" class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\">Help Center</a>"
        }
      ]
    }
  ],
  "Dropdown Menu Divider": [
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    }
  ],
  "Popup overlay that requires user interaction before returning to the main interface": [
    {
      "description": "A modal popup overlay that covers the entire screen, with a darkened background and a centered box containing content that requires user interaction. The popup should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"fixed inset-0 overflow-hidden\"><PopupOverlay/><PopupContainer><PopupContent><!-- content that requires user interaction --></PopupContent></PopupContainer></div>",
      "components": [
        {
          "name": "PopupOverlay",
          "is_standalone": true,
          "description": "(standalone): The main overlay that covers the entire screen.",
          "html": "<div class=\"absolute inset-0 bg-gray-900 opacity-50\"></div>"
        },
        {
          "name": "PopupContainer",
          "is_standalone": false,
          "description": "(takes children): The centered box that contains the content.",
          "html": "<div class=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 max-w-md p-6 bg-white rounded shadow-lg\">{children}</div>"
        },
        {
          "name": "PopupContent",
          "is_standalone": false,
          "description": "(takes children): The content that requires user interaction.",
          "html": "<!-- content that requires user interaction -->{children}"
        }
      ]
    }
  ],
  "Form Validation Feedback": [
    {
      "description": "The UI should display a form input field with an error message or success message below it, indicating the validation status of the input.",
      "html": "<div class=\"flex flex-col gap-2\"><FormInput/><ValidationFeedback><p>{validation_message}</p></ValidationFeedback></div>",
      "components": [
        {
          "name": "FormInput",
          "is_standalone": true,
          "description": "A standalone component that represents a single form input field.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder={input_placeholder}/>"
        },
        {
          "name": "ValidationFeedback",
          "is_standalone": false,
          "description": "A component that takes children and displays the validation message (error or success).",
          "html": "<div class={`text-xs ${validation_status === 'error' ? 'text-red-500' : 'text-green-500'}`}>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display form validation feedback in a clear and accessible manner. It should provide users with information about the errors in their form submission, with clear and concise error messages.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4 bg-red-100 rounded\"><ValidationFeedback><ValidationError/><ValidationError/></ValidationFeedback></div>",
      "components": [
        {
          "name": "ValidationError",
          "is_standalone": true,
          "description": "component (standalone) - displays a single error message",
          "html": "<p class=\"text-sm text-red-700\">{error_message}</p>"
        },
        {
          "name": "ValidationFeedback",
          "is_standalone": false,
          "description": "component (takes children) - container for one or more `ValidationError` components",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    }
  ],
  "Project Favorites and Bookmarking": [
    {
      "description": "The UI should display a list of favorite items with a bookmarking system. Each item should have a title, description, and an option to bookmark or unbookmark. The UI should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4 pt-6 pb-8\"><h1 class=\"text-2xl font-bold mb-4\">Favorites</h1><ul class=\"list-none mb-4\">{favorites_list}\n</ul></main>",
      "components": [
        {
          "name": "BookmarkButton",
          "is_standalone": true,
          "description": "Standalone component that handles bookmarking and unbookmarking.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_bookmarked ? \"Unbookmark\" : \"Bookmark\"}</button>"
        }
      ]
    }
  ],
  "Skills section with icons and proficiency levels": [
    {
      "description": "A Skills section that displays a list of skills with their corresponding icons and proficiency levels.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-2xl font-bold mb-4\">Skills</h2><ul class=\"list-none mb-0\"><SkillCard/><SkillCard/><SkillCard/><!-- Add more SkillCard components as needed --></ul></div>",
      "components": [
        {
          "name": "SkillCard",
          "is_standalone": true,
          "description": "Standalone component that displays a single skill with its icon and proficiency level.",
          "html": "<li class=\"flex items-center mb-4\"><i class=\"mr-2 {icon_class}\" aria-hidden=\"true\"></i><span class=\"text-lg\">{skill_name}</span><span class=\"text-sm text-gray-600\">{proficiency_level}</span></li>"
        }
      ]
    }
  ],
  "Individual email thread with reply buttons": [
    {
      "description": "The UI should display an individual email thread with reply buttons. The email thread should show the sender's name, email subject, and email body. There should be reply buttons (e.g., \"Reply\" and \"Reply All\") below the email body.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><EmailThread/></div>",
      "components": [
        {
          "name": "EmailThread",
          "is_standalone": true,
          "description": "Standalone component that displays an individual email thread.",
          "html": "<div class=\"border bg-white rounded p-4\"><EmailMetadata/><EmailBody/><ReplyButtons/></div>"
        },
        {
          "name": "EmailMetadata",
          "is_standalone": true,
          "description": "Standalone component that displays the sender's name and email subject.",
          "html": "<div class=\"flex justify-between mb-2\"><p class=\"font-bold\">{sender_name}</p><p class=\"text-gray-600\">{email_subject}</p></div>"
        },
        {
          "name": "EmailBody",
          "is_standalone": true,
          "description": "Standalone component that displays the email body.",
          "html": "<div class=\"mb-4\"><p>{email_body}</p></div>"
        },
        {
          "name": "ReplyButtons",
          "is_standalone": true,
          "description": "Standalone component that displays the reply buttons.",
          "html": "<div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply All</button></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual email thread with reply buttons, showing the email's sender, subject, and content, along with buttons to reply to or delete the email.",
      "html": "<EmailThread><EmailThreadHeader/><EmailContent/><ReplyButton/><DeleteButton/></EmailThread>",
      "components": [
        {
          "name": "EmailThreadHeader",
          "is_standalone": true,
          "description": "standalone, displays email sender and subject",
          "html": "<div class=\"flex justify-between\"><p>{sender}</p><p>{subject}</p></div>"
        },
        {
          "name": "EmailContent",
          "is_standalone": true,
          "description": "standalone, displays email content",
          "html": "<div><p>{content}</p></div>"
        },
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "standalone, displays a reply button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply</button>"
        },
        {
          "name": "DeleteButton",
          "is_standalone": true,
          "description": "standalone, displays a delete button",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Delete</button>"
        },
        {
          "name": "EmailThread",
          "is_standalone": false,
          "description": "takes children, wraps the entire email thread",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Username display for other users": [
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    },
    {
      "description": "The UI should display a user's username, profile picture, and a badge indicating their online status.",
      "html": "<div class=\"flex items-center\"><UserProfileDisplay/><OnlineBadge/></div>",
      "components": [
        {
          "name": "UserProfileDisplay",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture and username.",
          "html": "<div class=\"flex items-center\"><img src={profile_picture_url} class=\"w-8 h-8 rounded-full\"/><p class=\"ml-2\">{username}</p></div>"
        },
        {
          "name": "OnlineBadge",
          "is_standalone": true,
          "description": "standalone component that displays the online status badge.",
          "html": "<div class={`w-3 h-3 rounded-full ${is_online ? 'bg-green-500' : 'bg-gray-500'}`}></div>"
        }
      ]
    }
  ],
  "Destination and Hotel Cards": [
    {
      "description": "The UI should display a list of destination cards, each containing a hotel card. The destination cards should have a background image, a title, and a description. The hotel cards should have a hotel name, a rating, and a price.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><DestinationList><DestinationCard/><DestinationCard/><DestinationCard/></DestinationList></div>",
      "components": [
        {
          "name": "DestinationCard",
          "is_standalone": true,
          "description": "(standalone) - A card displaying a destination's information",
          "html": "<div class=\"bg-cover bg-center h-64 mb-4\" style={{ backgroundImage: `url(${image_url})` }}><div class=\"bg-white p-4 pt-6\"><h2 class=\"text-lg\">{destination_name}</h2><p>{destination_description}</p><HotelCard/></div></div>"
        },
        {
          "name": "HotelCard",
          "is_standalone": true,
          "description": "(standalone) - A card displaying a hotel's information",
          "html": "<div class=\"bg-white p-4 mb-4\"><h3 class=\"text-md\">{hotel_name}</h3><p>Rating: {hotel_rating}/5</p><p>Price: {hotel_price}/night</p></div>"
        },
        {
          "name": "DestinationList",
          "is_standalone": false,
          "description": "(takes children) - A container for a list of destination cards",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a grid of cards, each representing a destination or hotel. The cards should have a title, an image, and some brief information. The layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CardGrid><DestinationCard/><DestinationCard/><HotelCard/><HotelCard/></CardGrid></div>",
      "components": [
        {
          "name": "DestinationCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a destination.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={destination_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{destination_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "HotelCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a hotel.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={hotel_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{hotel_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "CardGrid",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a grid layout.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Input field for entering tags or keywords, often with auto-suggestion functionality": [
    {
      "description": "The UI should be a text input field with a dropdown list of suggested tags or keywords below it. The input field should be responsive and adapt to different screen sizes. The dropdown list should be hidden by default and only appear when the user starts typing in the input field.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TagInput/></div>",
      "components": [
        {
          "name": "TagInput",
          "is_standalone": true,
          "description": "A standalone component that includes the input field and dropdown list.",
          "html": "<div class=\"relative\"><input type=\"text\" class=\"w-full pl-4 pr-10 text-sm\" placeholder=\"Enter tags or keywords\"/><DropdownList>{suggestedTags}</DropdownList></div>"
        },
        {
          "name": "DropdownList",
          "is_standalone": false,
          "description": "A component that displays a list of suggested tags or keywords, takes children.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full rounded-b-md\">{children}</ul>"
        }
      ]
    }
  ],
  "Personal information form": [
    {
      "description": "The UI should be a simple form with labels and input fields for personal information such as name, email, phone number, and address. The form should be responsive and mobile-friendly.",
      "html": "<form class=\"max-w-md mx-auto p-4 bg-white shadow-md rounded\"><FormHeader/><div class=\"flex flex-wrap -mx-3 mb-6\"><FormField><label class=\"block uppercase tracking-wide text-xs text-gray-700\">Name</label><InputField/></FormField><FormField><label class=\"block uppercase tracking-wide text-xs text-gray-700\">Email</label><InputField/></FormField><FormField><label class=\"block uppercase tracking-wide text-xs text-gray-700\">Phone</label><InputField/></FormField></div><AddressField/><SubmitButton/></form>",
      "components": [
        {
          "name": "FormHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the form.",
          "html": "<h2 class=\"text-lg font-bold\">{form_title}</h2>"
        },
        {
          "name": "FormField",
          "is_standalone": false,
          "description": "A component that takes a label and an input field as children.",
          "html": "<div class=\"w-full md:w-1/2 px-3 mb-6\"><label class=\"block uppercase tracking-wide text-xs text-gray-700\">{label}</label>{children}</div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "A standalone component that renders a simple text input field.",
          "html": "<input class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white\" type=\"text\"/>"
        },
        {
          "name": "AddressField",
          "is_standalone": true,
          "description": "A standalone component that renders a grouped input field for address information.",
          "html": "<div class=\"flex flex-wrap -mx-3 mb-6\"><FormField><label class=\"block uppercase tracking-wide text-xs text-gray-700\">Street</label><InputField/></FormField><FormField><label class=\"block uppercase tracking-wide text-xs text-gray-700\">City</label><InputField/></FormField><FormField><label class=\"block uppercase tracking-wide text-xs text-gray-700\">State</label><InputField/></FormField><FormField><label class=\"block uppercase tracking-wide text-xs text-gray-700\">Zip</label><InputField/></FormField></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "A standalone component that renders a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button>"
        }
      ]
    }
  ],
  "Responsive Filtering and Sorting": [
    {
      "description": "A responsive filtering and sorting UI that adapts to different screen sizes, with a search bar, a filtering section, a sorting section, and a list of items.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><SearchBar/><div class=\"flex flex-wrap -mx-4\"><FilterSection><FilterOption/><FilterOption/></FilterSection><SortingSection><SortingOption/><SortingOption/></SortingSection></div><ItemList><Item/><Item/></ItemList></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone) - a search bar component",
          "html": "<input type=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Search...\"/>"
        },
        {
          "name": "FilterSection",
          "is_standalone": false,
          "description": "(takes children) - a filtering section component that takes filter options as children",
          "html": "<div class=\"w-full lg:w-1/2 xl:w-1/3 p-4 lg:pr-6\">{children}</div>"
        },
        {
          "name": "FilterOption",
          "is_standalone": true,
          "description": "(standalone) - a single filter option component",
          "html": "<label class=\"block text-gray-600\"><input type=\"checkbox\" class=\"mr-2\"/>{filter_name}</label>"
        },
        {
          "name": "SortingSection",
          "is_standalone": false,
          "description": "(takes children) - a sorting section component that takes sorting options as children",
          "html": "<div class=\"w-full lg:w-1/2 xl:w-1/3 p-4 lg:pl-6\">{children}</div>"
        },
        {
          "name": "SortingOption",
          "is_standalone": true,
          "description": "(standalone) - a single sorting option component",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-600 py-2 px-4 border border-gray-300 rounded\">{sorting_option_name}</button>"
        },
        {
          "name": "ItemList",
          "is_standalone": false,
          "description": "(takes children) - a list of items component that takes individual items as children",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "Item",
          "is_standalone": true,
          "description": "(standalone) - a single item component",
          "html": "<li class=\"py-4 px-4 border-b border-gray-200\"><h2 class=\"text-lg\">{item_name}</h2><p>{item_description}</p></li>"
        }
      ]
    }
  ],
  "Attachment upload button with file browser": [
    {
      "description": "The UI should be a responsive button that allows users to upload a file. The button should be styled with a background color, border, and hover effect. When clicked, it should open a file browser for the user to select a file.",
      "html": "<div class=\"flex justify-center\"><UploadButton/></div>",
      "components": [
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "Standalone component that renders a button with a label and a file input.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><FileInputLabel/><input type=\"file\" class=\"hidden\"/></button>"
        },
        {
          "name": "FileInputLabel",
          "is_standalone": true,
          "description": "Standalone component that renders a label for the file input.",
          "html": "<span>Choose a file...</span>"
        }
      ]
    },
    {
      "description": "A simple attachment upload button with a file browser dialog that opens when clicked.",
      "html": "<div class=\"flex justify-center mb-4\"><AttachmentUploadButton/><FileBrowserDialog><!-- file browser dialog content will be inserted here --></FileBrowserDialog></div>",
      "components": [
        {
          "name": "AttachmentUploadButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Attach File <input type=\"file\" class=\"hidden\" id=\"{input_id}\"/><label for=\"{input_id}\" class=\"cursor-pointer\">Browse</label></button>"
        },
        {
          "name": "FileBrowserDialog",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex justify-center\"><div class=\"bg-white p-4 rounded\"><h2 class=\"text-lg font-bold\">Select a file</h2>{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should have a clickable button with a label \"Upload File\" and a file browser input field that appears when the button is clicked.",
      "html": "<div class=\"flex justify-center mb-4\"><AttachmentUploadButton/></div>",
      "components": [
        {
          "name": "AttachmentUploadButton",
          "is_standalone": true,
          "description": "standalone component that contains a button with a label \"Upload File\" and a hidden file input field.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Upload File <FileInput/></button>"
        },
        {
          "name": "FileInput",
          "is_standalone": true,
          "description": "standalone component that represents the file input field.",
          "html": "<input type=\"file\" id=\"{fileInputId}\" class=\"sr-only\"/>"
        }
      ]
    }
  ],
  "User Comments and Feedback": [
    {
      "description": "The UI should display a list of user comments and feedback, with each comment showing the user's name, profile picture, comment text, and a timestamp. The UI should also include a form for users to submit new comments.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CommentForm/><CommentList><CommentCard/><CommentCard/><!-- more CommentCard components here --></CommentList></div>",
      "components": [
        {
          "name": "CommentCard",
          "is_standalone": true,
          "description": "(Standalone): Displays a single comment, including the user's name, profile picture, comment text, and timestamp.",
          "html": "<div class=\"flex mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg\">{username}</h5><p>{comment_text}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "CommentForm",
          "is_standalone": true,
          "description": "(Standalone): Provides a form for users to submit new comments.",
          "html": "<form class=\"flex mb-4\"><input type=\"text\" placeholder=\"Enter your comment...\" class=\"w-full p-2\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button></form>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "(Takes Children): Displays a list of `CommentCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(Standalone): Displays a user's profile picture.",
          "html": "<img src={profile_picture_url} class=\"w-12 h-12 rounded-full\" alt=\"User Profile Picture\"/>"
        }
      ]
    }
  ],
  "Features List: Break down complex features into bite-sized chunks": [
    {
      "description": "The UI should be a responsive, mobile-first features list that breaks down complex features into bite-sized chunks. It should display a list of features with icons, titles, and descriptions.",
      "html": "<div class=\"container mx-auto p-4 pt-6 pb-8\"><h2 class=\"text-3xl font-bold mb-4\">Features</h2><FeaturesList><FeatureItem/><FeatureItem/><!-- add more FeatureItem components here --></FeaturesList></div>",
      "components": [
        {
          "name": "FeatureItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single feature item in the list.",
          "html": "<div class=\"flex flex-wrap mb-4\"><div class=\"w-12 h-12 mr-4\"><i class=\"fas fa-{icon_name} text-2xl text-gray-600\"></i></div><div><h3 class=\"text-lg font-bold\">{feature_title}</h3><p class=\"text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "FeaturesList",
          "is_standalone": false,
          "description": "A component that takes children and represents the entire list of features.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The Features List should be a concise and scannable list of feature items, with a brief description and an icon to visually distinguish each feature. The list should be responsive, with a maximum of 3-4 items per row on larger screens and a single column on smaller screens.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><h2 class=\"text-2xl mb-4\">Features</h2><FeatureList><FeatureItem/><FeatureItem/><FeatureItem/><!-- Add more FeatureItem components as needed --></FeatureList></section>",
      "components": [
        {
          "name": "FeatureItem",
          "is_standalone": true,
          "description": "A standalone component representing a single feature item, consisting of an icon, title, and description.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><div><h3 class=\"text-lg\">{feature_title}</h3><p class=\"text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping multiple `FeatureItem` components.",
          "html": "<ul class=\"flex flex-wrap justify-center lg:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, and accessible list of features, with each feature broken down into a concise and readable format. The list should be SEO-friendly and well-documented.",
      "html": "<div class=\"mx-auto max-w-md py-8\"><FeatureListWrapper><FeatureListItem/><FeatureListItem/><FeatureListItem/><!-- add more FeatureListItem components here --></FeatureListWrapper></div>",
      "components": [
        {
          "name": "FeatureListItem",
          "is_standalone": true,
          "description": "(standalone) - represents a single feature item in the list",
          "html": "<li class=\"mb-4\"><h3 class=\"text-lg font-bold\">{feature_title}</h3><p class=\"text-gray-600\">{feature_description}</p><ul class=\"list-none mb-2\"><li>{feature_breakdown_point_1}</li><li>{feature_breakdown_point_2}</li><!-- add more breakdown points here --></ul></li>"
        },
        {
          "name": "FeatureListWrapper",
          "is_standalone": false,
          "description": "(takes children) - wraps the list of feature items",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A list of features, each with a brief description, broken down into smaller, manageable chunks.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Features</h2><FeatureList><FeatureItem/><FeatureItem/><!-- add more FeatureItems here --></FeatureList></div>",
      "components": [
        {
          "name": "FeatureItem",
          "is_standalone": true,
          "description": "(standalone): A single feature item in the list, containing a brief description and optional additional details.",
          "html": "<div class=\"flex mb-4\"><div class=\"mr-4\"><i class=\"fas fa-check text-green-500 text-xl\" aria-hidden=\"true\"></i></div><div><h3 class=\"text-lg font-bold\">{feature_title}</h3><p class=\"text-gray-600\">{feature_description}</p><p class=\"text-sm text-gray-500\">{additional_details}</p></div></div>"
        },
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of feature items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, accessible, and SEO-friendly features list UI that breaks down complex features into bite-sized chunks. The UI should have a clean and simple design, with clear headings and concise descriptions.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-xl font-bold mb-4\">Features</h2><ul class=\"list-none mb-0\"><FeatureList><!-- Feature list items will be rendered here --></FeatureList></ul></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `FeatureListItem` components) and renders them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Dynamic Product Feature List": [
    {
      "description": "The UI should display a list of product features in a clean and organized manner, with each feature listed in a separate row. The list should be responsive and work well on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><FeatureList><FeatureListItem/><FeatureListItem/><!-- Add more FeatureListItem components as needed --></FeatureList></div>",
      "components": [
        {
          "name": "FeatureListItem",
          "is_standalone": true,
          "description": "a standalone component that displays a single product feature.",
          "html": "<div class=\"flex items-center mb-4\"><i class=\"fas fa-check text-green-500 mr-2\" aria-hidden=\"true\"></i><p class=\"text-gray-700\">{feature_name}</p><p class=\"text-gray-500 text-sm\">{feature_description}</p></div>"
        },
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "a component that takes children, wrapping the list of features.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Product description and details section": [
    {
      "description": "The UI should display a product description and details section. It should be a responsive, mobile-friendly, and accessible component that displays product information in a clear and organized manner.",
      "html": "<section class=\"mx-auto p-4 md:p-8\"><ProductInfoSection><ProductDescription/><ProductDetails/></ProductInfoSection></section>",
      "components": [
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of the product.",
          "html": "<p class=\"text-lg md:text-xl\">{product_summary}</p>"
        },
        {
          "name": "ProductDetails",
          "is_standalone": true,
          "description": "Standalone component that displays detailed information about the product, such as features, specifications, and reviews.",
          "html": "<ul class=\"list-none mb-4\"><li class=\"mb-2\"><strong>Features:</strong>{features}</li><li class=\"mb-2\"><strong>Specifications:</strong>{specifications}</li><li class=\"mb-2\"><strong>Reviews:</strong>{reviews}</li></ul>"
        },
        {
          "name": "ProductInfoSection",
          "is_standalone": false,
          "description": "Takes children. A container component that wraps around the product description and details components.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    }
  ],
  "Arrangement of product images and details in a structured grid format": [
    {
      "description": "The UI should display a grid of product cards, each containing an image, product name, product description, and a call-to-action (CTA) button. The grid should be responsive, adapting to different screen sizes and devices.",
      "html": "<div class=\"container mx-auto p-4\"><ProductGrid><ProductCard/><ProductCard/><!-- Add more ProductCard components as needed --></ProductGrid></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "A standalone component representing a single product, containing an image, product name, product description, and a CTA button.",
          "html": "<div class=\"max-w-sm bg-white rounded-lg shadow-md\"><img src={productImage} alt={productName} class=\"w-full h-48 object-cover rounded-t-lg\"/><div class=\"p-4\"><h5 class=\"text-lg\">{productName}</h5><p class=\"text-gray-600\">{productDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button></div></div>"
        },
        {
          "name": "ProductGrid",
          "is_standalone": false,
          "description": "A component that takes children, representing the grid of product cards.",
          "html": "<div class=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">{children}</div>"
        }
      ]
    }
  ],
  "Customer Review Text": [
    {
      "description": "The UI should display a customer review text with the customer's name, rating, and review text. The layout should be responsive and mobile-first, with a clear hierarchy of information.",
      "html": "<div class=\"flex flex-col mb-4\"><CustomerReview/></div>",
      "components": [
        {
          "name": "CustomerReview",
          "is_standalone": true,
          "description": "a standalone component that displays a single customer review.",
          "html": "<div class=\"flex items-center mb-2\"><Rating/><p class=\"text-lg font-bold\">{customerName}</p></div><div class=\"text-gray-600\"><ReviewText/></div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "a standalone component that displays a rating (e.g., 5 stars).",
          "html": "<div class=\"flex items-center\">{Array(rating).fill(null).map(() =>( <span class=\"text-yellow-400 text-lg\">&#9733;</span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "a standalone component that displays the review text.",
          "html": "<p>{reviewText}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer review in a clean and readable format, with the customer's name, rating, and review text.",
      "html": "<div class=\"flex flex-col p-4\"><CustomerReview/></div>",
      "components": [
        {
          "name": "CustomerReview",
          "is_standalone": true,
          "description": "a standalone component that displays a single customer review.",
          "html": "<div class=\"flex flex-col mb-4\"><Rating/><h5 class=\"mb-1\">{customer_name}</h5><ReviewText/></div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "a standalone component that displays a rating (e.g., 5 stars).",
          "html": "<div class=\"flex mb-2\">{/* 5 star rating icons */ } <span class=\"ml-2 text-sm\">{rating}/5</span></div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "a standalone component that displays the review text.",
          "html": "<p class=\"text-gray-600\">{review_text}</p>"
        }
      ]
    }
  ],
  "Search Bar": [
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><SearchBarContainer/></div>",
      "components": [
        {
          "name": "SearchBarContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the search bar.",
          "html": "<div class=\"flex w-full max-w-md mx-auto rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone): The input field for the search query.",
          "html": "<input type=\"search\" id=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone): The submit button for the search.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a button to submit the search query. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field and search button.",
          "html": "<div class=\"flex items-center mb-4\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Search...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that represents the search button.",
          "html": "<button type=\"submit\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5\">Search</button>"
        }
      ]
    }
  ],
  "Footer Copyright Text": [
    {
      "description": "The UI should be a simple footer with a copyright text, displayed at the bottom of the page. The text should be centered and have a smaller font size.",
      "html": "<footer><FooterCopyright/></footer>",
      "components": [
        {
          "name": "FooterCopyright",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-center text-sm text-gray-500\">&copy; {current_year} {copyright_holder}. All rights reserved.</p>"
        }
      ]
    }
  ],
  "Header Search Button": [
    {
      "description": "A navigation header with a search button that is responsive, mobile-first, and accessible.",
      "html": "<header class=\"flex justify-between p-4\"><nav class=\"w-full md:w-1/2\"><Navbar/></nav><SearchButton/></header>",
      "components": [
        {
          "name": "Navbar",
          "is_standalone": true,
          "description": "(standalone) - the main navigation header",
          "html": "<nav class=\"flex justify-between\"><ul class=\"flex justify-between mb-0 list-none\"><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_1}</a></li><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_2}</a></li><!-- Add more list items as needed --></ul></nav>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone) - a button to trigger search functionality",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    }
  ],
  "Featured Product Price Tag": [
    {
      "description": "The UI should display a featured product price tag with a discounted price, original price, and a percentage discount. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap items-center mb-4\"><FeaturedPriceTag/></div>",
      "components": [
        {
          "name": "FeaturedPriceTag",
          "is_standalone": true,
          "description": "(standalone): Display the featured product price tag.",
          "html": "<div class=\"bg-gray-100 p-2 rounded\"><p class=\"text-lg font-bold\">{newPrice}</p><p class=\"text-gray-500 line-through\">{originalPrice}</p><DiscountBadge/></div>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "(standalone): Display the percentage discount badge.",
          "html": "<span class=\"bg-orange-200 text-orange-600 px-2 py-1 rounded\">{discountPercentage}% off</span>"
        }
      ]
    }
  ],
  "Visual indicator, often a number, displaying pending notifications or messages": [
    {
      "description": "The UI should be a small, circular or rectangular badge with a number or text indicating the number of pending notifications or messages. It should be visually striking to grab the user's attention.",
      "html": "<span class=\"inline-block\"><!-- notification icon --><i class=\"fas fa-bell text-lg\"></i><Badge/></span>",
      "components": [
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<span class=\"bg-red-600 text-white text-xs font-bold px-2 py-1 rounded-full\">{notification_count}</span>"
        }
      ]
    }
  ],
  "Testimonial Quote Style": [
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    }
  ],
  "Video Background with Overlay Text": [
    {
      "description": "The UI should be a video background with overlay text, where the video takes up the full height and width of the screen, and the overlay text is centered on top of the video with a subtle background to make it readable.",
      "html": "<div class=\"h-screen w-screen relative\"><VideoBackground/><OverlayText/></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "standalone component that renders a full-screen video background",
          "html": "<div class=\"absolute top-0 left-0 w-screen h-screen\"><video autoplay loop muted><source src=\"{video_source}\" type=\"video/mp4\"/></video></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "standalone component that renders text with a subtle background on top of the video",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl bg-gray-800 bg-opacity-50 py-4 px-8 rounded\">{overlay_text}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-bleed video background with an overlay of text. The video should be responsive and take up the full screen. The overlay text should be centered and have a contrasting background to ensure readability.",
      "html": "<div class=\"flex h-screen w-full\"><VideoBackground/><OverlayText/></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "Standalone component that renders a full-bleed video background.",
          "html": "<video class=\"h-full w-full object-cover\" loop autoplay muted><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag.</video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "Standalone component that renders the overlay text.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center py-4 px-8 bg-white bg-opacity-75 rounded\"><h1 class=\"text-3xl\">{heading}</h1><p class=\"text-lg\">{subheading}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text. The video background should be responsive and adapt to different screen sizes. The overlay text should be centered and easily readable.",
      "html": "<div class=\"h-screen w-full\"><VideoBackground/><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayText/></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "standalone component that renders a full-screen video background",
          "html": "<video autoplay muted loop class=\"h-full w-full object-cover\"><source src=\"{video_source}\" type=\"video/mp4\"></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "standalone component that renders the overlay text",
          "html": "<h1 class=\"text-3xl text-white\">{overlay_text}</h1>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text that is centered and responsive to different screen sizes.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><div class=\"absolute top-0 left-0 h-screen w-screen flex justify-center items-center\"><OverlayText><!-- overlay text content will go here --></OverlayText></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a full-screen video.",
          "html": "<video autoplay loop muted playsinline><source src={videoUrl} type=\"video/mp4\"/></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": false,
          "description": "A component that takes children and displays text over the video background.",
          "html": "<div class=\"text-3xl font-bold text-white\">{children}</div>"
        }
      ]
    }
  ],
  "Blog post display": [
    {
      "description": "The UI should display a blog post with a title, author, date, and content. The title should be prominent, the author and date should be smaller, and the content should be the main focus. The UI should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:px-12\"><BlogPost/></div>",
      "components": [
        {
          "name": "BlogPost",
          "is_standalone": true,
          "description": "standalone component that displays a single blog post",
          "html": "<div class=\"flex flex-col\"><PostHeader/><PostContent/></div>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone component that displays the title, author, and date of the post",
          "html": "<div class=\"mb-2\"><h1 class=\"text-3xl font-bold\">{title}</h1><p class=\"text-gray-600 text-sm\">By {author} on {date}</p></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone component that displays the content of the post",
          "html": "<div class=\"prose max-w-full mx-auto\">{content}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a blog post with a title, author, date, content, and tags. The layout should be clean and readable, with a focus on the content. On smaller screens, the layout should be single-column, and on larger screens, the layout should be two-column with the content on the left and the author information on the right.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:flex md:flex-row\"><div class=\"md:w-2/3 md:pr-4\"><BlogPostHeader/><BlogPostContent/></div><aside class=\"md:w-1/3 md:pl-4\"><AuthorInfo/><TagList/></aside></div>",
      "components": [
        {
          "name": "BlogPostHeader",
          "is_standalone": true,
          "description": "Standalone component to display the blog post title, author, and date.",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold\">{post_title}</h1><p class=\"text-gray-600\">By {author_name} on {date}</p></header>"
        },
        {
          "name": "BlogPostContent",
          "is_standalone": true,
          "description": "Standalone component to display the blog post content.",
          "html": "<div class=\"prose\">{post_content}</div>"
        },
        {
          "name": "TagList",
          "is_standalone": true,
          "description": "Standalone component to display the blog post tags.",
          "html": "<ul class=\"list-none mb-4\">{tags.map((tag) =>( <li key={tag} class=\"inline-block mr-2\"><a href={`tags/${tag}`} class=\"text-gray-600 hover:text-gray-900\">{tag}</a></li>))}</ul>"
        },
        {
          "name": "AuthorInfo",
          "is_standalone": true,
          "description": "Standalone component to display the author information.",
          "html": "<div class=\"text-gray-600\"><p>Written by {author_name}</p><p>{author_bio}</p></div>"
        }
      ]
    }
  ],
  "Breadcrumb Separator Line": [
    {
      "description": "The UI should be a horizontal line that separates each breadcrumb item, providing visual separation between them.",
      "html": "<nav aria-label=\"Breadcrumb\"><!-- breadcrumb items go here --><BreadcrumbSeparator/><!-- breadcrumb items go here --></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"w-1 h-1 bg-gray-300 rounded-full inline-block mx-2\" aria-hidden=\"true\"></span>"
        }
      ]
    }
  ],
  "Live streaming tools with real-time chat": [
    {
      "description": "The UI should be a responsive, mobile-first layout that showcases a live streaming video player with a real-time chat interface below it. The video player should take up most of the screen, with the chat interface being a resizable panel that can be minimized or maximized as needed.",
      "html": "<div class=\"flex h-screen overflow-hidden\"><LiveStreamPlayer/><div class=\"flex flex-col h-full overflow-hidden\"><RealTimeChat/><ChatInput/></div></div>",
      "components": [
        {
          "name": "LiveStreamPlayer",
          "is_standalone": true,
          "description": "standalone, displays the live streaming video",
          "html": "<div class=\"flex-grow w-full h-full overflow-hidden\"><video src={videoSrc} class=\"w-full h-full object-cover\"/></div>"
        },
        {
          "name": "RealTimeChat",
          "is_standalone": true,
          "description": "standalone, displays the real-time chat interface",
          "html": "<div class=\"flex flex-col overflow-y-auto p-4\">{messages.map((message) =>( <ChatMessage>{message.text}</ChatMessage>))}</div>"
        },
        {
          "name": "ChatMessage",
          "is_standalone": false,
          "description": "takes children, displays a single chat message",
          "html": "<div class=\"flex items-center py-2\"><span class=\"text-sm\">{children}</span></div>"
        },
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "standalone, allows users to input and send chat messages",
          "html": "<form class=\"flex p-4\"><input type=\"text\" class=\"w-full px-4 py-2\" placeholder=\"Type a message...\"/><button class=\"bg-primary-500 hover:bg-primary-700 text-white font-bold py-2 px-4 rounded\">Send</button></form>"
        }
      ]
    }
  ],
  "Post List: Teasers for latest articles": [
    {
      "description": "The UI should be a list of article teasers, displaying the title, a brief summary, and a link to read more. The list should be responsive, with a maximum of 3 columns on large screens, 2 columns on medium screens, and a single column on small screens.",
      "html": "<div class=\"container mx-auto p-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components here --></PostList></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone): A single article teaser, containing a title, summary, and read more link.",
          "html": "<div class=\"md:flex mb-4\"><h2 class=\"text-lg font-bold\">{article_title}</h2><p class=\"text-gray-600\">{article_summary}</p><a href=\"{article_link}\" class=\"text-blue-600 hover:text-blue-900\">Read more</a></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children): A list of article teasers.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A list of teaser articles, with a title, image, and short summary. Should be responsive and look good on desktop and mobile.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2>Latest Articles</h2><PostList><PostTeaser/><PostTeaser/><PostTeaser/></PostList></div>",
      "components": [
        {
          "name": "PostTeaser",
          "is_standalone": true,
          "description": "(standalone) - a single post teaser component",
          "html": "<article class=\"mb-4 p-4 border border-gray-200 rounded\"><img src={image_url} alt={post_title} class=\"w-full h-48 object-cover rounded-t\"/><h3 class=\"text-lg font-bold\">{post_title}</h3><p class=\"text-sm\">{post_summary}</p><a href={post_url} class=\"text-indigo-600 hover:text-indigo-900\">Read more</a></article>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - the container for the list of post teasers",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of article teasers, with each teaser showing the article title, a short summary, and a \"Read more\" button. The list should be responsive, with a maximum of three columns on larger screens and a single column on smaller screens. Each teaser should have a subtle background color and padding to differentiate it from the others.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Latest Articles</h2><div class=\"flex flex-wrap -mx-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components as needed --></PostList></div></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone) - A single article teaser component.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold mb-2\">{article_title}</h3><p class=\"text-gray-600\">{article_summary}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read more</button></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - A container component for the list of article teasers.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    }
  ],
  "Barcode scanner input": [
    {
      "description": "The UI should resemble a simple barcode scanner input field with a placeholder text and a submit button. The input field should be responsive and mobile-friendly.",
      "html": "<div class=\"flex flex-col items-center justify-center h-screen\"><BarcodeInput/><SubmitButton/></div>",
      "components": [
        {
          "name": "BarcodeInput",
          "is_standalone": true,
          "description": "Standalone component that renders an input field with a placeholder text.",
          "html": "<input type=\"text\" placeholder=\"Scan barcode\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" id={input_id}/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that renders a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Scan</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a barcode scanner button next to it. The input field should be responsive and adapt to different screen sizes. The barcode scanner button should be easily clickable on mobile devices.",
      "html": "<div class=\"flex flex-col items-center w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4 mx-auto\"><BarcodeScannerInput/></div>",
      "components": [
        {
          "name": "BarcodeScannerInput",
          "is_standalone": true,
          "description": "A standalone component that wraps an input field and a barcode scanner button.",
          "html": "<div class=\"flex flex-row items-center p-2\"><input type=\"text\" id=\"barcode-input\" class=\"w-full p-2 text-lg\" placeholder=\"Scan or enter barcode\"/><BarcodeScannerButton/></div>"
        },
        {
          "name": "BarcodeScannerButton",
          "is_standalone": true,
          "description": "A standalone component that represents the barcode scanner button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Scan</button>"
        }
      ]
    }
  ],
  "Social Sharing Buttons": [
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media sharing buttons, each with an icon and a text label. The buttons should be medium-sized, round, and have a slight hover effect. The row should be centered and have some padding.",
      "html": "<div class=\"flex justify-center py-4\"><SocialSharingButtonsRow><SocialSharingButton/><SocialSharingButton/><SocialSharingButton/><!-- add more buttons here --></SocialSharingButtonsRow></div>",
      "components": [
        {
          "name": "SocialSharingButton",
          "is_standalone": true,
          "description": "(standalone): a single social media sharing button with an icon and text label",
          "html": "<a href=\"{sharing_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"inline-flex items-center justify-center w-10 h-10 rounded-full hover:bg-gray-200\"><i class={`fab fa-${social_media_icon} text-lg`}></i><span class=\"sr-only\">{social_media_name}</span></a>"
        },
        {
          "name": "SocialSharingButtonsRow",
          "is_standalone": false,
          "description": "(takes children): a horizontal row of social sharing buttons",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Filter options": [
    {
      "description": "The UI should be a filter options component that allows users to select options to filter a list of items. It should be responsive, mobile-first, and accessible. On desktop, it should be a horizontal list of options, and on mobile, it should be a vertical list.",
      "html": "<div class=\"flex flex-wrap md:flex-nowrap\"><FilterOptionsList><FilterOption/><!-- option 1 --><FilterOption/><!-- option 2 --><!-- more options --></FilterOptionsList></div>",
      "components": [
        {
          "name": "FilterOption",
          "is_standalone": true,
          "description": "A standalone component that represents a single filter option.",
          "html": "<label class=\"block mb-2 md:mr-4\"><input type=\"checkbox\" class=\"mr-2\"/>{option_label}</label>"
        },
        {
          "name": "FilterOptionsList",
          "is_standalone": false,
          "description": "A component that takes children (FilterOption components) and renders them in a list.",
          "html": "<ul class=\"flex flex-wrap md:flex-nowrap\">{children}</ul>"
        }
      ]
    }
  ],
  "Pop-up text providing additional information when users hover over an element": [
    {
      "description": "A small, rounded rectangle with a subtle shadow that appears when a user hovers over a specific element, displaying additional information related to that element. The pop-up text should be easily readable and disappear when the user stops hovering.",
      "html": "<span class=\"hover:cursor-help\" onMouseOver={(e) =>{/* show tooltip */ }}><!-- hoverable element --><Tooltip/><!-- inserts the tooltip component --><!-- hoverable element's content --></span>",
      "components": [
        {
          "name": "Tooltip",
          "is_standalone": true,
          "description": "a standalone component that wraps the additional information.",
          "html": "<div class=\"absolute bg-white rounded-sm p-1 text-xs text-gray-600 shadow-md\">{tooltip_text}</div>"
        }
      ]
    }
  ],
  "Personalized Dashboard with Project Insights": [
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays personalized project insights to the user. The dashboard should have a clean and modern design, with clear typography and adequate whitespace. The layout should adapt to different screen sizes, with a maximum width of 1200px.",
      "html": "<div class=\"flex h-screen\"><Sidebar/><div class=\"flex-1 overflow-y-auto\"><Header/><div class=\"px-4 pt-4\"><h1 class=\"text-2xl font-bold\">{dashboard_title}</h1><div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\"><ProjectList><ProjectCard/><ProjectCard/><!-- Add more ProjectCard components here --></ProjectList></div></div></div></div>",
      "components": [
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single project's details, including its name, description, and progress metrics.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg font-bold\">{project_name}</h2><p class=\"text-gray-600\">{project_description}</p><div class=\"flex justify-between mt-2\"><MetricCard/><MetricCard/></div></div>"
        },
        {
          "name": "MetricCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single metric, such as project completion percentage or task count.",
          "html": "<div class=\"bg-white shadow-md rounded p-2\"><p class=\"text-lg font-bold\">{metric_value}</p><p class=\"text-gray-600\">{metric_label}</p></div>"
        },
        {
          "name": "ProjectList",
          "is_standalone": false,
          "description": "A component that takes children, which are a list of `ProjectCard` components.",
          "html": "<!-- This component will render child ProjectCard components -->{children}"
        },
        {
          "name": "Header",
          "is_standalone": true,
          "description": "A standalone component that displays the dashboard title and any additional header elements.",
          "html": "<header class=\"bg-gray-100 py-4\"><nav class=\"container mx-auto flex justify-between\"><h1 class=\"text-lg font-bold\">{dashboard_title}</h1><ul class=\"flex\"><li class=\"mr-4\"><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li></ul></nav></header>"
        },
        {
          "name": "Sidebar",
          "is_standalone": true,
          "description": "A standalone component that displays navigation links and other sidebar elements.",
          "html": "<aside class=\"w-64 bg-gray-100 p-4\"><nav><ul><li class=\"mb-2\"><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li></ul></nav></aside>"
        }
      ]
    }
  ],
  "Footer Contact Info": [
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    }
  ],
  "Comments/Review Section": [
    {
      "description": "The UI should display a list of reviews with author names, review texts, and ratings. The design should be clean, minimal, and easy to read.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Reviews</h2><ReviewList><!-- review cards will be inserted here --></ReviewList></section>",
      "components": [
        {
          "name": "ReviewList",
          "is_standalone": false,
          "description": "(takes children): Displays a list of reviews.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The Comments/Review Section should display a list of comments/reviews with the user's name, profile picture, rating, comment text, and timestamp. It should be responsive, with a mobile-first design, and be accessible and SEO-friendly.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Comments and Reviews</h2><CommentList><!-- list of comments/reviews will be rendered here --></CommentList></section>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays a user's profile picture.",
          "html": "<img src={user_avatar} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "standalone component that displays a rating as stars.",
          "html": "<div class=\"flex text-yellow-400\">{rating} <!-- will be replaced with the actual rating value --><i class=\"fa fa-star\" aria-hidden=\"true\"></i><i class=\"fa fa-star\" aria-hidden=\"true\"></i><i class=\"fa fa-star\" aria-hidden=\"true\"></i><i class=\"fa fa-star\" aria-hidden=\"true\"></i><i class=\"fa fa-star\" aria-hidden=\"true\"></i></div>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "component that takes children, which is a list of `CommentCard`s.",
          "html": "<ul class=\"list-none p-0\">{children} <!-- will be replaced with a list of CommentCard components --></ul>"
        }
      ]
    }
  ],
  "Vacation package booking form": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible vacation package booking form that allows users to select their travel dates, destination, and package type. The form should be easy to use and provide a seamless user experience.",
      "html": "<BookingForm><h1>Vacation Package Booking Form</h1><TravelDatePicker/><DestinationSelect/><PackageTypeSelect/><PassengerInfo><label>First Name:</label><input type=\"text\"/><br/><label>Last Name:</label><input type=\"text\"/><!-- Add more passenger info fields as needed --></PassengerInfo><button type=\"submit\">Book Now</button></BookingForm>",
      "components": [
        {
          "name": "TravelDatePicker",
          "is_standalone": true,
          "description": "Standalone component that allows users to select their travel dates.",
          "html": "<div class=\"mb-4\"><label for=\"travel-dates\">Travel Dates:</label><input type=\"date\" id=\"travel-dates\"/></div>"
        },
        {
          "name": "DestinationSelect",
          "is_standalone": true,
          "description": "Standalone component that allows users to select their destination.",
          "html": "<div class=\"mb-4\"><label for=\"destination\">Destination:</label><select id=\"destination\"><option value=\"\">Select a destination</option><option value=\"{destination_option_1}\">{destination_option_1}</option><!-- Add more destination options as needed --></select></div>"
        },
        {
          "name": "PackageTypeSelect",
          "is_standalone": true,
          "description": "Standalone component that allows users to select their package type.",
          "html": "<div class=\"mb-4\"><label for=\"package-type\">Package Type:</label><select id=\"package-type\"><option value=\"\">Select a package type</option><option value=\"{package_type_option_1}\">{package_type_option_1}</option><!-- Add more package type options as needed --></select></div>"
        },
        {
          "name": "PassengerInfo",
          "is_standalone": false,
          "description": "Component that takes children to display passenger information.",
          "html": "<div class=\"flex flex-wrap -mx-3 mb-4\">{children}</div>"
        },
        {
          "name": "BookingForm",
          "is_standalone": false,
          "description": "Component that takes children to wrap the entire booking form.",
          "html": "<form class=\"max-w-md mx-auto p-4 pt-6 mb-4\">{children}</form>"
        }
      ]
    }
  ],
  "Logout button with confirmation prompt": [
    {
      "description": "A logout button that when clicked, prompts the user to confirm they want to log out. If confirmed, the logout action is performed.",
      "html": "<div class=\"flex justify-center mt-4\"><LogoutButton/></div><!-- Confirmation prompt will be inserted here --><div id=\"confirm-logout\" class=\"hidden\"><ConfirmLogout><p>Are you sure you want to log out?</p><div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">OK</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded ml-2\">Cancel</button></div></ConfirmLogout></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "standalone, displays a button with a logout icon and text.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-sign-out-alt mr-2\"/>Log Out</button>"
        },
        {
          "name": "ConfirmLogout",
          "is_standalone": false,
          "description": "takes children, displays a confirmation prompt to the user with an OK and Cancel button.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    }
  ],
  "Notification Alerts/Badges": [
    {
      "description": "The UI should have a notification badge/alert that displays a small circle or rectangle with a number or a message inside, usually indicating the number of notifications, messages, or updates.",
      "html": "<nav class=\"flex items-center justify-between py-4\"><ul class=\"flex items-center\"><li class=\"mr-4\"><a href=\"#\" class=\"text-gray-600 hover:text-gray-900 transition duration-300\"><NotificationBadge/><!-- notification badge --></a></li></ul><NotificationAlert/><!-- notification alert --></nav>",
      "components": [
        {
          "name": "NotificationBadge",
          "is_standalone": true,
          "description": "(standalone) - a small circle or rectangle displaying a number or message",
          "html": "<span class=\"bg-red-500 text-white rounded-full px-2 py-1 text-xs\">{notification_count}</span>"
        },
        {
          "name": "NotificationAlert",
          "is_standalone": true,
          "description": "(standalone) - a small notification message with an icon and text",
          "html": "<div class=\"bg-orange-200 p-2 rounded border-l-4 border-orange-500\"><i class=\"fas fa-bell mr-2 text-orange-500\"></i><span>{notification_message}</span></div>"
        }
      ]
    }
  ],
  "Product Description Text": [
    {
      "description": "The UI should display a product description text, which is a brief summary of the product's features and benefits. The text should be readable on various devices and should be accessible to screen readers.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProductDescriptionText/></div>",
      "components": [
        {
          "name": "ProductDescriptionText",
          "is_standalone": true,
          "description": "standalone component that renders the product description text.",
          "html": "<p class=\"text-lg leading-relaxed\">{product_description_text}</p>"
        }
      ]
    }
  ],
  "Countdown display": [
    {
      "description": "The UI should display a countdown timer with days, hours, minutes, and seconds remaining until a specific date/time. The timer should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><CountdownTimer/></div>",
      "components": [
        {
          "name": "CountdownTimer",
          "is_standalone": true,
          "description": "a standalone component that displays the countdown timer.",
          "html": "<div class=\"flex justify-center mb-4\"><TimeUnit>{days} days</TimeUnit><TimeUnit>{hours} hours</TimeUnit><TimeUnit>{minutes} minutes</TimeUnit><TimeUnit>{seconds} seconds</TimeUnit></div>"
        },
        {
          "name": "TimeUnit",
          "is_standalone": false,
          "description": "a component that takes children to display a single unit of time (e.g., days, hours, minutes, seconds).",
          "html": "<div class=\"inline-block mx-2 text-2xl\"><span class=\"font-bold\">{children}</span></div>"
        }
      ]
    }
  ],
  "Social Sharing Count": [
    {
      "description": "The Social Sharing Count UI should display the number of shares on various social media platforms, such as Facebook, Twitter, and LinkedIn. The UI should be responsive, mobile-first, and accessible. It should also be easily readable and understandable.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><SocialShareCount/><div class=\"flex flex-wrap justify-center\"><SocialMediaShareCount><SocialMediaIcon/>Facebook</SocialMediaShareCount><SocialMediaShareCount><SocialMediaIcon/>Twitter</SocialMediaShareCount><SocialMediaShareCount><SocialMediaIcon/>LinkedIn</SocialMediaShareCount></div></div>",
      "components": [
        {
          "name": "SocialShareCount",
          "is_standalone": true,
          "description": "A standalone component that displays the total share count across all social media platforms.",
          "html": "<p class=\"text-lg font-bold\">{total_share_count} shares</p>"
        },
        {
          "name": "SocialMediaShareCount",
          "is_standalone": false,
          "description": "A component that displays the share count for a specific social media platform. It takes children, which is the platform's icon and name.",
          "html": "<div class=\"flex items-center mr-4\">{children} <p class=\"ml-2\">{share_count} shares</p></div>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon for a specific social media platform.",
          "html": "<!-- Use a class to style the icon, e.g. Facebook icon --><i class=\"fab fa-facebook-f text-lg\"></i>"
        }
      ]
    }
  ],
  "Blog Post Category": [
    {
      "description": "A simple, responsive, and accessible blog post category UI that displays the category name and a brief description.",
      "html": "<div class=\"flex flex-wrap mb-4\"><CategoryBadge/><CategoryDescription/></div>",
      "components": [
        {
          "name": "CategoryBadge",
          "is_standalone": true,
          "description": "(standalone): A small badge that displays the category name.",
          "html": "<span class=\"bg-gray-200 py-1 px-2 rounded text-gray-700 text-xs\">{category_name}</span>"
        },
        {
          "name": "CategoryDescription",
          "is_standalone": true,
          "description": "(standalone): A brief description of the category.",
          "html": "<p class=\"text-sm text-gray-600\">{category_description}</p>"
        }
      ]
    },
    {
      "description": "A simple blog post category component that displays the category name and the number of posts in that category. The component should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><BlogPostCategory/></div>",
      "components": [
        {
          "name": "BlogPostCategory",
          "is_standalone": true,
          "description": "A standalone component that displays the category name and the number of posts.",
          "html": "<a href=\"{category_url}\" class=\"bg-gray-200 hover:bg-gray-300 transition duration-300 ease-in-out py-2 px-4 rounded\"><span class=\"text-lg\">{category_name}</span><span class=\"text-sm text-gray-600\">({post_count} posts)</span></a>"
        }
      ]
    }
  ],
  "Cover Photo Upload: Input field for uploading a cover photo": [
    {
      "description": "The UI should be a simple input field with a label and a button to upload a cover photo. The input field should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><label for=\"cover-photo\" class=\"block mb-2\">Cover Photo</label><CoverPhotoUploadField/></div>",
      "components": [
        {
          "name": "CoverPhotoUploadField",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and upload button.",
          "html": "<div class=\"flex items-center\"><input type=\"file\" id=\"cover-photo\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\"/><UploadButton/></div>"
        },
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "A standalone component that is the upload button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4\">Upload</button>"
        }
      ]
    }
  ],
  "Video upload tool with encoding options": [
    {
      "description": "The UI should be a video upload tool with encoding options. It should have a file input field, a dropdown menu for selecting the encoding preset, a checkbox for enabling watermarks, and a submit button. The UI should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 pb-8\"><VideoUploadForm><UploadInput/><EncodingPresetSelect/><WatermarkCheckbox/><SubmitButton/></VideoUploadForm></div>",
      "components": [
        {
          "name": "UploadInput",
          "is_standalone": true,
          "description": "A standalone component for the file input field.",
          "html": "<div class=\"mb-4\"><input type=\"file\" id=\"video-upload\" class=\"block w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"><label for=\"video-upload\" class=\"sr-only\">Select a video file</label></div>"
        },
        {
          "name": "EncodingPresetSelect",
          "is_standalone": true,
          "description": "A standalone component for the dropdown menu for selecting the encoding preset.",
          "html": "<div class=\"mb-4\"><select id=\"encoding-preset\" class=\"block w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"><option value=\"\">{select_preset}</option><!-- more options will be generated dynamically --></select><label for=\"encoding-preset\" class=\"sr-only\">Select an encoding preset</label></div>"
        },
        {
          "name": "WatermarkCheckbox",
          "is_standalone": true,
          "description": "A standalone component for the checkbox for enabling watermarks.",
          "html": "<div class=\"mb-4\"><input type=\"checkbox\" id=\"watermark\" class=\"w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:ring-blue-500\"><label for=\"watermark\" class=\"ml-2 text-sm text-gray-600\">Enable watermark</label></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "A standalone component for the submit button.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Upload Video</button>"
        },
        {
          "name": "VideoUploadForm",
          "is_standalone": false,
          "description": "A component that takes children, which is the parent component that wraps all the other components.",
          "html": "<!-- this component will wrap all the other components --><div class=\"p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Investment portfolio tracker": [
    {
      "description": "The UI should be a responsive, mobile-first investment portfolio tracker that displays a list of investments with their respective details. The tracker should have a clean and minimalistic design, with clear typography and ample whitespace. On larger screens, the tracker should display a sidebar with filters and sorting options, while on smaller screens, the filters and sorting options should be accessible through a dropdown menu.",
      "html": "<div class=\"flex h-screen max-h-screen overflow-hidden\"><aside class=\"lg:w-64 xl:w-80 hidden lg:block\"><FilterSidebar/></aside><div class=\"lg:flex-1 xl:flex-1 p-4\"><div class=\"lg:hidden xl:hidden\"><FilterDropdown/></div><InvestmentList><InvestmentCard/><InvestmentCard/><!-- more InvestmentCard components --></InvestmentList></div></div>",
      "components": [
        {
          "name": "InvestmentCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single investment with its details.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h2 class=\"text-lg\">{investment_name}</h2><p class=\"text-gray-600\">{investment_type}</p><p class=\"text-gray-600\">{current_value} ({current_change}%)</p></div>"
        },
        {
          "name": "InvestmentList",
          "is_standalone": false,
          "description": "(takes children): Displays a list of `InvestmentCard` components.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        },
        {
          "name": "FilterSidebar",
          "is_standalone": true,
          "description": "(standalone): Displays filters and sorting options for the investments.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg\">Filters</h2><form><label class=\"block text-gray-600\">Investment Type</label><select class=\"block w-full p-2\"><option value=\"\">All</option><option value=\"stock\">Stock</option><option value=\"bond\">Bond</option><!-- more options --></select><label class=\"block text-gray-600\">Sort By</label><select class=\"block w-full p-2\"><option value=\"\">Alphabetical</option><option value=\"current_value\">Current Value</option><option value=\"current_change\">Current Change</option><!-- more options --></select></form></div>"
        },
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): Displays filters and sorting options for the investments on smaller screens.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg\">Filters</h2><form><label class=\"block text-gray-600\">Investment Type</label><select class=\"block w-full p-2\"><option value=\"\">All</option><option value=\"stock\">Stock</option><option value=\"bond\">Bond</option><!-- more options --></select><label class=\"block text-gray-600\">Sort By</label><select class=\"block w-full p-2\"><option value=\"\">Alphabetical</option><option value=\"current_value\">Current Value</option><option value=\"current_change\">Current Change</option><!-- more options --></select></form><button class=\"block w-full p-2 bg-blue-500 hover:bg-blue-700 text-white font-bold\">Apply Filters</button></div>"
        }
      ]
    }
  ],
  "Product Price Currency": [
    {
      "description": "The UI should display the price of a product with its corresponding currency in a responsive and accessible way.",
      "html": "<div class=\"flex items-center\"><ProductPriceCurrency/></div>",
      "components": [
        {
          "name": "ProductPriceCurrency",
          "is_standalone": true,
          "description": "A standalone component that displays the price and currency of a product.",
          "html": "<span class=\"text-lg font-bold\">{price} {currency}</span>"
        }
      ]
    }
  ],
  "Add to cart and wishlist buttons": [
    {
      "description": "The UI should be a simple container with two buttons, one for adding to cart and one for adding to wishlist. The buttons should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ButtonContainer><AddToCartButton/><AddToWishlistButton/></ButtonContainer></div>",
      "components": [
        {
          "name": "AddToCartButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "AddToWishlistButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Add to Wishlist</button>"
        },
        {
          "name": "ButtonContainer",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Case studies display": [
    {
      "description": "A horizontal list of case studies, each with a title, description, and image. The list is responsive, with a max of 3 items per row on large screens, 2 items per row on medium screens, and 1 item per row on small screens.",
      "html": "<div class=\"container mx-auto p-4\"><h2>Case Studies</h2><CaseStudyList><CaseStudyCard/><CaseStudyCard/><CaseStudyCard/><!-- Add more CaseStudyCard components as needed --></CaseStudyList></div>",
      "components": [
        {
          "name": "CaseStudyCard",
          "is_standalone": true,
          "description": "A standalone component representing a single case study, containing a title, description, and image.",
          "html": "<div class=\"flex flex-col justify-center p-4\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full mb-4 rounded-lg\"/><h3 class=\"text-lg font-bold mb-2\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        },
        {
          "name": "CaseStudyList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping a list of `CaseStudyCard`s.",
          "html": "<ul class=\"flex flex-wrap justify-center -mx-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Video analytics dashboard for creators": [
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "YouTube/Vimeo Embeds": [
    {
      "description": "The UI should display an embedded YouTube or Vimeo video player with a responsive width and a fixed aspect ratio. The video player should be centered on the page.",
      "html": "<div class=\"flex justify-center\"><AspectRatioWrapper><VideoEmbed/></AspectRatioWrapper></div>",
      "components": [
        {
          "name": "VideoEmbed",
          "is_standalone": true,
          "description": "A standalone component that displays an embedded video player.",
          "html": "{/* YouTube or Vimeo iframe */}<iframe src={video_url} frameBorder=\"0\" allowFullScreen allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"/>"
        },
        {
          "name": "AspectRatioWrapper",
          "is_standalone": false,
          "description": "A component that wraps the video player and maintains a fixed aspect ratio. It takes children.",
          "html": "<div class=\"relative pb-16/9\" style={{ maxWidth: '100vw', maxHeight: '80vh' }}>{children}</div>"
        }
      ]
    }
  ],
  "Footer Copyright Information": [
    {
      "description": "The UI should be a simple footer section with a copyright information text. It should be displayed at the bottom of the page and should be responsive, readable, and accessible.",
      "html": "<footer class=\"pt-12 pb-4 bg-gray-200\"><FooterCopyright/></footer>",
      "components": [
        {
          "name": "FooterCopyright",
          "is_standalone": true,
          "description": "A standalone component that displays the copyright information.",
          "html": "<p class=\"text-sm text-gray-500 text-center\">&copy; {year} {company_name}. All rights reserved.</p>"
        }
      ]
    }
  ],
  "Customer Review Profile": [
    {
      "description": "The Customer Review Profile UI should display a customer's name, profile picture, rating, review, and date of review. It should be responsive, displaying the profile picture and review text side by side on larger screens, and stacked on smaller screens.",
      "html": "<div class=\"md:flex md:items-center mb-4\"><CustomerProfilePicture/><div class=\"md:ml-4\"><CustomerName/><ReviewContainer><ReviewRating/><ReviewText/><ReviewDate/></ReviewContainer></div></div>",
      "components": [
        {
          "name": "CustomerProfilePicture",
          "is_standalone": true,
          "description": "(standalone): displays the customer's profile picture",
          "html": "<img src={profile_picture_url} alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "ReviewRating",
          "is_standalone": true,
          "description": "(standalone): displays the customer's rating (e.g. 4/5 stars)",
          "html": "<div class=\"text-lg\">{rating_out_of_five}/ 5</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the customer's written review",
          "html": "<p>{review_text}</p>"
        },
        {
          "name": "ReviewDate",
          "is_standalone": true,
          "description": "(standalone): displays the date of the review",
          "html": "<p class=\"text-sm text-gray-600\">{review_date}</p>"
        },
        {
          "name": "CustomerName",
          "is_standalone": true,
          "description": "(standalone): displays the customer's name",
          "html": "<h3 class=\"text-lg\">{customer_name}</h3>"
        },
        {
          "name": "ReviewContainer",
          "is_standalone": false,
          "description": "(takes children): contains the review rating, text, and date",
          "html": "<div class=\"flex flex-col md:flex-row items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a customer's profile with a profile picture, name, rating, and a brief review. The profile picture should be circular and placed to the left of the review information. The rating should be displayed using a 5-star system.",
      "html": "<div class=\"flex items-center mb-4\"><ProfilePicture/><ReviewInformation><h5 class=\"text-lg\">{customer_name}</h5><Rating/><ReviewText/></ReviewInformation></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\">"
        },
        {
          "name": "ReviewInformation",
          "is_standalone": false,
          "description": "(takes children) - contains the customer's name, rating, and review",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's rating using a 5-star system",
          "html": "<div class=\"flex mb-2\">{Array(5).fill(0).map((_, i) =>( <span key={i} class={`text-yellow-400 ${i < rating ? 'fill-current' : 'fill-none'}`}><i class=\"fas fa-star\"></i></span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's brief review",
          "html": "<p class=\"text-gray-600\">{review_text}</p>"
        }
      ]
    }
  ],
  "Data Importer: Upload bulk data": [
    {
      "description": "The UI should be a simple, responsive page with a header, a form to upload a file, and a button to submit the file. The page should be accessible and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><DataImporterHeader/><FileUploadForm><input type=\"file\" id=\"file\" class=\"block w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer focus:outline-none\"/><label for=\"file\" class=\"sr-only\">Select file</label><SubmitButton/></FileUploadForm><div class=\"text-gray-500 text-sm\">{import_result}</div></div>",
      "components": [
        {
          "name": "DataImporterHeader",
          "is_standalone": true,
          "description": "Standalone component to display the page header.",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold mb-2\">Data Importer</h1><p class=\"text-gray-500 text-sm\">Upload bulk data</p></header>"
        },
        {
          "name": "FileUploadForm",
          "is_standalone": false,
          "description": "Takes children. A form component to upload a file.",
          "html": "<form class=\"flex flex-col gap-4 mb-4\">{children}</form>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component to submit the file.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Upload</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple and clean interface that allows users to upload bulk data. It should consist of a file input field, a submit button, and a section to display the upload progress.",
      "html": "<div class=\"container max-w-md mx-auto p-4 pt-6\"><BulkDataUploader><input type=\"file\" id=\"file\" class=\"block w-full text-sm text-gray-700\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Upload</button></BulkDataUploader><FileInfoCard/><UploadProgressBar/><UploadStatusMessage/></div>",
      "components": [
        {
          "name": "FileInfoCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about the uploaded file, such as the file name and size.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h5 class=\"text-lg font-bold\">{fileName}</h5><p>File size: {fileSize} KB</p></div>"
        },
        {
          "name": "UploadProgressBar",
          "is_standalone": true,
          "description": "A standalone component that displays the upload progress.",
          "html": "<div class=\"bg-gray-200 h-2 mb-4\"><div class=\"bg-orange-500 h-2\" style={{ width: `${progressPercentage}%` }}></div></div>"
        },
        {
          "name": "BulkDataUploader",
          "is_standalone": false,
          "description": "A component that takes children, which wraps the file input field and submit button.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        },
        {
          "name": "UploadStatusMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a success or error message after the upload is complete.",
          "html": "<div class=\"bg-{statusColor}-100 border-{statusColor}-500 text-{statusColor}-700 px-4 py-2 rounded\">{statusMessage}</div>"
        }
      ]
    }
  ],
  "Hotel reservation form": [
    {
      "description": "The UI should be a simple hotel reservation form with input fields for guest information, check-in and check-out dates, room type, and a submit button. The form should be responsive, mobile-friendly, and accessible.",
      "html": "<ReservationFormComponent><GuestInformationComponent/><DatePickerComponent/><RoomTypeComponent/><SubmitButtonComponent/></ReservationFormComponent>",
      "components": [
        {
          "name": "GuestInformationComponent",
          "is_standalone": true,
          "description": "(standalone) - contains input fields for guest name, email, and phone number",
          "html": "<div class=\"flex flex-wrap -mx-3 mb-6\"><div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\"><label class=\"block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2\" for=\"name\">Name </label><input class=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4\" id=\"name\" type=\"text\"/></div><div class=\"w-full md:w-1/2 px-3\"><label class=\"block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2\" for=\"email\">Email </label><input class=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4\" id=\"email\" type=\"email\"/></div><div class=\"w-full md:w-1/2 px-3\"><label class=\"block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2\" for=\"phone\">Phone </label><input class=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4\" id=\"phone\" type=\"tel\"/></div></div>"
        },
        {
          "name": "DatePickerComponent",
          "is_standalone": true,
          "description": "(standalone) - a single date picker for check-in and check-out dates",
          "html": "<div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\"><label class=\"block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2\" for=\"checkin_date\">Check-in Date </label><input class=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4\" id=\"checkin_date\" type=\"date\"/><label class=\"block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2\" for=\"checkout_date\">Check-out Date </label><input class=\"appearance-none block w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4\" id=\"checkout_date\" type=\"date\"/></div>"
        },
        {
          "name": "RoomTypeComponent",
          "is_standalone": true,
          "description": "(standalone) - a dropdown menu for selecting room type",
          "html": "<div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\"><label class=\"block uppercase tracking-wide text-grey-darker text-xs font-bold mb-2\" for=\"room_type\">Room Type </label><select class=\"block appearance-none w-full bg-grey-lighter text-grey-darker border border-grey-lighter rounded py-3 px-4\" id=\"room_type\"><option value=\"\">Select room type</option><option value=\"single\">Single</option><option value=\"double\">Double</option><option value=\"suite\">Suite</option></select></div>"
        },
        {
          "name": "SubmitButtonComponent",
          "is_standalone": true,
          "description": "(standalone) - a submit button for the form",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"submit\">Book Now</button>"
        },
        {
          "name": "ReservationFormComponent",
          "is_standalone": false,
          "description": "(takes children) - the outer container for the form",
          "html": "<form class=\"max-w-md w-full mx-auto p-4 pt-6\">{children}</form>"
        }
      ]
    },
    {
      "description": "A mobile-friendly hotel reservation form with fields for guest information, room preferences, and payment details. The form should be easily accessible and responsive.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Hotel Reservation Form</h1><GuestInformationForm/><RoomPreferenceSelect/><PaymentDetailsForm/><SubmitButton/></div>",
      "components": [
        {
          "name": "GuestInformationForm",
          "is_standalone": true,
          "description": "(standalone): A form for collecting guest information.",
          "html": "<form class=\"mb-4\"><label class=\"block mb-2\" htmlFor=\"guestName\">Full Name:</label><input type=\"text\" id=\"guestName\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label class=\"block mb-2\" htmlFor=\"email\">Email:</label><input type=\"email\" id=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label class=\"block mb-2\" htmlFor=\"phone\">Phone Number:</label><input type=\"tel\" id=\"phone\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></form>"
        },
        {
          "name": "RoomPreferenceSelect",
          "is_standalone": true,
          "description": "(standalone): A dropdown select for choosing room preferences.",
          "html": "<div class=\"mb-4\"><label class=\"block mb-2\" htmlFor=\"roomType\">Room Type:</label><select id=\"roomType\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"\">Select Room Type</option><option value=\"single\">Single</option><option value=\"double\">Double</option><option value=\"suite\">Suite</option></select></div>"
        },
        {
          "name": "PaymentDetailsForm",
          "is_standalone": true,
          "description": "(standalone): A form for collecting payment details.",
          "html": "<form class=\"mb-4\"><label class=\"block mb-2\" htmlFor=\"cardNumber\">Card Number:</label><input type=\"text\" id=\"cardNumber\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label class=\"block mb-2\" htmlFor=\"expirationDate\">Expiration Date:</label><input type=\"date\" id=\"expirationDate\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label class=\"block mb-2\" htmlFor=\"cvv\">CVV:</label><input type=\"text\" id=\"cvv\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></form>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "(standalone): A button to submit the form.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple hotel reservation form with input fields for guest's information, room preferences, and dates of stay. The form should be responsive, mobile-first, and accessible.",
      "html": "<form class=\"container max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><GuestInfoForm/><RoomPreferenceSelect/><DateInput/><SubmitButton/></form>",
      "components": [
        {
          "name": "GuestInfoForm",
          "is_standalone": true,
          "description": "standalone, collects guest's personal information",
          "html": "<div class=\"mb-4\"><label for=\"name\" class=\"block text-sm font-bold mb-2\">Name:</label><input type=\"text\" id=\"name\" class=\"w-full pl-2 py-2 text-sm text-gray-700\"/><label for=\"email\" class=\"block text-sm font-bold mb-2\">Email:</label><input type=\"email\" id=\"email\" class=\"w-full pl-2 py-2 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "RoomPreferenceSelect",
          "is_standalone": true,
          "description": "standalone, allows selection of room type and number of rooms",
          "html": "<div class=\"mb-4\"><label for=\"room-type\" class=\"block text-sm font-bold mb-2\">Room Type:</label><select id=\"room-type\" class=\"w-full pl-2 py-2 text-sm text-gray-700\">{room_types} </select><label for=\"num-rooms\" class=\"block text-sm font-bold mb-2\">Number of Rooms:</label><input type=\"number\" id=\"num-rooms\" class=\"w-full pl-2 py-2 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "DateInput",
          "is_standalone": true,
          "description": "standalone, collects check-in and check-out dates",
          "html": "<div class=\"mb-4\"><label for=\"check-in\" class=\"block text-sm font-bold mb-2\">Check-in:</label><input type=\"date\" id=\"check-in\" class=\"w-full pl-2 py-2 text-sm text-gray-700\"/><label for=\"check-out\" class=\"block text-sm font-bold mb-2\">Check-out:</label><input type=\"date\" id=\"check-out\" class=\"w-full pl-2 py-2 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone, submits the reservation form",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reserve Room</button>"
        }
      ]
    }
  ],
  "Wishlist/favorites feature": [
    {
      "description": "The UI should be a card-based layout with a favorite button that toggles the favorite status of an item. When unfavorited, the button should be a hollow heart icon, and when favorited, it should be a filled heart icon. The card should display the item's name, a brief description, and a \"Learn more\" button.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ItemCard/><ItemCard/><!-- Add more ItemCard components as needed --></div>",
      "components": [
        {
          "name": "ItemCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single item on the wishlist.",
          "html": "<div class=\"bg-white rounded shadow-md p-4 w-full md:w-1/2 lg:w-1/3 xl:w-1/4 mb-4\"><h2 class=\"text-lg\">{itemName}</h2><p class=\"text-gray-600\">{itemDescription}</p><div class=\"flex justify-between mt-4\"><FavoriteButton/><LearnMoreButton/></div></div>"
        },
        {
          "name": "FavoriteButton",
          "is_standalone": true,
          "description": "A standalone component that toggles the favorite status of an item.",
          "html": "<button class=\"bg-transparent border-none text-red-600 hover:text-red-900 focus:outline-none\">{isFavorited ? <span class=\"fas fa-heart\"></span>: <span class=\"far fa-heart\"></span>}</button>"
        },
        {
          "name": "LearnMoreButton",
          "is_standalone": true,
          "description": "A standalone component that links to more information about the item.",
          "html": "<a href={learnMoreUrl} class=\"text-blue-600 hover:text-blue-900 focus:outline-none\">Learn more</a>"
        }
      ]
    }
  ],
  "Archives: List of past articles by date": [
    {
      "description": "The UI should display a list of past articles, grouped by year and month, with each article title linked to its corresponding page. The list should be responsive, with a compact layout on mobile devices and a more spacious layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Archives</h1><ArchiveList/></div>",
      "components": [
        {
          "name": "ArchiveList",
          "is_standalone": true,
          "description": "(standalone): The main component that renders the list of archives.",
          "html": "<ul class=\"list-none mb-4\">{yearList}</ul>"
        },
        {
          "name": "ArchiveYear",
          "is_standalone": true,
          "description": "(standalone): A component that renders a single year's worth of archives.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><h2 class=\"text-lg font-bold\">{year}</h2><ul class=\"list-none mb-4\">{monthList} </ul></li>"
        },
        {
          "name": "ArchiveMonth",
          "is_standalone": true,
          "description": "(standalone): A component that renders a single month's worth of archives within an `ArchiveYear`.",
          "html": "<li class=\"py-2\"><h3 class=\"text-md font-bold\">{monthName} {year}</h3><ul class=\"list-none mb-4\">{articleList} </ul></li>"
        },
        {
          "name": "ArchiveArticle",
          "is_standalone": true,
          "description": "(standalone): A component that renders a single article within an `ArchiveMonth`.",
          "html": "<li class=\"py-2\"><a href=\"{articleUrl}\" class=\"text-blue-600 hover:text-blue-900\">{articleTitle} </a><p class=\"text-gray-600\">{articleDate}</p></li>"
        }
      ]
    }
  ],
  "Playlist/Audio Controls": [
    {
      "description": "The UI should display a playlist with audio controls, allowing users to play, pause, and navigate through the playlist. The controls should be responsive, easy to use, and accessible.",
      "html": "<div class=\"md:flex justify-center mb-4\"><PlaylistComponent/><AudioControlContainer><AudioControlItem/><AudioControlItem/><AudioControlItem/></AudioControlContainer></div>",
      "components": [
        {
          "name": "PlaylistComponent",
          "is_standalone": true,
          "description": "Standalone, displays the playlist",
          "html": "<ul class=\"list-none mb-4\">{playlist_items}.map((item, index) =>( <li key={index} class=\"mb-2\"><span class=\"text-lg\">{item.title}</span><span class=\"text-sm\">{item.duration}</span></li>))}</ul>"
        },
        {
          "name": "AudioControlItem",
          "is_standalone": true,
          "description": "Standalone, displays a single audio control (play/pause, previous, next)",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{control_label}</button>"
        },
        {
          "name": "AudioControlContainer",
          "is_standalone": false,
          "description": "Takes children, wraps the audio controls",
          "html": "<div class=\"flex justify-center mb-2\">{children}</div>"
        }
      ]
    }
  ],
  "Page Content Paragraph": [
    {
      "description": "A simple paragraph of text that is responsive, accessible, and readable on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ContentParagraph/></div>",
      "components": [
        {
          "name": "ContentParagraph",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg leading-relaxed mb-4\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    }
  ],
  "Affiliate program display": [
    {
      "description": "The UI should display a summary of an affiliate program, including the program's name, description, commission rate, and a call-to-action (CTA) button to join the program. The UI should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto bg-white rounded-lg shadow-md p-4\"><AffiliateProgramCard/></div>",
      "components": [
        {
          "name": "AffiliateProgramCard",
          "is_standalone": true,
          "description": "A standalone component that displays the affiliate program's details.",
          "html": "<div class=\"flex flex-col p-4\"><ProgramName/><ProgramDescription/><CommissionRate/><JoinProgramButton/></div>"
        },
        {
          "name": "ProgramName",
          "is_standalone": true,
          "description": "A standalone component that displays the affiliate program's name.",
          "html": "<h2 class=\"text-lg font-bold\">{program_name}</h2>"
        },
        {
          "name": "ProgramDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the affiliate program's description.",
          "html": "<p class=\"text-gray-600\">{program_description}</p>"
        },
        {
          "name": "CommissionRate",
          "is_standalone": true,
          "description": "A standalone component that displays the affiliate program's commission rate.",
          "html": "<p class=\"text-lg\">{commission_rate}% commission</p>"
        },
        {
          "name": "JoinProgramButton",
          "is_standalone": true,
          "description": "A standalone component that displays a CTA button to join the program.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Join Program</button>"
        }
      ]
    }
  ],
  "Semantic HTML5 Markup": [
    {
      "description": "The UI should be a basic web page with a header, navigation, main content area, and footer. The layout should be responsive and mobile-friendly.",
      "html": "<html lang=\"en\"><head><meta charset=\"UTF-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/><title>{title}</title></head><body class=\"min-h-screen flex flex-col\"><HeaderComponent/><NavigationComponent/><main class=\"flex-1\"><MainComponent><!-- child components will be rendered here --></MainComponent></main><FooterComponent/></body></html>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "(standalone) - The topmost section of the page, containing the site's title and navigation.",
          "html": "<header class=\"bg-blue-500 py-4 text-white\"><h1>{site_title}</h1></header>"
        },
        {
          "name": "NavigationComponent",
          "is_standalone": true,
          "description": "(standalone) - A list of links to other parts of the site.",
          "html": "<nav class=\"bg-gray-200 py-4\"><ul class=\"flex flex-wrap justify-center\"><li class=\"mr-4\"><a href=\"{nav_link_1}\">{nav_text_1}</a></li><li class=\"mr-4\"><a href=\"{nav_link_2}\">{nav_text_2}</a></li><!-- more links here --></ul></nav>"
        },
        {
          "name": "MainComponent",
          "is_standalone": false,
          "description": "(takes children) - The main content area of the page, containing articles, images, or other content.",
          "html": "<div class=\"px-4 pt-4\">{children}</div>"
        },
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The bottommost section of the page, containing copyright information and other miscellaneous links.",
          "html": "<footer class=\"bg-gray-200 py-4\"><p>&copy; {year} {site_name}</p></footer>"
        }
      ]
    },
    {
      "description": "A basic HTML5 document structure with semantic meaning, containing a header, navigation, main content area, sidebar, and footer.",
      "html": "<html lang=\"en\"><head><meta charset=\"UTF-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/><title>{document_title}</title></head><body><HeaderComponent/><NavComponent/><main><MainComponent><!-- Main content area --></MainComponent></main><aside><SidebarComponent/></aside><FooterComponent/></body></html>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<header class=\"bg-gray-200 p-4\"><h1>{header_title}</h1></header>"
        },
        {
          "name": "NavComponent",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<nav class=\"flex justify-between p-4 bg-gray-200\"><ul class=\"flex\"><li><a href=\"#\" class=\"text-gray-600\">{nav_item_1}</a></li><li><a href=\"#\" class=\"text-gray-600\">{nav_item_2}</a></li><li><a href=\"#\" class=\"text-gray-600\">{nav_item_3}</a></li></ul></nav>"
        },
        {
          "name": "MainComponent",
          "is_standalone": false,
          "description": "- takes children",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "SidebarComponent",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<aside class=\"bg-gray-200 p-4\"><h2>{sidebar_title}</h2><ul><li>{sidebar_item_1}</li><li>{sidebar_item_2}</li><li>{sidebar_item_3}</li></ul></aside>"
        },
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<footer class=\"bg-gray-200 p-4\"><p>&copy; {current_year} {footer_text}</p></footer>"
        }
      ]
    }
  ],
  "Notifications display": [
    {
      "description": "The UI should display a list of notifications in a card-style layout, with each notification showing the notification message, timestamp, and a close button. The layout should be responsive and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Notifications</h2><NotificationList><!-- list of notifications will be rendered here --></NotificationList></div>",
      "components": [
        {
          "name": "NotificationList",
          "is_standalone": false,
          "description": "a component that takes children, which is a list of `NotificationCard` components",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Social media sharing buttons": [
    {
      "description": "A horizontal row of buttons, each representing a social media platform, with a light background and a hover effect to indicate interactivity.",
      "html": "<div class=\"container mx-auto p-4\"><SocialMediaShareBar/></div>",
      "components": [
        {
          "name": "SocialMediaShareBar",
          "is_standalone": true,
          "description": "A container component that holds all the social media buttons. (standalone)",
          "html": "<div class=\"flex justify-center mb-4\"><SocialMediaButton>Facebook</SocialMediaButton><SocialMediaButton>Twitter</SocialMediaButton><SocialMediaButton>LinkedIn</SocialMediaButton><!-- Add more buttons as needed --></div>"
        },
        {
          "name": "SocialMediaButton",
          "is_standalone": false,
          "description": "A button component for each social media platform. (takes children)",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">{children}</button>"
        }
      ]
    }
  ],
  "Search Input Clear Button": [
    {
      "description": "A search input field with a clear button on the right side, which appears only when the input field is not empty. The clear button is a small circle with a white \"X\" icon.",
      "html": "<div class=\"flex items-center w-full\"><SearchInput/><ClearButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<input type=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search\"/>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button aria-label=\"Clear search input\" class=\"w-6 h-6 text-gray-500 hover:text-gray-900 transition duration-300 ease-in-out\"><span class=\"sr-only\">Clear search input</span><!-- X icon will be replaced with a CSS pseudo-element --><span aria-hidden=\"true\">×</span></button>"
        }
      ]
    },
    {
      "description": "A simple search input field with a clear button on the right side of the input field. The clear button should be visible only when there is text in the input field.",
      "html": "<div class=\"flex w-full md:w-1/2 lg:w-1/3 xl:w-1/4 mx-auto mt-4 mb-4\"><SearchInput/><ClearButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone) - The search input field.",
          "html": "<input type=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700 border border-gray-300 rounded-md\" placeholder=\"Search...\"/>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "(standalone) - The clear button to clear the search input field.",
          "html": "<button class=\"absolute top-0 right-0 p-2 text-gray-600 hover:text-gray-900 transition duration-300\"><span aria-hidden=\"true\">&times;</span></button>"
        }
      ]
    },
    {
      "description": "A search input with a clear button that appears when the input is not empty. The clear button is a small \"x\" icon that clears the input when clicked. The input is responsive and accessible.",
      "html": "<div class=\"flex items-center w-full md:w-1/2 lg:w-1/3 xl:w-1/4\"><SearchInput><input type=\"search\" id=\"search\" class=\"w-full pl-4 pr-10 py-2 text-lg\"/><ClearButton/></SearchInput></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": false,
          "description": "A text input that takes children (placeholder text and the clear button).",
          "html": "<div class=\"flex items-center w-full\">{children}</div>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "A standalone button component that clears the search input when clicked.",
          "html": "<button type=\"button\" class=\"px-2 text-gray-500 hover:text-gray-800 transition duration-300\" aria-label=\"Clear search input\"><span aria-hidden=\"true\">×</span></button>"
        }
      ]
    },
    {
      "description": "A search input with a clear button on the right side. The clear button is only visible when there's text in the input field.",
      "html": "<div class=\"flex flex-wrap items-center\"><SearchInputContainer/></div>",
      "components": [
        {
          "name": "SearchInputContainer",
          "is_standalone": true,
          "description": "standalone, contains the input field and the clear button",
          "html": "<div class=\"relative\"><SearchInput/><ClearButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone, the input field",
          "html": "<input type=\"search\" class=\"pl-4 pr-10 py-2 w-full text-sm text-gray-700\" placeholder=\"Search...\"/>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "standalone, the clear button",
          "html": "<button class=\"absolute inset-y-0 right-0 flex items-center px-2\"><i class=\"fas fa-times text-gray-400 hover:text-gray-600 transition duration-300 ease-in-out\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a search input field with a clear button on the right side. The clear button should appear only when there is text in the input field. When clicked, the clear button should clear the input field.",
      "html": "<div class=\"flex w-full max-w-md\"><SearchInput/><ClearButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"search\" class=\"w-full pl-4 pr-10 py-2 text-sm border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-blue-500\" placeholder=\"Search...\"/>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"inline-flex justify-center w-8 h-8 bg-gray-100 text-gray-500 hover:text-gray-700 hover:bg-gray-200 transition ease-in-out duration-200\"><span aria-hidden=\"true\">&times;</span></button>"
        }
      ]
    }
  ],
  "Small box that users can click to select or deselect an option": [
    {
      "description": "A small checkbox that can be toggled on and off, indicating a selected or deselected option. The checkbox should be responsive and accessible.",
      "html": "<div class=\"flex items-center\"><CheckBox/><label class=\"ml-2\">{option_label}</label></div>",
      "components": [
        {
          "name": "CheckBox",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<input type=\"checkbox\" class=\"w-4 h-4 text-blue-600 bg-gray-100 rounded\" aria-label={option_label}/>"
        }
      ]
    }
  ],
  "Email signature editor with formatting options": [
    {
      "description": "The UI should be a responsive, mobile-first email signature editor with formatting options. The editor should have a toolbar with options to format the text, such as bold, italic, underline, and font size. The editor should also have a preview section to display the formatted text. The UI should be accessible and SEO-friendly.",
      "html": "<div class=\"flex flex-col w-full h-screen p-4\"><EditorToolbar/><EditorInput/><PreviewArea/></div>",
      "components": [
        {
          "name": "EditorToolbar",
          "is_standalone": true,
          "description": "A standalone component that contains the formatting options (bold, italic, underline, font size).",
          "html": "<div class=\"flex justify-between mb-2\"><FormattingOption><button class=\"bg-gray-200 hover:bg-gray-300 rounded px-2 py-1\">Bold</button></FormattingOption><FormattingOption><button class=\"bg-gray-200 hover:bg-gray-300 rounded px-2 py-1\">Italic</button></FormattingOption><FormattingOption><button class=\"bg-gray-200 hover:bg-gray-300 rounded px-2 py-1\">Underline</button></FormattingOption><FormattingOption><select class=\"bg-gray-200 hover:bg-gray-300 rounded px-2 py-1\"><option value=\"12px\">12px</option><option value=\"14px\">14px</option><option value=\"16px\">16px</option></select></FormattingOption></div>"
        },
        {
          "name": "EditorInput",
          "is_standalone": true,
          "description": "A standalone component that is the input field for the email signature text.",
          "html": "<textarea class=\"w-full p-2 h-48 bg-gray-200 rounded\" placeholder=\"Enter your email signature...\"></textarea>"
        },
        {
          "name": "PreviewArea",
          "is_standalone": true,
          "description": "A standalone component that displays the formatted text.",
          "html": "<div class=\"bg-gray-100 p-4 rounded\">{signaturePreview}</div>"
        },
        {
          "name": "FormattingOption",
          "is_standalone": false,
          "description": "A component that takes children, representing an individual formatting option (e.g. bold, italic, etc.).",
          "html": "<div class=\"mr-2\">{children}</div>"
        }
      ]
    }
  ],
  "Text input field for users to search within the website": [
    {
      "description": "A simple search input field with a placeholder and a submit button.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><SearchInput/><SearchButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone) - a text input field with a placeholder.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full md:w-1/2 lg:w-1/3 pl-2 pr-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone) - a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search input field with a placeholder text and a submit button. The input field should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SearchInput/><SearchButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"search\" placeholder=\"Search within the website\" class=\"w-full lg:w-1/2 xl:w-1/3 px-4 py-2 text-sm text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Search</button>"
        }
      ]
    }
  ],
  "Responsive Table Layout": [
    {
      "description": "The UI should display a responsive table layout with a header row, multiple data rows, and columns that adjust their width based on the screen size.",
      "html": "<ResponsiveTable><TableHeader><TableCell><span>Column 1</span></TableCell><TableCell><span>Column 2</span></TableCell><TableCell><span>Column 3</span></TableCell></TableHeader><TableRow><TableCell>{cellData1}</TableCell><TableCell>{cellData2}</TableCell><TableCell>{cellData3}</TableCell></TableRow><!-- More TableRow components here --></ResponsiveTable>",
      "components": [
        {
          "name": "ResponsiveTable",
          "is_standalone": false,
          "description": "The main container for the responsive table layout. Takes children.",
          "html": "<div class=\"overflow-x-auto\"><table class=\"w-full border-collapse\">{children} </table></div>"
        },
        {
          "name": "TableHeader",
          "is_standalone": false,
          "description": "The header row of the table. Takes children.",
          "html": "<thead><tr class=\"bg-gray-100\">{children} </tr></thead>"
        },
        {
          "name": "TableRow",
          "is_standalone": false,
          "description": "A single row in the table. Takes children.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "TableCell",
          "is_standalone": false,
          "description": "A single cell in the table. Takes children.",
          "html": "<td class=\"px-4 py-2\">{children}</td>"
        }
      ]
    }
  ],
  "Security Center: Monitor system security": [
    {
      "description": "The UI should be a dashboard that displays various security metrics and alerts. It should have a header with a title and a navigation menu. The main content area should have a grid layout with multiple sections, each displaying different security-related information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><SecurityHeader/><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><SecuritySection><MetricCard/><MetricCard/></SecuritySection><SecuritySection><AlertList><li>{alert_message}</li><li>{alert_message}</li></AlertList></SecuritySection></div></div>",
      "components": [
        {
          "name": "SecurityHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the title and navigation menu.",
          "html": "<header class=\"flex justify-between mb-4\"><h1 class=\"text-2xl font-bold\">Security Center</h1><nav class=\"flex\"><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">Dashboard</a><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">Settings</a></nav></header>"
        },
        {
          "name": "SecuritySection",
          "is_standalone": false,
          "description": "Component that takes children and displays a section of security information.",
          "html": "<section class=\"bg-white p-4 rounded shadow-md\">{children}</section>"
        },
        {
          "name": "MetricCard",
          "is_standalone": true,
          "description": "Standalone component that displays a single metric (e.g. \"System Vulnerabilities: 5\").",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><h2 class=\"text-lg font-bold\">{metric_name}</h2><p class=\"text-gray-600\">{metric_value}</p></div>"
        },
        {
          "name": "AlertList",
          "is_standalone": false,
          "description": "Component that takes children and displays a list of security alerts.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Input area where users can enter text or data": [
    {
      "description": "A simple text input field with a placeholder and a submit button.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><InputGroup><InputField/><SubmitButton/></InputGroup></div>",
      "components": [
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "A standalone component that renders a text input field.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{placeholder_text}\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "A standalone component that renders a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        },
        {
          "name": "InputGroup",
          "is_standalone": false,
          "description": "A component that takes children and groups the input field and submit button together.",
          "html": "<div class=\"flex flex-wrap -mx-3 mb-2\">{children}</div>"
        }
      ]
    }
  ],
  "Sidebar with popular posts and trending topics": [
    {
      "description": "The UI should consist of a sidebar with two sections: popular posts and trending topics. The popular posts section should display a list of post titles with a brief description and a \"Read more\" button. The trending topics section should display a list of topic names with a badge indicating the number of posts related to each topic. The sidebar should be responsive, with a maximum width of 300px on larger screens and a full-width layout on smaller screens.",
      "html": "<aside class=\"max-w-md md:max-w-none\"><Sidebar><h2 class=\"text-lg font-bold mb-2\">Popular Posts</h2><ul><li><PopularPostCard/></li><li><PopularPostCard/></li><li><PopularPostCard/></li></ul><h2 class=\"text-lg font-bold mb-2\">Trending Topics</h2><ul><li><TrendingTopicBadge/></li><li><TrendingTopicBadge/></li><li><TrendingTopicBadge/></li></ul></Sidebar></aside>",
      "components": [
        {
          "name": "PopularPostCard",
          "is_standalone": true,
          "description": "A standalone component representing a single popular post.",
          "html": "<div class=\"flex items-start mb-4\"><img src={image_url} alt={post_title} class=\"w-12 h-12 rounded-full mr-4\"><div><h3 class=\"text-lg font-bold\">{post_title}</h3><p class=\"text-gray-600\">{post_excerpt}</p><a href={post_url} class=\"text-blue-600 hover:text-blue-900\">Read more</a></div></div>"
        },
        {
          "name": "TrendingTopicBadge",
          "is_standalone": true,
          "description": "A standalone component displaying a topic name and a badge with the number of related posts.",
          "html": "<span class=\"inline-flex items-center\">{topic_name} <span class=\"bg-orange-100 text-orange-800 text-xs font-bold px-2 rounded\">{topic_post_count} posts</span></span>"
        },
        {
          "name": "Sidebar",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the popular posts and trending topics sections.",
          "html": "<div class=\"bg-gray-100 p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Page Content Ordered List": [
    {
      "description": "The UI should display an ordered list of page content items, with each item containing a title and a short description. The list should be responsive, mobile-first, and accessible.",
      "html": "<PageContentOrderedList><PageContentOrderedListItem/><PageContentOrderedListItem/><!-- Add more list items here --></PageContentOrderedList>",
      "components": [
        {
          "name": "PageContentOrderedListItem",
          "is_standalone": true,
          "description": "Standalone component, represents a single list item.",
          "html": "<li class=\"md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"font-bold\">{item_title}</h3><p>{item_description}</p></li>"
        },
        {
          "name": "PageContentOrderedList",
          "is_standalone": false,
          "description": "Takes children, wraps the ordered list.",
          "html": "<ol class=\"list-decimal list-inside\">{children}</ol>"
        }
      ]
    }
  ],
  "Payment and Invoicing Tools": [
    {
      "description": "The UI should be a responsive, mobile-first page that displays payment and invoicing tools with clear headings, buttons, and form elements. The layout should adjust to different screen sizes, and the elements should be accessible and SEO-friendly.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><HeaderBar/><section class=\"flex flex-wrap -mx-4\"><PaymentMethods><PaymentButton/><PaymentButton/><PaymentButton/></PaymentMethods><InvoicingForm><!-- Form elements will go here --></InvoicingForm></section><InvoiceSummary><!-- Invoice summary details will go here --></InvoiceSummary></main>",
      "components": [
        {
          "name": "HeaderBar",
          "is_standalone": true,
          "description": "(standalone): Displays the page title and navigation.",
          "html": "<header class=\"bg-gray-100 py-4\"><h1 class=\"text-2xl font-bold\">{page_title}</h1><nav class=\"flex justify-end\"><a class=\"text-gray-600 hover:text-gray-900\" href=\"#\">{nav_link}</a></nav></header>"
        },
        {
          "name": "PaymentMethods",
          "is_standalone": false,
          "description": "(takes children): Displays a list of payment methods.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        },
        {
          "name": "InvoicingForm",
          "is_standalone": false,
          "description": "(takes children): Displays a form for creating invoices.",
          "html": "<form class=\"w-full max-w-md\"><label class=\"block mb-2\" for=\"invoice_date\">Invoice Date </label><input class=\"w-full p-2\" id=\"invoice_date\" type=\"date\" value=\"{invoice_date}\"/><!-- More form elements will go here -->{children}</form>"
        },
        {
          "name": "PaymentButton",
          "is_standalone": true,
          "description": "(standalone): A call-to-action button for making payments.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        },
        {
          "name": "InvoiceSummary",
          "is_standalone": false,
          "description": "(takes children): Displays a summary of the invoice.",
          "html": "<table class=\"w-full text-sm\"><tr><th class=\"px-4 py-2\">Invoice #</th><td class=\"px-4 py-2\">{invoice_number}</td></tr><!-- More table rows will go here -->{children}</table>"
        }
      ]
    },
    {
      "description": "The UI should be a simple and clean page that displays a list of payment and invoicing tools with their respective logos, names, and descriptions. The page should be responsive, mobile-friendly, and accessible.",
      "html": "<main class=\"max-w-lg mx-auto p-4 pt-6 pb-8\"><h1 class=\"text-3xl font-bold mb-4\">Payment and Invoicing Tools</h1><PaymentToolList><!-- list of payment tool cards will be rendered here --></PaymentToolList></main>",
      "components": [
        {
          "name": "PaymentToolList",
          "is_standalone": false,
          "description": "(takes children) - a container for a list of `PaymentToolCard` components",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of payment and invoicing tools with their respective logos, names, and descriptions. The list should be responsive and accessible on various devices.",
      "html": "<!-- Payment and Invoicing Tools Section --><section class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-3xl font-bold mb-4\">Payment and Invoicing Tools</h2><PaymentToolList/></section>",
      "components": [
        {
          "name": "PaymentToolCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single payment tool's information.",
          "html": "<!-- Individual Payment Tool Card --><div class=\"bg-white shadow-md rounded p-4 mb-4\"><img src=\"{logo_url}\" alt=\"{tool_name}\" class=\"w-10 h-10 mr-4\"><div class=\"flex-1\"><h3 class=\"text-lg font-bold\">{tool_name}</h3><p class=\"text-gray-600\">{tool_description}</p></div></div>"
        },
        {
          "name": "PaymentToolList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `PaymentToolCard` components.",
          "html": "<!-- List of Payment Tools --><ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Visual representation of content loading progress": [
    {
      "description": "The UI should display a responsive, mobile-first, and accessible visual representation of content loading progress, indicating the percentage of completion. The UI should be aesthetically pleasing and provide a clear understanding of the loading progress.",
      "html": "<div class=\"flex justify-center mb-4\"><LoadingBar/><ProgressLabel/></div>",
      "components": [
        {
          "name": "LoadingBar",
          "is_standalone": true,
          "description": "(standalone): A horizontal bar that fills up to represent the progress of content loading.",
          "html": "<div class=\"bg-gray-200 h-2 w-full rounded\"><div class=\"bg-orange-500 h-2 rounded\" style={{ width: `${progressPercentage}%` }}></div></div>"
        },
        {
          "name": "ProgressLabel",
          "is_standalone": true,
          "description": "(standalone): A label that displays the percentage of content loading progress.",
          "html": "<p class=\"text-sm\">{progressPercentage}%</p>"
        }
      ]
    }
  ],
  "Popular Tags: Cloud of frequently used keywords": [
    {
      "description": "A cloud of popular tags, where each tag has a different size and color based on its frequency of use. The tags should be arranged in a way that creates a visually appealing and organic shape.",
      "html": "<div class=\"md:max-w-md mx-auto p-4\"><PopularTagCloud/></div>",
      "components": [
        {
          "name": "PopularTagCloud",
          "is_standalone": true,
          "description": "standalone component that contains all the popular tags",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{tags}</div>"
        },
        {
          "name": "Tag",
          "is_standalone": true,
          "description": "standalone component that represents a single popular tag",
          "html": "<a href=\"{tag_url}\" class=\"inline-block px-2 py-1 rounded {tag_color} text-lg mb-2 mr-2 hover:underline\">{tag_name} <span class=\"text-sm\">({tag_frequency})</span></a>"
        }
      ]
    }
  ],
  "Tweet input field for user input": [
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    }
  ],
  "Provider Profiles": [
    {
      "description": "The UI should display a list of provider profiles, each showing the provider's name, occupation, and rating. The profiles should be arranged in a grid, with each profile taking up the full width on mobile devices and half the width on larger screens. The grid should have a maximum of 3 columns.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><ProviderProfileList><!-- list of ProviderProfileCard components will be rendered here --></ProviderProfileList></main>",
      "components": [
        {
          "name": "ProviderProfileList",
          "is_standalone": false,
          "description": "A component taking children, containing a list of provider profiles.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of provider profiles, each showing the provider's name, specialty, and a brief description. The list should be responsive, with a grid layout on larger screens and a vertical list on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Provider Profiles</h1><ProviderList><!-- List of provider profiles will be rendered here --></ProviderList></div>",
      "components": [
        {
          "name": "ProviderList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the list of provider profiles.",
          "html": "<ul class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The Provider Profiles UI should display a list of provider profiles, including their names, images, and short descriptions. The UI should be responsive, mobile-first, and accessible.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 pb-8\"><h2 class=\"text-2xl font-bold mb-4\">Provider Profiles</h2><ProviderProfileList><ProviderProfileCard/><ProviderProfileCard/><!-- add more ProviderProfileCard components here --></ProviderProfileList></section>",
      "components": [
        {
          "name": "ProviderProfileCard",
          "is_standalone": true,
          "description": "(standalone) - a single provider profile card",
          "html": "<article class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={profile_image_url} alt={provider_name} class=\"w-24 h-24 rounded-full mx-auto mb-4\"/><h3 class=\"text-lg font-bold\">{provider_name}</h3><p class=\"text-gray-600\">{provider_description}</p></article>"
        },
        {
          "name": "ProviderProfileList",
          "is_standalone": false,
          "description": "(takes children) - a list of provider profile cards",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Card-based layout": [
    {
      "description": "The UI should be a responsive grid of cards, with each card containing a title, description, and optional image. The cards should be stacked vertically on mobile devices and arranged in a grid on larger screens.",
      "html": "<div class=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\"><Card/><Card/><Card/><!-- Add more cards here --></div>",
      "components": [
        {
          "name": "Card",
          "is_standalone": true,
          "description": "standalone component, represents a single card in the grid",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><CardBody/></div>"
        },
        {
          "name": "CardBody",
          "is_standalone": true,
          "description": "standalone component, represents the body of a card (contains title, description, and image)",
          "html": "<div><h5 class=\"text-lg\">{card_title}</h5><p class=\"text-gray-600\">{card_description}</p>{card_image && <img src={card_image} alt={card_title} class=\"w-full mb-4\"/>}</div>"
        }
      ]
    }
  ],
  "API Explorer: Discover APIs and endpoints": [
    {
      "description": "The UI should display a sidebar with a list of APIs, and a main content area that shows the details of the selected API, including its endpoints.",
      "html": "<div class=\"flex h-screen\"><ApiSidebar/><div class=\"flex-1 p-4\"><ApiDetails><h1>{api_name}</h1><p>{api_description}</p><ul><!-- list of endpoints --><ApiEndpoint/><ApiEndpoint/><!-- ... --></ul></ApiDetails></div></div>",
      "components": [
        {
          "name": "ApiSidebar",
          "is_standalone": true,
          "description": "a standalone component that displays a list of APIs",
          "html": "<nav class=\"w-64 p-4 bg-gray-100\"><h2>APIs</h2><ul><!-- list of APIs --><li><a href=\"#\" class=\"block p-2\">{api_name}</a></li><!-- ... --></ul></nav>"
        },
        {
          "name": "ApiDetails",
          "is_standalone": false,
          "description": "a component that takes children, displaying details about a selected API",
          "html": "<div>{children}</div>"
        },
        {
          "name": "ApiEndpoint",
          "is_standalone": true,
          "description": "a standalone component that displays a single API endpoint",
          "html": "<li class=\"p-2 border-b border-gray-200\"><h3>{endpoint_method} {endpoint_path}</h3><p>{endpoint_description}</p></li>"
        }
      ]
    }
  ],
  "Customer reviews section": [
    {
      "description": "The UI should display a list of customer reviews, each with a rating, name, review text, and date. The reviews should be responsive, with a mobile-first design, and accessible for screen readers.",
      "html": "<div class=\"max-w-md mx-auto my-12\"><h2 class=\"text-2xl font-bold mb-4\">Customer Reviews</h2><ReviewSection><ReviewCard/><ReviewCard/><!-- Add more ReviewCard components here --></ReviewSection></div>",
      "components": [
        {
          "name": "ReviewCard",
          "is_standalone": true,
          "description": "A standalone component representing a single customer review.",
          "html": "<div class=\"bg-white p-4 mb-4 shadow-md\"><div class=\"flex items-center mb-2\"><span class=\"text-lg font-bold\">{rating}/ 5</span><span class=\"text-gray-500 ml-2\">{date}</span></div><p class=\"text-lg\">{review_text}</p><p class=\"text-gray-500\">— {name}</p></div>"
        },
        {
          "name": "ReviewSection",
          "is_standalone": false,
          "description": "A component that takes child `ReviewCard` components and displays them in a list.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "E-commerce product filter": [
    {
      "description": "The UI should be a responsive, mobile-first filter component that allows users to filter products by category, price range, and rating. It should be accessible and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Filter Products</h2><div class=\"flex flex-wrap -mx-2 mb-4\"><FilterCategory/><FilterPriceRange/><FilterRating/></div><div class=\"flex justify-end mb-4\"><FilterButton/><FilterClearButton/></div></div>",
      "components": [
        {
          "name": "FilterCategory",
          "is_standalone": true,
          "description": "(standalone): A dropdown list of categories to filter by.",
          "html": "<div class=\"w-full md:w-1/3 px-2 mb-4\"><label for=\"category\" class=\"block text-sm font-bold mb-2\">Category</label><select id=\"category\" class=\"block w-full p-2\"><option value=\"\">Select a category</option>{category_options} </select></div>"
        },
        {
          "name": "FilterPriceRange",
          "is_standalone": true,
          "description": "(standalone): A range slider to filter by price.",
          "html": "<div class=\"w-full md:w-1/3 px-2 mb-4\"><label for=\"price-range\" class=\"block text-sm font-bold mb-2\">Price Range</label><input type=\"range\" id=\"price-range\" min=\"{min_price}\" max=\"{max_price}\" value=\"{initial_price}\"/><p>Range: {min_price} - {max_price}</p></div>"
        },
        {
          "name": "FilterRating",
          "is_standalone": true,
          "description": "(standalone): A series of radio buttons to filter by rating.",
          "html": "<div class=\"w-full md:w-1/3 px-2 mb-4\"><label class=\"block text-sm font-bold mb-2\">Rating</label><div class=\"flex justify-between mb-2\"><input type=\"radio\" id=\"rating-1\" name=\"rating\" value=\"1\"/><label for=\"rating-1\">1 star</label></div><div class=\"flex justify-between mb-2\"><input type=\"radio\" id=\"rating-2\" name=\"rating\" value=\"2\"/><label for=\"rating-2\">2 stars</label></div><!-- repeat for 3-5 stars --></div>"
        },
        {
          "name": "FilterButton",
          "is_standalone": true,
          "description": "(standalone): A button to apply the filters.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Apply Filters</button>"
        },
        {
          "name": "FilterClearButton",
          "is_standalone": true,
          "description": "(standalone): A button to clear all filters.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Clear Filters</button>"
        }
      ]
    }
  ],
  "Map View of Locations": [
    {
      "description": "The UI should be a map view that displays multiple locations as markers on a map, with a sidebar that lists the locations. The map should be responsive and adapt to different screen sizes. The UI should be accessible and follow SEO best practices.",
      "html": "<div class=\"flex h-screen w-full\"><MapViewComponent/><LocationListComponent><!-- List of locations will be rendered here --></LocationListComponent></div>",
      "components": [
        {
          "name": "MapViewComponent",
          "is_standalone": true,
          "description": "(standalone): The main map view component that renders the map and locations.",
          "html": "<div class=\"h-full w-full md:w-2/3\"><!-- Map will be rendered here --><div id=\"map\" class=\"h-full w-full\"></div></div>"
        },
        {
          "name": "LocationListComponent",
          "is_standalone": false,
          "description": "(takes children): A list of locations in the sidebar.",
          "html": "<div class=\"h-full w-full md:w-1/3 overflow-y-auto p-4\">{children}</div>"
        },
        {
          "name": "LocationListItemComponent",
          "is_standalone": true,
          "description": "(standalone): A single location item in the list.",
          "html": "<div class=\"flex items-center py-2 border-b border-gray-200\"><span class=\"mr-2\">{location_icon}</span><span>{location_name}</span></div>"
        }
      ]
    }
  ],
  "Tweet display for individual posts": [
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet post with the user's profile picture, username, timestamp, tweet content, and a reply button.",
      "html": "<TweetPost><UserProfilePicture/><TweetContent><h2>{username}</h2><p>{tweet_content}</p><p>{timestamp}</p></TweetContent><ReplyButton/></TweetPost>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the user's profile picture.",
          "html": "<img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full\"/>"
        },
        {
          "name": "TweetContent",
          "is_standalone": false,
          "description": "Takes children component that displays the tweet content.",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "Standalone component that displays a reply button.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Reply</button>"
        },
        {
          "name": "TweetPost",
          "is_standalone": false,
          "description": "Takes children component that displays the entire tweet post.",
          "html": "<div class=\"flex mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single tweet, with a profile picture, username, handle, timestamp, text, and any media (e.g. images or videos). The design should be clean, minimal, and responsive.",
      "html": "<div class=\"flex w-full p-4 rounded-lg shadow-md bg-white\"><TweetHeader/><TweetText/><TweetMedia/><TweetFooter/></div>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "standalone, displays the profile picture, username, handle, and timestamp",
          "html": "<div class=\"flex items-center mb-2\"><img src=\"{profilePictureUrl}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-2\"/><div><span class=\"text-lg font-bold\">{username}</span><span class=\"text-gray-600\">@{handle}</span><span class=\"text-gray-600\">{timestamp}</span></div></div>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "standalone, displays the text of the tweet",
          "html": "<p class=\"text-lg\">{tweetText}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": true,
          "description": "standalone, displays any media associated with the tweet (e.g. images or videos)",
          "html": "<!-- If there is media, display it -->{mediaUrl && ( <img src={mediaUrl} alt=\"Tweet media\" class=\"w-full mb-2\"/>)}"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "standalone, displays any additional information or actions (e.g. likes, retweets, replies)",
          "html": "<div class=\"flex justify-between text-gray-600 mb-2\"><span>Likes: {likeCount}</span><span>Retweets: {retweetCount}</span><span>Replies: {replyCount}</span><!-- Add more actions here, e.g. Reply, Retweet, Like buttons --></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet in a compact, readable format. It should include the user's profile picture, username, tweet text, and timestamp. The tweet text should be the primary focus, with the user's profile picture and username secondary. The timestamp should be displayed lightly.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4 bg-white rounded shadow-md\"><Tweet><UserProfilePicture/><div class=\"flex items-center\"><Username/><Timestamp/></div><TweetText/></Tweet></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component to display the user's profile picture.",
          "html": "<img src=\"{profile_picture_url}\" alt=\"User profile picture\" class=\"w-12 h-12 rounded-full mr-2\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "standalone component to display the user's username.",
          "html": "<span class=\"text-lg font-bold\">{username}</span>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "standalone component to display the tweet text.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "Timestamp",
          "is_standalone": true,
          "description": "standalone component to display the timestamp.",
          "html": "<small class=\"text-gray-500\">{timestamp}</small>"
        },
        {
          "name": "Tweet",
          "is_standalone": false,
          "description": "takes children, a container component to display the entire tweet.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    }
  ],
  "Profile avatar dropdown": [
    {
      "description": "A responsive profile avatar dropdown with a profile picture, username, and a dropdown menu with options.",
      "html": "<nav class=\"flex justify-end\"><ProfileAvatarDropdown/></nav>",
      "components": [
        {
          "name": "ProfileAvatarDropdown",
          "is_standalone": true,
          "description": "Standalone component that contains the profile picture, username, and dropdown menu.",
          "html": "<div class=\"relative inline-block\"><img src={profile_picture_url} alt={username} class=\"h-10 w-10 rounded-full cursor-pointer\"/><span class=\"ml-2 text-sm font-medium\">{username}</span><ul class=\"absolute right-0 mt-2 w-48 bg-white rounded shadow-md\"><li><DropdownItem>Settings</DropdownItem></li><li><DropdownItem>Logout</DropdownItem></li></ul></div>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": false,
          "description": "Takes children (e.g. dropdown item text).",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\">{children}</li>"
        }
      ]
    }
  ],
  "Customer Testimonial with Profile Picture": [
    {
      "description": "The UI should display a customer testimonial with a profile picture, name, and job title. The profile picture should be circular and have a border radius. The testimonial text should be wrapped in a quote blockquote element. The name and job title should be displayed below the testimonial text.",
      "html": "<div class=\"flex justify-center mb-12\"><ProfilePicture/><div class=\"ml-4\"><TestimonialBlock><!-- testimonial text will be inserted here --></TestimonialBlock><NameAndJobTitle/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone): displays a circular profile picture",
          "html": "<img src={profile_picture_url} alt={customer_name} class=\"w-24 h-24 rounded-full border-2 border-gray-300 object-cover\"/>"
        },
        {
          "name": "TestimonialBlock",
          "is_standalone": false,
          "description": "(takes children): displays a blockquote with the testimonial text",
          "html": "<blockquote class=\"text-lg font-light\">{children}</blockquote>"
        },
        {
          "name": "NameAndJobTitle",
          "is_standalone": true,
          "description": "(standalone): displays the customer's name and job title",
          "html": "<p class=\"text-lg font-bold\">{customer_name}</p><p class=\"text-gray-600\">{job_title}</p>"
        }
      ]
    }
  ],
  "Download and Installation Tools": [
    {
      "description": "The UI should be a responsive, mobile-first design that displays a list of download and installation tools with their respective logos, names, and brief descriptions. The UI should be accessible, SEO-friendly, and well-documented.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Download and Installation Tools</h1><ToolsList><DownloadToolCard/><DownloadToolCard/><DownloadToolCard/><!-- Add more DownloadToolCard components as needed --></ToolsList></section>",
      "components": [
        {
          "name": "DownloadToolCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single download and installation tool's information.",
          "html": "<div class=\"flex gap-4 mb-4 p-4 border border-gray-200 rounded\"><img src=\"{tool_logo_url}\" alt=\"{tool_name} logo\" class=\"w-12 h-12\"><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{tool_name}</h2><p class=\"text-gray-600\">{tool_description}</p><a href=\"{tool_download_url}\" class=\"text-blue-600 hover:text-blue-800\">Download</a></div></div>"
        },
        {
          "name": "ToolsList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of `DownloadToolCard` components.",
          "html": "<ul class=\"list-none mb-0 p-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Attendee list display": [
    {
      "description": "The UI should display a list of attendees with their names, job titles, and company names. The list should be responsive, mobile-first, and accessible. Each attendee's information should be displayed in a clear and readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Attendee List</h2><AttendeeList><!-- attendee cards will be inserted here --></AttendeeList></div>",
      "components": [
        {
          "name": "AttendeeList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of attendees.",
          "html": "<ul class=\"list-none mb-0\"><!-- attendee cards will be inserted here -->{children}</ul>"
        }
      ]
    }
  ],
  "Featured Image Slider": [
    {
      "description": "The UI should display a responsive, mobile-first, and accessible featured image slider that showcases a collection of images with navigation controls. The slider should be visually appealing, with a clear and prominent display of the images.",
      "html": "<div class=\"max-w-md mx-auto mt-4 rounded-md overflow-hidden\"><FeaturedImageSlider><!-- Image slides will be inserted here --><ImageSlide/><ImageSlide/><ImageSlide/></FeaturedImageSlider><ImageSliderNavigation/></div>",
      "components": [
        {
          "name": "ImageSlide",
          "is_standalone": true,
          "description": "A standalone component representing a single image slide in the slider.",
          "html": "<div class=\"w-full h-48 md:h-64 xl:h-80 bg-cover bg-center\" style={{ backgroundImage: `url(${imageUrl})` }}/>"
        },
        {
          "name": "ImageSliderNavigation",
          "is_standalone": true,
          "description": "A standalone component providing navigation controls (previous and next buttons) for the slider.",
          "html": "<div class=\"flex justify-between mt-2 md:mt-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Previous</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Next</button></div>"
        },
        {
          "name": "FeaturedImageSlider",
          "is_standalone": false,
          "description": "A container component that takes children (ImageSlide components) and renders the slider with navigation controls.",
          "html": "<div class=\"relative\">{children} <ImageSliderNavigation/></div>"
        }
      ]
    }
  ],
  "Compose email button with dropdown menu": [
    {
      "description": "The UI should be a button that says \"Compose Email\" with a dropdown arrow on the right side. When clicked, a dropdown menu should appear below the button, containing a list of email composition options.",
      "html": "<div class=\"flex justify-center\"><ComposeEmailButton/></div><div class=\"absolute\"><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ComposeEmailButton",
          "is_standalone": true,
          "description": "Standalone component that displays the \"Compose Email\" button with a dropdown arrow.",
          "html": "<button class=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\">Compose Email <span class=\"ml-2 text-lg\">{caret_down_icon}</span></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "Component that takes children, representing the dropdown menu items.",
          "html": "<ul class=\"bg-white shadow-md py-1\">{children}</ul>"
        }
      ]
    }
  ],
  "Reporting Dashboard: Generate data insights": [
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays various data insights in a clear and organized manner. The dashboard should have a top navigation bar, a sidebar with navigation options, and a main content area that displays different charts, graphs, and data tables.",
      "html": "<div class=\"flex h-screen\"><NavigationBar/><div class=\"flex-1 overflow-y-hidden\"><Sidebar/><main class=\"p-4\"><DataSection><DataCard>{children}</DataCard><DataCard>{children}</DataCard></DataSection><DataSection><DataTable><thead><tr><th>{column1_header}</th><th>{column2_header}</th></tr></thead><tbody><tr><td>{data_point1}</td><td>{data_point2}</td></tr></tbody></DataTable></DataSection></main></div></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "- Standalone - Displays the top navigation bar with a dashboard title and navigation links.",
          "html": "<nav class=\"bg-white border-b border-gray-200\"><div class=\"container mx-auto p-4\"><h1 class=\"text-lg\">{dashboard_title}</h1><ul class=\"flex justify-end\"><li><a href=\"#\" class=\"text-gray-600\">{nav_link1}</a></li><li><a href=\"#\" class=\"text-gray-600\">{nav_link2}</a></li></ul></div></nav>"
        },
        {
          "name": "Sidebar",
          "is_standalone": true,
          "description": "- Standalone - Displays the sidebar with navigation options.",
          "html": "<aside class=\"w-64 bg-white border-r border-gray-200\"><nav class=\"px-4\"><ul><li><a href=\"#\" class=\"block py-2\">{sidebar_link1}</a></li><li><a href=\"#\" class=\"block py-2\">{sidebar_link2}</a></li></ul></nav></aside>"
        },
        {
          "name": "DataCard",
          "is_standalone": false,
          "description": "- Takes children - Displays a single data insight, such as a chart or graph, with a title and description.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg\">{title}</h2><p>{description}</p>{children}</div>"
        },
        {
          "name": "DataSection",
          "is_standalone": false,
          "description": "- Takes children - Displays a section of data insights, such as a row of charts or graphs.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        },
        {
          "name": "DataTable",
          "is_standalone": false,
          "description": "- Takes children - Displays a table of data with column headers and rows.",
          "html": "<table class=\"w-full\">{children}</table>"
        }
      ]
    }
  ],
  "Breadcrumb Separator Icon": [
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    }
  ],
  "Testimonial Author Name": [
    {
      "description": "The UI should display a testimonial author's name in a readable font size, with a slight emphasis on the text to distinguish it from the testimonial content.",
      "html": "<div class=\"flex flex-wrap mb-4\"><p class=\"text-lg text-gray-600\"><TestimonialAuthorName/></p></div>",
      "components": [
        {
          "name": "TestimonialAuthorName",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"font-bold\">{authorName}</span>"
        }
      ]
    }
  ],
  "Blog Post Comment Count": [
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    }
  ],
  "Profile completion progress": [
    {
      "description": "The UI should display a circular progress bar indicating the user's profile completion progress, along with a percentage text.",
      "html": "<!-- Profile completion progress container --><div class=\"flex justify-center mb-4\"><!-- Profile completion progress bar --><ProfileCompletionProgressBar/><!-- Profile completion percentage text --><ProfileCompletionPercentageText/></div>",
      "components": [
        {
          "name": "ProfileCompletionProgressBar",
          "is_standalone": true,
          "description": "standalone component that displays a circular progress bar.",
          "html": "<!-- Circular progress bar --><div class=\"w-20 h-20 border-4 border-gray-300 border-solid rounded-full\"><!-- Progress indicator --><div class=\"w-20 h-20 bg-blue-500 rounded-full\" style={{ width: `${progressPercentage}%` }}></div></div>"
        },
        {
          "name": "ProfileCompletionPercentageText",
          "is_standalone": true,
          "description": "standalone component that displays the percentage text.",
          "html": "<!-- Percentage text --><p class=\"text-lg text-gray-600\">{completion_percentage}%</p>"
        }
      ]
    }
  ],
  "Alert/Banner Notifications": [
    {
      "description": "The UI should display a notification banner that appears at the top of the page, with a close button on the right side. The banner should be dismissible and have a colored background to draw attention. The notification text should be clear and readable.",
      "html": "<header><NotificationBanner/></header>",
      "components": [
        {
          "name": "NotificationBanner",
          "is_standalone": true,
          "description": "(standalone) - the notification banner component",
          "html": "<div class=\"bg-orange-500 text-white py-2 px-4 rounded\"><p>{notification_text}</p><CloseButton/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "(standalone) - the close button component",
          "html": "<button class=\"text-white hover:text-orange-200 transition duration-300 ease-in-out\">&times;</button>"
        }
      ]
    }
  ],
  "Community Forum and Chat Tools": [
    {
      "description": "The UI should be a responsive community forum and chat tools page that allows users to discuss topics, ask questions, and interact with each other through a chat system. The page should be divided into two main sections: a forum section that displays a list of discussion topics, and a chat section that allows users to send messages to each other.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Community Forum</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-2/3 xl:w-2/3 px-4 mb-4\"><ForumTopicList/></div><div class=\"w-full md:w-1/3 xl:w-1/3 px-4 mb-4\"><h2 class=\"text-2xl font-bold mb-4\">Chat</h2><ChatMessageList/><ChatInput/></div></div></div>",
      "components": [
        {
          "name": "ForumTopicList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ForumTopicCard** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        },
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "A standalone component that allows users to input and send messages.",
          "html": "<form class=\"flex mb-4\"><input type=\"text\" class=\"w-full p-2 pl-10 text-gray-700\" placeholder=\"Type a message...\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button></form>"
        },
        {
          "name": "ChatMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a single chat message, including the sender's username and message text.",
          "html": "<div class=\"mb-4 p-4 border border-gray-200 rounded\"><p class=\"text-gray-600\">{username}</p><p class=\"text-gray-600\">{messageText}</p></div>"
        },
        {
          "name": "ChatMessageList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ChatMessage** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        }
      ]
    }
  ],
  "Banner displaying alerts, messages, or announcements": [
    {
      "description": "The UI should be a horizontal banner that displays alerts, messages, or announcements. It should be visually prominent, with a noticeable background color and text color. The banner should be responsive, meaning it should adapt to different screen sizes and devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AlertBanner/></div>",
      "components": [
        {
          "name": "AlertBanner",
          "is_standalone": true,
          "description": "A standalone component that displays an alert, message, or announcement.",
          "html": "<div class=\"bg-orange-500 text-white p-4 rounded\"><p>{alert_message}</p><button class=\"bg-white text-orange-500 hover:bg-orange-700 hover:text-white transition duration-300 ease-in-out py-2 px-4 rounded\">Dismiss</button></div>"
        }
      ]
    }
  ],
  "Footer Newsletter Form": [
    {
      "description": "A simple footer newsletter form with a label, input field, and submit button, all aligned horizontally and responsive.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-4 pb-10\"><div class=\"max-w-md mx-auto p-4\"><FooterNewsletterForm/></div></footer>",
      "components": [
        {
          "name": "FooterNewsletterForm",
          "is_standalone": true,
          "description": "Standalone component that contains the newsletter form.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><FormLabel/><FormInput/><FormSubmitButton/></div>"
        },
        {
          "name": "FormLabel",
          "is_standalone": true,
          "description": "Standalone component that displays the label text.",
          "html": "<label class=\"text-sm font-bold mb-2\" for=\"newsletter-email\">Stay updated with our newsletter</label>"
        },
        {
          "name": "FormInput",
          "is_standalone": true,
          "description": "Standalone component that renders an input field.",
          "html": "<input type=\"email\" id=\"newsletter-email\" class=\"w-full pl-2 py-2 text-sm text-gray-700\" placeholder=\"your@email.com\"/>"
        },
        {
          "name": "FormSubmitButton",
          "is_standalone": true,
          "description": "Standalone component that renders a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    }
  ],
  "Zoom/Magnify Effects": [
    {
      "description": "The UI should display an image with a zoom/magnify effect when hovered or focused. The image should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ImageZoomView/></div>",
      "components": [
        {
          "name": "ImageZoomView",
          "is_standalone": true,
          "description": "a standalone component that displays an image with a zoom/magnify effect.",
          "html": "<img src={image_url} alt={image_alt} class=\"w-full h-auto transition duration-300 ease-in-out hover:scale-110 focus:scale-110\"/>"
        }
      ]
    },
    {
      "description": "The UI should display an image with a zoom effect on hover, where the image is magnified to a larger size.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-8\"><ImageZoom/></div>",
      "components": [
        {
          "name": "ImageZoom",
          "is_standalone": true,
          "description": "A standalone component that displays an image with a zoom effect on hover.",
          "html": "<div class=\"relative overflow-hidden\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-full object-cover transition duration-300 ease-in-out\"/><div class=\"absolute top-0 left-0 w-full h-full opacity-0 hover:opacity-100 transition duration-300 ease-in-out\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-full object-cover scale-150\"/></div></div>"
        }
      ]
    }
  ],
  "Account settings page": [
    {
      "description": "The UI should be a responsive, mobile-first settings page that displays the user's account information and allows them to update their settings. The page should have a simple and clean design, with clear headings and labels for each setting.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><AccountHeader/><section class=\"mb-8\"><h2 class=\"text-lg font-bold mb-4\">Account Settings</h2><SettingSection><SettingItem><label for=\"username\">Username:</label><input type=\"text\" id=\"username\" value={username}/></SettingItem><SettingItem><label for=\"email\">Email:</label><input type=\"email\" id=\"email\" value={email}/></SettingItem></SettingSection><SettingSection><SettingItem><label for=\"password\">Password:</label><input type=\"password\" id=\"password\" value={password}/></SettingItem><SettingItem><label for=\"language\">Language:</label><select id=\"language\"><option value=\"en\">English</option><option value=\"es\">Spanish</option><!-- more options --></select></SettingItem></SettingSection><UpdateButton/></section></div>",
      "components": [
        {
          "name": "AccountHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the user's account information (e.g. name, email)",
          "html": "<header class=\"flex justify-between mb-4\"><h1>{username}</h1><p>{email}</p></header>"
        },
        {
          "name": "SettingSection",
          "is_standalone": false,
          "description": "a component that takes children, representing a group of related settings",
          "html": "<section class=\"mb-4\">{children}</section>"
        },
        {
          "name": "SettingItem",
          "is_standalone": false,
          "description": "a component that takes children, representing a single setting (e.g. password, language)",
          "html": "<div class=\"mb-2\">{children}</div>"
        },
        {
          "name": "UpdateButton",
          "is_standalone": true,
          "description": "a standalone component that triggers an update action",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Update Settings</button>"
        }
      ]
    }
  ],
  "Responsive Image Breakpoints": [
    {
      "description": "The UI should display a responsive image that adapts to different screen sizes and breakpoints.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><ResponsiveImage/></div>",
      "components": [
        {
          "name": "ResponsiveImage",
          "is_standalone": true,
          "description": "(standalone component)",
          "html": "<img src=\"{image_url}\" class=\"w-full h-auto rounded-lg mx-auto md:w-3/4 md:h-64 lg:w-1/2 lg:h-80 xl:w-1/3 xl:h-96\" alt=\"{image_alt_text}\"/>"
        }
      ]
    }
  ],
  "Company Address Map": [
    {
      "description": "The UI should display a map with a pin indicating the company's location, along with the company's address and contact information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CompanyAddressMap/></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "a standalone component that displays the map and company information.",
          "html": "<div class=\"flex flex-col md:flex-row\"><MapPin/><AddressInfo/></div>"
        },
        {
          "name": "MapPin",
          "is_standalone": true,
          "description": "a standalone component that displays the pin on the map.",
          "html": "<div class=\"w-12 h-12 bg-red-500 rounded-full flex justify-center items-center\"><i class=\"fas fa-map-pin text-white text-2xl\"></i></div>"
        },
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the company's address and contact information.",
          "html": "<div class=\"pl-4 md:pl-0\"><h2 class=\"text-lg\">{company_name}</h2><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a marker indicating the company's address. The map should be responsive and adapt to different screen sizes. Below the map, the company's address should be displayed in a readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><CompanyAddressMap/><AddressDisplay><h2>Company Address</h2><p>{company_street}</p><p>{company_city}, {company_state} {company_zip}</p></AddressDisplay></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "A standalone component that displays a map with a marker indicating the company's address.",
          "html": "<div class=\"w-full mb-4\"><iframe src={`https://maps.google.com/maps?q={company_latitude},{company_longitude}&z=15&output=embed`} frameborder=\"0\" width=\"100%\" height=\"300\"></iframe></div>"
        },
        {
          "name": "AddressDisplay",
          "is_standalone": false,
          "description": "A component that takes children to display the company's address in a readable format.",
          "html": "<div class=\"text-lg leading-relaxed\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a company address along with a map to help users locate the company. The address should be clearly visible, and the map should be interactive, allowing users to zoom in and out.",
      "html": "<div class=\"mx-auto p-4 max-w-md\"><CompanyAddressMap><CompanyAddress/><Map/></CompanyAddressMap></div>",
      "components": [
        {
          "name": "CompanyAddress",
          "is_standalone": true,
          "description": "(standalone): Displays the company address.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg font-bold\">{company_name}</h5><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        },
        {
          "name": "Map",
          "is_standalone": true,
          "description": "(standalone): Displays an interactive map.",
          "html": "<div class=\"h-64 w-full rounded-md overflow-hidden\"><!-- map will be rendered here --></div>"
        },
        {
          "name": "CompanyAddressMap",
          "is_standalone": false,
          "description": "(takes children): A container component that holds the company address and map components.",
          "html": "<div class=\"flex flex-col md:flex-row\"><div class=\"md:w-1/2 md:pr-4\">{children} </div><div class=\"md:w-1/2 md:pl-4\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a map showing the company's address, along with the address written out in text. The map should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AddressMap/><AddressText/></div>",
      "components": [
        {
          "name": "AddressMap",
          "is_standalone": true,
          "description": "Standalone component that displays a map with a marker at the company's address.",
          "html": "<div class=\"w-full h-64 mb-4\"><iframe src={`https://maps.google.com/maps?q={company_address}&t=&z=13&ie=UTF8&iwloc=&output=embed`} class=\"w-full h-full\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe></div>"
        },
        {
          "name": "AddressText",
          "is_standalone": true,
          "description": "Standalone component that displays the company's address in text.",
          "html": "<div class=\"text-lg mb-2\">{company_street}, {company_city}, {company_state} {company_zip}</div>"
        }
      ]
    }
  ],
  "About us section": [
    {
      "description": "The \"About Us\" section should have a header with the title \"About Us\", a paragraph of text that describes the company, and a photo of the company's team. The section should be responsive, with the text and image layout adjusting for different screen sizes.",
      "html": "<section class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 mb-6 lg:mb-12\"><AboutUsContainer><AboutUsHeader/><AboutUsText/><AboutUsImage/></AboutUsContainer></section>",
      "components": [
        {
          "name": "AboutUsHeader",
          "is_standalone": true,
          "description": "standalone component that displays the title \"About Us\"",
          "html": "<h2 class=\"text-2xl lg:text-3xl font-bold mb-4\">{about_us_title}</h2>"
        },
        {
          "name": "AboutUsText",
          "is_standalone": true,
          "description": "standalone component that displays a paragraph of text",
          "html": "<p class=\"text-lg lg:text-xl mb-6\">{about_us_text}</p>"
        },
        {
          "name": "AboutUsImage",
          "is_standalone": true,
          "description": "standalone component that displays an image",
          "html": "<img src={about_us_image_src} alt=\"About Us team photo\" class=\"w-full mb-4 lg:mb-6\"/>"
        },
        {
          "name": "AboutUsContainer",
          "is_standalone": false,
          "description": "component that takes children, wraps the `AboutUsHeader`, `AboutUsText`, and `AboutUsImage` components",
          "html": "<div class=\"flex flex-col md:flex-row\">{children}</div>"
        }
      ]
    }
  ],
  "Currency and Language Switchers": [
    {
      "description": "The UI should display two dropdown menus, one for currency and one for language, side by side. The menus should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><CurrencySwitcher/><LanguageSwitcher/></div>",
      "components": [
        {
          "name": "CurrencySwitcher",
          "is_standalone": true,
          "description": "a standalone component that displays a dropdown menu of currencies.",
          "html": "<div class=\"relative inline-block\"><button class=\"bg-white hover:bg-gray-100 text-gray-800 py-2 px-4 border border-gray-400 rounded\">{selectedCurrency} <span class=\"caret ml-2\"></span></button><ul class=\"absolute bg-white border border-gray-400 z-10\">{currencies.map((currency, index) =>( <li key={index}><DropdownItem>{currency}</DropdownItem></li>))} </ul></div>"
        },
        {
          "name": "LanguageSwitcher",
          "is_standalone": true,
          "description": "a standalone component that displays a dropdown menu of languages.",
          "html": "<div class=\"relative inline-block ml-4\"><button class=\"bg-white hover:bg-gray-100 text-gray-800 py-2 px-4 border border-gray-400 rounded\">{selectedLanguage} <span class=\"caret ml-2\"></span></button><ul class=\"absolute bg-white border border-gray-400 z-10\">{languages.map((language, index) =>( <li key={index}><DropdownItem>{language}</DropdownItem></li>))} </ul></div>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": false,
          "description": "a component that takes a child (the option text) and is used by both `CurrencySwitcher` and `LanguageSwitcher`.",
          "html": "<li><a href=\"#\" class=\"block py-2 px-4 hover:bg-gray-100\">{children}</a></li>"
        }
      ]
    }
  ],
  "Call-to-Action (CTA) Button Section": [
    {
      "description": "The UI should have a prominent call-to-action (CTA) button section with a bold headline, a brief description, and a prominent CTA button that encourages the user to take action.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6\"><HeadlineComponent/><DescriptionComponent/><CTAButtonComponent/></section>",
      "components": [
        {
          "name": "HeadlineComponent",
          "is_standalone": true,
          "description": "Standalone component that displays a bold headline text.",
          "html": "<h2 class=\"text-3xl font-bold\">{headline_text}</h2>"
        },
        {
          "name": "DescriptionComponent",
          "is_standalone": true,
          "description": "Standalone component that displays a brief descriptive text.",
          "html": "<p class=\"text-lg\">{description_text}</p>"
        },
        {
          "name": "CTAButtonComponent",
          "is_standalone": true,
          "description": "Standalone component that displays a prominent CTA button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a prominent call-to-action (CTA) button section that encourages users to take a specific action. The section should be full-width, with a bold background color, and a contrasting CTA button that stands out. The section should be responsive, with the button size and spacing adjusting based on screen size.",
      "html": "<section class=\"relative pt-12 pb-20 lg:pt-20 lg:pb-32\"><div class=\"container max-w-md mx-auto p-4 lg:p-8\"><CTASection/></div></section>",
      "components": [
        {
          "name": "CTASection",
          "is_standalone": true,
          "description": "- standalone component that contains the entire CTA section",
          "html": "<div class=\"bg-orange-500 text-white p-4 lg:p-8\"><h2 class=\"text-2xl lg:text-3xl\">{headline}</h2><p class=\"text-lg lg:text-xl\">{description}</p><CTAButton/></div>"
        },
        {
          "name": "CTAButton",
          "is_standalone": true,
          "description": "- standalone component that represents the call-to-action button",
          "html": "<button class=\"bg-white hover:bg-gray-200 text-orange-500 font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    }
  ],
  "Footer Copyright Symbol": [
    {
      "description": "The UI should be a simple footer with a copyright symbol and the year.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><Footer/></footer>",
      "components": [
        {
          "name": "Footer",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<p class=\"text-sm text-gray-600\">{year} &copy; {site_name}</p>"
        }
      ]
    }
  ],
  "Testimonial Quote Text": [
    {
      "description": "The UI should display a testimonial quote with a quote text, an author name, and an optional occupation and organization. The quote text should be displayed prominently, and the author information should be displayed below the quote text.",
      "html": "<div class=\"flex flex-col items-center\"><TestimonialQuote/><AuthorInfo><AuthorName/><AuthorDetails/></AuthorInfo></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-serif italic mb-4\">{quote_text}</blockquote>"
        },
        {
          "name": "AuthorInfo",
          "is_standalone": false,
          "description": "Component that displays the author name, occupation, and organization. Takes children.",
          "html": "<div class=\"flex items-center mb-2\">{children}</div>"
        },
        {
          "name": "AuthorName",
          "is_standalone": true,
          "description": "Standalone component that displays the author name.",
          "html": "<p class=\"text-base font-bold\">{author_name}</p>"
        },
        {
          "name": "AuthorDetails",
          "is_standalone": true,
          "description": "Standalone component that displays the occupation and organization.",
          "html": "<p class=\"text-sm text-gray-600\">{occupation} at {organization}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial quote text with a LARGE font size, light color text on a darker background, and have some padding around it to make it stand out.",
      "html": "<div class=\"bg-neutral-800 p-4 mb-4\"><TestimonialQuoteText/></div>",
      "components": [
        {
          "name": "TestimonialQuoteText",
          "is_standalone": true,
          "description": "standalone component that displays the testimonial quote text.",
          "html": "<quote class=\"text-3xl font-bold text-white\">{testimonial_text}</quote>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a person, with their name and occupation below the quote. The quote should be the main focus, with the person's information secondary. The UI should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><Testimonial><QuoteText/><PersonInfo/></Testimonial></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "standalone, displays the quote text",
          "html": "<blockquote class=\"text-lg font-bold mb-4\">\"{quote_text}\"</blockquote>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "standalone, displays the person's name and occupation",
          "html": "<div class=\"text-gray-600\"><p class=\"font-bold\">{person_name}</p><p class=\"text-sm\">{person_occupation}</p></div>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "takes children, contains the quote text and person information",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Suggested products carousel": [
    {
      "description": "A horizontal carousel displaying multiple products with images, names, and prices. The carousel should be responsive and have navigation arrows on both sides.",
      "html": "<div class=\"flex justify-center\"><CarouselNavigation/><Carousel><ProductCard/><ProductCard/><ProductCard/><!-- Add more ProductCard components here --></Carousel><CarouselNavigation/></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single product with image, name, and price.",
          "html": "<div class=\"bg-white shadow-md rounded\"><img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/><div class=\"p-4\"><h5 class=\"text-lg\">{product_name}</h5><p class=\"text-gray-600\">{price}</p></div></div>"
        },
        {
          "name": "CarouselNavigation",
          "is_standalone": true,
          "description": "(standalone): Displays navigation arrows for the carousel.",
          "html": "<button class=\"bg-white border-none text-lg hover:text-gray-600 transition duration-300\">{navigation_arrow}</button>"
        },
        {
          "name": "Carousel",
          "is_standalone": false,
          "description": "(takes children): Container for the carousel, holds multiple **ProductCard** components.",
          "html": "<div class=\"flex overflow-x-hidden\">{children}</div>"
        }
      ]
    }
  ],
  "Thread/List View of Topics": [
    {
      "description": "The UI should be a list view of topics, with each topic displaying a title, description, and metadata such as author and timestamp. The list should be responsive, with a card-like design on larger screens and a condensed list on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TopicList><TopicCard/><TopicCard/><!-- repeat for each topic --></TopicList></div>",
      "components": [
        {
          "name": "TopicCard",
          "is_standalone": true,
          "description": "Standalone component that displays a single topic.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-2 mb-4\"><h2 class=\"text-lg\">{topicTitle}</h2><p class=\"text-gray-600\">{topicDescription}</p><p class=\"text-sm text-gray-500\">By {authorName} on {timestamp}</p></div>"
        },
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "Component that takes children (multiple `TopicCard`s) and displays them in a list.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of topics in a threaded view, with each topic showing the topic title, author, and timestamp. The list should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><h1>Topic List</h1><ul class=\"list-none mb-4\"><TopicThread/><!-- more TopicThread components will be rendered here --></ul></div>",
      "components": [
        {
          "name": "TopicThread",
          "is_standalone": true,
          "description": "standalone component to display a single topic thread",
          "html": "<li class=\"mb-4\"><Topic/><TopicReplies/></li>"
        },
        {
          "name": "Topic",
          "is_standalone": true,
          "description": "standalone component to display a single topic",
          "html": "<div class=\"flex justify-between mb-2\"><TopicTitle/><TopicMeta/></div>"
        },
        {
          "name": "TopicTitle",
          "is_standalone": true,
          "description": "standalone component to display the topic title",
          "html": "<h2 class=\"text-lg\">{topic_title}</h2>"
        },
        {
          "name": "TopicMeta",
          "is_standalone": true,
          "description": "standalone component to display the topic author and timestamp",
          "html": "<p class=\"text-gray-600\">{author_name} | {timestamp}</p>"
        },
        {
          "name": "TopicReplies",
          "is_standalone": true,
          "description": "standalone component to display the replies to a topic",
          "html": "<ul class=\"list-none pl-4\"><Reply/><!-- more Reply components will be rendered here --></ul>"
        },
        {
          "name": "Reply",
          "is_standalone": true,
          "description": "standalone component to display a single reply",
          "html": "<li class=\"mb-2\"><TopicTitle/><TopicMeta/></li>"
        }
      ]
    },
    {
      "description": "The UI should be a scrollable list of topics, with each topic displaying its title, description, and some metadata (e.g., author, date created). The list should be ordered by most recent topic first. On smaller screens, the list should be single-column, and on larger screens, it should be a multi-column layout.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-3xl font-bold\">Topics</h1><TopicList><!-- List of TopicCard components will be rendered here --></TopicList></div>",
      "components": [
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "(takes children): a container component that renders a list of `TopicCard` components.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of topics in a thread/list view, with each topic showing its title, description, and metadata such as the number of replies and views. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Topic List</h1><TopicList><TopicCard/><TopicCard/><!-- more topic cards here --></TopicList></div>",
      "components": [
        {
          "name": "TopicCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single topic.",
          "html": "<div class=\"flex flex-col p-4 mb-4 bg-white shadow-md rounded\"><h2 class=\"text-lg font-bold\">{topic_title}</h2><p class=\"text-gray-600\">{topic_description}</p><div class=\"text-gray-500 text-sm\"><span>{replies_count} replies</span><span class=\"mx-2\">|</span><span>{views_count} views</span></div></div>"
        },
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "A component that takes children (topic cards) and displays them in a list.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    }
  ],
  "Review/comment sections": [
    {
      "description": "The UI should display a list of reviews/comments, each with a user's name, avatar, rating (e.g., 5-star), and comment text. The section should be responsive, mobile-first, and accessible.",
      "html": "<section class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h2 class=\"text-lg md:text-2xl lg:text-3xl font-bold mb-4\">Reviews</h2><ul class=\"list-none mb-4\"><li><ReviewCard/></li><!-- Add more review cards here --></ul></section>",
      "components": [
        {
          "name": "ReviewCard",
          "is_standalone": true,
          "description": "a standalone component that represents a single review/comment.",
          "html": "<article class=\"flex mb-4\"><ReviewAvatar/><div class=\"ml-4\"><h3 class=\"text-lg\">{userName}</h3><ReviewRating/><ReviewText/></div></article>"
        },
        {
          "name": "ReviewAvatar",
          "is_standalone": true,
          "description": "a standalone component that displays a user's avatar.",
          "html": "<img src={avatarUrl} alt={userName} class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "ReviewRating",
          "is_standalone": true,
          "description": "a standalone component that displays a rating (e.g., 5-star).",
          "html": "<div class=\"flex mb-2\">{rating} <i class=\"fas fa-star text-yellow-400\"/></div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "a standalone component that displays the comment text.",
          "html": "<p class=\"text-gray-600\">{commentText}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a list of reviews/comments with the reviewer's name, rating, and comment text. The reviewer's name and rating should be displayed above the comment text. The UI should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ReviewList><ReviewCard/><ReviewCard/><!-- Add more ReviewCard components here --></ReviewList></div>",
      "components": [
        {
          "name": "ReviewCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single review/comment.",
          "html": "<div class=\"bg-white p-4 rounded-md shadow-md mb-4\"><h4 class=\"text-lg font-bold\">{reviewerName}</h4><div class=\"flex justify-between mb-2\"><span class=\"text-sm text-gray-500\">{rating}/5</span><span class=\"text-sm text-gray-500\">{datePosted}</span></div><p class=\"text-sm\">{commentText}</p></div>"
        },
        {
          "name": "ReviewList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of reviews/comments.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of reviews/comments with the reviewer's name, review/comment text, and a rating (if applicable). The design should be clean, simple, and easy to read.",
      "html": "<div class=\"max-w-lg mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Reviews and Comments</h2><ReviewList><ReviewCard/><ReviewCard/><!-- Add more ReviewCard components here --></ReviewList></div>",
      "components": [
        {
          "name": "ReviewCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single review/comment.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-lg font-bold\">{reviewer_name}</h3><p>{review_text}</p><!-- Rating system (if applicable) --><div class=\"flex justify-center mb-2\">{rating}/5 </div></div>"
        },
        {
          "name": "ReviewList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `ReviewCard` components) and displays them in a list.",
          "html": "<ul class=\"list-none m-0 p-0\">{children}</ul>"
        }
      ]
    }
  ],
  "State/Province/Country Selects": [
    {
      "description": "A responsive form section with three connected selects for state/province, country, and an additional optional input for zip/postal code. The selects should be mobile-friendly and have accessible labels.",
      "html": "<form><LocationForm><CountrySelect/><StateSelect/><ZipInput/></LocationForm></form>",
      "components": [
        {
          "name": "CountrySelect",
          "is_standalone": true,
          "description": "Standalone, renders a select element for country selection",
          "html": "<div class=\"flex flex-col mb-4\"><label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"country\">Country</label><select class=\"block w-full pl-10 text-sm text-gray-700\" id=\"country\" name=\"country\">{countryOptions} </select></div>"
        },
        {
          "name": "StateSelect",
          "is_standalone": true,
          "description": "Standalone, renders a select element for state/province selection, dependent on the country selection",
          "html": "<div class=\"flex flex-col mb-4\"><label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"state_province\">State/Province</label><select class=\"block w-full pl-10 text-sm text-gray-700\" id=\"state_province\" name=\"state_province\">{stateProvinceOptions} </select></div>"
        },
        {
          "name": "ZipInput",
          "is_standalone": true,
          "description": "Standalone, renders an input element for zip/postal code",
          "html": "<div class=\"flex flex-col mb-4\"><label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"zip_postal_code\">Zip/Postal Code</label><input class=\"block w-full pl-10 text-sm text-gray-700\" id=\"zip_postal_code\" name=\"zip_postal_code\" type=\"text\" inputmode=\"numeric\"/></div>"
        },
        {
          "name": "LocationForm",
          "is_standalone": false,
          "description": "Component that takes children, renders a div containing the country, state/province, and zip/postal code inputs",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should consist of three dropdown selects for selecting a country, state/province, and a label to indicate the selection. The dropdowns should be stacked vertically, with the country dropdown first, followed by the state/province dropdown, and finally the label. The UI should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex flex-col w-full md:w-1/2 lg:w-1/3 xl:w-1/4 mx-auto p-4\"><CountrySelect/><StateProvinceSelect/><SelectionLabel>{selected_country} {selected_state_province}\n</SelectionLabel></div>",
      "components": [
        {
          "name": "CountrySelect",
          "is_standalone": true,
          "description": "Standalone component that renders a dropdown select for selecting a country.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"\">Select a country</option><!-- list of countries here --><option value=\"{country_code}\">{country_name}</option></select>"
        },
        {
          "name": "StateProvinceSelect",
          "is_standalone": true,
          "description": "Standalone component that renders a dropdown select for selecting a state or province, depending on the country selected.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"\">Select a state or province</option><!-- list of states or provinces here --><option value=\"{state_province_code}\">{state_province_name}</option></select>"
        },
        {
          "name": "SelectionLabel",
          "is_standalone": false,
          "description": "Component that takes children, rendering a label that indicates the selected country and state/province.",
          "html": "<p class=\"text-sm text-gray-600\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a form with three dropdown selects for state/province, country, and an optional \"Other\" text input.",
      "html": "<form class=\"max-w-md mx-auto p-4\"><LocationForm><StateProvinceSelect/><CountrySelect/><OtherInput/></LocationForm></form>",
      "components": [
        {
          "name": "StateProvinceSelect",
          "is_standalone": true,
          "description": "standalone, a dropdown select for state/province",
          "html": "<select class=\"block w-full p-2 pl-10 text-gray-700\" id=\"state_province\"><option value=\"\">{select_state_province}</option><!-- options will be populated dynamically --></select>"
        },
        {
          "name": "CountrySelect",
          "is_standalone": true,
          "description": "standalone, a dropdown select for country",
          "html": "<select class=\"block w-full p-2 pl-10 text-gray-700\" id=\"country\"><option value=\"\">{select_country}</option><!-- options will be populated dynamically --></select>"
        },
        {
          "name": "OtherInput",
          "is_standalone": true,
          "description": "standalone, a text input for an optional \"Other\" value",
          "html": "<input type=\"text\" class=\"block w-full p-2 pl-10 text-gray-700\" id=\"other\" placeholder=\"Other\"/>"
        },
        {
          "name": "LocationForm",
          "is_standalone": false,
          "description": "takes children, a form containing the state/province, country, and optional \"Other\" input",
          "html": "<div class=\"flex flex-wrap -mx-3 mb-6\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive form with three select inputs for state/province, country, and a label for each select input. The form should be accessible and SEO-friendly.",
      "html": "<form class=\"max-w-md mx-auto p-4\"><div class=\"mb-4\"><FormLabel>State/Province:</FormLabel><StateSelect/></div><div class=\"mb-4\"><FormLabel>Country:</FormLabel><CountrySelect/></div></form>",
      "components": [
        {
          "name": "StateSelect",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\" id={state_id}><option value=\"\">Select a state/province</option><!-- dynamically generated options -->{states}</select>"
        },
        {
          "name": "CountrySelect",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\" id={country_id}><option value=\"\">Select a country</option><!-- dynamically generated options -->{countries}</select>"
        },
        {
          "name": "FormLabel",
          "is_standalone": false,
          "description": "takes children",
          "html": "<label class=\"block mb-2 text-sm text-gray-700\">{children}</label>"
        }
      ]
    }
  ],
  "Featured Story with Large Header Text": [
    {
      "description": "The UI should display a featured story with a large header text, accompanied by a brief description and a call-to-action button. The design should be responsive, mobile-first, and accessible.",
      "html": "<section class=\"container mx-auto p-4 md:p-6 lg:p-12\"><div class=\"flex justify-center mb-4\"><FeaturedStoryHeader/></div><StoryDescription/><div class=\"text-center\"><CallToActionButton/></div></section>",
      "components": [
        {
          "name": "FeaturedStoryHeader",
          "is_standalone": true,
          "description": "Standalone, displays the large header text.",
          "html": "<h1 class=\"text-3xl md:text-4xl lg:text-5xl\">{story_title}</h1>"
        },
        {
          "name": "StoryDescription",
          "is_standalone": true,
          "description": "Standalone, displays a brief description of the story.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{story_description}</p>"
        },
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "Standalone, displays a call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{call_to_action_text}</button>"
        }
      ]
    }
  ],
  "Post Feed List: Displays a list of user posts": [
    {
      "description": "A scrollable list of posts with each post displaying the user's profile picture, username, post content, and timestamp. The list should be responsive, with each post stretching across the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold\">Post Feed</h2><ul class=\"divide-y divide-gray-200\"><PostListItem/><PostListItem/><!-- More post list items --></ul></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component for each post item in the list.",
          "html": "<li class=\"py-4\"><UserProfilePicture/><div class=\"flex-1 ml-4\"><PostContent/><PostMetadata/></div></li>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "A standalone component for displaying a user's profile picture.",
          "html": "<img src=\"{user_profile_picture_url}\" alt=\"User Profile Picture\" class=\"w-10 h-10 rounded-full mr-2\"/>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component for displaying the content of a post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "A standalone component for displaying the timestamp and other metadata of a post.",
          "html": "<p class=\"text-sm text-gray-600\">{timestamp} by <span class=\"font-bold\">{username}</span></p>"
        }
      ]
    }
  ],
  "Like/Comment/Share Buttons": [
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with a slight gap between each button.",
      "html": "<div class=\"flex justify-between items-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-thumbs-up\"/>{like_count}</button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-comment\"/>{comment_count}</button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-share\"/>{share_count}</button>"
        }
      ]
    },
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with each button having an icon and a count for likes/comments/shares.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "(standalone): represents the like button with a like count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{like_icon}</span><span>{like_count} likes</span></button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "(standalone): represents the comment button with a comment count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{comment_icon}</span><span>{comment_count} comments</span></button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "(standalone): represents the share button with a share count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{share_icon}</span><span>{share_count} shares</span></button>"
        }
      ]
    }
  ],
  "Product Price Tag": [
    {
      "description": "The UI should display a product price tag with the product name, price, and a \"Sale\" badge if the product is on sale.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceTag/></div>",
      "components": [
        {
          "name": "ProductPriceTag",
          "is_standalone": true,
          "description": "(standalone): Displays the product price tag information.",
          "html": "<div class=\"bg-gray-100 p-2 rounded\"><ProductName/><ProductPrice/>{is_on_sale ? <SaleBadge/>: null}</div>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name.",
          "html": "<p class=\"text-lg font-bold\">{product_name}</p>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "(standalone): Displays the product price.",
          "html": "<p class=\"text-lg font-bold text-gray-600\">{price}${price_amount}</p>"
        },
        {
          "name": "SaleBadge",
          "is_standalone": true,
          "description": "(standalone): Displays a \"Sale\" badge if the product is on sale.",
          "html": "<span class=\"bg-red-500 text-white px-2 py-1 rounded text-sm\">Sale</span>"
        }
      ]
    }
  ],
  "Flashcards for learning": [
    {
      "description": "The UI should display a flashcard with a term on one side and a definition on the other. The flashcard should be responsive, with a mobile-first design that adapts to different screen sizes. The UI should also be accessible, with clear typography and sufficient color contrast.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><Flashcard/></div>",
      "components": [
        {
          "name": "Flashcard",
          "is_standalone": true,
          "description": "Standalone component that renders a flashcard with a term and definition.",
          "html": "<div class=\"flex flex-col md:flex-row items-center justify-center h-screen\"><TermSide>{term}</TermSide><DefinitionSide>{definition}</DefinitionSide><!-- toggle button to flip the flashcard --><button class=\"absolute top-0 right-0 mt-2 mr-2 p-2 text-gray-500 hover:text-gray-800\">Flip </button></div>"
        },
        {
          "name": "TermSide",
          "is_standalone": false,
          "description": "Takes children (the term text).",
          "html": "<div class=\"p-4 bg-yellow-100 text-lg\">{children}</div>"
        },
        {
          "name": "DefinitionSide",
          "is_standalone": false,
          "description": "Takes children (the definition text).",
          "html": "<div class=\"p-4 bg-white text-lg\">{children}</div>"
        }
      ]
    }
  ],
  "Footer that remains fixed at the bottom of the page as users scroll": [
    {
      "description": "The UI should have a footer that remains fixed at the bottom of the page as users scroll. The footer should have a darker background color and contain some basic information like copyright text and social media links.",
      "html": "<!-- Main page content --><main class=\"h-screen overflow-y-auto\"><!-- page content here --></main><!-- Fixed footer --><Footer/>",
      "components": [
        {
          "name": "Footer",
          "is_standalone": true,
          "description": "standalone component that contains copyright text and social media links.",
          "html": "<footer class=\"fixed bottom-0 left-0 w-full h-20 bg-gray-800 text-gray-200\"><div class=\"container mx-auto p-4\"><p>&copy; {current_year} {website_name}. All rights reserved.</p><ul class=\"flex justify-center\"><li><a href={facebook_url} target=\"_blank\" rel=\"noopener noreferrer\">Facebook</a></li><li><a href={twitter_url} target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a></li><li><a href={instagram_url} target=\"_blank\" rel=\"noopener noreferrer\">Instagram</a></li></ul></div></footer>"
        }
      ]
    },
    {
      "description": "The footer should be a fixed bar that remains at the bottom of the page, regardless of how much the user scrolls. It should have a dark background color and white text, with a subtle shadow to distinguish it from the rest of the page.",
      "html": "<body><!-- main content area --><main>...</main><!-- fixed footer at the bottom --><Footer/></body>",
      "components": [
        {
          "name": "Footer",
          "is_standalone": true,
          "description": "standalone component that contains the footer content",
          "html": "<footer class=\"fixed bottom-0 left-0 right-0 bg-gray-800 text-white p-4 shadow-md\"><nav class=\"flex justify-center\"><ul class=\"list-none m-0 p-0 flex flex-wrap justify-center\"><li class=\"mr-6\"><a href=\"#\" class=\"text-white hover:text-gray-300\">Link 1</a></li><li class=\"mr-6\"><a href=\"#\" class=\"text-white hover:text-gray-300\">Link 2</a></li><li><a href=\"#\" class=\"text-white hover:text-gray-300\">Link 3</a></li></ul></nav><p class=\"text-sm text-center\">{copyright_text}</p></footer>"
        }
      ]
    }
  ],
  "Blog Post Author Name": [
    {
      "description": "The UI should display the author's name in a readable format, possibly with a link to the author's profile or bio page. The text should be easily readable on various devices and screen sizes.",
      "html": "<a href=\"{authorProfileUrl}\" class=\"text-lg font-medium text-gray-900 hover:underline\"><AuthorName/></a>",
      "components": [
        {
          "name": "AuthorName",
          "is_standalone": true,
          "description": "A standalone component that displays the author's name.",
          "html": "<span class=\"capitalize\">{authorName}</span>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name in a readable font size, with a slight emphasis to indicate that it's the author's name. The text should be dark-colored on a light background.",
      "html": "<div class=\"flex justify-center mb-4\"><AuthorName/></div>",
      "components": [
        {
          "name": "AuthorName",
          "is_standalone": true,
          "description": "standalone component that displays the author's name.",
          "html": "<p class=\"text-lg font-bold\">{authorName}</p>"
        }
      ]
    }
  ],
  "Profile Picture and Header Image": [
    {
      "description": "A profile page with a profile picture and a header image.",
      "html": "<div class=\"flex flex-col w-full h-screen\"><UserProfileHeader><h1>{username}</h1><p>{bio}</p></UserProfileHeader><UserProfilePicture/><!-- rest of the profile page content --></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component, displays a circular image.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-48 h-48 rounded-full\"/>"
        },
        {
          "name": "UserProfileHeader",
          "is_standalone": false,
          "description": "Takes children, displays a header image with overlaid text.",
          "html": "<div class=\"h-64 bg-cover bg-center\" style={{ backgroundImage: `url(${header_image_url})` }}><div class=\"flex flex-col items-center justify-center h-full\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should have a profile picture and a header image that takes up the full width of the screen. On mobile, the profile picture should be circular and centered, with the header image below it. On larger screens, the profile picture should be circular and aligned to the left, with the header image taking up the rest of the width.",
      "html": "<div class=\"flex flex-col md:flex-row\"><UserProfilePicture/><HeaderImage/></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone): A circular profile picture.",
          "html": "<img class=\"w-32 h-32 rounded-full mx-auto md:mx-0 md:mr-4\" src={profile_picture_url} alt={profile_picture_alt_text}/>"
        },
        {
          "name": "HeaderImage",
          "is_standalone": true,
          "description": "(standalone): A header image that takes up the full width of the screen.",
          "html": "<img class=\"w-full h-64 object-cover\" src={header_image_url} alt={header_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should display a profile picture and a header image, responsive and accessible on various devices.",
      "html": "<UserProfileHeader><ProfilePictureComponent/><HeaderImageComponent/></UserProfileHeader>",
      "components": [
        {
          "name": "ProfilePictureComponent",
          "is_standalone": true,
          "description": "Standalone, displays a profile picture.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full object-cover\"/>"
        },
        {
          "name": "HeaderImageComponent",
          "is_standalone": true,
          "description": "Standalone, displays a header image.",
          "html": "<img src={header_image_url} alt=\"Header Image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "UserProfileHeader",
          "is_standalone": false,
          "description": "Takes children, contains the profile picture and header image.",
          "html": "<header class=\"flex flex-col items-center py-4\">{children}</header>"
        }
      ]
    }
  ],
  "Post Reply and Editing Tools": [
    {
      "description": "The UI should display a post reply section with editing tools. The editing tools should include a text area for typing a response, a submit button to post the reply, and editing tools such as bold, italic, and link. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostReply/><EditingTools/><ReplySubmitButton/></div>",
      "components": [
        {
          "name": "PostReply",
          "is_standalone": true,
          "description": "standalone, includes a text area and a submit button",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"reply\" name=\"reply\" placeholder=\"Type your reply...\"></textarea>"
        },
        {
          "name": "EditingTools",
          "is_standalone": true,
          "description": "standalone, includes buttons for bold, italic, and link",
          "html": "<div class=\"flex justify-between p-2\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Bold </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Italic </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Link </button></div>"
        },
        {
          "name": "ReplySubmitButton",
          "is_standalone": true,
          "description": "standalone, a submit button to post the reply",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post Reply</button>"
        }
      ]
    },
    {
      "description": "The UI should display a post reply input field with editing tools. The editing tools include a bold button, an italic button, and a link button. The UI should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"flex flex-col\"><PostReplyInput/><EditingTools/></div>",
      "components": [
        {
          "name": "PostReplyInput",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Type your reply...\"></textarea>"
        },
        {
          "name": "EditingTools",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"flex justify-between mb-2\"><BoldButton/><ItalicButton/><LinkButton/></div>"
        },
        {
          "name": "BoldButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 py-1 px-2 rounded\"><i class=\"fas fa-bold\">{bold_icon}</i></button>"
        },
        {
          "name": "ItalicButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 py-1 px-2 rounded\"><i class=\"fas fa-italic\">{italic_icon}</i></button>"
        },
        {
          "name": "LinkButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 py-1 px-2 rounded\"><i class=\"fas fa-link\">{link_icon}</i></button>"
        }
      ]
    }
  ],
  "Ability to edit text or data directly within its context on the page": [
    {
      "description": "The UI should have a text area that can be edited directly on the page. When the user clicks on the text, it should become an editable text area with a blue border. The user can then edit the text, and when they click away, the text should be updated.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><TextEdit><EditableText/></TextEdit></div>",
      "components": [
        {
          "name": "EditableText",
          "is_standalone": true,
          "description": "(standalone): A text area that can be edited directly on the page.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700 bg-white border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\" rows=\"4\">{text}</textarea>"
        },
        {
          "name": "TextEdit",
          "is_standalone": false,
          "description": "(takes children): A container that wraps the editable text and provides editing functionality.",
          "html": "<div class=\"relative\"><div class=\"absolute top-0 right-0 p-2 text-sm text-gray-500 hover:text-gray-900 transition duration-300 ease-in-out\"><!-- editing icons, e.g. a checkmark and a cancel icon --></div>{children}</div>"
        }
      ]
    }
  ],
  "Unobtrusive JavaScript": [
    {
      "description": "A simple webpage with a heading, a paragraph of text, and a button that changes the text when clicked.",
      "html": "<div class=\"h-screen flex flex-col justify-center items-center\"><PageHeader/><PageContent><p id=\"text\">{initial_text}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Click me!</button></PageContent></div>",
      "components": [
        {
          "name": "PageHeader",
          "is_standalone": true,
          "description": "standalone",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold\">Unobtrusive JavaScript</h1></header>"
        },
        {
          "name": "PageContent",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Image slider": [
    {
      "description": "The UI should be a responsive image slider that displays multiple images in a carousel-like format. It should be accessible and have a mobile-first design.",
      "html": "<div class=\"container mx-auto p-4\"><ImageSlider><ImageSlide/><ImageSlide/><ImageSlide/></ImageSlider></div>",
      "components": [
        {
          "name": "ImageSlide",
          "is_standalone": true,
          "description": "A standalone component that displays a single image.",
          "html": "<div class=\"w-full h-64 overflow-hidden rounded-lg\"><img src={image_url} alt={image_alt} class=\"w-full h-full object-cover object-center\"/></div>"
        },
        {
          "name": "ImageSlider",
          "is_standalone": false,
          "description": "A component that takes children (multiple **ImageSlide** components) and renders them in a carousel-like format.",
          "html": "<div class=\"relative flex justify-center\"><button class=\"absolute left-0 z-10\">‹</button><div class=\"flex overflow-x-auto snap-x\">{children} </div><button class=\"absolute right-0 z-10\">›</button></div>"
        }
      ]
    }
  ],
  "Dropdown Menu Title": [
    {
      "description": "The Dropdown Menu Title UI should be a dropdown menu title element that displays a title and a dropdown icon, indicating that there are more options available. The UI should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"flex items-center justify-between\"><DropdownMenuTitle/><DropdownIcon/></div>",
      "components": [
        {
          "name": "DropdownMenuTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title and dropdown icon.",
          "html": "<p class=\"text-lg font-bold\">{menu_title}</p>"
        },
        {
          "name": "DropdownIcon",
          "is_standalone": true,
          "description": "a standalone component that displays the dropdown icon.",
          "html": "<span class=\"material-icons\">arrow_drop_down</span>"
        }
      ]
    },
    {
      "description": "The UI should be a dropdown menu title that displays a title and an arrow icon indicating that it can be expanded to show more options. When clicked, the dropdown menu will display a list of options.",
      "html": "<div class=\"flex justify-between items-center py-2 pl-4 pr-2\"><DropdownMenuTitle/><DropdownMenuArrow/></div>",
      "components": [
        {
          "name": "DropdownMenuTitle",
          "is_standalone": true,
          "description": "(standalone): A dropdown menu title component that displays a title and an arrow icon.",
          "html": "<h5 class=\"text-lg font-bold\">{title}</h5>"
        },
        {
          "name": "DropdownMenuArrow",
          "is_standalone": true,
          "description": "(standalone): An arrow icon that indicates the dropdown menu can be expanded.",
          "html": "<i class=\"fas fa-chevron-down text-lg\"></i>"
        }
      ]
    }
  ],
  "Single post with text, image, and comments": [
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A single post displayed on a webpage. The post consists of a text description, an image, and a list of comments. The text description is displayed above the image, and the comments are listed below the image.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostHeader/><PostImage/><CommentList><Comment/><!-- additional Comment components... --></CommentList></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the post's text description.",
          "html": "<h2 class=\"text-lg font-bold\">{post_text}</h2>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "a standalone component that displays the post's image.",
          "html": "<img src={image_url} alt=\"Post image\" class=\"w-full mb-4\"/>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "a component that takes children (Comment components).",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "Comment",
          "is_standalone": true,
          "description": "a standalone component that displays a single comment.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><p class=\"text-sm\">{comment_text}</p><p class=\"text-xs text-gray-500\">{comment_username}</p></li>"
        }
      ]
    },
    {
      "description": "A single post UI should display a header with a post title, a container for the post text, an image, and a section for comments. The UI should be responsive, with the image and comments section stacked on mobile and side-by-side on larger screens.",
      "html": "<article class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><PostHeader/><PostText/><PostImage/><CommentSection><!-- comment list will be rendered here --></CommentSection></article>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the post title",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold\">{postTitle}</h1></header>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "(standalone) - Displays the post text",
          "html": "<p class=\"text-lg\">{postText}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "(standalone) - Displays the post image",
          "html": "<img src={imageUrl} alt={imageAlt} class=\"w-full mb-4\"/>"
        },
        {
          "name": "CommentSection",
          "is_standalone": false,
          "description": "(takes children) - Displays a list of comments",
          "html": "<section class=\"mb-4\"><h2 class=\"text-2xl font-bold\">Comments</h2><ul class=\"list-none mb-4\">{children} <!-- comment list will be rendered here --></ul></section>"
        }
      ]
    }
  ],
  "Contact list with avatar and online status": [
    {
      "description": "A list of contacts with their avatars and online status indicators. The list should be responsive, with each contact item taking up the full width on mobile devices and arranging horizontally on larger screens.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Contacts</h2><ul class=\"flex flex-wrap justify-center\"><ContactItem/><ContactItem/><ContactItem/></ul></main>",
      "components": [
        {
          "name": "ContactItem",
          "is_standalone": true,
          "description": "A standalone component representing a single contact.",
          "html": "<li class=\"flex items-center mb-4\"><Avatar/><div class=\"ml-2\"><p class=\"text-lg\">{contact_name}</p><OnlineStatus/></div></li>"
        },
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "A standalone component representing the avatar image of a contact.",
          "html": "<img src={avatar_url} alt=\"{contact_name}'s avatar\" class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "OnlineStatus",
          "is_standalone": true,
          "description": "A standalone component indicating the online status of a contact.",
          "html": "<span class={`text-${online_status === 'online' ? 'green-500' : 'gray-500'}`}>{online_status === 'online' ? 'Online' : 'Offline'}</span>"
        }
      ]
    }
  ],
  "Call to Action Link Text": [
    {
      "description": "A call-to-action (CTA) link with customizable text and styling.",
      "html": "<div class=\"flex justify-center mb-4\"><CallToActionLink/></div>",
      "components": [
        {
          "name": "CallToActionLink",
          "is_standalone": true,
          "description": "A standalone component that renders a CTA link with customizable text.",
          "html": "<a href=\"{cta_url}\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</a>"
        }
      ]
    },
    {
      "description": "A call to action link text that is responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<a href={link_href} class=\"text-sm md:text-base lg:text-lg font-bold text-primary-600 hover:text-primary-800\"><CallToActionLink/></a>",
      "components": [
        {
          "name": "CallToActionLink",
          "is_standalone": true,
          "description": "A standalone component that renders a call to action link text.",
          "html": "<span>{call_to_action_text}</span>"
        }
      ]
    }
  ],
  "Mission statement display": [
    {
      "description": "A clean and simple section that prominently displays the mission statement of an organization, with a background image and a call-to-action button.",
      "html": "<section class=\"relative h-screen\"><MissionStatementBackground/><div class=\"absolute inset-0 flex items-center justify-center\"><MissionStatementContent><!-- mission statement content goes here --></MissionStatementContent><CallToActionButton/></div></section>",
      "components": [
        {
          "name": "MissionStatementBackground",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"absolute inset-0 bg-noise bg-cover\"></div>"
        },
        {
          "name": "MissionStatementContent",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"max-w-md text-lg text-center leading-relaxed\">{children}</div>"
        },
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button>"
        }
      ]
    }
  ],
  "Download button": [
    {
      "description": "The UI should be a responsive download button that is accessible and SEO-friendly. It should be a rectangular button with a prominent download icon and a clear call-to-action (CTA) text. The button should be large enough to be easily clickable on mobile devices and have a subtle hover effect.",
      "html": "<button class=\"download-button\"><DownloadButton/></button>",
      "components": [
        {
          "name": "DownloadButton",
          "is_standalone": true,
          "description": "A standalone component that consists of a download icon and a CTA text.",
          "html": "<i class=\"fas fa-download\" aria-hidden=\"true\"></i><span>{cta_text}</span>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first button with a download icon and text that indicates the file type.",
      "html": "<button class=\"download-button\"><DownloadButton/></button>",
      "components": [
        {
          "name": "DownloadButton",
          "is_standalone": true,
          "description": "A standalone component that represents a button to download a file.",
          "html": "<span class=\"flex items-center\"><i class=\"fas fa-download text-lg mr-2\"></i><span class=\"text-sm\">{file_type}</span><span class=\"text-xs\">{file_size}</span></span>"
        }
      ]
    },
    {
      "description": "A responsive download button that is accessible and SEO-friendly. The button should be a rounded rectangle with a subtle shadow. The text should be centered and have enough padding around it. The button should change appearance on hover.",
      "html": "<div class=\"md:flex justify-center mt-4\"><DownloadButton/></div>",
      "components": [
        {
          "name": "DownloadButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full shadow-md hover:shadow-lg\">Download {download_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive download button that is accessible, SEO-friendly, and follows mobile-first principles. The button should have a blue background color, white text color, and a subtle box shadow. On hover, the button should have a slight scale effect and a darker blue background color.",
      "html": "<div class=\"max-w-md mx-auto flex justify-center\"><DownloadButton/></div>",
      "components": [
        {
          "name": "DownloadButton",
          "is_standalone": true,
          "description": "A standalone component that represents the download button.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded shadow-md hover:scale-110 transition duration-300 ease-in-out\">Download {file_name}</button>"
        }
      ]
    }
  ],
  "Product Feature Icon": [
    {
      "description": "A small icon with a brief description, indicating a key feature of a product.",
      "html": "<div class=\"flex items-center mb-4\"><FeatureIcon/><FeatureDescription/></div>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component representing a single feature icon.",
          "html": "<i class=\"fas fa-{icon_name} text-lg mr-2\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "A standalone component representing a brief description of a feature.",
          "html": "<p class=\"text-sm\">{feature_description}</p>"
        }
      ]
    }
  ],
  "Customer Review Stars": [
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    }
  ],
  "Responsive Article Layout": [
    {
      "description": "A responsive article layout with a header, image, and content area that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><div class=\"flex justify-center mb-4 md:mb-6 lg:mb-12\"><ArticleImage/></div><ArticleContent><!-- article content will be rendered here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that renders the article title and meta information.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{article_meta}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that renders the article image.",
          "html": "<img src={image_src} alt={image_alt} class=\"w-full md:w-1/2 lg:w-2/3\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children to render the article content.",
          "html": "<div class=\"prose lg:prose-lg xl:prose-xl\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive article layout with a header, image, and content sections. The layout should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><ArticleImage/><ArticleContent><!-- Article content goes here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the article title and metadata.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{author_name} - {published_date}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that displays the article image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full mb-4 md:mb-6 lg:mb-12\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children, which represents the article content.",
          "html": "<div class=\"prose lg:prose-lg\">{children}</div>"
        }
      ]
    }
  ],
  "SEO Meta Tags/Optimization": [
    {
      "description": "A basic SEO meta tags optimization setup with title, description, and keywords.",
      "html": "<head><MetaTitle/><MetaDescription/><MetaKeywords/></head>",
      "components": [
        {
          "name": "MetaTitle",
          "is_standalone": true,
          "description": "- Standalone - Displays the title of the webpage.",
          "html": "<title>{title}</title>"
        },
        {
          "name": "MetaDescription",
          "is_standalone": true,
          "description": "- Standalone - Displays the meta description of the webpage.",
          "html": "<meta name=\"description\" content=\"{description}\"/>"
        },
        {
          "name": "MetaKeywords",
          "is_standalone": true,
          "description": "- Standalone - Displays the meta keywords of the webpage.",
          "html": "<meta name=\"keywords\" content=\"{keywords}\"/>"
        }
      ]
    }
  ],
  "Related articles display": [
    {
      "description": "The UI should display a list of related articles in a compact, easily readable format. The list should be responsive, with articles displayed in a single column on mobile devices and in multiple columns on larger screens.",
      "html": "<section class=\"container max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Related Articles</h2><RelatedArticlesList><!-- list of ArticleTeaser components will be inserted here --></RelatedArticlesList></section>",
      "components": [
        {
          "name": "RelatedArticlesList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of related articles.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Featured Posts: Showcase of top articles": [
    {
      "description": "The UI should display a showcase of top articles, featuring a title, image, and short description for each article. The showcase should be responsive, with a maximum of 3 articles per row on desktop and 1 article per row on mobile.",
      "html": "<section class=\"container mx-auto p-4\"><h2>Featured Posts</h2><div class=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 gap-4\"><FeaturedPostsGrid><FeaturedPostCard/><FeaturedPostCard/><FeaturedPostCard/><!-- Add more FeaturedPostCard components here --></FeaturedPostsGrid></div></section>",
      "components": [
        {
          "name": "FeaturedPostCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single featured post.",
          "html": "<article class=\"bg-white rounded-lg shadow-md p-4\"><img src=\"{post_image}\" alt=\"{post_title}\" class=\"w-full h-48 object-cover rounded-t-lg\"/><h3 class=\"text-lg font-bold\">{post_title}</h3><p>{post_description}</p><a href=\"{post_url}\" class=\"text-blue-600 hover:text-blue-900\">Read more</a></article>"
        },
        {
          "name": "FeaturedPostsGrid",
          "is_standalone": false,
          "description": "A component that takes children (`FeaturedPostCard` components) and displays them in a grid layout.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-3 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "JSON Data Visualization": [
    {
      "description": "The UI should display a hierarchical representation of the JSON data, with collapsible sections for objects and arrays. Each key-value pair should be displayed with the key on the left and the value on the right. The UI should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><JsonViewer><!-- JSON data visualization will be rendered here --></JsonViewer></div>",
      "components": [
        {
          "name": "JsonViewer",
          "is_standalone": false,
          "description": "The top-level component that renders the JSON data visualization. This component takes children.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        },
        {
          "name": "JsonObject",
          "is_standalone": false,
          "description": "Renders a single JSON object with its key-value pairs. This component takes children.",
          "html": "<div class=\"flex flex-wrap justify-between mb-2\"><span class=\"text-gray-600\">{key}</span><div class=\"ml-2\">{children}</div></div>"
        },
        {
          "name": "JsonArray",
          "is_standalone": false,
          "description": "Renders a single JSON array with its elements. This component takes children.",
          "html": "<ul class=\"list-none mb-2\">{children}</ul>"
        },
        {
          "name": "KeyValue",
          "is_standalone": true,
          "description": "Renders a single key-value pair. This component is standalone.",
          "html": "<div class=\"flex flex-wrap justify-between mb-2\"><span class=\"text-gray-600\">{key}</span><span class=\"ml-2\">{value}</span></div>"
        }
      ]
    }
  ],
  "Skeleton Screens/Loading": [
    {
      "description": "A loading UI with a loading animation and a set of skeleton screens for a list of items. The loading animation is a simple rotating wheel and the skeleton screens display a set of rectangles with a slight animation.",
      "html": "<div class=\"flex justify-center mt-20\"><LoadingIndicator/><SkeletonList><SkeletonScreen/><SkeletonScreen/><SkeletonScreen/></SkeletonList></div>",
      "components": [
        {
          "name": "LoadingIndicator",
          "is_standalone": true,
          "description": "a standalone component that displays a rotating wheel",
          "html": "<div class=\"inline-block\"><div class=\"animate-spin h-8 w-8 border-2 border-gray-50 rounded-full border-t-2 border-t-gray-200\"><!-- rotating wheel animation --></div></div>"
        },
        {
          "name": "SkeletonScreen",
          "is_standalone": true,
          "description": "a standalone component that displays a rectangle that animates to simulate loading",
          "html": "<div class=\"bg-gray-100 animate-pulse h-12 w-64 rounded-lg mt-2\"><!-- animated rectangle --></div>"
        },
        {
          "name": "SkeletonList",
          "is_standalone": false,
          "description": "a component that takes children, which are a set of `SkeletonScreen` components",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Leaderboards and Rankings": [
    {
      "description": "The UI should display a leaderboard that shows rankings of players or teams, along with their points, wins, and losses. The leaderboard should be responsive, mobile-first, and accessible, with a clean and modern design.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><LeaderboardHeader/><table class=\"w-full\"><tbody><RankingRow><PlayerInfo/><StatColumn/><StatColumn/><StatColumn/></RankingRow><!-- Repeat RankingRow for each ranking --></tbody></table></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the header of the leaderboard with column titles.",
          "html": "<thead class=\"bg-gray-100\"><tr><th class=\"px-4 py-2\">Rank</th><th class=\"px-4 py-2\">Player/Team</th><th class=\"px-4 py-2\">Points</th><th class=\"px-4 py-2\">Wins</th><th class=\"px-4 py-2\">Losses</th></tr></thead>"
        },
        {
          "name": "RankingRow",
          "is_standalone": false,
          "description": "(takes children) - Displays a single ranking row with player/team information and stats.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "PlayerInfo",
          "is_standalone": true,
          "description": "(standalone) - Displays the player/team name and avatar.",
          "html": "<td class=\"px-4 py-2\"><img src=\"{avatar_url}\" alt=\"{player_name}\" class=\"w-8 h-8 rounded-full mr-2\"/><span class=\"text-lg\">{player_name}</span></td>"
        },
        {
          "name": "StatColumn",
          "is_standalone": true,
          "description": "(standalone) - Displays a single stat column (e.g., points, wins, losses).",
          "html": "<td class=\"px-4 py-2 text-center\">{stat_value}</td>"
        }
      ]
    },
    {
      "description": "A simple leaderboard and ranking system that displays a table with usernames, rankings, and scores.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><RankingTable><LeaderboardHeader/><!-- Leaderboard rows will be rendered here --></RankingTable></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the header of the leaderboard table.",
          "html": "<thead><tr><th class=\"text-left\">Rank</th><th class=\"text-left\">Username</th><th class=\"text-right\">Score</th></tr></thead>"
        },
        {
          "name": "RankingTable",
          "is_standalone": false,
          "description": "A component that takes children and displays the entire leaderboard table.",
          "html": "<div class=\"overflow-x-auto\"><table class=\"w-full\">{children} </table></div>"
        }
      ]
    }
  ],
  "Discussion Forums and Comments": [
    {
      "description": "A discussion forum with a list of comments and a form to add new comments. Each comment should display the user's name, the comment text, and a timestamp. The UI should have a clean and modern design, with adequate spacing and clear typography.",
      "html": "<!-- The main discussion forum container --><div class=\"max-w-md mx-auto p-4\"><DiscussionForum><CommentList><!-- List of comments will be rendered here --><CommentCard/><CommentCard/><!-- ... --></CommentList><CommentForm/></DiscussionForum></div>",
      "components": [
        {
          "name": "CommentCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single comment with user name, comment text, and timestamp.",
          "html": "<div class=\"flex gap-2 mb-4\"><img src=\"{user_avatar_url}\" alt=\"User Avatar\" class=\"w-10 h-10 rounded-full\"/><div class=\"flex-1\"><h5 class=\"text-lg font-bold\">{username}</h5><p>{comment_text}</p><p class=\"text-sm text-gray-500\">{timestamp}</p></div></div>"
        },
        {
          "name": "CommentForm",
          "is_standalone": true,
          "description": "(standalone): A form to add a new comment.",
          "html": "<form class=\"flex gap-2 mb-4\"><input type=\"text\" placeholder=\"Add a comment...\" class=\"flex-1 p-2\"/><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4\">Comment</button></form>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of comments.",
          "html": "<!-- This component will render a list of CommentCards --><div class=\"space-y-4\">{children}</div>"
        },
        {
          "name": "DiscussionForum",
          "is_standalone": false,
          "description": "(takes children): The main container for the discussion forum.",
          "html": "<!-- This component will render the entire discussion forum UI --><div class=\"rounded-lg overflow-hidden shadow-md\">{children}</div>"
        }
      ]
    }
  ],
  "Spinner/Loading Animations": [
    {
      "description": "The spinner/loading animation UI should be a circular loading indicator that fills up as the loading progress increases. It should be responsive, mobile-first, and accessible. The animation should be smooth and continuous.",
      "html": "<div class=\"flex justify-center\"><SpinnerComponent/></div>",
      "components": [
        {
          "name": "SpinnerComponent",
          "is_standalone": true,
          "description": "A standalone component that displays the circular loading indicator.",
          "html": "<div class=\"w-12 h-12 border-4 border-gray-200 border-solid rounded-full animate-spin\"><div class=\"w-full h-full border-4 border-gray-200 border-solid rounded-full\">{progress_bar}</div></div>"
        }
      ]
    }
  ],
  "Video sharing buttons for social media": [
    {
      "description": "A horizontal row of social media buttons to share a video, with each button displaying the logo of the respective platform (e.g. Facebook, Twitter, LinkedIn, etc.).",
      "html": "<div class=\"flex justify-center mb-4\"><VideoShareButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/></VideoShareButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone) - a single button for a specific social media platform",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{platform_logo_url}\" alt=\"{platform_name} logo\" class=\"w-8 h-8 rounded-full hover:opacity-75\"/></a>"
        },
        {
          "name": "VideoShareButtons",
          "is_standalone": false,
          "description": "(takes children) - a container for the social media buttons",
          "html": "<div class=\"flex space-x-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a row of social media buttons that allow users to share a video. The buttons should be responsive, mobile-friendly, and easily accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaButtonGroup><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more buttons as needed --></SocialMediaButtonGroup></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): A single button for a specific social media platform.",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"bg-{brand_color} hover:bg-{brand_hover_color} text-white font-bold py-2 px-4 rounded\"><img src=\"{icon_url}\" alt=\"{platform_name} icon\" class=\"w-4 h-4 mr-2\">{platform_name}</a>"
        },
        {
          "name": "SocialMediaButtonGroup",
          "is_standalone": false,
          "description": "(takes children): A container that holds multiple `SocialMediaButton` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a horizontal row of social media sharing buttons for a video, with each button representing a different platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><SocialMediaShareBar><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- add more social media buttons here --></SocialMediaShareBar></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "a standalone component representing a single social media platform's sharing button.",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{icon_url}\" alt=\"{platform_name}\" class=\"w-8 h-8 mr-2\"><span class=\"text-sm\">{platform_name}</span></a>"
        },
        {
          "name": "SocialMediaShareBar",
          "is_standalone": false,
          "description": "a component that takes children, which is the container for all social media buttons.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Booking and Payment Forms": [
    {
      "description": "The UI should be a responsive and accessible booking and payment form that allows users to easily book a service and make a payment. The form should have a clean and simple design, with clear labels and input fields, and a prominent call-to-action (CTA) button to submit the booking and payment. The UI should be optimized for mobile devices, with a mobile-first approach.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Book Your Service</h1><form><BookingForm/><PaymentForm/><SubmitButton/><ErrorMessages/></form></div>",
      "components": [
        {
          "name": "BookingForm",
          "is_standalone": true,
          "description": "A standalone component that contains the booking form fields (e.g., name, email, service selection, date, and time).",
          "html": "<div class=\"flex flex-wrap mb-4\"><label class=\"block mb-2\" for=\"name\">Name:</label><input class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"name\" type=\"text\"/><label class=\"block mb-2\" for=\"email\">Email:</label><input class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"email\" type=\"email\"/><!-- Add more form fields as needed --></div>"
        },
        {
          "name": "PaymentForm",
          "is_standalone": true,
          "description": "A standalone component that contains the payment form fields (e.g., credit card number, expiration date, and security code).",
          "html": "<div class=\"flex flex-wrap mb-4\"><label class=\"block mb-2\" for=\"card-number\">Card Number:</label><input class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"card-number\" type=\"tel\"/><label class=\"block mb-2\" for=\"expiration-date\">Expiration Date:</label><input class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"expiration-date\" type=\"month\"/><!-- Add more form fields as needed --></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "A standalone component that is used as the CTA button to submit the booking and payment.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Book and Pay</button>"
        },
        {
          "name": "ErrorMessages",
          "is_standalone": true,
          "description": "A standalone component that displays any error messages that occur during the booking and payment process.",
          "html": "<p class=\"text-red-500\">{error_message}</p>"
        }
      ]
    }
  ],
  "Featured Video Poster": [
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly video poster that displays a featured video with a play button and video title.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded-md shadow-md\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "standalone (main component)",
          "html": "<div class=\"relative mb-4\"><img src=\"{video_thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover rounded-md\"/><VideoPlayButton/><VideoTitle/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "standalone (play button)",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-3xl bg-white rounded-full p-2\"><i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play video</span></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "standalone (video title)",
          "html": "<h2 class=\"text-lg font-bold mb-2\">{video_title}</h2>"
        }
      ]
    }
  ],
  "Error message displayed within the context of a form field or input area": [
    {
      "description": "The UI should display an error message below a form field or input area, indicating that the user has entered invalid data. The error message should be accessible, responsive, and visually distinct from the rest of the form.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><label class=\"block mb-2\" for=\"input-field\">Input Field</label><input class=\"block w-full p-2 pl-10 text-sm text-gray-700\" id=\"input-field\" type=\"text\"/><FormFieldError/></div>",
      "components": [
        {
          "name": "FormFieldError",
          "is_standalone": true,
          "description": "A standalone component that displays an error message related to a form field.",
          "html": "<p class=\"text-xs text-red-600 mt-1\">{error_message}</p>"
        }
      ]
    }
  ],
  "Bus ticket booking form": [
    {
      "description": "A mobile-friendly, responsive form with fields for selecting the departure and arrival cities, travel dates, number of passengers, and a submit button.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><form><TripDetails/><PassengerCount/><SubmitButton/></form></div>",
      "components": [
        {
          "name": "TripDetails",
          "is_standalone": true,
          "description": "standalone component for selecting departure and arrival cities and travel dates.",
          "html": "<div class=\"mb-4\"><FormField><label for=\"departure-city\">Departure City:</label><select id=\"departure-city\" class=\"block w-full pl-10 text-sm text-gray-700\"><option value=\"\">Select city</option><!-- options will be populated dynamically --></select></FormField><FormField><label for=\"arrival-city\">Arrival City:</label><select id=\"arrival-city\" class=\"block w-full pl-10 text-sm text-gray-700\"><option value=\"\">Select city</option><!-- options will be populated dynamically --></select></FormField><FormField><label for=\"travel-dates\">Travel Dates:</label><input id=\"travel-dates\" type=\"text\" class=\"block w-full pl-10 text-sm text-gray-700\" placeholder=\"DD/MM/YYYY - DD/MM/YYYY\"/></FormField></div>"
        },
        {
          "name": "PassengerCount",
          "is_standalone": true,
          "description": "standalone component for selecting the number of passengers.",
          "html": "<div class=\"mb-4\"><FormField><label for=\"passenger-count\">Number of Passengers:</label><select id=\"passenger-count\" class=\"block w-full pl-10 text-sm text-gray-700\"><option value=\"1\">1</option><option value=\"2\">2</option><option value=\"3\">3</option><!-- more options can be added dynamically --></select></FormField></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone component for submitting the form.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Book Ticket</button>"
        },
        {
          "name": "FormField",
          "is_standalone": false,
          "description": "reusable component that takes a label and input field as children.",
          "html": "<div class=\"mb-4\"><label for={labelFor}>{label}</label>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should resemble a simple bus ticket booking form with input fields for passenger details, travel dates, and bus route selection. The form should be responsive, mobile-friendly, and easy to navigate.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h1 class=\"text-3xl font-bold mb-4\">Book Your Bus Ticket</h1><PassengerDetails/><TravelDetails/><BookingButton/><FormError>{error_message}</FormError></div>",
      "components": [
        {
          "name": "PassengerDetails",
          "is_standalone": true,
          "description": "(standalone): A section to input passenger details (name, email, phone number)",
          "html": "<div class=\"mb-4\"><label for=\"name\" class=\"block mb-2\">Name:</label><input type=\"text\" id=\"name\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label for=\"email\" class=\"block mb-2\">Email:</label><input type=\"email\" id=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label for=\"phone\" class=\"block mb-2\">Phone Number:</label><input type=\"tel\" id=\"phone\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "TravelDetails",
          "is_standalone": true,
          "description": "(standalone): A section to input travel dates and bus route selection",
          "html": "<div class=\"mb-4\"><label for=\"from\" class=\"block mb-2\">From:</label><input type=\"text\" id=\"from\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label for=\"to\" class=\"block mb-2\">To:</label><input type=\"text\" id=\"to\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label for=\"date\" class=\"block mb-2\">Travel Date:</label><input type=\"date\" id=\"date\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "BookingButton",
          "is_standalone": true,
          "description": "(standalone): A call-to-action button to submit the booking form",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Book Ticket</button>"
        },
        {
          "name": "FormError",
          "is_standalone": false,
          "description": "(takes children): A component to display error messages (if any)",
          "html": "<p class=\"text-red-500\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple form with fields to input passenger details, travel dates, and bus route information. It should have a clean and minimalistic design, with a responsive layout that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 pb-8 mb-4 bg-white rounded\"><h2 class=\"text-lg font-bold mb-2\">Book Your Bus Ticket</h2><form><PassengerInfo/><TravelDates/><RouteSelection/><FareDetails/><BookingButton/></form></div>",
      "components": [
        {
          "name": "PassengerInfo",
          "is_standalone": true,
          "description": "A standalone component that collects passenger details (name, email, phone number).",
          "html": "<div class=\"mb-4\"><label for=\"name\" class=\"block mb-2\">Name</label><input type=\"text\" id=\"name\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label for=\"email\" class=\"block mb-2\">Email</label><input type=\"email\" id=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label for=\"phone\" class=\"block mb-2\">Phone Number</label><input type=\"tel\" id=\"phone\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "TravelDates",
          "is_standalone": true,
          "description": "A standalone component that collects travel dates (departure and return dates).",
          "html": "<div class=\"mb-4\"><label for=\"departure_date\" class=\"block mb-2\">Departure Date</label><input type=\"date\" id=\"departure_date\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><label for=\"return_date\" class=\"block mb-2\">Return Date (optional)</label><input type=\"date\" id=\"return_date\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "RouteSelection",
          "is_standalone": true,
          "description": "A standalone component that displays a list of bus routes and allows the user to select one.",
          "html": "<div class=\"mb-4\"><label for=\"route\" class=\"block mb-2\">Select Bus Route</label><select id=\"route\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"\">Select Route</option>{route_options} </select></div>"
        },
        {
          "name": "FareDetails",
          "is_standalone": true,
          "description": "A standalone component that displays the fare details (price, currency).",
          "html": "<div class=\"mb-4\"><p>Fare: <span class=\"font-bold\">{fare_amount} {currency}</span></p></div>"
        },
        {
          "name": "BookingButton",
          "is_standalone": true,
          "description": "A standalone component that triggers the booking process.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Book Ticket</button>"
        }
      ]
    }
  ],
  "Dropdown menu that suggests options as users type into a text input field": [
    {
      "description": "The UI should be a search bar with a dropdown menu that appears below the input field as the user types. The dropdown menu should display suggested options that match the user's input. The UI should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mx-auto w-full max-w-md pt-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "Standalone component that contains the text input field and dropdown menu.",
          "html": "<div class=\"relative\"><SearchInput/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "Standalone component that is the text input field.",
          "html": "<input type=\"text\" class=\"w-full py-2 pl-10 text-sm text-gray-700\" placeholder=\"Search...\"/>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "Component that takes children (menu items) and displays them in a dropdown list.",
          "html": "<ul class=\"absolute z-10 w-full bg-white shadow-md\">{children}</ul>"
        }
      ]
    }
  ],
  "Search Input Placeholder": [
    {
      "description": "The UI should be a simple search input field with a placeholder text that says \"Search...\"",
      "html": "<div class=\"flex justify-center mx-auto max-w-md\"><SearchInput/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that renders a search input field with a placeholder text.",
          "html": "<input type=\"search\" class=\"w-full px-4 py-2 text-lg leading-tight text-gray-700 bg-gray-200 rounded-md\" placeholder=\"{placeholder_text}\"/>"
        }
      ]
    }
  ],
  "Ratings and Reviews": [
    {
      "description": "The UI should display a rating system with an average rating and the number of reviews. It should also display a list of individual reviews from users.",
      "html": "<div class=\"flex flex-col gap-4\"><RatingIndicator/><p>{review_count} reviews</p><ReviewList><ReviewItem/><!-- more ReviewItem components here --></ReviewList></div>",
      "components": [
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "Standalone component to display the average rating.",
          "html": "<div class=\"flex items-center gap-2\"><span class=\"text-xl\">{average_rating}/5</span><i class=\"fa fa-star text-yellow-500\"></i><span class=\"text-gray-500\">{rating_count} ratings</span></div>"
        },
        {
          "name": "ReviewList",
          "is_standalone": false,
          "description": "Component that takes children (individual reviews).",
          "html": "<ul class=\"list-none py-4\">{children}</ul>"
        },
        {
          "name": "ReviewItem",
          "is_standalone": true,
          "description": "Standalone component to display a single review.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><div class=\"flex items-center justify-between\"><div><span class=\"text-lg\">{reviewer_name}</span><span class=\"text-sm text-gray-500\">{review_date}</span></div><div><i class=\"fa fa-star text-yellow-500\"></i><span class=\"text-sm\">{rating}/5</span></div></div><p class=\"text-sm text-gray-600\">{review_text}</p></li>"
        }
      ]
    }
  ],
  "Rating and Review Systems": [
    {
      "description": "The UI should display a rating system with 5 stars, allowing users to select a rating from 1 to 5. Below the rating system, there should be a text area for users to leave a review. The review section should also display the overall rating and the total number of reviews.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12 bg-white shadow-md rounded\"><RatingSystem/><ReviewSection><ReviewInput/><ReviewSummary/></ReviewSection></div>",
      "components": [
        {
          "name": "RatingSystem",
          "is_standalone": true,
          "description": "Standalone component that displays the 5-star rating system.",
          "html": "<div class=\"flex justify-center mb-4\">{stars}.map((star, index) =>( <i class={`cursor-pointer ${index <= rating ? 'text-yellow-400' : 'text-gray-400'} fas fa-star`}/>)) <p class=\"text-sm text-gray-600\">{rating} out of 5</p></div>"
        },
        {
          "name": "ReviewInput",
          "is_standalone": true,
          "description": "Standalone component that displays a text area for users to leave a review.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Leave a review\"></textarea>"
        },
        {
          "name": "ReviewSummary",
          "is_standalone": true,
          "description": "Standalone component that displays the overall rating and the total number of reviews.",
          "html": "<div class=\"flex justify-between mb-4\"><p class=\"text-sm text-gray-600\">{overall_rating} out of 5</p><p class=\"text-sm text-gray-600\">{review_count} reviews</p></div>"
        },
        {
          "name": "ReviewSection",
          "is_standalone": false,
          "description": "Component that takes children, which contains the `ReviewInput` and `ReviewSummary` components.",
          "html": "<div class=\"p-4 pt-2\">{children}</div>"
        }
      ]
    }
  ],
  "Pinned messages with timestamp and author display": [
    {
      "description": "The UI should display a list of pinned messages, each with a timestamp and author information. The messages should be displayed in a clean and readable format, with the timestamp and author information clearly visible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Pinned Messages</h2><PinnedMessageList><PinnedMessage/><PinnedMessage/><!-- additional pinned messages here --></PinnedMessageList></div>",
      "components": [
        {
          "name": "PinnedMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a single pinned message, including the message text, timestamp, and author information.",
          "html": "<div class=\"flex items-center mb-2\"><span class=\"text-gray-600\">{author_name}</span><span class=\"text-gray-400 text-sm ml-2\">{timestamp}</span><p class=\"ml-4\">{message_text}</p></div>"
        },
        {
          "name": "PinnedMessageList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `PinnedMessage` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A list of pinned messages, each with a timestamp and author display.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Pinned Messages</h2><PinnedMessageList><!-- list of pinned messages will be rendered here --></PinnedMessageList></div>",
      "components": [
        {
          "name": "PinnedMessageList",
          "is_standalone": false,
          "description": "component that takes children (a list of `PinnedMessage` components)",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    }
  ],
  "Header Search Icon": [
    {
      "description": "A search icon in the header that is accessible and responsive.",
      "html": "<header class=\"container mx-auto p-4 flex justify-between items-center\"><!-- Search Icon --><SearchIcon/><!-- other header elements --></header>",
      "components": [
        {
          "name": "SearchIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a search icon.",
          "html": "<a href=\"#\" class=\"text-gray-600 hover:text-gray-900 transition duration-300\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search text-lg\" aria-hidden=\"true\"></i></a>"
        }
      ]
    }
  ],
  "Session details display": [
    {
      "description": "The UI should display the details of a session, including the session title, speaker, location, date, and time. The UI should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><SessionTitle/><SessionMeta/></div>",
      "components": [
        {
          "name": "SessionTitle",
          "is_standalone": true,
          "description": "A standalone component to display the session title.",
          "html": "<h2 class=\"text-lg font-bold\">{session_title}</h2>"
        },
        {
          "name": "SessionMeta",
          "is_standalone": true,
          "description": "A standalone component to display the session speaker, location, date, and time.",
          "html": "<ul class=\"list-none mb-4\"><li class=\"mb-2\"><span class=\"text-gray-600\">Speaker:</span>{speaker_name} </li><li class=\"mb-2\"><span class=\"text-gray-600\">Location:</span>{location} </li><li class=\"mb-2\"><span class=\"text-gray-600\">Date:</span>{date} </li><li class=\"mb-2\"><span class=\"text-gray-600\">Time:</span>{time} </li></ul>"
        }
      ]
    }
  ],
  "Featured Video Thumbnail": [
    {
      "description": "The UI should display a thumbnail of a featured video, with a play button overlay and a darkened background to focus attention on the video. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"lg:w-1/2 xl:w-1/3 p-4 md:p-6 lg:p-8 xl:p-10\"><FeaturedVideoThumbnail/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"relative overflow-hidden rounded-md shadow-md\"><img src=\"{thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover\"/><PlayButton/><div class=\"absolute w-full h-full bg-gray-800 opacity-50\"></div></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-4xl text-white\">▶</button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video thumbnail with a play button on top of it, and a title below the thumbnail.",
      "html": "<div class=\"flex flex-col md:flex-row items-center\"><FeaturedVideoThumbnail/><VideoTitle/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"relative\"><img src={image_src} alt={alt_text} class=\"w-full rounded-md object-cover\"/><PlayButton/></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white rounded-full p-2\"><i class=\"fas fa-play\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        }
      ]
    }
  ],
  "Email Newsletter Signups": [
    {
      "description": "The UI should be a simple, responsive form that allows users to input their email address and subscribe to a newsletter. The form should be easily accessible on various devices and screen readers.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12 bg-white rounded shadow-md\"><h2 class=\"text-lg font-bold mb-4\">Stay updated with our newsletter!</h2><NewsletterSignupForm/></section>",
      "components": [
        {
          "name": "NewsletterSignupForm",
          "is_standalone": true,
          "description": "A standalone component that contains the email input field and submit button.",
          "html": "<form class=\"flex flex-wrap -mx-3\"><EmailInput/><SubmitButton/></form>"
        },
        {
          "name": "EmailInput",
          "is_standalone": true,
          "description": "A standalone component that represents the email input field.",
          "html": "<input type=\"email\" class=\"w-full px-4 py-2 text-lg\" placeholder=\"Your email address\" aria-label=\"Email address\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "A standalone component that represents the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    }
  ],
  "Header that remains visible at the top of the viewport as users scroll": [
    {
      "description": "The UI should be a sticky header that remains fixed at the top of the viewport as users scroll down the page. The header should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"h-screen overflow-y-scroll\"><HeaderBar/><!-- page content here --></div>",
      "components": [
        {
          "name": "HeaderBar",
          "is_standalone": true,
          "description": "A standalone component that represents the sticky header.",
          "html": "<nav class=\"fixed top-0 left-0 w-full h-16 bg-white shadow-md\"><div class=\"max-w-md mx-auto p-4\"><!-- header content here, e.g. logo, navigation --><h1>{header_title}</h1></div></nav>"
        }
      ]
    }
  ],
  "File uploader with drag-and-drop": [
    {
      "description": "The UI should be a rectangular box with a dashed border and a \"Drag and drop files here\" text inside. When a file is dragged over the box, the border should turn blue and the text should change to \"Drop files here\". When a file is dropped, the border should turn green and the text should change to \"File uploaded successfully\".",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UploaderBox/></div>",
      "components": [
        {
          "name": "UploaderBox",
          "is_standalone": true,
          "description": "standalone component that displays the drag-and-drop box",
          "html": "<div class=\"h-48 w-full border-2 border-dashed border-gray-300 rounded-md p-4 hover:border-blue-500 hover:text-blue-500 drop:cursor-pointer drop:border-green-500 drop:text-green-500\"><DragAndDropText/></div>"
        },
        {
          "name": "DragAndDropText",
          "is_standalone": true,
          "description": "standalone component that displays the text inside the box",
          "html": "<p class=\"text-lg text-gray-600\">{drag_and_drop_text}</p>"
        }
      ]
    }
  ],
  "Search Result Item Link": [
    {
      "description": "The Search Result Item Link should display a link with a title, a summary, and a URL. The link should be visually appealing, with a clear hierarchy of information and sufficient whitespace for readability.",
      "html": "<ul class=\"list-none mb-4\"><li><SearchResultItemLink/></li></ul>",
      "components": [
        {
          "name": "SearchResultItemLink",
          "is_standalone": true,
          "description": "A standalone component that contains a link with a title, summary, and URL.",
          "html": "<a href=\"{url}\" class=\"block py-4 no-underline hover:underline\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{summary}</p></a>"
        }
      ]
    },
    {
      "description": "The UI should be a link item that displays a search result, with a title, a description, and a URL. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"flex flex-col mb-4\"><SearchResultItemLink/></div>",
      "components": [
        {
          "name": "SearchResultItemLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href={url} class=\"text-lg font-bold text-blue-600 hover:text-blue-900 transition duration-300\"><SearchResultItemTitle/><SearchResultItemDescription/><SearchResultItemUrl/></a>"
        },
        {
          "name": "SearchResultItemTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-lg font-bold\">{title}</span>"
        },
        {
          "name": "SearchResultItemDescription",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-gray-600\">{description}</p>"
        },
        {
          "name": "SearchResultItemUrl",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-sm text-gray-600\">{url}</p>"
        }
      ]
    }
  ],
  "Large, prominently displayed image at the top of a webpage": [
    {
      "description": "A large, prominently displayed image at the top of a webpage, taking up the full width of the screen and having a responsive height to maintain its aspect ratio.",
      "html": "<section class=\"h-screen w-full\"><HeroImage/></section>",
      "components": [
        {
          "name": "HeroImage",
          "is_standalone": true,
          "description": "A standalone component that displays a large, prominent image.",
          "html": "<img src=\"{image_src}\" alt=\"{image_alt_text}\" class=\"object-cover h-full w-full\"/>"
        }
      ]
    },
    {
      "description": "A large, prominent image at the top of a webpage, taking up the full width of the screen on desktop and tablet devices, and the full screen height on mobile devices.",
      "html": "<header><HeroImage/></header>",
      "components": [
        {
          "name": "HeroImage",
          "is_standalone": true,
          "description": "(standalone): A large, prominent image at the top of a webpage.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full h-screen object-cover lg:h-full lg:w-full\"/><!-- The w-full and h-screen classes make the image take up the full width and height of the screen on mobile devices. The lg:h-full and lg:w-full classes make the image take up the full height and width of the screen on desktop and tablet devices. The object-cover class ensures the image is fully visible and scaled to cover the entire container. -->"
        }
      ]
    }
  ],
  "Success message display": [
    {
      "description": "The UI should be a simple success message display component that shows a checkmark icon, a success message, and an optional sub-message. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 pb-8 bg-green-100 rounded-lg shadow-md\"><SuccessMessageDisplay/></div>",
      "components": [
        {
          "name": "SuccessMessageDisplay",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"flex items-center mb-2\"><span class=\"text-green-600 text-2xl mr-2\"><i class=\"fas fa-check-circle\"></i></span><div class=\"text-lg leading-relaxed\">{message}</div></div>{subMessage && ( <p class=\"text-sm text-gray-600\">{subMessage}</p>)}"
        }
      ]
    }
  ],
  "Weather forecast display": [
    {
      "description": "The UI should display the current weather and forecast for a specific location. It should show the current temperature, weather condition (e.g., sunny, rainy, cloudy), and a brief description of the weather. Additionally, it should display a 5-day forecast with the date, temperature, and weather condition for each day.",
      "html": "<div class=\"container mx-auto p-4\"><WeatherCard/><h2 class=\"mt-4\">5-Day Forecast</h2><ForecastList><ForecastCard/><ForecastCard/><ForecastCard/><ForecastCard/><ForecastCard/></ForecastList></div>",
      "components": [
        {
          "name": "WeatherCard",
          "is_standalone": true,
          "description": "Standalone component that displays the current weather information (temperature, condition, description).",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><h1 class=\"text-3xl\">{current_temp}°C</h1><p class=\"text-lg\">{weather_condition}</p><p class=\"text-gray-600\">{weather_description}</p></div>"
        },
        {
          "name": "ForecastCard",
          "is_standalone": true,
          "description": "Standalone component that displays a single day's forecast (date, temperature, condition).",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><p class=\"text-sm\">{forecast_date}</p><h2 class=\"text-lg\">{forecast_temp}°C</h2><p class=\"text-gray-600\">{forecast_condition}</p></div>"
        },
        {
          "name": "ForecastList",
          "is_standalone": false,
          "description": "Component that takes children (multiple ForecastCard components) and displays a list of forecasts.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display the current weather and forecast for a specific location. It should show the current temperature, weather condition (e.g. sunny, cloudy, rainy), and a 5-day forecast.",
      "html": "<div class=\"container mx-auto p-4\"><WeatherHeader/><CurrentWeather/><Forecast><ForecastDay/><ForecastDay/><ForecastDay/><ForecastDay/><ForecastDay/></Forecast></div>",
      "components": [
        {
          "name": "WeatherHeader",
          "is_standalone": true,
          "description": "standalone, displays the location and current weather",
          "html": "<h1 class=\"text-3xl\">{location}</h1>"
        },
        {
          "name": "CurrentWeather",
          "is_standalone": true,
          "description": "standalone, displays the current temperature and weather condition",
          "html": "<div class=\"flex items-center\"><p class=\"text-4xl\">{temperature}&deg;C</p><img src={weather_icon} alt={weather_condition} class=\"w-12 h-12 ml-2\"/><p class=\"text-lg\">{weather_condition}</p></div>"
        },
        {
          "name": "Forecast",
          "is_standalone": false,
          "description": "takes children, displays a 5-day forecast",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "ForecastDay",
          "is_standalone": true,
          "description": "standalone, displays the weather forecast for a single day",
          "html": "<div class=\"flex flex-col items-center w-20 h-20 mr-4 mb-4\"><p class=\"text-lg\">{day}</p><img src={icon} alt={condition} class=\"w-8 h-8\"/><p class=\"text-lg\">{temperature}&deg;C</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display the current weather condition, temperature, and a 5-day forecast. The layout should be responsive, with a card-based design that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><WeatherCard/><ForecastList><ForecastItem/><ForecastItem/><ForecastItem/><ForecastItem/><ForecastItem/></ForecastList></div>",
      "components": [
        {
          "name": "WeatherCard",
          "is_standalone": true,
          "description": "A standalone component that displays the current weather condition and temperature.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-2xl\">Current Weather</h2><p>{current_weather_condition}</p><p>{temperature}°C</p></div>"
        },
        {
          "name": "ForecastList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of forecast items.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        },
        {
          "name": "ForecastItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single day's forecast.",
          "html": "<li class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg\">{forecast_date}</h3><p>{forecast_condition}</p><p>{forecast_temp}°C</p></li>"
        }
      ]
    }
  ],
  "User profile popup with avatar and username": [
    {
      "description": "The UI should be a popup modal that displays a user's avatar and username. The popup should be responsive, mobile-first, and accessible. The avatar should be a circular image, and the username should be displayed in a readable font size.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-full bg-gray-500 bg-opacity-50 flex justify-center pt-20\"><!-- popup modal container --><div class=\"bg-white rounded shadow-md p-4 w-96 md:w-128 lg:w-160\"><!-- UserProfilePopup component --><UserProfilePopup/></div></div>",
      "components": [
        {
          "name": "UserProfilePopup",
          "is_standalone": true,
          "description": "- standalone component that represents the entire popup modal.",
          "html": "<div class=\"flex flex-col items-center\"><UserProfileAvatar/><UserProfileUsername/></div>"
        },
        {
          "name": "UserProfileAvatar",
          "is_standalone": true,
          "description": "- standalone component that represents the user's avatar.",
          "html": "<img src=\"{avatar_url}\" alt=\"User Avatar\" class=\"rounded-full w-24 h-24 mb-2\"/>"
        },
        {
          "name": "UserProfileUsername",
          "is_standalone": true,
          "description": "- standalone component that represents the user's username.",
          "html": "<h2 class=\"text-lg font-bold\">{username}</h2>"
        }
      ]
    }
  ],
  "Animated icon indicating that content is loading or processing": [
    {
      "description": "A simple, animated icon indicating that content is loading or processing. The icon should be a spinning circle with a subtle animation effect.",
      "html": "<div class=\"flex justify-center\"><LoadingIndicator/></div>",
      "components": [
        {
          "name": "LoadingIndicator",
          "is_standalone": true,
          "description": "A standalone component representing the animated loading icon.",
          "html": "<div class=\"inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-blue-600\"></div>"
        }
      ]
    }
  ],
  "Overlay that covers the entire screen, often used for modal dialogs or notifications": [
    {
      "description": "The UI should be a full-screen overlay that covers the entire screen, often used for modal dialogs or notifications. It should be darkened in the background to bring focus to the modal content.",
      "html": "<div class=\"fixed inset-0 z-50 flex items-center justify-center\"><FullScreenOverlay/><ModalContent><!-- modal content goes here --></ModalContent></div>",
      "components": [
        {
          "name": "FullScreenOverlay",
          "is_standalone": true,
          "description": "a standalone component that covers the entire screen with a darkened background.",
          "html": "<div class=\"absolute inset-0 bg-gray-700 opacity-50\"></div>"
        },
        {
          "name": "ModalContent",
          "is_standalone": false,
          "description": "a component that takes children and wraps the content of the modal dialog.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen overlay that covers the entire screen, used for displaying modal dialogs or notifications. It should have a dark background with an opacity to make the underlying content blurry, and a centered container with a white background to hold the modal content.",
      "html": "<div class=\"fixed inset-0 flex justify-center items-center\"><FullScreenOverlay/><ModalContainer><!-- modal content goes here --></ModalContainer></div>",
      "components": [
        {
          "name": "FullScreenOverlay",
          "is_standalone": true,
          "description": "(standalone): the full-screen overlay component that covers the entire screen.",
          "html": "<div class=\"fixed inset-0 bg-gray-500 opacity-75\"></div>"
        },
        {
          "name": "ModalContainer",
          "is_standalone": false,
          "description": "(takes children): a centered container that holds the modal content.",
          "html": "<div class=\"bg-white rounded shadow-md p-4 max-w-md\">{children}</div>"
        }
      ]
    }
  ],
  "Nested Comment Threads": [
    {
      "description": "The UI should display a nested comment thread with multiple levels of nesting. Each comment should have a username, timestamp, and comment text. The comments should be displayed in a threaded layout, with replies indented underneath their parent comments. The UI should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<CommentThread><Comment><!-- comment content --><CommentReply><!-- reply content --><CommentReply><!-- nested reply content --></CommentReply></CommentReply></Comment><Comment><!-- comment content --></Comment></CommentThread>",
      "components": [
        {
          "name": "CommentThread",
          "is_standalone": false,
          "description": "The top-level component that displays a nested comment thread. Takes children.",
          "html": "<div class=\"max-w-md mx-auto bg-white rounded-lg shadow-md p-4\">{children}</div>"
        },
        {
          "name": "Comment",
          "is_standalone": false,
          "description": "Displays a single comment with a username, timestamp, and comment text. Takes children.",
          "html": "<div class=\"flex items-center mb-4\"><img src={user_avatar} alt={username} class=\"h-8 w-8 rounded-full mr-2\"/><div><p class=\"text-sm\">{username}</p><p class=\"text-xs text-gray-600\">{timestamp}</p></div><p class=\"text-sm\">{comment_text}</p><div class=\"ml-10\">{children} </div></div>"
        },
        {
          "name": "CommentReply",
          "is_standalone": false,
          "description": "Displays a reply to a comment, with a username, timestamp, and comment text. Takes children.",
          "html": "<div class=\"ml-10 mb-4\"><img src={user_avatar} alt={username} class=\"h-8 w-8 rounded-full mr-2\"/><div><p class=\"text-sm\">{username}</p><p class=\"text-xs text-gray-600\">{timestamp}</p></div><p class=\"text-sm\">{comment_text}</p><div class=\"ml-10\">{children} </div></div>"
        }
      ]
    }
  ],
  "Social Media Icons": [
    {
      "description": "A horizontal row of social media icons, with each icon representing a different platform (e.g. Facebook, Twitter, Instagram, etc.). The icons should be evenly spaced and responsive to different screen sizes.",
      "html": "<nav aria-label=\"Social media links\"><SocialMediaIconList><SocialMediaIcon/><SocialMediaIcon/><SocialMediaIcon/><!-- Add more social media icons here --></SocialMediaIconList></nav>",
      "components": [
        {
          "name": "SocialMediaIcon",
          "is_standalone": true,
          "description": "(standalone) - A single social media icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon}\" aria-hidden=\"true\"></i></a>"
        },
        {
          "name": "SocialMediaIconList",
          "is_standalone": false,
          "description": "(takes children) - A container for a list of social media icons.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Train ticket booking form": [
    {
      "description": "The UI should be a responsive form with the following elements: \n- A header with a title and a brief description\n- A section for selecting the journey date and time\n- A section for selecting the origin and destination stations\n- A section for selecting the number of passengers and class of travel\n- A section for passenger details\n- A call-to-action button to submit the form\nThe form should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><HeaderSection/><FormSection><JourneyDetails/><StationSelect/><PassengerDetails/></FormSection><SubmitButton/></div>",
      "components": [
        {
          "name": "HeaderSection",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<div class=\"flex mb-4\"><h1 class=\"text-2xl font-bold\">{header_title}</h1><p class=\"text-sm\">{header_description}</p></div>"
        },
        {
          "name": "JourneyDetails",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<fieldset class=\"mb-4\"><legend class=\"text-lg\">Journey Details</legend><label for=\"journey_date\" class=\"block mb-2\">Journey Date:</label><input type=\"date\" id=\"journey_date\" class=\"w-full p-2 pl-10 text-sm\"/><label for=\"journey_time\" class=\"block mb-2\">Journey Time:</label><input type=\"time\" id=\"journey_time\" class=\"w-full p-2 pl-10 text-sm\"/></fieldset>"
        },
        {
          "name": "StationSelect",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<fieldset class=\"mb-4\"><legend class=\"text-lg\">Station Select</legend><label for=\"origin_station\" class=\"block mb-2\">Origin Station:</label><select id=\"origin_station\" class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select Station</option>{origin_station_options} </select><label for=\"destination_station\" class=\"block mb-2\">Destination Station:</label><select id=\"destination_station\" class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select Station</option>{destination_station_options} </select></fieldset>"
        },
        {
          "name": "PassengerDetails",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<fieldset class=\"mb-4\"><legend class=\"text-lg\">Passenger Details</legend><label for=\"num_passengers\" class=\"block mb-2\">Number of Passengers:</label><select id=\"num_passengers\" class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select Number</option>{num_passenger_options} </select><label for=\"class_of_travel\" class=\"block mb-2\">Class of Travel:</label><select id=\"class_of_travel\" class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select Class</option>{class_of_travel_options} </select></fieldset>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Book Now</button>"
        },
        {
          "name": "FormSection",
          "is_standalone": false,
          "description": "Takes children",
          "html": "<section class=\"mb-4\">{children}</section>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first train ticket booking form with input fields for passenger information, journey details, and payment options. The form should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Book Your Train Ticket</h1><PassengerInfoForm/><JourneyDetailsForm/><PaymentOptionsForm/><BookingSummary/><SubmitButton/></div>",
      "components": [
        {
          "name": "PassengerInfoForm",
          "is_standalone": true,
          "description": "a standalone component for passenger information input fields.",
          "html": "<div class=\"mb-4\"><label class=\"block mb-2\" for=\"first_name\">First Name</label><input class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"first_name\" type=\"text\"/><label class=\"block mb-2\" for=\"last_name\">Last Name</label><input class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"last_name\" type=\"text\"/><!-- Add more passenger info fields here --></div>"
        },
        {
          "name": "JourneyDetailsForm",
          "is_standalone": true,
          "description": "a standalone component for journey details input fields.",
          "html": "<div class=\"mb-4\"><label class=\"block mb-2\" for=\"departure_station\">Departure Station</label><input class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"departure_station\" type=\"text\"/><label class=\"block mb-2\" for=\"arrival_station\">Arrival Station</label><input class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"arrival_station\" type=\"text\"/><!-- Add more journey details fields here --></div>"
        },
        {
          "name": "PaymentOptionsForm",
          "is_standalone": true,
          "description": "a standalone component for payment options input fields.",
          "html": "<div class=\"mb-4\"><label class=\"block mb-2\" for=\"payment_method\">Payment Method</label><select class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"payment_method\"><option value=\"credit_card\">Credit Card</option><option value=\"paypal\">PayPal</option><!-- Add more payment options here --></select><!-- Add payment details fields here --></div>"
        },
        {
          "name": "BookingSummary",
          "is_standalone": true,
          "description": "a standalone component to display a summary of the booking details.",
          "html": "<div class=\"mb-4\"><h2 class=\"text-xl font-bold mb-2\">Booking Summary</h2><p>Passenger: {first_name} {last_name}</p><p>Journey: {departure_station} to {arrival_station}</p><p>Payment Method: {payment_method}</p></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "a standalone component for the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Book Now</button>"
        }
      ]
    }
  ],
  "Placeholder/Loading Text": [
    {
      "description": "The UI should be a simple loading text component that displays a placeholder text, indicating that content is loading.",
      "html": "<div class=\"flex justify-center\"><LoadingText/></div>",
      "components": [
        {
          "name": "LoadingText",
          "is_standalone": true,
          "description": "(standalone): Displays a placeholder text.",
          "html": "<p class=\"text-lg text-gray-400 animate-pulse\">Loading...</p><!-- or --><p class=\"text-lg text-gray-400 animate-pulse\">{loading_message}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a placeholder or loading text, often used when content is still loading or not yet available. The text should be centered and have a subtle animation to indicate that the content is loading.",
      "html": "<div class=\"flex justify-center min-h-screen\"><LoadingText/></div>",
      "components": [
        {
          "name": "LoadingText",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<!-- A centered loading text with animation --><div class=\"animate-pulse text-lg text-gray-400\">{loading_text}</div>"
        }
      ]
    }
  ],
  "Footer Copyright Year": [
    {
      "description": "The UI should be a simple footer with a copyright notice that includes the current year.",
      "html": "<footer><FooterCopyright/></footer>",
      "components": [
        {
          "name": "FooterCopyright",
          "is_standalone": true,
          "description": "A standalone component that displays a copyright notice with the current year.",
          "html": "<p class=\"text-sm text-gray-500\">© {current_year} All rights reserved.</p>"
        }
      ]
    }
  ],
  "Blog Post Teaser": [
    {
      "description": "A compact, informative teaser for a blog post, featuring a headline, a brief summary, and a call-to-action to read more.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><BlogPostTeaser/></div>",
      "components": [
        {
          "name": "BlogPostTeaser",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"flex-1 md:w-2/3 xl:w-1/2\"><PostHeadline/><PostSummary/><ReadMoreLink/></div>"
        },
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg md:text-xl\">{post_title}</h2>"
        },
        {
          "name": "PostSummary",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-sm md:text-base\">{post_summary}</p>"
        },
        {
          "name": "ReadMoreLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href=\"{post_permalink}\" class=\"text-blue-600 hover:text-blue-700\">Read More &raquo;</a>"
        }
      ]
    },
    {
      "description": "A compact, responsive teaser for a blog post, showcasing the post's title, brief summary, and a \"Read more\" call-to-action.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostTeaser/></div>",
      "components": [
        {
          "name": "PostTeaser",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"max-w-sm rounded overflow-hidden shadow-md\"><PostTitle/><PostSummary/><ReadMoreLink/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostSummary",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-gray-600\">{post_summary}</p>"
        },
        {
          "name": "ReadMoreLink",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<a href=\"{post_url}\" class=\"text-blue-600 hover:text-blue-800\">Read more →</a>"
        }
      ]
    }
  ],
  "Blog Post Author Image": [
    {
      "description": "The UI should display an author's image, name, and bio in a concise and visually appealing way.",
      "html": "<div class=\"flex items-center mb-4\"><AuthorAvatar/><AuthorInfo><h5 class=\"text-lg font-bold\">{authorName}</h5><p class=\"text-gray-600\">{authorBio}</p></AuthorInfo></div>",
      "components": [
        {
          "name": "AuthorAvatar",
          "is_standalone": true,
          "description": "standalone, displays the author's image",
          "html": "<img src={authorImageUrl} alt={authorName} class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "AuthorInfo",
          "is_standalone": false,
          "description": "takes children, displays the author's name and bio",
          "html": "<div class=\"ml-4\">{children}</div>"
        }
      ]
    }
  ],
  "Links to the website's social media profiles, often displayed as small icons": [
    {
      "description": "The UI should be a horizontal list of small icons, each representing a social media platform, with a hover effect to indicate interactivity.",
      "html": "<nav class=\"flex justify-center mb-4\"><SocialMediaLinks/></nav>",
      "components": [
        {
          "name": "SocialMediaLinks",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<ul class=\"flex justify-center\"><SocialMediaLink><i class=\"fab fa-facebook-f\"></i>{facebook_url}</SocialMediaLink><SocialMediaLink><i class=\"fab fa-twitter\"></i>{twitter_url}</SocialMediaLink><SocialMediaLink><i class=\"fab fa-instagram\"></i>{instagram_url}</SocialMediaLink><!-- Add more social media links here --></ul>"
        },
        {
          "name": "SocialMediaLink",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<li class=\"mr-4 last:mr-0\"><a href={link_url} target=\"_blank\" rel=\"noopener noreferrer\" aria-label={social_media_name}>{children} </a></li>"
        }
      ]
    }
  ],
  "Project Timeline Visualization Tool": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible visualization tool that displays a project timeline, including milestones, tasks, and dependencies. The tool should be easy to use, intuitive, and provide a clear visual representation of the project timeline.",
      "html": "<!-- The main project timeline component --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProjectTimeline><!-- Milestones and tasks will be rendered here --></ProjectTimeline></div>",
      "components": [
        {
          "name": "ProjectTimeline",
          "is_standalone": false,
          "description": "The main component that renders the project timeline. Takes children.",
          "html": "<!-- Container for the project timeline --><div class=\"flex flex-col\">{children}</div>"
        },
        {
          "name": "MilestoneCard",
          "is_standalone": true,
          "description": "A card component that represents a milestone in the project timeline. Standalone.",
          "html": "<!-- Milestone card component --><div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{milestone_name}</h3><p class=\"text-gray-600\">{milestone_description}</p><p class=\"text-sm text-gray-500\">{milestone_date}</p></div>"
        },
        {
          "name": "TaskCard",
          "is_standalone": true,
          "description": "A card component that represents a task in the project timeline. Standalone.",
          "html": "<!-- Task card component --><div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{task_name}</h3><p class=\"text-gray-600\">{task_description}</p><p class=\"text-sm text-gray-500\">{task_date}</p></div>"
        },
        {
          "name": "DependencyLine",
          "is_standalone": true,
          "description": "A line component that represents a dependency between tasks or milestones. Standalone.",
          "html": "<!-- Dependency line component --><div class=\"h-4 w-1 bg-gray-300\"></div>"
        }
      ]
    }
  ],
  "Navigation menu with mailbox folders and labels": [
    {
      "description": "The UI should be a navigation menu with folder and label categories, each containing a list of items. The menu should be responsive, mobile-first, and accessible. It should have a clean and simple design, with clear typography and sufficient whitespace.",
      "html": "<nav class=\"max-w-md mx-auto p-4 lg:p-6\"><ul class=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\"><MailboxNavList><MailboxNavItem/><!-- more navigation items --></MailboxNavList></ul><MailboxNav><MailboxNavList><MailboxNavItem/><!-- more navigation items --></MailboxNavList></MailboxNav></nav>",
      "components": [
        {
          "name": "MailboxNavItem",
          "is_standalone": true,
          "description": "Standalone component representing a single navigation item (e.g., folder or label).",
          "html": "<li class=\"py-2 lg:py-4\"><a href=\"{href}\" class=\"block py-2 px-4\">{text}</a></li>"
        },
        {
          "name": "MailboxNavList",
          "is_standalone": false,
          "description": "Component that contains a list of `MailboxNavItem`s, takes children.",
          "html": "<ul class=\"flex flex-col lg:flex-row lg:items-center lg:justify-between\">{children}</ul>"
        },
        {
          "name": "MailboxNav",
          "is_standalone": false,
          "description": "Top-level component that contains the entire navigation menu, takes children.",
          "html": "<nav class=\"max-w-md mx-auto p-4 lg:p-6\">{children}</nav>"
        }
      ]
    }
  ],
  "Dropdown Menu Arrow": [
    {
      "description": "A dropdown menu arrow is a small triangle that indicates the presence of a dropdown menu. It should be a small, downward-facing triangle that changes direction when the dropdown menu is open.",
      "html": "<button class=\"flex justify-center\"><!-- dropdown menu button content --><DropdownMenuArrow/></button>",
      "components": [
        {
          "name": "DropdownMenuArrow",
          "is_standalone": true,
          "description": "A standalone component that displays a triangle pointing down or up.",
          "html": "<div class=\"w-3 h-3\"><span class=\"block w-full h-0.5 bg-current rotate-45 translate-x-1/2 -translate-y-1/2\"></span><span class=\"block w-full h-0.5 bg-current -rotate-45 translate-x-1/2 translate-y-1/2\"></span></div>"
        }
      ]
    }
  ],
  "Product Rating Stars": [
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    }
  ],
  "Game Information and Stats": [
    {
      "description": "The UI should display game information and stats in a clean and visually appealing way, with a mobile-first design. It should include the game's title, description, and stats such as playtime, players online, and ratings.",
      "html": "<section class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><GameInfo/><StatSection><StatCard/><StatCard/><StatCard/></StatSection></section>",
      "components": [
        {
          "name": "GameInfo",
          "is_standalone": true,
          "description": "standalone component to display game title and description",
          "html": "<div class=\"mb-4\"><h2 class=\"text-2xl font-bold\">{game_title}</h2><p class=\"text-gray-600\">{game_description}</p></div>"
        },
        {
          "name": "StatCard",
          "is_standalone": true,
          "description": "standalone component to display a single stat (e.g. playtime, players online, ratings)",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"text-3xl font-bold\">{stat_value}</span><p class=\"text-gray-600\">{stat_label}</p></div>"
        },
        {
          "name": "StatSection",
          "is_standalone": false,
          "description": "takes children component to display multiple stats",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Callout Box Title": [
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    }
  ],
  "User Profile and Reputation System": [
    {
      "description": "The UI should display a user's profile information, including their username, profile picture, reputation score, and badges. The reputation score should be prominently displayed, and the badges should be displayed in a grid or list.",
      "html": "<div class=\"flex justify-center\"><UserProfileHeader/><div class=\"ml-4\"><ReputationScore/><BadgeGrid><Badge/><Badge/><!-- More badges here --></BadgeGrid></div></div>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the user's profile picture and username.",
          "html": "<div class=\"flex items-center\"><img src=\"{profile_picture_url}\" alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full\"/><h2 class=\"ml-2 text-lg\">{username}</h2></div>"
        },
        {
          "name": "ReputationScore",
          "is_standalone": true,
          "description": "Standalone component that displays the user's reputation score.",
          "html": "<h3 class=\"text-lg font-bold\">{reputation_score} Reputation</h3>"
        },
        {
          "name": "BadgeGrid",
          "is_standalone": false,
          "description": "Component that takes children, which are `Badge` components.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        },
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "Standalone component that displays a single badge.",
          "html": "<li class=\"mr-2 mb-2\"><img src=\"{badge_image_url}\" alt=\"Badge\" class=\"w-8 h-8\"/><span class=\"text-sm\">{badge_name}</span></li>"
        }
      ]
    }
  ],
  "Social Media Feed Header": [
    {
      "description": "The Social Media Feed Header should be a horizontal bar that displays the social media platform's logo, a title, and a navigation menu. It should be responsive, adapting to different screen sizes and devices.",
      "html": "<header class=\"container mx-auto p-4 flex justify-between items-center\"><SocialMediaLogo/><FeedTitle/><NavMenu><!-- navigation menu items will be inserted here --></NavMenu></header>",
      "components": [
        {
          "name": "SocialMediaLogo",
          "is_standalone": true,
          "description": "A standalone component that displays the social media platform's logo.",
          "html": "<img src={logo_url} alt=\"Social Media Logo\" class=\"h-8 w-8 mr-2\"/>"
        },
        {
          "name": "FeedTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the social media feed.",
          "html": "<h1 class=\"text-2xl font-bold\">{feed_title}</h1>"
        },
        {
          "name": "NavMenu",
          "is_standalone": false,
          "description": "A component that takes children, which are navigation menu items.",
          "html": "<nav class=\"flex justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should display a header for a social media feed, showing the profile picture, username, and a button to follow the user. The header should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-between p-4\"><SocialMediaFeedHeader><UserProfilePicture/><UsernameDisplay/><FollowButton/></SocialMediaFeedHeader></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component to display the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component to display the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component to display a button to follow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameDisplay, and FollowButton).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header that contains a username, profile picture, and a post count. It should be easily accessible on both desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><SocialMediaHeader><UserProfile/><PostCount/></SocialMediaHeader></header>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone) - contains the profile picture and username",
          "html": "<div class=\"flex items-center mb-4 lg:mb-6\"><img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-4\"/><h2 class=\"text-lg lg:text-xl\">{username}</h2></div>"
        },
        {
          "name": "PostCount",
          "is_standalone": true,
          "description": "(standalone) - displays the number of posts",
          "html": "<p class=\"text-sm lg:text-base\">{post_count} posts</p>"
        },
        {
          "name": "SocialMediaHeader",
          "is_standalone": false,
          "description": "(takes children) - the main header component that contains the `UserProfile` and `PostCount` components",
          "html": "<div class=\"flex flex-col lg:flex-row justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should display a profile picture, username, and a button to follow/unfollow the user. It should be responsive, with the profile picture and username aligned to the left and the follow button to the right on larger screens, and stacked on smaller screens.",
      "html": "<header class=\"flex flex-wrap justify-between p-4 lg:p-6\"><SocialMediaFeedHeader><ProfilePicture/><Username/><FollowButton/></SocialMediaFeedHeader></header>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays a profile picture.",
          "html": "<img src={profile_picture_url} class=\"w-12 h-12 rounded-full\" alt=\"Profile Picture\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "Standalone component that displays the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component that displays a button to follow or unfollow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">{follow_button_text}</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children, which consists of the profile picture, username, and follow button.",
          "html": "<div class=\"flex flex-wrap lg:flex-nowrap justify-between items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Collection of thumbnail images that users can click to view full-size versions": [
    {
      "description": "The UI should display a grid of thumbnail images that are responsive to different screen sizes. When a user clicks on a thumbnail, the full-size version of the image should be displayed.",
      "html": "<main class=\"container mx-auto max-w-md p-4\"><h1 class=\"text-2xl font-bold mb-4\">Image Gallery</h1><ImageGallery><ImageThumbnail/><ImageThumbnail/><!-- repeat ImageThumbnail components for each image --></ImageGallery></main>",
      "components": [
        {
          "name": "ImageThumbnail",
          "is_standalone": true,
          "description": "standalone component that displays a thumbnail image",
          "html": "<div class=\"w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full h-48 object-cover rounded-md cursor-pointer\"/></div>"
        },
        {
          "name": "ImageGallery",
          "is_standalone": false,
          "description": "component that takes children (`ImageThumbnail` components) and displays them in a grid",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Hero Image/Header": [
    {
      "description": "The UI should display a hero image/header section that takes up the full width of the screen, with a background image, a heading, and a call-to-action (CTA) button. The heading and CTA button should be centered horizontally and vertically within the hero image.",
      "html": "<section class=\"h-screen w-full relative\"><HeroImageHeader/><!-- hero image background --><div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center\"><HeroHeading/><CallToAction/></div></section>",
      "components": [
        {
          "name": "HeroImageHeader",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${hero_image_url});`}></div>"
        },
        {
          "name": "HeroHeading",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h1 class=\"text-3xl font-bold\">{hero_heading}</h1>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Simple product listing with thumbnails": [
    {
      "description": "A responsive grid of product cards with thumbnails, displaying product information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProductCard/><ProductCard/><ProductCard/><!-- add more ProductCard components here --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "A standalone component displaying a single product's information.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><ProductCardThumbnail/><ProductCardInfo/></div>"
        },
        {
          "name": "ProductCardThumbnail",
          "is_standalone": true,
          "description": "A standalone component displaying a product's thumbnail.",
          "html": "<img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/>"
        },
        {
          "name": "ProductCardInfo",
          "is_standalone": true,
          "description": "A standalone component displaying a product's details.",
          "html": "<h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p><p class=\"text-sm\">{product_price}</p>"
        }
      ]
    },
    {
      "description": "A grid of product thumbnails with a title and price overlay.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-8\"><h1>Product Listing</h1><div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"><ProductThumbnail/><ProductThumbnail/><ProductThumbnail/><!-- repeat ProductThumbnail components here --></div></div>",
      "components": [
        {
          "name": "ProductThumbnail",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"relative overflow-hidden shadow-md rounded-lg\"><img src=\"{product_image}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover\"/><div class=\"absolute bottom-0 left-0 p-4 text-white\"><h5>{product_name}</h5><p>${product_price}</p></div></div>"
        },
        {
          "name": "ProductListing",
          "is_standalone": false,
          "description": "takes children (`ProductThumbnail` components)",
          "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-8\">{children}</div>"
        }
      ]
    }
  ],
  "Product Cards/Grids": [
    {
      "description": "A responsive grid of product cards, with each card displaying a product image, title, price, and a \"Add to Cart\" button. The grid should be mobile-first, with a single column on small screens and a multi-column layout on larger screens.",
      "html": "<!-- Product Grid container --><div class=\"container mx-auto p-4\"><!-- Product Grid --><div class=\"grid gap-4 lg:grid-cols-2 xl:grid-cols-3\"><!-- Product Card 1 --><ProductCard/><!-- Product Card 2 --><ProductCard/><!-- ... --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "(standalone): A single product card, containing image, title, price, and \"Add to Cart\" button.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><!-- Product Image --><img src=\"{product_image}\" alt=\"{product_title}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><!-- Product Title --><h2 class=\"text-lg font-bold\">{product_title}</h2><!-- Product Price --><p class=\"text-lg\">{product_price}</p><!-- Add to Cart Button --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button></div></div>"
        }
      ]
    }
  ],
  "Designer/Studio Profiles": [
    {
      "description": "The UI should display a list of designer/studio profiles, each containing a profile picture, name, specialty, and a call-to-action (CTA) button. The design should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Designer Profiles</h1><DesignerProfileList><DesignerProfileCard/><DesignerProfileCard/><!-- Add more DesignerProfileCard components here --></DesignerProfileList></main>",
      "components": [
        {
          "name": "DesignerProfileCard",
          "is_standalone": true,
          "description": "(standalone): A single designer/studio profile card.",
          "html": "<article class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={profile_picture_url} alt={name} class=\"w-24 h-24 rounded-full mb-2\"/><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-gray-600\">{specialty}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Portfolio</button></article>"
        },
        {
          "name": "DesignerProfileList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of designer/studio profiles.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a profile section for designers/studios, showcasing their information, projects, and skills. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><DesignerProfileHeader/><DesignerProfileSection><h2 class=\"text-lg font-bold mb-4\">Projects</h2><ul class=\"flex flex-wrap justify-center mb-4\"><ProjectCard/><ProjectCard/><!-- Add more ProjectCard components here --></ul><h2 class=\"text-lg font-bold mb-4\">Skills</h2><ul class=\"flex flex-wrap justify-center\"><SkillBadge/><SkillBadge/><!-- Add more SkillBadge components here --></ul></DesignerProfileSection></section>",
      "components": [
        {
          "name": "DesignerProfileHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the designer's/studio's name, profile picture, and tagline.",
          "html": "<header class=\"flex justify-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{designer_name}\" class=\"w-24 h-24 rounded-full\"/><div class=\"ml-4\"><h1 class=\"text-2xl font-bold\">{designer_name}</h1><p class=\"text-sm\">{tagline}</p></div></header>"
        },
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "A standalone component that displays a project's information, including title, description, and image.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><img src=\"{project_image_url}\" alt=\"{project_title}\" class=\"w-full h-48 object-cover rounded\"/><h3 class=\"text-lg font-bold\">{project_title}</h3><p class=\"text-sm\">{project_description}</p></li>"
        },
        {
          "name": "SkillBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a skill with a title and icon.",
          "html": "<li class=\"mr-4 mb-4\"><span class=\"bg-orange-100 text-orange-800 py-1 px-2 rounded\">{skill_title}</span><!-- Add icon here --><i class=\"fas fa-{skill_icon}\"></i></li>"
        },
        {
          "name": "DesignerProfileSection",
          "is_standalone": false,
          "description": "A component that takes children to display the designer's/studio's projects and skills.",
          "html": "<!-- This component should render its children --><div class=\"px-4\">{children}</div>"
        }
      ]
    }
  ],
  "Hero Overlay Text": [
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    }
  ],
  "Breadcrumb navigation for category and subreddits": [
    {
      "description": "The UI should display a breadcrumb navigation for categories and subreddits. Each item in the breadcrumb should display the category name and have a separator (e.g., `/`) between each item.",
      "html": "<nav class=\"flex items-center mb-4\"><BreadCrumbNavigation><BreadCrumb/><BreadCrumb/><!-- Add more Breadcrumbs as needed --></BreadCrumbNavigation></nav>",
      "components": [
        {
          "name": "BreadCrumb",
          "is_standalone": true,
          "description": "standalone component that renders a single breadcrumb item.",
          "html": "<li class=\"mr-2\"><a href=\"{category_url}\" class=\"text-gray-600 hover:text-gray-900\">{category_name}</a><span class=\"text-gray-400\">/</span></li>"
        },
        {
          "name": "BreadCrumbNavigation",
          "is_standalone": false,
          "description": "container component that takes children (multiple `BreadCrumb` components).",
          "html": "<ul class=\"flex\">{children}</ul>"
        }
      ]
    }
  ],
  "Progress Bars/Steps": [
    {
      "description": "The UI should be a series of steps or progress bars that visually represent a multi-step process. Each step should have a distinct visual indicator of completeness, such as a checkmark or a filled progress bar. The UI should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"md:w-full lg:w-3/4 xl:w-1/2 mx-auto p-4\"><ProgressBar><StepIndicator/><StepIndicator/><StepIndicator/><!-- Add more StepIndicator components as needed --></ProgressBar></div>",
      "components": [
        {
          "name": "StepIndicator",
          "is_standalone": true,
          "description": "A standalone component that represents a single step in the process, displaying a visual indicator of completeness.",
          "html": "<div class=\"flex items-center mb-2\"><div class=\"w-6 h-6 bg-{step_status} rounded-full mr-2\" aria-hidden=\"true\"></div><p>{step_label}</p></div>"
        },
        {
          "name": "ProgressBar",
          "is_standalone": false,
          "description": "A component that takes children, wrapping multiple `StepIndicator` components to form a cohesive progress bar.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Image Lightbox": [
    {
      "description": "The UI should display a featured image with a lightbox effect, meaning when the image is clicked, it opens in a full-screen overlay. The image should be responsive and adaptable to different screen sizes. The lightbox overlay should have a darkened background and a close button.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImage/></div><div class=\"hidden lg:block fixed top-0 left-0 w-full h-full bg-black bg-opacity-75\" id=\"lightbox\"><Lightbox><FeaturedImage/></Lightbox><LightboxCloseButton/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "standalone component that displays the featured image",
          "html": "<img src={image_src} alt={image_alt} class=\"w-full h-64 object-cover rounded-md lg:h-96\"/>"
        },
        {
          "name": "Lightbox",
          "is_standalone": false,
          "description": "component that takes a child element (the featured image) and displays it in a full-screen overlay",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full p-4 lg:p-6\">{children}</div>"
        },
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "standalone component that displays a close button for the lightbox overlay",
          "html": "<button class=\"absolute top-0 right-0 p-4 text-2xl text-white\" aria-label=\"Close lightbox\">&times;</button>"
        }
      ]
    }
  ],
  "Error Message: Displays error message with details": [
    {
      "description": "The UI should display an error message with details, such as an error title, error message, and possibly other details.",
      "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><ErrorMessage/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "A standalone component that displays an error message with details.",
          "html": "<h5 class=\"text-lg\">{error_title}</h5><p>{error_message}</p><p>{error_details}</p>"
        }
      ]
    }
  ],
  "Project/Task Management Tools": [
    {
      "description": "A responsive dashboard that displays a list of projects with their respective tasks. Each project should have a title, description, and a list of tasks. Tasks should have a title, description, and a completion status indicator.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Project Dashboard</h1><ul class=\"divide-y\"><ProjectCard/><ProjectCard/><!-- Add more ProjectCard components as needed --></ul></div>",
      "components": [
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single project.",
          "html": "<div class=\"p-4 mb-4 bg-white rounded shadow\"><h2 class=\"text-lg font-bold\">{project_title}</h2><p class=\"text-gray-600\">{project_description}</p><TaskList><TaskItem/><TaskItem/><!-- Add more TaskItem components as needed --></TaskList></div>"
        },
        {
          "name": "TaskList",
          "is_standalone": false,
          "description": "A component that takes children (individual tasks) to display.",
          "html": "<ul class=\"pl-4\">{children}</ul>"
        },
        {
          "name": "TaskItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single task.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><input type=\"checkbox\" class=\"mr-2\" {checked}/><span class=\"text-gray-600\">{task_title}</span><p class=\"text-gray-400\">{task_description}</p></li>"
        }
      ]
    }
  ],
  "User Management: Manage user accounts": [
    {
      "description": "The UI should display a list of user accounts with their profiles, and provide an option to edit or delete each account. The design should be responsive, with a mobile-first approach, and follow accessibility and SEO best practices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-2xl font-bold mb-4\">Manage User Accounts</h1><UserAccountList><!-- List of user accounts will be rendered here --></UserAccountList></div>",
      "components": [
        {
          "name": "UserAccountList",
          "is_standalone": false,
          "description": "A component that takes children, rendering a list of `UserAccountCard` components.",
          "html": "<ul class=\"divide-y divide-gray-200\">{children}</ul>"
        },
        {
          "name": "DeleteButton",
          "is_standalone": true,
          "description": "A standalone component that displays a delete button for a user account.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Delete</button>"
        }
      ]
    }
  ],
  "Email subscription form": [
    {
      "description": "The UI should be a simple email subscription form that is responsive, mobile-first, and accessible. It should have a input field for the user's email address, a subscribe button, and a success message that appears after submission.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-8\"><SubscriptionForm><EmailInput/><SubscribeButton/><SuccessMessage/></SubscriptionForm></div>",
      "components": [
        {
          "name": "EmailInput",
          "is_standalone": true,
          "description": "A standalone component that renders an input field for the user's email address.",
          "html": "<input type=\"email\" id=\"email\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "A standalone component that renders a button to submit the form.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "SuccessMessage",
          "is_standalone": true,
          "description": "A standalone component that renders a success message after form submission.",
          "html": "<p class=\"text-green-600\">{success_message}</p>"
        },
        {
          "name": "SubscriptionForm",
          "is_standalone": false,
          "description": "A component that takes children and renders the entire subscription form.",
          "html": "<form class=\"flex flex-col w-full max-w-md\">{children}</form>"
        }
      ]
    }
  ],
  "Hero Background Video": [
    {
      "description": "The UI should be a full-screen hero section with a background video that auto-plays on load. The video should be muted and loop indefinitely. There should be a text overlay with a heading and a call-to-action (CTA) button.",
      "html": "<div class=\"h-screen w-full relative\"><HeroBackgroundVideo/><HeroOverlay><!-- Hero overlay content will go here --></HeroOverlay></div>",
      "components": [
        {
          "name": "HeroBackgroundVideo",
          "is_standalone": true,
          "description": "A standalone component that renders a full-screen background video.",
          "html": "<video autoPlay loop muted class=\"absolute top-0 left-0 w-full h-full object-cover\" poster={video_poster}><source src={video_src} type={video_type}/>Your browser does not support the video tag.</video>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": false,
          "description": "A component that renders the text overlay with a heading and CTA button. Takes children.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full flex items-center justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Survey/poll voting options": [
    {
      "description": "The UI should display a list of voting options for a survey or poll, with each option showing the option text and a radio button to select it. The options should be stacked vertically on mobile and horizontally on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold\">{survey_title}</h2><SurveyOptionsList><!-- survey options will be inserted here --></SurveyOptionsList></div>",
      "components": [
        {
          "name": "SurveyOptionsList",
          "is_standalone": false,
          "description": "(takes children) - a container for a list of `SurveyOption` components",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-no-wrap md:flex-row\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a series of voting options, each with a label and a radio button. The options should be listed vertically on mobile devices and horizontally on larger screens. Each option should have a clear and accessible label, and the radio buttons should be easily clickable. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center\"><VotingOptions><VotingOption/><VotingOption/><VotingOption/></VotingOptions></div>",
      "components": [
        {
          "name": "VotingOption",
          "is_standalone": true,
          "description": "(standalone): A single voting option with a label and a radio button.",
          "html": "<label class=\"block mb-2\"><input type=\"radio\" name=\"votingOptions\" class=\"mr-2\"/><span class=\"text-lg\">{option_label}</span></label>"
        },
        {
          "name": "VotingOptions",
          "is_standalone": false,
          "description": "(takes children): A container for multiple `VotingOption` components.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    }
  ],
  "FAQ/Accordion Sections": [
    {
      "description": "The UI should display a list of FAQ sections, each with a question and an answer. The answer should be hidden by default and toggled on click. The FAQ sections should be stacked vertically, with a slight gap between each section. On mobile devices, the FAQ sections should take up the full width of the screen. On larger screens, the FAQ sections should be limited to a maximum width.",
      "html": "<div class=\"flex flex-wrap justify-center max-w-md mx-auto\"><AccordionSection/><AccordionSection/><!-- Add more AccordionSection components here --></div>",
      "components": [
        {
          "name": "AccordionSection",
          "is_standalone": true,
          "description": "(standalone) - Represents a single FAQ section",
          "html": "<div class=\"mb-4\"><AccordionQuestion/><AccordionAnswer/></div>"
        },
        {
          "name": "AccordionQuestion",
          "is_standalone": true,
          "description": "(standalone) - Represents the question part of an AccordionSection",
          "html": "<button class=\"w-full bg-gray-100 py-2 px-4 text-left\">{question_text}</button>"
        },
        {
          "name": "AccordionAnswer",
          "is_standalone": true,
          "description": "(standalone) - Represents the answer part of an AccordionSection",
          "html": "<div class=\"hidden\"><p>{answer_text}</p></div>"
        }
      ]
    }
  ],
  "Image uploader with progress": [
    {
      "description": "A simple image uploader with a progress bar that shows the upload progress. The UI should be responsive and accessible.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><ImageUploader/></div>",
      "components": [
        {
          "name": "ImageUploader",
          "is_standalone": true,
          "description": "A standalone component that contains the upload input, progress bar, and upload button.",
          "html": "<div class=\"flex flex-col items-center\"><input type=\"file\" id=\"file-input\" class=\"hidden\"/><label for=\"file-input\" class=\"cursor-pointer\"><UploadButton/></label><ProgressBar>{progressPercentage}%</ProgressBar><p class=\"text-sm text-gray-600\">{uploadStatus}</p></div>"
        },
        {
          "name": "ProgressBar",
          "is_standalone": false,
          "description": "A component that takes children (the progress percentage) and displays a progress bar.",
          "html": "<div class=\"w-full bg-gray-200 h-2 mb-2\"><div class=\"bg-blue-600 h-2\" style={{ width: `${children}%` }}></div></div>"
        },
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "A standalone component that displays an upload button.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Upload Image</button>"
        }
      ]
    }
  ],
  "Reply button to respond to tweets": [
    {
      "description": "The UI should be a small button with a reply icon and the text \"Reply\". The button should be blue and round, with a subtle hover effect. The text should be white and centered vertically within the button.",
      "html": "<button><ReplyButton/></button>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"><i class=\"fas fa-reply mr-2\"></i>Reply</button>"
        }
      ]
    },
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    }
  ],
  "Project Cards/Grids": [
    {
      "description": "A responsive grid of project cards, with each card displaying a thumbnail, title, description, and tags. The grid should be flexible to accommodate different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ProjectGrid><ProjectCard/><ProjectCard/><ProjectCard/><!-- Add more ProjectCard components here --></ProjectGrid></div>",
      "components": [
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "standalone component that displays a single project card",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={thumbnail_url} alt={project_title} class=\"w-full rounded-t\"/><h2 class=\"text-lg font-bold\">{project_title}</h2><p class=\"text-gray-600\">{project_description}</p><ul class=\"flex flex-wrap\">{tags.map((tag) =>( <li class=\"mr-2\">{tag}</li>))} </ul></div>"
        },
        {
          "name": "ProjectGrid",
          "is_standalone": false,
          "description": "container component that wraps a grid of project cards, takes children",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Breadcrumb Navigation": [
    {
      "description": "A horizontal list of links, with each item separated by a forward slash (/), and the current page highlighted.",
      "html": "<nav class=\"flex flex-wrap mb-4 text-sm\" aria-label=\"Breadcrumb\"><BreadcrumbNavigation><BreadcrumbItem/><BreadcrumbItem/><BreadcrumbItem/></BreadcrumbNavigation></nav>",
      "components": [
        {
          "name": "BreadcrumbItem",
          "is_standalone": true,
          "description": "(standalone): represents a single item in the breadcrumb navigation",
          "html": "<li class=\"mr-2\"><a href=\"{href}\" class=\"text-gray-600 hover:text-gray-900\">{label}</a><span class=\"mx-2\">/</span></li>"
        },
        {
          "name": "BreadcrumbNavigation",
          "is_standalone": false,
          "description": "(takes children): contains a list of breadcrumb items",
          "html": "<ul class=\"list-none p-0 m-0 flex flex-wrap\">{children}</ul>"
        }
      ]
    }
  ],
  "Page Content List Item": [
    {
      "description": "A list item that displays a brief summary of a piece of content, such as a blog post or a tutorial. The UI should be responsive, mobile-friendly, and accessible.",
      "html": "<ul class=\"flex flex-wrap justify-center mb-4\"><PageContentListItem/><!-- More list items... --></ul>",
      "components": [
        {
          "name": "PageContentListItem",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of a piece of content.",
          "html": "<li class=\"flex flex-wrap w-full md:w-1/2 xl:w-1/3 p-4\"><ContentThumbnail/><div class=\"flex-1 pl-4\"><h2 class=\"text-lg\">{title}</h2><ContentSummary/><p class=\"text-sm text-gray-600\">{brief_description}</p></div></li>"
        },
        {
          "name": "ContentThumbnail",
          "is_standalone": true,
          "description": "Standalone component that displays a thumbnail image for the content.",
          "html": "<img src={thumbnail_url} alt={title} class=\"w-24 h-24 object-cover rounded-sm\"/>"
        },
        {
          "name": "ContentSummary",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of the content.",
          "html": "<p class=\"text-sm\">{summary}</p>"
        }
      ]
    }
  ],
  "Pagination Links List": [
    {
      "description": "The UI should display a list of pagination links, with each link representing a page number. The active page should be highlighted, and the previous and next page links should be displayed. The UI should be responsive and adapt to different screen sizes.",
      "html": "<nav aria-label=\"Pagination\"><PaginationNav/><PaginationLinksList/></nav>",
      "components": [
        {
          "name": "PaginationLinksList",
          "is_standalone": true,
          "description": "standalone component that contains the entire pagination links list.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{paginationLinks}</ul>"
        },
        {
          "name": "PaginationNav",
          "is_standalone": true,
          "description": "standalone component that contains the previous and next page links.",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">{prevText}</button><button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\">{nextText}</button></div>"
        }
      ]
    }
  ],
  "Avatar display for user profile picture": [
    {
      "description": "The UI should be a circular avatar container with a user profile picture, responsive and mobile-first, with a maximum size of 120px.",
      "html": "<div class=\"flex justify-center mb-4\"><Avatar/></div>",
      "components": [
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<img src={avatarUrl} alt=\"User Profile Picture\" class=\"w-24 h-24 rounded-full object-cover\"/>"
        }
      ]
    }
  ],
  "Warning or error message for invalid input": [
    {
      "description": "The UI should display a warning or error message for invalid input. It should be a rectangular box with a red or orange background color, a clear and concise message, and an \"X\" icon to close the message.",
      "html": "<div class=\"bg-red-100 p-4 rounded mb-4\"><ErrorMessage/><CloseButton/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "(standalone): Displays the error message.",
          "html": "<p class=\"text-red-700\">{error_message}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "(standalone): Displays an \"X\" icon to close the message.",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">&times;</button>"
        }
      ]
    }
  ],
  "Article Title: Headline of individual post": [
    {
      "description": "The UI should display a prominent headline of an individual post, with a clear and readable font, suitable for desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PostHeadline/></header>",
      "components": [
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-3xl font-bold mb-2\">{post_title}</h1>"
        }
      ]
    }
  ],
  "Faceted search results display": [
    {
      "description": "The UI should display a list of search results with facets (filters) on the side. The facets should allow the user to narrow down the search results. The search results should be displayed in a list with each item showing the title, description, and any other relevant information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/4 xl:w-1/5 p-4\"><FacetContainer/></div><div class=\"w-full md:w-3/4 xl:w-4/5 p-4\"><SearchResults><!-- search results will be rendered here --></SearchResults></div></div></div>",
      "components": [
        {
          "name": "FacetContainer",
          "is_standalone": true,
          "description": "A standalone component that wraps the facets.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><h2 class=\"text-lg font-bold mb-4\">Filters</h2><!-- facets will be rendered here --></div>"
        },
        {
          "name": "FacetItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single item within a facet (e.g. \"$0-$50\", \"Nike\", etc.).",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><input type=\"checkbox\" id=\"{facet_item_id}\"/><label for=\"{facet_item_id}\" class=\"ml-2\">{facet_item_name}</label></li>"
        },
        {
          "name": "SearchResult",
          "is_standalone": true,
          "description": "A standalone component that displays a single search result.",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{result_title}</h3><p class=\"text-sm\">{result_description}</p><!-- other result details can be added here --></div>"
        },
        {
          "name": "SearchResults",
          "is_standalone": false,
          "description": "A component that takes children and displays the list of search results.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Service section with icons and brief descriptions": [
    {
      "description": "The UI should be a responsive service section with a grid of services, each consisting of an icon, a brief description, and a title. The icons should be large and prominent, with the description and title below. The service section should be accessible, responsive, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><Service/><Service/><Service/><!-- Add more Service components as needed --></div></div>",
      "components": [
        {
          "name": "Service",
          "is_standalone": true,
          "description": "A standalone component representing a single service, consisting of an icon, title, and description.",
          "html": "<div class=\"flex flex-col items-center\"><ServiceIcon/><ServiceInfo/></div>"
        },
        {
          "name": "ServiceIcon",
          "is_standalone": true,
          "description": "A standalone component representing the icon of a service.",
          "html": "<i class=\"text-5xl {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "ServiceInfo",
          "is_standalone": true,
          "description": "A standalone component representing the title and description of a service.",
          "html": "<div class=\"text-center\"><h3 class=\"text-lg\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a service section with three columns, each containing an icon, a brief description, and a title. The section should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<section class=\"max-w-md mx-auto pt-12 pb-6\"><h2 class=\"text-3xl font-bold mb-4\">Our Services</h2><div class=\"flex flex-wrap justify-center\"><ServiceCard/><ServiceCard/><ServiceCard/></div></section>",
      "components": [
        {
          "name": "ServiceCard",
          "is_standalone": true,
          "description": "standalone component that renders an icon, title, and description.",
          "html": "<div class=\"w-full md:w-1/3 xl:w-1/3 p-6\"><i class=\"fas fa-{icon_name} text-3xl text-gray-600 mb-4\"></i><h3 class=\"text-lg font-bold mb-2\">{service_title}</h3><p class=\"text-gray-600\">{service_description}</p></div>"
        }
      ]
    }
  ],
  "Game Reviews and Ratings": [
    {
      "description": "The UI should display a list of game reviews with their corresponding ratings, allowing users to easily scan and compare games. The design should be clean, modern, and responsive, with clear typography and adequate white space. The ratings should be visually prominent, and the overall layout should prioritize readability.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Game Reviews and Ratings</h1><GameRatingsList><!-- List of GameReviewCard components will be rendered here --></GameRatingsList></main>",
      "components": [
        {
          "name": "GameRatingsList",
          "is_standalone": false,
          "description": "(Takes children): A container component that holds a list of `GameReviewCard` components.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first design that displays a list of game reviews with their corresponding ratings. Each review should include the game title, rating, and a brief review text. The UI should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Game Reviews and Ratings</h1><GameReviewsList><!-- list of GameReviewCard components will be inserted here --></GameReviewsList></div>",
      "components": [
        {
          "name": "GameReviewsList",
          "is_standalone": false,
          "description": "(takes children): A list of game reviews that wraps the `GameReviewCard` components.",
          "html": "<ul class=\"list-none mb-0\"><!-- {children} will be inserted here --></ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of game reviews with their corresponding ratings, along with the game title, reviewer's name, and the review text.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl mb-4\">Game Reviews</h2><GameReviewList/></div>",
      "components": [
        {
          "name": "GameReviewCard",
          "is_standalone": true,
          "description": "standalone component that displays a single game review.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{gameTitle}</h3><p>By {reviewerName}</p><p class=\"text-gray-600\">{reviewText}</p><p>Rating: {rating}/5</p></div>"
        },
        {
          "name": "GameReviewList",
          "is_standalone": false,
          "description": "takes children (a list of `GameReviewCard` components).",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    }
  ],
  "Styled quotation displayed within the flow of text, often with distinct formatting": [
    {
      "description": "The UI should display a quotation in a distinct style, often with an italic font, and possibly with quotation marks. The quotation should be displayed within the flow of text.",
      "html": "<p>This is a sample text with a <Quotation/>within.\n</p>",
      "components": [
        {
          "name": "Quotation",
          "is_standalone": true,
          "description": "A standalone component that displays a quotation.",
          "html": "<span class=\"italic font-semibold text-lg\">{quotation_text}</span>"
        }
      ]
    }
  ],
  "Circular progress indicator, often used for loading animations": [
    {
      "description": "The UI should be a circular progress indicator with aLoader spinning animation. The circle should be incomplete when the progress is not 100%. The color scheme will be a calming blue.",
      "html": "<div class=\"flex justify-center\"><CircularProgressIndicator/></div>",
      "components": [
        {
          "name": "CircularProgressIndicator",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"w-12 h-12 border-4 border-blue-500 border-dashed rounded-full animate-spin\"><div class=\"w-full h-full border-4 border-blue-500 border-dashed rounded-full\" style={`--progress: ${progress}%;`}></div></div>"
        }
      ]
    }
  ],
  "Detailed product information table": [
    {
      "description": "The UI should display a responsive table with multiple rows, each containing detailed product information. The table should be easily readable on various devices, with a mobile-first approach.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><ProductTable/></div>",
      "components": [
        {
          "name": "ProductTable",
          "is_standalone": true,
          "description": "Standalone component, renders a table with product information.",
          "html": "<table class=\"w-full text-sm md:text-base lg:text-lg\">{rows}</table>"
        },
        {
          "name": "TableRow",
          "is_standalone": false,
          "description": "Component that takes children, represents a single row in the table.",
          "html": "<tr>{children}</tr>"
        },
        {
          "name": "TableCell",
          "is_standalone": false,
          "description": "Component that takes children, represents a single cell in the table.",
          "html": "<td class=\"px-4 py-2\">{children}</td>"
        }
      ]
    }
  ],
  "Alert Notification Style": [
    {
      "description": "The UI should consist of a notification alert box that is visible on the screen, with a bold title, a brief message, and a close button. The UI should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\" flex justify-center mb-4\"><AlertNotification/></div>",
      "components": [
        {
          "name": "AlertNotification",
          "is_standalone": true,
          "description": "standalone component that contains the title, message, and close button.",
          "html": "<div class=\"bg-orange-100 border border-orange-500 text-orange-700 px-4 py-3 rounded relative\"><AlertTitle/><AlertMessage/><CloseButton/></div>"
        },
        {
          "name": "AlertTitle",
          "is_standalone": true,
          "description": "standalone component that displays the bold title.",
          "html": "<p class=\"font-bold\">{alert_title}</p>"
        },
        {
          "name": "AlertMessage",
          "is_standalone": true,
          "description": "standalone component that displays the brief message.",
          "html": "<p>{alert_message}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "standalone component that displays the close button.",
          "html": "<button class=\"absolute top-0 right-0 text-gray-400 hover:text-gray-600 transition duration-300\">×</button>"
        }
      ]
    }
  ],
  "Upload file input field with file type and size limits": [
    {
      "description": "The UI should have a file input field that allows users to upload a file. The input field should have a label indicating the accepted file types and a maximum file size.",
      "html": "<div class=\"flex flex-col gap-2\"><Label>Upload File ({acceptedFileTypes})</Label><FileInput/><Description>Max file size: {maxFileSize}MB</Description></div>",
      "components": [
        {
          "name": "FileInput",
          "is_standalone": true,
          "description": "(standalone) - The file input field",
          "html": "<input type=\"file\" class=\"block w-full text-sm text-gray-700 file:mr-4 file:py-2 file:px-4 file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\" accept={acceptedFileTypes} maxLength={maxFileSize * 1024 * 1024}/>"
        },
        {
          "name": "Label",
          "is_standalone": false,
          "description": "(takes children) - The label for the file input field",
          "html": "<label class=\"block mb-2 text-sm font-medium text-gray-700\">{children}</label>"
        },
        {
          "name": "Description",
          "is_standalone": false,
          "description": "(takes children) - The description of the file input field",
          "html": "<p class=\"text-sm text-gray-500\">{children}</p>"
        }
      ]
    },
    {
      "description": "A file upload input field with a label, allowing users to select a file to upload, with file type and size limits.",
      "html": "<div class=\"flex flex-col\"><FileInputLabel/><FileUploadInput/><FileSizeLimit/><FileTypeLimit/></div>",
      "components": [
        {
          "name": "FileUploadInput",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<input type=\"file\" id=\"file-upload\" class=\"block w-full text-sm text-gray-700 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold\" accept=\"{accepted_file_types}\" max-size=\"{max_file_size}\"/>"
        },
        {
          "name": "FileInputLabel",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<label for=\"file-upload\" class=\"text-sm mb-2 block\">Select a file to upload:</label>"
        },
        {
          "name": "FileSizeLimit",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-xs text-gray-500\">Max file size: {max_file_size} MB</p>"
        },
        {
          "name": "FileTypeLimit",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-xs text-gray-500\">Accepted file types: {accepted_file_types}</p>"
        }
      ]
    }
  ],
  "Time picker dropdown": [
    {
      "description": "A dropdown time picker with hours and minutes selection.",
      "html": "<div class=\"relative inline-block\"><button class=\"bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded\">Select Time\n</button><ul class=\"absolute z-10 hidden md:block\"><TimePickerDropdown/></ul></div>",
      "components": [
        {
          "name": "TimePickerDropdown",
          "is_standalone": true,
          "description": "a standalone component that renders a dropdown time picker.",
          "html": "<ul class=\"bg-white border border-gray-200 rounded\">{timeOptions}</ul>"
        },
        {
          "name": "TimeOption",
          "is_standalone": false,
          "description": "a component that takes children, representing a single time option in the dropdown.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\">{children}</li>"
        }
      ]
    }
  ],
  "Projects showcase with thumbnails and descriptions": [
    {
      "description": "A projects showcase with a grid of thumbnails, each with a description and a link to view more.",
      "html": "<div class=\"container mx-auto p-4 pt-6 lg:p-6\"><h1 class=\"text-3xl font-bold mb-4\">Projects Showcase</h1><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProjectShowcase><ProjectCard><ProjectThumbnail/></ProjectCard><ProjectCard><ProjectThumbnail/></ProjectCard><ProjectCard><ProjectThumbnail/></ProjectCard><!-- and so on... --></ProjectShowcase></div></div>",
      "components": [
        {
          "name": "ProjectThumbnail",
          "is_standalone": true,
          "description": "standalone component that displays a single project thumbnail.",
          "html": "<a href=\"{project_url}\" class=\"block mb-4\"><img src=\"{thumbnail_url}\" alt=\"{project_name}\" class=\"h-48 w-full object-cover rounded-md\"/></a>"
        },
        {
          "name": "ProjectCard",
          "is_standalone": false,
          "description": "takes children, a container component that displays a project thumbnail and description.",
          "html": "<div class=\"p-4 md:p-6 bg-white rounded-md shadow-md\">{children} <h2 class=\"text-lg font-bold\">{project_name}</h2><p>{project_description}</p></div>"
        },
        {
          "name": "ProjectShowcase",
          "is_standalone": false,
          "description": "takes children, the main component that displays a grid of project cards.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive grid of project showcases, with each project displaying a thumbnail, a title, and a brief description. The grid should be mobile-first, with a single column on small screens and multiple columns on larger screens.",
      "html": "<section class=\"container max-w-7xl mx-auto p-4 lg:p-6\"><h1 class=\"text-3xl font-bold mb-4\">Projects</h1><ProjectsGrid><ProjectShowcase/><ProjectShowcase/><ProjectShowcase/><!-- add more ProjectShowcase components as needed --></ProjectsGrid></section>",
      "components": [
        {
          "name": "ProjectShowcase",
          "is_standalone": true,
          "description": "a standalone component displaying a single project's information",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><img src=\"{project_thumbnail_url}\" alt=\"{project_name} thumbnail\" class=\"w-full mb-2\"/><h2 class=\"text-lg font-bold\">{project_name}</h2><p class=\"text-gray-600\">{project_description}</p></div>"
        },
        {
          "name": "ProjectsGrid",
          "is_standalone": false,
          "description": "a component taking children, rendering a grid of project showcases",
          "html": "<div class=\"grid gap-4 lg:grid-cols-2 xl:grid-cols-3\">{children}</div>"
        }
      ]
    }
  ],
  "Notification Badge: Displays new notification count": [
    {
      "description": "A small badge that displays a count of new notifications, often placed in the top right corner of a navigation item or icon.",
      "html": "<nav><ul><li><a href=\"#\" class=\"flex items-center\"><span>Notifications</span><NotificationBadge/></a></li></ul></nav>",
      "components": [
        {
          "name": "NotificationBadge",
          "is_standalone": true,
          "description": "Standalone component that displays the notification count.",
          "html": "<div class=\"bg-red-500 text-white rounded-full px-2 py-1 text-xs\">{notificationCount}</div>"
        }
      ]
    }
  ],
  "Testimonial Author Profile": [
    {
      "description": "The UI should display a testimonial author's profile information, including their name, role, and photo, along with a quote and a rating. The component should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto mb-4 md:mb-8\"><TestimonialAuthorProfile/></div>",
      "components": [
        {
          "name": "TestimonialAuthorProfile",
          "is_standalone": true,
          "description": "A standalone component that displays the author's profile information and testimonial.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><AuthorAvatar/><div class=\"md:ml-4\"><p class=\"text-lg font-bold\">{author_name}</p><p class=\"text-gray-600\">{author_role}</p><Rating/></div></div><TestimonialQuote/>"
        },
        {
          "name": "AuthorAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the author's photo.",
          "html": "<img class=\"w-24 h-24 rounded-full\" src={author_photo_url} alt={author_name}/>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "A standalone component that displays the rating.",
          "html": "<div class=\"flex mb-2\">{rating_out_of_five} <i class=\"fas fa-star text-yellow-500\"></i></div>"
        },
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "A standalone component that displays the testimonial quote.",
          "html": "<blockquote class=\"text-lg italic mb-4\">{testimonial_quote}</blockquote>"
        }
      ]
    }
  ],
  "Opportunity Tracker: Monitor sales pipelines": [
    {
      "description": "The Opportunity Tracker UI should display a list of sales opportunities, with each opportunity showing its name, stage, and probability of closing. The UI should be responsive, with a card-based layout on larger screens and a list view on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Opportunity Tracker</h1><OpportunityList><!-- List of OpportunityCard components will be rendered here --></OpportunityList></div>",
      "components": [
        {
          "name": "OpportunityList",
          "is_standalone": false,
          "description": "A component that takes children (a list of `OpportunityCard` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Opportunity Tracker UI should be a dashboard that displays a list of sales opportunities, each with its stage, probability, and value. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Opportunity Tracker</h1><OpportunityList><!-- list of opportunities --></OpportunityList></div>",
      "components": [
        {
          "name": "OpportunityList",
          "is_standalone": false,
          "description": "(takes children): a list of `OpportunityCard` components",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "PipelineStage",
          "is_standalone": true,
          "description": "(standalone): displays the stage of a sales opportunity",
          "html": "<span class=\"bg-orange-200 text-orange-800 py-1 px-2 rounded\">{stage}</span>"
        },
        {
          "name": "ProbabilityBadge",
          "is_standalone": true,
          "description": "(standalone): displays the probability of a sales opportunity",
          "html": "<span class=\"bg-green-200 text-green-800 py-1 px-2 rounded\">{probability}%</span>"
        },
        {
          "name": "ValueDisplay",
          "is_standalone": true,
          "description": "(standalone): displays the value of a sales opportunity",
          "html": "<p>{value} {currency}</p>"
        }
      ]
    }
  ],
  "Testimonial Avatar Image": [
    {
      "description": "The UI should display a circular image of a person, with a testimonial quote overlaid on top of it, along with the person's name and job title.",
      "html": "<div class=\"flex flex-col items-center\"><TestimonialAvatarImage/><div class=\"mt-4\"><TestimonialQuote><p>{testimonial_quote}</p></TestimonialQuote><TestimonialName/><TestimonialJobTitle/></div></div>",
      "components": [
        {
          "name": "TestimonialAvatarImage",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<img src={image_url} alt={name} class=\"w-24 h-24 rounded-full object-cover\"/>"
        },
        {
          "name": "TestimonialQuote",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"text-lg font-light\">{children}</div>"
        },
        {
          "name": "TestimonialName",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg font-bold\">{name}</p>"
        },
        {
          "name": "TestimonialJobTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-sm text-gray-600\">{job_title}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a circular avatar image with a testimonial quote and the name of the person who gave the testimonial.",
      "html": "<div class=\"flex flex-col items-center mb-4 md:flex-row md:items-start\"><TestimonialAvatar/><div class=\"ml-4\"><Quote/><Name/></div></div>",
      "components": [
        {
          "name": "TestimonialAvatar",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<img src={image_url} alt={name} class=\"w-16 h-16 rounded-full object-cover\"/>"
        },
        {
          "name": "Quote",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<blockquote class=\"text-lg italic\">{testimonial_quote}</blockquote>"
        },
        {
          "name": "Name",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<p class=\"text-lg\">{name}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a circular avatar image with a testimonial quote wrapped around it.",
      "html": "<div class=\"flex flex-col items-center mb-4\"><TestimonialAvatarImage/><QuoteText/></div>",
      "components": [
        {
          "name": "TestimonialAvatarImage",
          "is_standalone": true,
          "description": "standalone component that displays a circular avatar image with a testimonial quote.",
          "html": "<img src={avatar_image_url} alt={name} class=\"w-20 h-20 rounded-full object-cover\"/>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "standalone component that displays the testimonial quote.",
          "html": "<blockquote class=\"text-lg font-bold\">{quote}</blockquote>"
        }
      ]
    }
  ],
  "Floating Action Buttons": [
    {
      "description": "A set of floating action buttons (FABs) that can be used to perform various actions. There should be a main FAB and several smaller FABs that can be toggled on and off.",
      "html": "<div class=\"fixed bottom-0 right-0 mb-4 mr-4\"><FabContainer><MainFab/><MiniFab/><MiniFab/><MiniFab/></FabContainer></div>",
      "components": [
        {
          "name": "MainFab",
          "is_standalone": true,
          "description": "Standalone component that represents the main FAB.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">{main_fab_icon}</button>"
        },
        {
          "name": "MiniFab",
          "is_standalone": true,
          "description": "Standalone component that represents a smaller FAB.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-1 px-2 rounded-full\">{mini_fab_icon}</button>"
        },
        {
          "name": "FabContainer",
          "is_standalone": false,
          "description": "Component that takes children, used to wrap the FABs.",
          "html": "<div class=\"relative\">{children}</div>"
        }
      ]
    }
  ],
  "Product details page": [
    {
      "description": "The product details page should display the product's image, name, description, price, and call-to-action (CTA) buttons. The UI should be responsive, with the image and description side-by-side on large screens, and stacked on small screens.",
      "html": "<!-- Product details page --><div class=\"flex flex-col md:flex-row gap-4 md:gap-8\"><ProductImage/><div class=\"md:w-2/3\"><ProductHeader/><ProductDescription/></div><CallToAction/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): displays the product image",
          "html": "<img src={imageUrl} alt={productName} class=\"w-full md:w-1/2 h-64 md:h-full object-cover\"/>"
        },
        {
          "name": "ProductHeader",
          "is_standalone": true,
          "description": "(standalone): displays the product name and price",
          "html": "<h1 class=\"text-3xl font-bold\">{productName}</h1><p class=\"text-lg\">{productPrice}</p>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): displays the product description",
          "html": "<p class=\"text-lg\">{productDescription}</p>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "(standalone): displays the call-to-action buttons",
          "html": "<div class=\"flex gap-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Learn More</button></div>"
        }
      ]
    }
  ],
  "Responsive Video Embeds": [
    {
      "description": "A responsive video embed that adjusts to different screen sizes, with a maximum width of 800px and a height that scales accordingly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><VideoEmbed/></div>",
      "components": [
        {
          "name": "VideoEmbed",
          "is_standalone": true,
          "description": "standalone component, contains the video iframe and styling.",
          "html": "<!-- wrapper div for video iframe --><div class=\"aspect-w-16 aspect-h-9\"><!-- iframe with video content --><iframe src=\"{video_url}\" frameborder=\"0\" allowfullscreen></iframe></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video embed that adapts to different screen sizes and devices. The video should be centered and have a max width of 100% to ensure it doesn't exceed the parent container's width.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><ResponsiveVideoEmbed/></div>",
      "components": [
        {
          "name": "ResponsiveVideoEmbed",
          "is_standalone": true,
          "description": "A standalone component that wraps the video iframe.",
          "html": "<div class=\"aspect-w-16 aspect-h-9\"><VideoIFrame/></div>"
        },
        {
          "name": "VideoIFrame",
          "is_standalone": true,
          "description": "A standalone component that renders the video iframe.",
          "html": "<iframe class=\"w-full h-full\" src={`https://www.youtube.com/embed/${video_id}`} frameBorder=\"0\" allowFullScreen/>"
        }
      ]
    }
  ],
  "Pagination Previous Link": [
    {
      "description": "The UI should be a disabled or enabled previous link element for pagination, indicating the ability to navigate to the previous page. The link should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<nav aria-label=\"Pagination\"><PaginationPreviousLink/><!-- Other pagination links will go here --></nav>",
      "components": [
        {
          "name": "PaginationPreviousLink",
          "is_standalone": true,
          "description": "Standalone component, indicates the ability to navigate to the previous page.",
          "html": "<a href=\"{previous_page_url}\" class=\"rounded-md py-2 px-4 {disabled ? 'cursor-not-allowed opacity-50' : 'bg-gray-100 hover:bg-gray-200'}\" aria-disabled={disabled ? 'true' : 'false'}>{disabled ? '« Previous' : '‹ Previous'}</a>"
        }
      ]
    }
  ],
  "Scroll-Activated Animation Effect": [
    {
      "description": "The UI should display a box that animates when the user scrolls to a certain point on the page. The box should be invisible until the animation is triggered.",
      "html": "<div class=\"h-screen overflow-y-scroll\"><!-- scrollable content --><p>{scrollable_content}</p><!-- animated box --><AnimatedBox/><!-- more scrollable content --><p>{more_scrollable_content}</p></div>",
      "components": [
        {
          "name": "AnimatedBox",
          "is_standalone": true,
          "description": "(standalone) : A box that animates when the user scrolls to a certain point on the page.",
          "html": "<div class=\"hidden opacity-0 transition-all duration-500\" data-animate-trigger=\"scroll\" data-animate-class=\"block opacity-100\"><!-- animated content --><p>{animated_content}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a scroll-activated animation effect. Initially, the animation is hidden, and as the user scrolls down, the animation is triggered and becomes visible. The animation can be a fade-in, slide-in, or any other creative effect.",
      "html": "<div class=\"h-screen overflow-y-scroll\"><!-- content before the animation --><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet nulla auctor, vestibulum magna sed, convallis ex.</p><AnimatedSection/><!-- content after the animation --><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet nulla auctor, vestibulum magna sed, convallis ex.</p></div>",
      "components": [
        {
          "name": "AnimatedSection",
          "is_standalone": true,
          "description": "standalone component that wraps the animation effect.",
          "html": "<section class=\"w-full h-64 bg-orange-200 animate-fadeIn\"><!-- animation content --><h2>{animated_title}</h2><p>{animated_text}</p></section>"
        },
        {
          "name": "AnimationTrigger",
          "is_standalone": true,
          "description": "standalone component that triggers the animation when scrolled into view.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-1 bg-transparent\"><!-- empty element to trigger the animation --></div>"
        }
      ]
    }
  ],
  "Similar items display": [
    {
      "description": "The UI should display a list of similar items, each with a title, description, and a call-to-action (CTA) button. The items should be displayed in a grid or list format, with sufficient spacing between each item. The UI should be responsive, with the item cards adapting to different screen sizes.",
      "html": "<section class=\"container mx-auto p-4 mb-8\"><h2 class=\"text-2xl font-bold mb-4\">Similar Items</h2><SimilarItemsList><SimilarItemCard/><SimilarItemCard/><SimilarItemCard/><!-- add more item cards here --></SimilarItemsList></section>",
      "components": [
        {
          "name": "SimilarItemCard",
          "is_standalone": true,
          "description": "a standalone component that represents a single similar item, with a title, description, and CTA button.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h3 class=\"text-lg font-bold\">{item_title}</h3><p class=\"text-gray-600\">{item_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "SimilarItemsList",
          "is_standalone": false,
          "description": "a component that takes children (`SimilarItemCard` components) and displays them in a grid or list format.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Follow us buttons": [
    {
      "description": "The UI should be a horizontal row of social media follow us buttons, with each button representing a different platform (e.g. Twitter, Facebook, Instagram, etc.). The buttons should be rectangular in shape, with a solid background color and white text. The text should be the name of the social media platform. The buttons should be responsive and stack horizontally on small screens.",
      "html": "<div class=\"container mx-auto p-4 flex flex-wrap justify-center\"><FollowUsButtonsContainer><FollowUsButton/><FollowUsButton/><FollowUsButton/><!-- Add more buttons here --></FollowUsButtonsContainer></div>",
      "components": [
        {
          "name": "FollowUsButton",
          "is_standalone": true,
          "description": "(standalone): a single social media follow us button",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"bg-{social_media_color} text-white py-2 px-4 rounded hover:bg-{social_media_hover_color}\">{social_media_name}</a>"
        },
        {
          "name": "FollowUsButtonsContainer",
          "is_standalone": false,
          "description": "(takes children): a container that holds all the social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a row of social media buttons with the label \"Follow us\" above them. The buttons should be responsive, accessible, and stylized using Tailwind CSS.",
      "html": "<div class=\"container mx-auto p-4\"><FollowUs/></div>",
      "components": [
        {
          "name": "FollowUs",
          "is_standalone": true,
          "description": "A standalone component that displays the \"Follow us\" label and the social media buttons.",
          "html": "<div class=\"flex flex-col items-center mb-4\"><p class=\"text-lg font-bold mb-2\">Follow us</p><div class=\"flex justify-center mb-4\"><SocialButton><i class=\"fab fa-facebook-f\">{facebook_link}</i></SocialButton><SocialButton><i class=\"fab fa-twitter\">{twitter_link}</i></SocialButton><SocialButton><i class=\"fab fa-instagram\">{instagram_link}</i></SocialButton></div></div>"
        },
        {
          "name": "SocialButton",
          "is_standalone": false,
          "description": "A component that takes children (the social media platform's logo and link) and displays a button with the logo and links to the platform.",
          "html": "<a href=\"{link}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"inline-flex items-center justify-center w-10 h-10 mx-2 rounded-full bg-gray-200 hover:bg-gray-300\">{children}</a>"
        }
      ]
    }
  ],
  "Latest news section": [
    {
      "description": "The latest news section should display a list of news articles with a title, description, and a \"Read more\" button. It should be responsive, with a maximum of 3 columns on large screens and 1 column on small screens.",
      "html": "<section class=\"container mx-auto p-4\"><h2>Latest News</h2><div class=\"grid gap-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1\"><NewsArticleCard/><NewsArticleCard/><NewsArticleCard/><!-- add more NewsArticleCard components here --></div></section>",
      "components": [
        {
          "name": "NewsArticleCard",
          "is_standalone": true,
          "description": "standalone component that displays a single news article",
          "html": "<article class=\"bg-white shadow-md rounded p-4\"><h3>{article_title}</h3><p>{article_description}</p><a href=\"{article_link}\" class=\"text-blue-600 hover:text-blue-900 transition duration-300\">Read more</a></article>"
        }
      ]
    }
  ],
  "Quiz question display": [
    {
      "description": "The UI should display a quiz question with a heading, a question text, and options to choose from. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><QuizQuestionHeading/><QuestionText/><OptionList><Option/><Option/><!-- add more options here --></OptionList></div>",
      "components": [
        {
          "name": "QuizQuestionHeading",
          "is_standalone": true,
          "description": "A standalone component that displays the question heading.",
          "html": "<h2 class=\"text-2xl font-bold mb-2\">{question_heading}</h2>"
        },
        {
          "name": "QuestionText",
          "is_standalone": true,
          "description": "A standalone component that displays the question text.",
          "html": "<p class=\"text-lg\">{question_text}</p>"
        },
        {
          "name": "OptionList",
          "is_standalone": false,
          "description": "A component that takes children (options) and displays them as a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        },
        {
          "name": "Option",
          "is_standalone": true,
          "description": "A standalone component that displays a single option.",
          "html": "<li class=\"mb-2\"><input type=\"radio\" id=\"{option_id}\" name=\"options\"/><label for=\"{option_id}\" class=\"ml-2\">{option_text}</label></li>"
        }
      ]
    },
    {
      "description": "The UI should display a single quiz question with a question text, four possible answers, and an optional image. The question and answers should be clearly readable, and the image should be displayed to the side of the question text.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 md:pt-12\"><QuizQuestion><div class=\"flex flex-wrap -mx-4 mb-4\"><QuizImage/><div class=\"w-full md:w-2/3 px-4\"><QuizQuestionText/></div></div><ul class=\"list-none mb-4\"><li><QuizAnswerOption/></li><li><QuizAnswerOption/></li><li><QuizAnswerOption/></li><li><QuizAnswerOption/></li></ul></QuizQuestion></div>",
      "components": [
        {
          "name": "QuizQuestion",
          "is_standalone": false,
          "description": "The main component that displays a single quiz question. It takes children.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-6\">{children}</div>"
        },
        {
          "name": "QuizQuestionText",
          "is_standalone": true,
          "description": "Displays the text of the quiz question. Standalone.",
          "html": "<h2 class=\"text-2xl mb-4\">{question_text}</h2>"
        },
        {
          "name": "QuizAnswerOption",
          "is_standalone": true,
          "description": "Displays a single answer option. Standalone.",
          "html": "<li class=\"mb-2\"><input type=\"radio\" name=\"answer\" id=\"{answer_id}\" class=\"mr-2\"/><label htmlFor=\"{answer_id}\" class=\"text-lg\">{answer_text}</label></li>"
        },
        {
          "name": "QuizImage",
          "is_standalone": true,
          "description": "Displays an optional image related to the quiz question. Standalone.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-1/2 md:w-1/3 mx-auto mb-4\"/>"
        }
      ]
    },
    {
      "description": "The UI should display a quiz question with options to choose from. The question should be prominently displayed, and the options should be listed below it. The UI should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"md:w-1/2 xl:w-1/3 mx-auto p-4\"><QuizQuestion/><OptionList><Option/><Option/><Option/><!-- Add more options here --></OptionList></div>",
      "components": [
        {
          "name": "QuizQuestion",
          "is_standalone": true,
          "description": "(standalone): Displays the quiz question.",
          "html": "<h2 class=\"text-2xl font-bold\">{question_text}</h2>"
        },
        {
          "name": "OptionList",
          "is_standalone": false,
          "description": "(takes children): Lists the options for the quiz question.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "Option",
          "is_standalone": true,
          "description": "(standalone): Displays a single option.",
          "html": "<li class=\"mb-2\"><input type=\"radio\" id=\"{option_id}\" name=\"option\"/><label for=\"{option_id}\" class=\"ml-2\">{option_text}</label></li>"
        }
      ]
    },
    {
      "description": "The UI should display a quiz question with options to choose from. It should be responsive, mobile-first, and accessible. The question and options should be clearly readable, with sufficient spacing and contrast.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 bg-white rounded shadow-md\"><QuizQuestion/><ul class=\"list-none mb-4\"><li><OptionButton>Option 1</OptionButton></li><li><OptionButton>Option 2</OptionButton></li><li><OptionButton>Option 3</OptionButton></li><li><OptionButton>Option 4</OptionButton></li></ul></div>",
      "components": [
        {
          "name": "QuizQuestion",
          "is_standalone": true,
          "description": "standalone, displays the quiz question",
          "html": "<h2 class=\"text-lg font-bold\">{question_text}</h2>"
        },
        {
          "name": "OptionButton",
          "is_standalone": false,
          "description": "takes children, displays an option with a radio button",
          "html": "<label class=\"block mb-2\"><input type=\"radio\" name=\"option\" value=\"{option_value}\"/><span class=\"ml-2\">{children}</span></label>"
        }
      ]
    }
  ],
  "Product Feature Icon List": [
    {
      "description": "The UI should display a list of product features, each represented by an icon and a brief description. The list should be responsive, mobile-first, and accessible. The icons should be prominently displayed, with the descriptions below each icon.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><FeatureList><IconItem/><IconItem/><IconItem/><!-- Add more IconItem components as needed --></FeatureList></div>",
      "components": [
        {
          "name": "IconItem",
          "is_standalone": true,
          "description": "A standalone component representing a single feature icon and its description.",
          "html": "<div class=\"flex mb-4 lg:mb-6\"><div class=\"mr-4 lg:mr-6\"><i aria-hidden=\"true\" class={`fas fa-${icon_name} text-3xl lg:text-4xl`}></i></div><div class=\"text-sm lg:text-base\"><p class=\"font-bold\">{feature_name}</p><p class=\"text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the list of `IconItem` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of product features, with each feature represented by an icon and a brief description. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></div>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and a brief description of a product feature.",
          "html": "<div class=\"flex items-center mb-4\"><div class=\"w-12 h-12 p-2 mr-4 bg-gray-200 rounded-full\"><i class=\"fas {icon_class}\" aria-hidden=\"true\"></i></div><p class=\"text-gray-600\">{feature_description}</p></div>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of `FeatureIcon` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, each represented by an icon and a brief description. The list should be responsive, with a maximum of 3 items per row on desktop and 1 item per row on mobile. The icons should be large and prominent, with a subtle hover effect.",
      "html": "<div class=\"container mx-auto p-4\"><FeatureIconList><FeatureIconListItem/><FeatureIconListItem/><FeatureIconListItem/><!-- add more items here --></FeatureIconList></div>",
      "components": [
        {
          "name": "FeatureIconListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single feature icon and description",
          "html": "<div class=\"flex flex-col items-center p-4 md:w-1/3\"><i class={`fa ${icon_class}`}></i><p class=\"text-sm\">{feature_description}</p></div>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "(takes children): a container for a list of `FeatureIconListItem`s",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of icons with accompanying text that highlight key features of a product. The list should be responsive, with icons and text aligned horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\"><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and associated text.",
          "html": "<li class=\"lg:w-1/2 xl:w-1/3 md:w-full px-4 md:px-8 mb-8 md:mb-4\"><i class=\"fas fa-{icon_class} text-{icon_color}\">{icon_size}</i><p class=\"text-lg\">{feature_text}</p></li>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a list.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of icons, each representing a product feature, with a brief description. The icons should be displayed in a grid on larger screens and stacked on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><ProductFeatureIconList><ProductFeatureIcon/><ProductFeatureIcon/><ProductFeatureIcon/><!-- Add more ProductFeatureIcon components as needed --></ProductFeatureIconList></section>",
      "components": [
        {
          "name": "ProductFeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that represents a single product feature icon with a description.",
          "html": "<div class=\"flex items-center mb-4 gap-2\"><i class=\"text-lg\">{icon_class}</i><div><p class=\"text-sm\">{feature_name}</p><p class=\"text-xs text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "ProductFeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of ProductFeatureIcon components.",
          "html": "<ul class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Categories": [
    {
      "description": "The UI should display a list of categories, with each category displayed as a box with a title and a count of items in that category. The categories should be responsive, arranged in a grid on larger screens and in a list on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Categories</h1><CategoriesList><CategoryCard/><CategoryCard/><!-- More CategoryCard components here --></CategoriesList></div>",
      "components": [
        {
          "name": "CategoryCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single category.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded mb-4\"><h2 class=\"text-lg font-bold\">{categoryName}</h2><p class=\"text-gray-600 text-sm\">{itemCount} items</p></div>"
        },
        {
          "name": "CategoriesList",
          "is_standalone": false,
          "description": "A component that takes children, which are a list of `CategoryCard` components.",
          "html": "<div class=\"grid lg:grid-cols-2 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "On/off control that users can slide to change a setting or state": [
    {
      "description": "The UI should be a toggle switch that can be slid to change a setting or state. It should have a clear visual indicator of the current state (on or off) and be easily accessible on various devices and screen sizes.",
      "html": "<div class=\"flex items-center mb-4\"><!-- Label for the toggle switch --><label class=\"mr-4\">{label}</label><ToggleSwitch/></div>",
      "components": [
        {
          "name": "ToggleSwitch",
          "is_standalone": true,
          "description": "A standalone component that represents the toggle switch.",
          "html": "<!-- The toggle switch container --><div class=\"inline-block align-middle transition duration-200 ease-in-out\"><!-- The toggle switch button --><button aria-label=\"Toggle Switch\" aria-checked={isChecked} class=\"w-12 h-6 flex items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2\"><!-- The slider button inside the toggle switch --><span class={`w-5 h-5 rounded-full shadow-md ${isChecked ? 'bg-green-500' : 'bg-gray-400'}`}></span></button></div>"
        }
      ]
    }
  ],
  "Tooltip/Hovercard Previews": [
    {
      "description": "The UI should be a hovercard preview that appears when a user hovers over a trigger element, providing additional information about the trigger element. The hovercard should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center\"><HovercardTrigger/><HovercardPreview><!-- hovercard content goes here --></HovercardPreview></div>",
      "components": [
        {
          "name": "HovercardTrigger",
          "is_standalone": true,
          "description": "Standalone component that triggers the hovercard preview when hovered over.",
          "html": "<a href=\"#\" class=\"inline-block p-2 hover:underline\">Trigger Text</a>"
        },
        {
          "name": "HovercardPreview",
          "is_standalone": false,
          "description": "Component that takes children, displaying the additional information about the trigger element.",
          "html": "<div class=\"absolute z-10 bg-white shadow-md p-4 rounded\"><h5 class=\"text-lg font-bold\">{header_text}</h5><p class=\"text-gray-600\">{preview_text}</p>{children}</div>"
        }
      ]
    }
  ],
  "Recommendations and 'You Might Like'": [
    {
      "description": "The UI should display a list of recommendations and \"You Might Like\" suggestions, with each item having a title, description, and a call-to-action button. The UI should be responsive, mobile-first, and accessible, with clear headings and sufficient spacing between elements.",
      "html": "<div class=\"max-w-lg mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Recommendations</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList><h2 class=\"text-xl font-bold mb-4 mt-8\">You Might Like</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList></div>",
      "components": [
        {
          "name": "RecommendationCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single recommendation with a title, description, and a call-to-action button.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "RecommendationsList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `RecommendationCard` components, and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Dropdown Menu Chevron": [
    {
      "description": "The UI should be a dropdown menu with a chevron icon that indicates the menu is expandable. The menu should be responsive and accessible.",
      "html": "<div class=\"w-full max-w-md mx-auto\"><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu><ChevronIcon/></button></div>",
      "components": [
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "Takes children, a container for the dropdown menu items",
          "html": "<div class=\"bg-white border border-gray-200 w-full rounded\">{children}</div>"
        },
        {
          "name": "ChevronIcon",
          "is_standalone": true,
          "description": "Standalone, a chevron icon indicating the menu is expandable",
          "html": "<div class=\"ml-2\"><span class=\"text-gray-500\">{chevron_icon}</span></div>"
        }
      ]
    }
  ],
  "Audio player": [
    {
      "description": "The UI should be a responsive audio player with a simple and clean design. It should have a play/pause button, a progress bar, and a display for the current time and duration of the audio.",
      "html": "<div class=\"flex flex-col items-center w-full p-4 md:p-6 lg:p-8\"><AudioPlayer/></div>",
      "components": [
        {
          "name": "AudioPlayer",
          "is_standalone": true,
          "description": "standalone, contains the entire audio player UI",
          "html": "<div class=\"flex flex-col items-center w-full\"><PlayPauseButton/><ProgressBar/><TimeDisplay/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "standalone, a button to toggle play and pause",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_text}</button>"
        },
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "standalone, a progress bar to display the current progress of the audio",
          "html": "<div class=\"w-full bg-gray-200 h-2 mb-4\"><div class=\"bg-orange-500 h-2\" style={{width: playback_progress + '%'}}></div></div>"
        },
        {
          "name": "TimeDisplay",
          "is_standalone": true,
          "description": "standalone, displays the current time and duration of the audio",
          "html": "<p class=\"text-sm text-gray-600\">{current_time}/ {audio_duration}</p>"
        }
      ]
    },
    {
      "description": "A responsive audio player with play/pause button, progress bar, and controls for volume and playback speed.",
      "html": "<div class=\"flex flex-col items-center\"><AudioPlayer/></div>",
      "components": [
        {
          "name": "AudioPlayer",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"bg-white shadow-md rounded-lg p-4\"><div class=\"flex justify-between mb-4\"><PlayPauseButton/><ProgressBar/></div><div class=\"flex justify-between mb-4\"><VolumeControl/><PlaybackSpeedControl/></div><audio src={audio_source}/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_icon}</button>"
        },
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-full bg-gray-200 h-2 mb-4\"><div class=\"bg-orange-500 h-2\" style={{ width: `${progress_percentage}%` }}/></div>"
        },
        {
          "name": "VolumeControl",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"flex items-center\"><button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\">{volume_icon} </button><input type=\"range\" min=\"0\" max=\"100\" value={volume_level}/></div>"
        },
        {
          "name": "PlaybackSpeedControl",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<select class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><option value=\"0.5\">0.5x</option><option value=\"1\">1x</option><option value=\"1.5\">1.5x</option><option value=\"2\">2x</option></select>"
        }
      ]
    }
  ],
  "Quote players": [
    {
      "description": "The UI should display a list of quotes with their respective authors. Each quote should be displayed on a separate line with the author's name on a new line below the quote. The quotes should be displayed in a responsive list, with a maximum width to prevent the text from becoming too wide.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Quote Players</h1><QuotePlayerList><!-- List of quotes will be inserted here --></QuotePlayerList></div>",
      "components": [
        {
          "name": "QuotePlayerList",
          "is_standalone": false,
          "description": "A component that takes children, which are `QuotePlayerCard` components, and displays them in a responsive list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Dropdown Menu Item Icon": [
    {
      "description": "The UI should be a dropdown menu item with an icon. The icon should be on the left side of the text, and the text should be displayed in a single line.",
      "html": "<ul><li><DropdownMenuItemIcon/></li></ul>",
      "components": [
        {
          "name": "DropdownMenuItemIcon",
          "is_standalone": true,
          "description": "A standalone component that contains an icon and text.",
          "html": "<li><Icon/><span>{menuItemText}</span></li>"
        },
        {
          "name": "Icon",
          "is_standalone": true,
          "description": "A standalone component that represents the icon.",
          "html": "<i class=\"w-4 h-4 text-gray-500\"></i>"
        }
      ]
    }
  ],
  "Featured Product Reviews": [
    {
      "description": "The UI should display a list of featured product reviews, each with a product image, review title, rating, and short description. The reviews should be displayed in a grid or list format, with a maximum of 3 reviews per row on desktop and 1 review per row on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2>Featured Reviews</h2><ReviewsGrid><FeaturedReviewCard/><FeaturedReviewCard/><FeaturedReviewCard/><!-- Add more review cards here --></ReviewsGrid></div>",
      "components": [
        {
          "name": "FeaturedReviewCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single review, including the product image, review title, rating, and short description.",
          "html": "<div class=\"bg-white border rounded p-4\"><img src={product_image_url} alt={product_name} class=\"w-full mb-4\"/><h3 class=\"text-lg font-bold\">{review_title}</h3><div class=\"flex items-center mb-2\"><span class=\"text-lg\">{rating}/5</span><span class=\"text-gray-600\">{rating_count} reviews</span></div><p>{short_description}</p></div>"
        },
        {
          "name": "ReviewsGrid",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a grid format, with a maximum of 3 reviews per row on desktop and 1 review per row on mobile devices.",
          "html": "<div class=\"grid gap-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1\">{children}</div>"
        }
      ]
    }
  ],
  "WYSIWYG/Rich Text Editors": [
    {
      "description": "The UI should resemble a typical WYSIWYG/Rich Text Editor, with a toolbar at the top and a text area below. The toolbar should have buttons for common formatting options, such as bold, italic, underline, and font size. The text area should be resizable and have a minimum height.",
      "html": "<RichTextEditor><Toolbar><ButtonGroup><FormatButton/><FormatButton/><!-- more buttons --></ButtonGroup></Toolbar><TextArea/></RichTextEditor>",
      "components": [
        {
          "name": "RichTextEditor",
          "is_standalone": false,
          "description": "The main component that wraps the entire UI. Takes children.",
          "html": "<div class=\"flex flex-col h-screen overflow-hidden\">{children}</div>"
        },
        {
          "name": "Toolbar",
          "is_standalone": false,
          "description": "The component that contains the formatting buttons. Takes children.",
          "html": "<div class=\"flex justify-center py-2 bg-gray-200\">{children}</div>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "A component that contains a group of related buttons. Takes children.",
          "html": "<div class=\"flex space-x-2\">{children}</div>"
        },
        {
          "name": "FormatButton",
          "is_standalone": true,
          "description": "A single button for a specific formatting option. Standalone.",
          "html": "<button class=\"px-2 py-1 rounded text-sm hover:bg-gray-300\"><!-- icon or text for the button --></button>"
        },
        {
          "name": "TextArea",
          "is_standalone": true,
          "description": "The text area where the user can input and edit text. Standalone.",
          "html": "<textarea class=\"w-full h-full p-2 resize-y\" rows=\"10\"></textarea>"
        }
      ]
    },
    {
      "description": "The UI should resemble a typical text editor with formatting options, such as bold, italic, and font sizes. It should also have a toolbar with buttons for undo, redo, and formatting options.",
      "html": "<div class=\"flex flex-col h-screen\"><EditorToolbar/><EditorInput><!-- The input field where the user can enter and format text --></EditorInput></div>",
      "components": [
        {
          "name": "EditorToolbar",
          "is_standalone": true,
          "description": "(standalone): The top toolbar with formatting options.",
          "html": "<div class=\"flex justify-between bg-gray-200 p-2\"><UndoButton/><RedoButton/><FormatButton/><!-- More formatting options can be added here --></div>"
        },
        {
          "name": "EditorInput",
          "is_standalone": false,
          "description": "(takes children): The input field where the user can enter and format text.",
          "html": "<textarea class=\"w-full p-4 h-screen overflow-auto\" `{height}`>{children}</textarea>"
        },
        {
          "name": "UndoButton",
          "is_standalone": true,
          "description": "(standalone): A button to undo the last change.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 py-2 px-4 rounded\"><i class=\"fas fa-undo\"></i>Undo</button>"
        },
        {
          "name": "RedoButton",
          "is_standalone": true,
          "description": "(standalone): A button to redo the last change.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 py-2 px-4 rounded\"><i class=\"fas fa-redo\"></i>Redo</button>"
        },
        {
          "name": "FormatButton",
          "is_standalone": true,
          "description": "(standalone): A dropdown button to select font sizes and formatting options.",
          "html": "<div class=\"relative\"><button class=\"bg-white hover:bg-gray-100 text-gray-800 py-2 px-4 rounded\">Format </button><div class=\"absolute top-full left-0 bg-white border shadow-md p-2 hidden\"><!-- Dropdown menu with font sizes and formatting options --><ul><li><a href=\"#\" class=\"block p-2 hover:bg-gray-100\">Bold</a></li><li><a href=\"#\" class=\"block p-2 hover:bg-gray-100\">Italic</a></li><li><a href=\"#\" class=\"block p-2 hover:bg-gray-100\">Font Size: {font_size}</a></li></ul></div></div>"
        }
      ]
    }
  ],
  "Page Content Header": [
    {
      "description": "The UI should be a header section that displays the title of the page content, with a responsive design that adapts to different screen sizes. It should have a clean and simple layout that makes the title stand out.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PageTitle/></header>",
      "components": [
        {
          "name": "PageTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the page content.",
          "html": "<h1 class=\"text-3xl font-bold\">{pageTitle}</h1>"
        }
      ]
    }
  ],
  "Channel topic and description with edit button": [
    {
      "description": "The UI should display a channel topic and description with an edit button. The edit button should be aligned to the right side of the container. On smaller screens, the edit button should be aligned below the channel topic.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-white rounded shadow-md\"><ChannelInfo><ChannelTopic/><ChannelDescription/><EditButton/></ChannelInfo></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "standalone - displays the channel topic",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "standalone - displays the channel description",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "standalone - displays an edit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Edit</button>"
        },
        {
          "name": "ChannelInfo",
          "is_standalone": false,
          "description": "takes children - wraps the channel topic, description, and edit button",
          "html": "<div class=\"flex flex-wrap justify-between\">{children}</div>"
        }
      ]
    },
    {
      "description": "A channel topic and description with an edit button. The topic should be a heading, the description should be a paragraph, and the edit button should be a small button with a pencil icon. The UI should be responsive, with the edit button aligned to the right on larger screens, and below the description on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><div><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "Standalone component that displays a heading with the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a paragraph with the channel description.",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "Standalone component that displays a small button with a pencil icon.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-200 rounded\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>Edit</button>"
        }
      ]
    },
    {
      "description": "The UI should display a channel topic and description with an edit button. The topic and description should be clearly readable, and the edit button should be prominent and accessible.",
      "html": "<div class=\"flex flex-col gap-4 md:flex-row md:items-center\"><div class=\"flex-1\"><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "A standalone component that displays the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the channel description.",
          "html": "<p class=\"text-sm\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "A standalone component that displays an edit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Edit</button>"
        }
      ]
    },
    {
      "description": "The UI should display a channel topic and description with an edit button.",
      "html": "<div class=\"flex flex-col gap-2\"><ChannelTopic/><ChannelDescription/><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "standalone component to display the channel topic",
          "html": "<p class=\"text-lg font-bold\">{channel_topic}</p>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "standalone component to display the channel description",
          "html": "<p class=\"text-sm\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "standalone component for the edit button",
          "html": "<button class=\"px-4 py-2 bg-blue-500 hover:bg-blue-700 text-white font-bold rounded\">Edit</button>"
        }
      ]
    }
  ],
  "Area displaying recent notifications or alerts, often accessible via an icon or button": [
    {
      "description": "The UI should display a dropdown list of recent notifications or alerts, accessible via a button or icon. The dropdown list should be responsive, easily accessible, and follow accessibility guidelines.",
      "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><NotificationButton/><NotificationDropdown><NotificationItem/><NotificationItem/><!-- Add more NotificationItem components here --></NotificationDropdown></button>",
      "components": [
        {
          "name": "NotificationButton",
          "is_standalone": true,
          "description": "A standalone component displaying an icon or text indicating the presence of notifications.",
          "html": "<!-- NotificationButton component --><button class=\"flex items-center\"><span class=\"text-lg\">{icon}</span><span class=\"text-xs\">{notification_count} new</span></button>"
        },
        {
          "name": "NotificationDropdown",
          "is_standalone": false,
          "description": "A component taking children, displaying a dropdown list of notifications.",
          "html": "<!-- NotificationDropdown component --><div class=\"absolute bg-white rounded shadow-md p-2\"><h5 class=\"text-lg font-bold\">{dropdown_title}</h5>{children}</div>"
        },
        {
          "name": "NotificationItem",
          "is_standalone": true,
          "description": "A standalone component displaying a single notification.",
          "html": "<!-- NotificationItem component --><div class=\"px-4 py-2 hover:bg-gray-100\"><p class=\"text-sm\">{notification_text}</p><span class=\"text-xs text-gray-500\">{notification_time}</span></div>"
        }
      ]
    }
  ],
  "Product Rating Distribution": [
    {
      "description": "The UI should display a product rating distribution chart, which shows the number of ratings for each rating value (e.g., 1-5 stars). The chart should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Rating Distribution</h2><RatingDistributionChart/></div>",
      "components": [
        {
          "name": "RatingDistributionChart",
          "is_standalone": true,
          "description": "Standalone component that displays the rating distribution chart.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{ratingBars}</div>"
        },
        {
          "name": "RatingBar",
          "is_standalone": true,
          "description": "Standalone component that represents a single rating bar in the chart.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-2\"><div class=\"bg-gray-200 h-4 rounded-full\"><div class=\"bg-yellow-500 h-4 rounded-full\" style={`width: ${percentage}%`}></div></div><p class=\"text-sm\">{ratingValue} stars ({count} ratings)</p></div>"
        }
      ]
    }
  ],
  "Dropdown Menu Item Text": [
    {
      "description": "The UI should be a dropdown menu item text which is a clickable text that displays a dropdown menu when clicked. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<nav class=\"flex justify-center\"><ul class=\"flex flex-col\"><li class=\" dropdown relative\"><DropdownMenuItemText/></li></ul></nav>",
      "components": [
        {
          "name": "DropdownMenuItemText",
          "is_standalone": true,
          "description": "Standalone component that displays the text of the dropdown menu item.",
          "html": "<a href=\"#\" class=\" block w-full py-2 pl-8 pr-4 text-gray-700 hover:bg-gray-100\">{menu_item_text}</a>"
        }
      ]
    }
  ],
  "Alert Close Button Style": [
    {
      "description": "The UI should be a small, clickable button that allows users to close an alert message. The button should be a small \"X\" or \"Close\" text, and should be styled to stand out from the rest of the alert message.",
      "html": "<div class=\"alert-message\"><!-- alert message content goes here --><AlertCloseButton/></div>",
      "components": [
        {
          "name": "AlertCloseButton",
          "is_standalone": true,
          "description": "a standalone component that renders a small clickable button to close an alert message.",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\"><span aria-label=\"Close\" class=\"sr-only\">{close_button_text}</span><span aria-hidden=\"true\">×{/* or \"Close\" text */}</span></button>"
        }
      ]
    }
  ],
  "Team or colleagues section with photos and bios": [
    {
      "description": "The UI should display a section showcasing team members or colleagues with their photos and bios in a grid layout. The section should be responsive, with the grid adapting to different screen sizes. On mobile, the grid should display one column, and on larger screens, it should display multiple columns.",
      "html": "<section class=\"max-w-md mx-auto py-12\"><h2 class=\"text-3xl font-bold mb-4\">Our Team</h2><TeamSection><TeamMemberCard/><TeamMemberCard/><TeamMemberCard/><!-- add more TeamMemberCard components as needed --></TeamSection></section>",
      "components": [
        {
          "name": "TeamMemberCard",
          "is_standalone": true,
          "description": "(standalone) - displays a single team member's photo and bio.",
          "html": "<div class=\"flex flex-col items-center mb-8 md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><img src={profile_photo_url} alt=\"{name}\" class=\"w-24 h-24 rounded-full mb-4\"/><h3 class=\"text-lg font-bold\">{name}</h3><p class=\"text-gray-600\">{bio}</p></div>"
        },
        {
          "name": "TeamSection",
          "is_standalone": false,
          "description": "(takes children) - wraps the team members in a container with a header.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a team or colleagues section with a grid of members, each displaying a photo, name, and bio. The grid should be responsive and adapt to different screen sizes. On mobile devices, the grid should display one member per row, and on larger devices, it should display multiple members per row.",
      "html": "<section class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Our Team</h2><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><TeamMemberCard/><TeamMemberCard/><TeamMemberCard/><!-- Add more TeamMemberCard components as needed --></div></section>",
      "components": [
        {
          "name": "TeamMemberCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single team member's photo, name, and bio.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><img src={photo_url} alt={name} class=\"w-32 h-32 rounded-full mb-4\"/><h3 class=\"text-lg font-bold\">{name}</h3><p class=\"text-gray-600\">{bio}</p></div>"
        }
      ]
    }
  ],
  "Follow button to subscribe to users": [
    {
      "description": "A simple button with a follow/unfollow toggle. The button should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FollowButton/></div>",
      "components": [
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_following ? 'Unfollow' : 'Follow'}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a button that allows users to subscribe to other users. The button should be responsive and mobile-first, with a clear and accessible design. When not subscribed, the button should display \"Follow\" and when subscribed, it should display \"Unfollow\". The button should also have a loading state.",
      "html": "<div class=\"flex justify-center mb-4\"><FollowButton>{loading ? <LoadingIndicator/>: <ButtonText/>}\n</FollowButton></div>",
      "components": [
        {
          "name": "FollowButton",
          "is_standalone": false,
          "description": "(takes children): The main component that wraps the follow button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{children}</button>"
        },
        {
          "name": "LoadingIndicator",
          "is_standalone": true,
          "description": "(standalone): A small spinner to indicate loading state.",
          "html": "<div class=\"animate-spin h-5 w-5 border-2 border-gray-600 rounded-full\"></div>"
        },
        {
          "name": "ButtonText",
          "is_standalone": true,
          "description": "(standalone): The text within the button.",
          "html": "<span class=\"text-sm\">{isFollowing ? 'Unfollow' : 'Follow'}</span>"
        }
      ]
    }
  ],
  "Course Recommendations": [
    {
      "description": "The UI should display a list of course recommendations with their titles, short descriptions, and ratings. The list should be responsive and accessible.",
      "html": "<!-- The main container for the course recommendations list --><div class=\"max-w-3xl mx-auto p-4\"><h2>Course Recommendations</h2><!-- The list of course recommendations --><CourseRecommendationsList>{/*\nThis will be replaced with multiple CourseRecommendationCard components\n*/}\n</CourseRecommendationsList></div>",
      "components": [
        {
          "name": "CourseRecommendationsList",
          "is_standalone": false,
          "description": "Component that takes children (a list of `CourseRecommendationCard` components).",
          "html": "<!-- The list of course recommendations --><ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display course recommendations in a card layout, with each card showing the course title, description, and rating. The cards should be arranged in a grid, with multiple cards per row.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-3xl font-bold\">Course Recommendations</h1><div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\"><CourseRecommendationsGrid><CourseCard/><CourseCard/><CourseCard/><!-- Add more CourseCard components as needed --></CourseRecommendationsGrid></div></div>",
      "components": [
        {
          "name": "CourseCard",
          "is_standalone": true,
          "description": "A standalone component that displays a course's information, including title, description, and rating.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg font-bold\">{course_title}</h2><p>{course_description}</p><p>Rating: {rating}/5</p></div>"
        },
        {
          "name": "CourseRecommendationsGrid",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CourseCard` components) and arranges them in a grid layout.",
          "html": "<!-- Children will be placed here -->{children}"
        }
      ]
    },
    {
      "description": "The UI should be a card component that displays a list of course recommendations. Each recommendation should show the course title, a short description, and a call-to-action (CTA) button to learn more.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><h2 class=\"text-3xl font-bold mb-4\">Recommended Courses</h2><CourseRecommendationList><CourseRecommendationCard/><CourseRecommendationCard/><!-- Add more CourseRecommendationCard components here --></CourseRecommendationList></div>",
      "components": [
        {
          "name": "CourseRecommendationCard",
          "is_standalone": true,
          "description": "(standalone): A single course recommendation card.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-4 mb-4\"><h3 class=\"text-lg font-bold\">{course_title}</h3><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "CourseRecommendationList",
          "is_standalone": false,
          "description": "(takes children): A list of course recommendation cards.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    }
  ],
  "Comment section": [
    {
      "description": "The comment section should display a list of comments with the author's name, profile picture, comment text, and timestamp. The profile picture should be a circular image. The comment text should be wrapped to the next line if it's too long. There should be a \"Reply\" button below each comment. The comment section should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold\">Comments</h2><CommentList><CommentCard/><CommentCard/><!-- Add more CommentCard components here --></CommentList></div>",
      "components": [
        {
          "name": "CommentCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single comment.",
          "html": "<div class=\"flex mb-4\"><img src={avatar_url} alt=\"Profile picture\" class=\"w-12 h-12 rounded-full mr-4\"/><div><h3 class=\"text-sm font-bold\">{author_name}</h3><p class=\"text-sm\">{comment_text}</p><p class=\"text-xs text-gray-600\">{timestamp}</p><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Reply </button></div></div>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CommentCard`s) and displays them in a list.",
          "html": "<ul class=\"list-none p-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Toast/Notification Messages": [
    {
      "description": "The UI should display a notification message that appears at the top of the screen, with a background color indicating the type of message (e.g. success, error, warning). The message should be easily readable and have a close button to dismiss it.",
      "html": "<div class=\"fixed top-0 left-0 w-full p-4\"><NotificationMessage/></div>",
      "components": [
        {
          "name": "NotificationMessage",
          "is_standalone": true,
          "description": "standalone component that displays a single notification message.",
          "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-4\" role=\"alert\"><p>{message}</p><NotificationCloseButton/></div>"
        },
        {
          "name": "NotificationCloseButton",
          "is_standalone": true,
          "description": "standalone component that renders a close button for the notification message.",
          "html": "<button aria-label=\"Close notification\" class=\"text-orange-500 hover:text-orange-700 transition duration-300\">×</button>"
        }
      ]
    },
    {
      "description": "A toast/notification message is a small, non-obtrusive message that appears at the top or bottom of the screen, informing the user of a particular event or action. It usually disappears after a few seconds.",
      "html": "<div class=\"fixed bottom-0 left-0 p-4\"><NotificationToast/></div>",
      "components": [
        {
          "name": "NotificationToast",
          "is_standalone": true,
          "description": "a standalone component that displays a single notification message.",
          "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 p-4\"><p class=\"uppercase text-orange-500\">{notificationType}</p><p>{notificationMessage}</p></div>"
        }
      ]
    }
  ],
  "Integrations Hub: Connect third-party apps": [
    {
      "description": "The UI should be a card-based layout that displays a list of integrations. Each card should have a logo of the third-party app, a brief description, and a Connect button. The layout should be responsive, with the cards stacking vertically on mobile devices and displaying in a grid on larger screens.",
      "html": "<section class=\"container mx-auto p-4 pt-6 pb-10\"><h1 class=\"text-3xl font-bold mb-4\">Integrations Hub</h1><IntegrationsList><IntegrationCard/><IntegrationCard/><!-- Repeat IntegrationCard components for each integration --></IntegrationsList></section>",
      "components": [
        {
          "name": "IntegrationCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single integration.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4 hover:shadow-lg\"><div class=\"flex items-center mb-2\"><img src=\"{integration_logo_url}\" alt=\"{integration_name}\" class=\"w-8 h-8 mr-2\"/><h2 class=\"text-lg font-bold\">{integration_name}</h2></div><p class=\"text-gray-600\">{integration_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Connect</button></div>"
        },
        {
          "name": "IntegrationsList",
          "is_standalone": false,
          "description": "A component that takes children (IntegrationCard components) and displays them in a responsive grid.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Slider/Carousel for Promotions": [
    {
      "description": "The UI should be a responsive slider/carousel that displays promotions or offers with images, headings, and descriptions. It should be accessible and easy to use on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6\"><h2 class=\"text-lg font-bold mb-4\">Current Promotions</h2><PromotionCarousel><PromotionSlide/><PromotionSlide/><PromotionSlide/></PromotionCarousel></section>",
      "components": [
        {
          "name": "PromotionSlide",
          "is_standalone": true,
          "description": "A standalone component that represents a single slide in the carousel. It contains an image, heading, and description.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><img src={image_url} alt={alt_text} class=\"w-full md:w-1/2 object-cover\"/><div class=\"md:ml-4\"><h3 class=\"text-lg font-bold mb-2\">{heading}</h3><p class=\"text-sm\">{description}</p></div></div>"
        },
        {
          "name": "PromotionCarousel",
          "is_standalone": false,
          "description": "A component that takes children and renders a carousel of promotion slides.",
          "html": "<div class=\"overflow-x-auto whitespace-nowrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a carousel/slider that displays multiple promotions with images, titles, and descriptions. It should be responsive, mobile-first, and accessible. On desktop, it should display 3-4 promotions at a time, and on mobile, it should display 1-2 promotions at a time. The carousel should have navigation buttons (previous and next) and indicators to show the current slide.",
      "html": "<section class=\"container mx-auto p-4\"><PromotionCarousel><PromotionSlide/><PromotionSlide/><PromotionSlide/><!-- Add more PromotionSlide components here --></PromotionCarousel><CarouselNavigation/><CarouselIndicators/></section>",
      "components": [
        {
          "name": "PromotionSlide",
          "is_standalone": true,
          "description": "A standalone component that displays a single promotion with an image, title, and description.",
          "html": "<div class=\"flex flex-col p-4\"><img src={imageUrl} alt={altText} class=\"w-full h-48 object-cover mb-4\"/><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        },
        {
          "name": "CarouselNavigation",
          "is_standalone": true,
          "description": "A standalone component that displays the navigation buttons (previous and next).",
          "html": "<div class=\"flex justify-center mb-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Previous </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Next </button></div>"
        },
        {
          "name": "CarouselIndicators",
          "is_standalone": true,
          "description": "A standalone component that displays the indicators for the current slide.",
          "html": "<div class=\"flex justify-center mb-4\">{ Array.from(Array(5).keys()).map((index) =>( <button key={index} class={`bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded ${currentIndex === index ? 'bg-orange-500 text-white' : ''}`}>{index + 1} </button>))}</div>"
        },
        {
          "name": "PromotionCarousel",
          "is_standalone": false,
          "description": "A component that takes children (PromotionSlide components) and renders the carousel.",
          "html": "<div class=\"flex overflow-x-hidden\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Product Image Alt": [
    {
      "description": "The UI should display a prominent product image with an alternative text, making it accessible to users with visual impairments.",
      "html": "<img src={image_url} alt={product_image_alt} class=\"w-full h-64 object-cover rounded-lg\"/>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component that displays the product image with an alternative text.",
          "html": "<img src={image_url} alt={product_image_alt} class=\"w-full h-64 object-cover rounded-lg\"/>"
        }
      ]
    }
  ],
  "Toolbar that appears contextually based on user actions or selections": [
    {
      "description": "The UI should be a contextual toolbar that appears when a user selects an element or performs a specific action. The toolbar should be floating above the main content, with a subtle hover effect and a slight animation when it appears/disappears. It should be responsive, adjusting its position and size according to the screen size and device.",
      "html": "<div class=\"fixed top-0 left-0 z-10 w-full lg:w-auto lg:absolute lg:top-auto lg:left-auto lg:bottom-0 lg:right-0\"><ContextualToolbar><ToolbarItem><button>Item 1</button></ToolbarItem><ToolbarItem><button>Item 2</button></ToolbarItem><ToolbarItem><button>Item 3</button></ToolbarItem></ContextualToolbar></div>",
      "components": [
        {
          "name": "ContextualToolbar",
          "is_standalone": false,
          "description": "The main toolbar component that appears contextually. It takes children.",
          "html": "<div class=\"bg-white shadow-md rounded-lg p-2 lg:p-4\"><ul class=\"flex flex-wrap justify-center lg:flex-no-wrap\">{children} </ul></div>"
        },
        {
          "name": "ToolbarItem",
          "is_standalone": false,
          "description": "An individual item within the toolbar, such as a button or a dropdown. It takes children.",
          "html": "<li class=\"mr-2 lg:mr-4\">{children}</li>"
        }
      ]
    }
  ],
  "Poll question display": [
    {
      "description": "The UI should display a poll question with options and a submit button. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto bg-white p-4 shadow-md rounded\"><PollContainer><PollQuestion/><ul><PollOption/><PollOption/><!-- add more PollOption components as needed --></ul><SubmitButton/></PollContainer></div>",
      "components": [
        {
          "name": "PollQuestion",
          "is_standalone": true,
          "description": "Standalone component that displays the poll question.",
          "html": "<h2 class=\"text-lg\">{question_text}</h2>"
        },
        {
          "name": "PollOption",
          "is_standalone": true,
          "description": "Standalone component that displays a poll option.",
          "html": "<li class=\"py-2\"><input type=\"radio\" id=\"{option_id}\" name=\"poll_option\"/><label for=\"{option_id}\" class=\"text-lg\">{option_text}</label></li>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that displays a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button>"
        },
        {
          "name": "PollContainer",
          "is_standalone": false,
          "description": "Takes children (PollQuestion, PollOption, SubmitButton).",
          "html": "<div class=\"px-4 py-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a poll question with options to vote, along with the total votes and percentage for each option. The UI should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PollQuestionDisplay/><PollOptionList><PollOption/><PollOption/><!-- Add more PollOption components for each option --></PollOptionList></div>",
      "components": [
        {
          "name": "PollQuestionDisplay",
          "is_standalone": true,
          "description": "standalone, displays the poll question.",
          "html": "<h2 class=\"text-lg\">{question_text}</h2>"
        },
        {
          "name": "PollOption",
          "is_standalone": true,
          "description": "standalone, displays a single poll option with its total votes and percentage.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"radio\" id=\"{option_id}\" name=\"poll_option\" class=\"mr-2\"/><label for=\"{option_id}\" class=\"text-sm\">{option_text}</label><span class=\"text-sm text-gray-600\">{(total_votes) votes} ({vote_percentage}%)</span></div>"
        },
        {
          "name": "PollOptionList",
          "is_standalone": false,
          "description": "takes children, a list of poll options.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Customer Review Rating": [
    {
      "description": "A customer review rating component that displays a rating out of 5 stars, along with a brief review text. The component should be responsive and accessible.",
      "html": "<div class=\"max-w-md md:max-w-lg lg:max-w-xl mx-auto p-4\"><CustomerReview><RatingStars/><ReviewText/></CustomerReview></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): displays a rating out of 5 stars",
          "html": "<div class=\"flex items-center\">{starsFilled}<i class=\"fas fa-star text-yellow-400\"></i>{starsEmpty}<i class=\"fas fa-star text-gray-400\"></i></div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays a brief review text",
          "html": "<p class=\"text-sm\">{reviewText}</p>"
        },
        {
          "name": "CustomerReview",
          "is_standalone": false,
          "description": "(takes children): wraps the rating stars and review text",
          "html": "<div class=\"flex flex-col md:flex-row justify-between mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Article Thumbnail Images": [
    {
      "description": "The UI should display a thumbnail image with a caption below it, with a subtle overlay effect on hover. The thumbnail image should be responsive, with a maximum width of 300px on desktop screens and adjusted accordingly on smaller screens.",
      "html": "<article class=\"lg:max-w-md mx-auto md:flex\"><ArticleThumbnail><ThumbnailImage/><ImageCaption/></ArticleThumbnail></article>",
      "components": [
        {
          "name": "ThumbnailImage",
          "is_standalone": true,
          "description": "Standalone component that displays an image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full h-48 object-cover rounded-t-md\"/>"
        },
        {
          "name": "ImageCaption",
          "is_standalone": true,
          "description": "Standalone component that displays the image caption.",
          "html": "<p class=\"text-sm text-gray-600\">{caption_text}</p>"
        },
        {
          "name": "ArticleThumbnail",
          "is_standalone": false,
          "description": "Component that takes children, wrapping around the `ThumbnailImage` and `ImageCaption` components.",
          "html": "<div class=\"bg-white shadow-md rounded-md overflow-hidden\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a thumbnail image of an article with a brief description. The thumbnail image should be responsive and adapt to different screen sizes. On mobile devices, the thumbnail image should be stacked on top of the description, while on larger screens, the thumbnail image should be displayed alongside the description.",
      "html": "<div class=\"flex flex-wrap lg:flex-nowrap mb-4 lg:mb-8\"><ArticleThumbnail/></div>",
      "components": [
        {
          "name": "ArticleThumbnail",
          "is_standalone": true,
          "description": "A standalone component that displays a thumbnail image and a brief description.",
          "html": "<div class=\"lg:w-1/2 lg:pr-4\"><ThumbnailImage/><DescriptionText/></div>"
        },
        {
          "name": "ThumbnailImage",
          "is_standalone": true,
          "description": "A standalone component that displays the thumbnail image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full lg:w-1/2 lg:h-48 object-cover\"/>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": true,
          "description": "A standalone component that displays the brief description.",
          "html": "<p class=\"text-lg lg:text-xl\">{description}</p>"
        }
      ]
    }
  ],
  "Job/Project Listings": [
    {
      "description": "The UI should be a list of job/project listings, each displaying essential information such as the job title, company, location, and a brief description. The listings should be responsive, accessible, and easy to read.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Job Listings</h1><ul class=\"list-none mb-0\"><JobListing/><JobListing/><!-- Add more JobListing components here --></ul></div>",
      "components": [
        {
          "name": "JobListing",
          "is_standalone": true,
          "description": "A standalone component that represents a single job listing.",
          "html": "<li class=\"mb-4\"><JobListingCard/></li>"
        },
        {
          "name": "JobListingCard",
          "is_standalone": true,
          "description": "A standalone component that wraps the job listing information.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><JobTitle/><CompanyName/><Location/><JobDescription/></div>"
        },
        {
          "name": "JobTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the job title.",
          "html": "<h2 class=\"text-lg font-bold\">{job_title}</h2>"
        },
        {
          "name": "CompanyName",
          "is_standalone": true,
          "description": "A standalone component that displays the company name.",
          "html": "<p class=\"text-gray-600\">{company_name}</p>"
        },
        {
          "name": "Location",
          "is_standalone": true,
          "description": "A standalone component that displays the location.",
          "html": "<p class=\"text-gray-600\">{location}</p>"
        },
        {
          "name": "JobDescription",
          "is_standalone": true,
          "description": "A standalone component that displays a brief job description.",
          "html": "<p class=\"text-gray-600\">{job_description}</p>"
        }
      ]
    }
  ],
  "Email list view with sender and subject": [
    {
      "description": "The UI should display a list of emails, with each email showing the sender's name and the subject of the email. The list should be responsive, with each email item taking up the full width of the screen on mobile devices and becoming a compact list item on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-2xl font-bold mb-4\">Emails</h1><EmailList><EmailListItem/><EmailListItem/><!-- add more EmailListItem components here --></EmailList></div>",
      "components": [
        {
          "name": "EmailListItem",
          "is_standalone": true,
          "description": "(standalone): A single email item in the list, displaying the sender and subject.",
          "html": "<div class=\"flex justify-between mb-4 p-4 bg-white shadow-md rounded\"><div><p class=\"text-lg font-bold\">{senderName}</p><p class=\"text-gray-600\">{subject}</p></div><div class=\"text-right\"><p class=\"text-gray-600\">{receivedAt}</p></div></div>"
        },
        {
          "name": "EmailList",
          "is_standalone": false,
          "description": "(takes children): A container for the list of email items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A list of emails with sender and subject information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Emails</h2><EmailList><EmailListItem/><EmailListItem/><!-- more EmailListItem components here --></EmailList></div>",
      "components": [
        {
          "name": "EmailListItem",
          "is_standalone": true,
          "description": "(stands alone)",
          "html": "<div class=\"flex items-center justify-between p-2 border-b border-gray-200\"><div><span class=\"text-sm\">{sender}</span><span class=\"text-xs text-gray-500\">{timestamp}</span></div><div><span class=\"text-lg\">{subject}</span></div></div>"
        },
        {
          "name": "EmailList",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Responsive design layout": [
    {
      "description": "A basic responsive design layout with a header, navigation, main content area, and footer. The layout should adapt to different screen sizes, with a mobile-friendly design for small screens and a more extensive layout for larger screens.",
      "html": "<body><HeaderBar/><NavigationBar><!-- nav items will be inserted here --></NavigationBar><MainContent><!-- main content will be inserted here --></MainContent><FooterSection/></body>",
      "components": [
        {
          "name": "HeaderBar",
          "is_standalone": true,
          "description": "A standalone component for the header section.",
          "html": "<header class=\"flex items-center justify-center py-4 md:py-6\"><h1 class=\"text-lg md:text-2xl\">{header_title}</h1></header>"
        },
        {
          "name": "NavigationBar",
          "is_standalone": false,
          "description": "A component that takes children (nav items) and displays them horizontally on larger screens and vertically on smaller screens.",
          "html": "<nav class=\"flex flex-wrap justify-center md:flex-nowrap mb-4 md:mb-0\"><ul class=\"flex flex-wrap md:flex-nowrap\">{children} </ul></nav>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "A component that takes children (content) and displays them in a responsive layout.",
          "html": "<main class=\"max-w-md mx-auto px-4 md:px-0 mb-4 md:mb-6\">{children}</main>"
        },
        {
          "name": "FooterSection",
          "is_standalone": true,
          "description": "A standalone component for the footer section.",
          "html": "<footer class=\"bg-gray-200 py-4 md:py-6\"><p class=\"text-sm text-gray-600\">{footer_text}</p></footer>"
        }
      ]
    }
  ],
  "Overlay window that focuses attention on a specific piece of content, often an image or video": [
    {
      "description": "The UI should be a modal window that appears over the main content, dimming the background to focus attention on the overlay's content. It should have a close button, and the content area should be flexible to accommodate different types of content such as images, videos, or text.",
      "html": "<div class=\"fixed inset-0 flex justify-center items-center\"><ModalOverlay/><ModalContent><!-- Content goes here --></ModalContent><CloseButton/></div>",
      "components": [
        {
          "name": "ModalOverlay",
          "is_standalone": true,
          "description": "standalone, a container for the modal window",
          "html": "<div class=\"absolute inset-0 bg-gray-900 opacity-50\" aria-hidden=\"true\"></div>"
        },
        {
          "name": "ModalContent",
          "is_standalone": false,
          "description": "takes children, a container for the content of the modal window",
          "html": "<div class=\"w-full max-w-2xl p-4 bg-white rounded shadow-md\">{children}</div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "standalone, a button to close the modal window",
          "html": "<button class=\"absolute top-0 right-0 p-4 text-gray-600 hover:text-gray-900\" aria-label=\"Close\">×</button>"
        }
      ]
    }
  ],
  "Recipe ingredients list": [
    {
      "description": "The UI should display a list of ingredients needed for a recipe, with each ingredient listed on a new line. The ingredient name should be displayed in a bold font, with the quantity and unit of measurement displayed next to it. The list should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Ingredients</h2><IngredientList><IngredientItem/><IngredientItem/><!-- Add more IngredientItem components here --></IngredientList></div>",
      "components": [
        {
          "name": "IngredientItem",
          "is_standalone": true,
          "description": "a standalone component that displays a single ingredient.",
          "html": "<div class=\"flex items-center mb-2\"><span class=\"font-bold\">{ingredient_name}</span><span class=\"ml-2\">{quantity} {unit}</span></div>"
        },
        {
          "name": "IngredientList",
          "is_standalone": false,
          "description": "a component that takes children (multiple `IngredientItem`s) and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Real-time Comment and Discussion Forum": [
    {
      "description": "The UI should be a responsive, mobile-first comment and discussion forum that displays a list of comments and allows users to post new comments. The forum should have a clean and simple design, with clear typography and sufficient whitespace to improve readability.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ForumHeader/><ForumContainer><CommentList><CommentItem/><CommentItem/><!-- Add more CommentItem components here --></CommentList><CommentForm/></ForumContainer></div>",
      "components": [
        {
          "name": "CommentItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single comment.",
          "html": "<div class=\"flex gap-2 py-2 border-b border-gray-200\"><img src=\"{avatar_url}\" alt=\"Avatar\" class=\"w-8 h-8 rounded-full\"/><div class=\"flex-1\"><p class=\"text-sm\">{username}</p><p class=\"text-gray-600\">{comment_text}</p></div></div>"
        },
        {
          "name": "CommentForm",
          "is_standalone": true,
          "description": "A standalone component that allows users to post a new comment.",
          "html": "<form class=\"flex flex-col gap-2\"><input type=\"text\" placeholder=\"Write a comment...\" class=\"w-full p-2\"/><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Post Comment </button></form>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CommentItem` components) and displays them in a list.",
          "html": "<ul class=\"list-none p-0\">{children}</ul>"
        },
        {
          "name": "ForumHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the forum.",
          "html": "<h1 class=\"text-2xl font-bold\">{forum_title}</h1>"
        },
        {
          "name": "ForumContainer",
          "is_standalone": false,
          "description": "A component that takes children (multiple components) and wraps them in a container with a max-width for responsive design.",
          "html": "<div class=\"max-w-md mx-auto p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Partner offers display": [
    {
      "description": "The UI should display a list of partner offers in a responsive grid, with each offer showing a title, description, and call-to-action (CTA) button. The UI should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Partner Offers</h2><PartnerOffersGrid><PartnerOfferCard/><PartnerOfferCard/><!-- Add more PartnerOfferCard components here --></PartnerOffersGrid></div>",
      "components": [
        {
          "name": "PartnerOfferCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single partner offer.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h3 class=\"text-lg font-bold\">{offer_title}</h3><p class=\"text-gray-600\">{offer_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text} </button></div>"
        },
        {
          "name": "PartnerOffersGrid",
          "is_standalone": false,
          "description": "A component that takes children (PartnerOfferCard components) and displays them in a responsive grid.",
          "html": "<div class=\"grid gap-4 lg:grid-cols-2 xl:grid-cols-3\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of partner offers, with each offer showing the partner's logo, name, description, and a call-to-action (CTA) button. The layout should be responsive, with a mobile-first design that adapts to larger screen sizes.",
      "html": "<section class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-2xl font-bold mb-4\">Partner Offers</h2><PartnerOfferList><!-- multiple PartnerOfferCard components will be rendered here --></PartnerOfferList></section>",
      "components": [
        {
          "name": "PartnerOfferList",
          "is_standalone": false,
          "description": "a component that takes children (multiple `PartnerOfferCard` components)",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a section that displays multiple partner offers in a grid layout, with each offer showing an image, title, and description. The grid should be responsive, adapting to different screen sizes and devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Partner Offers</h2><PartnerOfferGrid><PartnerOffer/><PartnerOffer/><!-- Add more PartnerOffer components here --></PartnerOfferGrid></section>",
      "components": [
        {
          "name": "PartnerOffer",
          "is_standalone": true,
          "description": "A standalone component that represents a single partner offer, consisting of an image, title, and description.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={image_url} alt={image_alt} class=\"w-full h-48 object-cover rounded-t\"/><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        },
        {
          "name": "PartnerOfferGrid",
          "is_standalone": false,
          "description": "A component that takes children (multiple PartnerOffer components) and lays them out in a grid.",
          "html": "<div class=\"grid gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of partner offers in a responsive grid, with each offer featuring an image, title, and description. The grid should be mobile-first, with a single column on small screens, and up to three columns on larger screens.",
      "html": "<!-- Partner offer list container --><div class=\"md:flex md:flex-wrap md:justify-center\"><PartnerOfferList><!-- Partner offer items will be inserted here --></PartnerOfferList></div>",
      "components": [
        {
          "name": "PartnerOfferList",
          "is_standalone": false,
          "description": "Component that takes children, representing the list of partner offers.",
          "html": "{children}"
        }
      ]
    }
  ],
  "Search Bar: Input field for searching content": [
    {
      "description": "The UI should be a simple search bar with an input field and a submit button. The input field should be responsive and adapt to different screen sizes. The search bar should be accessible, with a clear label and a submit button that can be clicked or pressed using the keyboard.",
      "html": "<div class=\"flex justify-center xl:w-1/2 md:w-2/3 w-full mx-auto mb-4\"><form><SearchInput/><SearchButton/></form></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "a standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full pl-4 pr-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search input\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that represents the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The search bar should be a simple input field with a search icon on the left and a clear button on the right. It should be full-width on mobile devices and have a maximum width on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and clear button.",
          "html": "<div class=\"flex items-center w-full rounded-md border border-gray-300\"><SearchIcon/><input type=\"search\" class=\"w-full pl-8 pr-4 py-2\" placeholder=\"Search...\"/><ClearButton/></div>"
        },
        {
          "name": "SearchIcon",
          "is_standalone": true,
          "description": "standalone component that displays a search icon.",
          "html": "<span class=\"text-gray-400 text-lg\"><!-- search icon will go here --></span>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "standalone component that displays a clear button.",
          "html": "<button class=\"text-gray-400 hover:text-gray-600 transition duration-300\"><!-- clear icon will go here --></button>"
        }
      ]
    }
  ],
  "Blog Post Date Published": [
    {
      "description": "The UI should display the date a blog post was published, with a clean and minimal design that is responsive and accessible.",
      "html": "<footer class=\"mb-4 text-sm text-gray-500\"><PublishedDate/></footer>",
      "components": [
        {
          "name": "PublishedDate",
          "is_standalone": true,
          "description": "A standalone component that displays the date a blog post was published.",
          "html": "<span class=\"text-gray-500\">{published_date}</span>"
        }
      ]
    }
  ],
  "Social Media Follow Count": [
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Category Navigation": [
    {
      "description": "The UI should be a responsive navigation menu that displays a list of categories. On mobile devices, the menu should be hidden by default and toggled by a button. On larger screens, the menu should be always visible and horizontally aligned.",
      "html": "<nav class=\"flex justify-center md:flex-row flex-wrap md:flex-nowrap\"><button class=\"md:hidden\" id=\"nav-toggle\">Toggle Navigation</button><CategoryNavMenu><!-- category items will be rendered here --></CategoryNavMenu></nav>",
      "components": [
        {
          "name": "CategoryNavMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the entire navigation menu.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row\">{children}</ul>"
        }
      ]
    }
  ],
  "Breadcrumb Home Link": [
    {
      "description": "The UI should be a single link that represents the home breadcrumb. It should be a simple, responsive, and accessible link that indicates the current location in a breadcrumb trail.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li><BreadcrumbHomeLink/></li><!-- other breadcrumb links will go here --></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbHomeLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a class=\"text-gray-600 hover:text-gray-900\" href={homeUrl}>Home</a>"
        }
      ]
    }
  ],
  "Navigation Dropdown Icon": [
    {
      "description": "The UI should be a navigation dropdown icon that expands when clicked, displaying a list of navigation links. The icon should be a responsive, mobile-first, accessible, and SEO-friendly dropdown menu.",
      "html": "<nav><DropdownToggle/><DropdownMenu><ul><li><DropdownLink/></li><li><DropdownLink/></li><!-- more links here --></ul></DropdownMenu></nav>",
      "components": [
        {
          "name": "DropdownToggle",
          "is_standalone": true,
          "description": "(standalone) - the clickable icon that expands the dropdown menu",
          "html": "<button class=\"w-8 h-8 flex justify-center items-center bg-gray-200 hover:bg-gray-300 rounded-full\"><!-- icon here, e.g. <span>▼</span>-->{toggle_icon}</button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children) - the container for the navigation links",
          "html": "<div class=\"absolute bg-white py-2 rounded-md shadow-md\">{children}</div>"
        },
        {
          "name": "DropdownLink",
          "is_standalone": true,
          "description": "(standalone) - an individual navigation link within the dropdown menu",
          "html": "<a href={link_href} class=\"block px-4 py-2 text-gray-600 hover:text-gray-900\">{link_text}</a>"
        }
      ]
    }
  ],
  "Testimonial Author Photo": [
    {
      "description": "The UI should display a circular author photo with a testimonial quote and the author's name. The author photo should be rounded and bordered, with a subtle shadow effect. The testimonial quote should be displayed in a clean, readable font, and the author's name should be displayed in a smaller, italicized font.",
      "html": "<div class=\"md:flex items-center mb-4\"><div class=\"md:w-1/3 md:pr-4\"><TestimonialAuthorPhoto/></div><div class=\"md:w-2/3 md:pl-4\"><TestimonialQuote/><AuthorName/></div></div>",
      "components": [
        {
          "name": "TestimonialAuthorPhoto",
          "is_standalone": true,
          "description": "Standalone component that displays the author photo.",
          "html": "<img src={author_photo_url} alt={author_name} class=\"w-24 h-24 rounded-full border-2 border-gray-300 shadow-md\"/>"
        },
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays the testimonial quote.",
          "html": "<blockquote class=\"text-lg italic mb-2\">{testimonial_quote}</blockquote>"
        },
        {
          "name": "AuthorName",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name.",
          "html": "<p class=\"text-sm italic\">{author_name}</p>"
        }
      ]
    }
  ],
  "Error message display": [
    {
      "description": "The UI should be a simple error message display that shows an error message in a red box with a clear and concise message.",
      "html": "<ErrorMessageDisplay/>",
      "components": [
        {
          "name": "ErrorMessageDisplay",
          "is_standalone": true,
          "description": "(standalone) - displays an error message",
          "html": "<div class=\"bg-red-500 text-white p-4 rounded\"><ErrorBox>{errorMessage}</ErrorBox></div>"
        },
        {
          "name": "ErrorBox",
          "is_standalone": false,
          "description": "(takes children) - a red box that contains the error message",
          "html": "<p class=\"text-lg\">{children}</p>"
        }
      ]
    }
  ],
  "Headline and Summary Text": [
    {
      "description": "The UI should display a headline and a summary text in a responsive, mobile-first layout. The headline should be prominent and attention-grabbing, while the summary text should provide a brief overview of the content.",
      "html": "<div class=\"flex flex-col items-center md:flex-row md:justify-center\"><HeadlineComponent/><SummaryTextComponent/></div>",
      "components": [
        {
          "name": "HeadlineComponent",
          "is_standalone": true,
          "description": "(standalone): displays a prominent headline text",
          "html": "<h1 class=\"text-3xl font-bold mb-4\">{headline_text}</h1>"
        },
        {
          "name": "SummaryTextComponent",
          "is_standalone": true,
          "description": "(standalone): displays a brief summary text",
          "html": "<p class=\"text-lg text-gray-600\">{summary_text}</p>"
        }
      ]
    },
    {
      "description": "A headline and summary text section, typically used on a blog post or article page, that is responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><HeadlineComponent/><SummaryTextComponent/></div>",
      "components": [
        {
          "name": "HeadlineComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays a headline text.",
          "html": "<h1 class=\"text-3xl md:text-4xl lg:text-5xl font-bold\">{headline_text}</h1>"
        },
        {
          "name": "SummaryTextComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays a summary text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{summary_text}</p>"
        }
      ]
    }
  ],
  "Background Images/Patterns": [
    {
      "description": "The UI should display a container with a background image or pattern. The image or pattern should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"h-screen w-full\"><BackgroundImageContainer/></div>",
      "components": [
        {
          "name": "BackgroundImageContainer",
          "is_standalone": true,
          "description": "(standalone) - a container element that holds the background image or pattern.",
          "html": "<div class=\"h-full w-full bg-cover bg-center\tbg-{background_image_or_pattern}\" style={`background-image: url('{background_image_or_pattern}');`}><!-- Background image or pattern will be displayed here --></div>"
        }
      ]
    }
  ],
  "Comment Input: Input field for writing a new comment": [
    {
      "description": "A simple input field with a placeholder text \"Write a comment...\" and a submit button.",
      "html": "<div class=\"flex justify-center mb-4\"><CommentInput/><CommentSubmit/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "(standalone) - The input field component.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentSubmit",
          "is_standalone": true,
          "description": "(standalone) - The submit button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    }
  ],
  "Threads": [
    {
      "description": "The UI should display a list of threads, with each thread showing a title, a brief description, and the number of replies. The list should be responsive, with a card-based layout on larger screens and a simple list on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><ThreadList><ThreadCard/><ThreadCard/><!-- More ThreadCard components here --></ThreadList></div>",
      "components": [
        {
          "name": "ThreadCard",
          "is_standalone": true,
          "description": "a standalone component representing a single thread, with a title, description, and reply count.",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><h2 class=\"text-lg font-bold\">{thread_title}</h2><p class=\"text-gray-600\">{thread_description}</p><p class=\"text-gray-500\">{reply_count} replies</p></div>"
        },
        {
          "name": "ThreadList",
          "is_standalone": false,
          "description": "a component that takes children, wrapping the list of threads.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Webcam/Camera Interfaces": [
    {
      "description": "The UI should display a webcam/video camera interface with a live feed, a capture button, and a toggle switch to switch between the front and rear cameras.",
      "html": "<div class=\"flex flex-col items-center h-screen\"><WebcamFeed/><div class=\"flex justify-center mb-4\"><CaptureButton/><CameraToggle/></div></div>",
      "components": [
        {
          "name": "WebcamFeed",
          "is_standalone": true,
          "description": "(standalone) - displays the live webcam feed",
          "html": "<div class=\"w-full h-full\"><video class=\"w-full h-full object-cover\" id=\"video\"></video></div>"
        },
        {
          "name": "CaptureButton",
          "is_standalone": true,
          "description": "(standalone) - a button to capture a photo/video",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Capture</button>"
        },
        {
          "name": "CameraToggle",
          "is_standalone": true,
          "description": "(standalone) - a toggle switch to switch between the front and rear cameras",
          "html": "<label class=\"switch\"><input type=\"checkbox\"/><span class=\"slider round\"></span>Front/Rear</label>"
        }
      ]
    }
  ],
  "Contact List: Manage customer relationships": [
    {
      "description": "The Contact List UI should display a list of customer contacts, each with their name, email, and phone number. The list should be responsive, with a mobile-friendly design that adapts to different screen sizes. The UI should be accessible, with clear typography and sufficient color contrast. The design should also prioritize readability and simplicity, making it easy for users to scan and manage their customer relationships.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ContactListHEADER/><ContactListCONTAINER><!-- Contact list items will be rendered here --><ContactListItem/><ContactListItem/><!-- ... --></ContactListCONTAINER></div>",
      "components": [
        {
          "name": "ContactListItem",
          "is_standalone": true,
          "description": "(standalone): Represents an individual contact in the list, displaying name, email, and phone number.",
          "html": "<li class=\"flex items-center py-4\"><div class=\"w-1/3\">{contact_name}</div><div class=\"w-1/3\">{contact_email}</div><div class=\"w-1/3\">{contact_phone}</div></li>"
        },
        {
          "name": "ContactListHEADER",
          "is_standalone": true,
          "description": "(standalone): The header component that displays the column titles for the contact list.",
          "html": "<thead><tr><th class=\"w-1/3\">Name</th><th class=\"w-1/3\">Email</th><th class=\"w-1/3\">Phone</th></tr></thead>"
        },
        {
          "name": "ContactListCONTAINER",
          "is_standalone": false,
          "description": "(takes children): The main container that holds the contact list items.",
          "html": "<table class=\"w-full\"><ContactListHEADER/><tbody>{children} </tbody></table>"
        }
      ]
    }
  ],
  "Rating stars": [
    {
      "description": "The UI should display a rating system with a variable number of filled and unfilled stars, indicating a rating out of 5.",
      "html": "<div class=\"flex justify-center\"><RatingStars/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): The overall rating component.",
          "html": "<div class=\"flex\">{stars}</div>"
        },
        {
          "name": "FilledStar",
          "is_standalone": true,
          "description": "(standalone): A single filled star.",
          "html": "<i class=\"fas fa-star text-yellow-400\"></i>"
        },
        {
          "name": "UnfilledStar",
          "is_standalone": true,
          "description": "(standalone): A single unfilled star.",
          "html": "<i class=\"fas fa-star text-gray-400\"></i>"
        }
      ]
    }
  ],
  "Navigation Menu Toggle Icon": [
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle icon that can be used to expand or collapse a navigation menu. It should be accessible and SEO-friendly.",
      "html": "<nav class=\"lg:flex hidden lg:bg-white lg:shadow-md lg:rounded\"><NavToggle/><!-- navigation menu content here --></nav>",
      "components": [
        {
          "name": "NavToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation menu toggle icon.",
          "html": "<button class=\"lg:hidden flex justify-center w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded\" aria-label=\"Toggle navigation menu\"><span class=\"sr-only\">Toggle navigation menu</span><span class=\"block w-5 h-1 bg-gray-600\"></span><span class=\"block w-5 h-1 bg-gray-600 mt-1\"></span><span class=\"block w-5 h-1 bg-gray-600 mt-1\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a navigation menu toggle icon that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. The toggle icon should be a hamburger menu icon () that changes to a close icon (×) when the navigation menu is opened.",
      "html": "<nav><NavigationToggle/><!-- Navigation menu will be inserted here --></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation toggle icon component.",
          "html": "<button class=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-500\" aria-label=\"Toggle navigation\" aria-expanded=\"false\"><span class=\"sr-only\">Toggle navigation</span><span class=\"block w-5 h-0.5 bg-gray-600\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should have a navigation menu toggle icon that resembles a hamburger icon. When clicked, it should toggle the navigation menu on and off.",
      "html": "<nav><NavigationMenuToggle/><ul id=\"navigation-menu\"><!-- navigation menu items here --></ul></nav>",
      "components": [
        {
          "name": "NavigationMenuToggle",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"block lg:hidden rounded focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\" aria-label=\"Toggle navigation menu\"><span class=\"sr-only\">Toggle navigation menu</span><span class=\"block w-6 h-6\" aria-hidden=\"true\"><!-- hamburger icon here --><span class=\"block w-6 h-1 bg-gray-600 rounded-full mb-2\"></span><span class=\"block w-6 h-1 bg-gray-600 rounded-full mb-2\"></span><span class=\"block w-6 h-1 bg-gray-600 rounded-full\"></span></span></button>"
        }
      ]
    }
  ],
  "CAPTCHA verification box": [
    {
      "description": "The UI should be a simple verification box with a image-based CAPTCHA, a text input for the user to enter the CAPTCHA code, and a submit button.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CaptchaVerificationBox><CaptchaImage/><CaptchaTextInput/><SubmitButton/></CaptchaVerificationBox></div>",
      "components": [
        {
          "name": "CaptchaImage",
          "is_standalone": true,
          "description": "a standalone component that displays the CAPTCHA image.",
          "html": "<img src=\"{captcha_image_url}\" alt=\"CAPTCHA Image\" class=\"w-full h-24 object-cover mb-4\"/>"
        },
        {
          "name": "CaptchaTextInput",
          "is_standalone": true,
          "description": "a standalone component that provides a text input for the user to enter the CAPTCHA code.",
          "html": "<input type=\"text\" id=\"captcha-input\" class=\"px-4 py-2 w-full border border-gray-300 rounded-md\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "a standalone component that provides a submit button to verify the CAPTCHA code.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\">Verify</button>"
        },
        {
          "name": "CaptchaVerificationBox",
          "is_standalone": false,
          "description": "a component that takes children and wraps the CAPTCHA image, text input, and submit button.",
          "html": "<div class=\"bg-white p-4 rounded-md shadow-md\">{children}</div>"
        }
      ]
    }
  ],
  "Google Maps Embeds": [
    {
      "description": "The UI should display a Google Maps embed with a search bar and a map container. The search bar should allow users to enter a location, and the map container should display the location on a Google Map.",
      "html": "<div class=\"h-screen w-full flex flex-col\"><GoogleMapEmbed><MapSearchBar/><MapContainer/></GoogleMapEmbed></div>",
      "components": [
        {
          "name": "MapSearchBar",
          "is_standalone": true,
          "description": "standalone component that renders a search input field and a search button.",
          "html": "<div class=\"p-4 flex justify-center\"><input type=\"search\" placeholder=\"Enter a location\" class=\"bg-white border border-gray-300 rounded-md py-2 pl-2 pr-4\"/><button class=\"bg-orange-500 text-white px-4 py-2 rounded-md\">Search </button></div>"
        },
        {
          "name": "MapContainer",
          "is_standalone": true,
          "description": "standalone component that renders a container for the Google Map.",
          "html": "<div class=\"h-full w-full\" id=\"map\" style={{ width: '100%', height: 'calc(100vh - 64px)' }}><!-- map will be rendered here --></div>"
        },
        {
          "name": "GoogleMapEmbed",
          "is_standalone": false,
          "description": "component that takes children, which wraps the `MapSearchBar` and `MapContainer` components.",
          "html": "<div class=\"h-full w-full flex flex-col\">{children}</div>"
        }
      ]
    }
  ],
  "Award or achievement section with icons and dates": [
    {
      "description": "The UI should display a list of awards or achievements with icons and dates in a responsive, mobile-first, and accessible manner.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Awards and Achievements</h2><AwardList><AwardCard/><AwardCard/><!-- Add more AwardCard components here --></AwardList></section>",
      "components": [
        {
          "name": "AwardCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single award or achievement.",
          "html": "<div class=\"flex items-center mb-4\"><div class=\"mr-4\"><i class=\"fas fa-{award_icon} text-2xl text-gray-600\"></i></div><div><h3 class=\"text-lg font-bold\">{award_name}</h3><p class=\"text-gray-600\">{award_date}</p></div></div>"
        },
        {
          "name": "AwardList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `AwardCard` components.",
          "html": "<ul class=\"list-none mb-0 p-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should have a section that showcases awards or achievements, with icons and dates.",
      "html": "<section class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl mb-4\">Awards and Achievements</h2><AchievementSection><AwardItem/><AwardItem/><AwardItem/></AchievementSection></section>",
      "components": [
        {
          "name": "AwardItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single award or achievement.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon}</span><div><h3 class=\"text-lg\">{award_name}</h3><p class=\"text-sm text-gray-600\">{award_date}</p></div></div>"
        },
        {
          "name": "AchievementSection",
          "is_standalone": false,
          "description": "A component that takes children and wraps the award items.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    }
  ],
  "Agenda display": [
    {
      "description": "The UI should display a list of agenda items, each with a title, description, and date. The layout should be responsive, with a single column on mobile devices and a two-column layout on larger screens.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Agenda</h1><AgendaList><!-- agenda items will be rendered here --></AgendaList></div>",
      "components": [
        {
          "name": "AgendaList",
          "is_standalone": false,
          "description": "(takes children): Container component for the list of agenda items.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Social Media Feed Item": [
    {
      "description": "A social media feed item that displays a user's profile picture, name, timestamp, and a brief text message. The item should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><UsernameAndTimestamp/><MessageText/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays a user's profile picture.",
          "html": "<img class=\"w-10 h-10 rounded-full\" src={profilePictureUrl} alt=\"User Profile Picture\"/>"
        },
        {
          "name": "UsernameAndTimestamp",
          "is_standalone": true,
          "description": "Standalone component that displays a user's name and timestamp.",
          "html": "<div class=\"flex flex-col\"><p class=\"font-bold\">{userName}</p><p class=\"text-sm text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "MessageText",
          "is_standalone": true,
          "description": "Standalone component that displays a brief text message.",
          "html": "<p class=\"text-sm\">{messageText}</p>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameAndTimestamp, and MessageText).",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single social media feed item, showing the user's profile picture, username, post text, post image, likes, comments, and a timestamp.",
      "html": "<div class=\"flex flex-col gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><PostHeader/><PostText/><PostImage/><EngagementStats/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's username and timestamp",
          "html": "<div class=\"flex justify-between\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, displays the post text",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "standalone, displays the post image",
          "html": "<img src=\"{post_image_url}\" alt=\"Post image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "EngagementStats",
          "is_standalone": true,
          "description": "standalone, displays the likes and comments",
          "html": "<ul class=\"flex justify-between text-gray-500\"><li>{likes} likes</li><li>{comments} comments</li></ul>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "takes children, the main container for the social media feed item",
          "html": "<div class=\"flex flex-col gap-2 p-4 border-b border-gray-200\">{children}</div>"
        }
      ]
    }
  ],
  "Personal quote or mantra with fade-in animation": [
    {
      "description": "The UI should display a personal quote or mantra in a prominent and visually appealing way. The quote should fade in when the component is rendered.",
      "html": "<div class=\"container mx-auto p-4 max-w-md\"><QuoteComponent/></div>",
      "components": [
        {
          "name": "QuoteComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the quote with a fade-in animation.",
          "html": "<p class=\"text-2xl font-bold animate-fade-in\">{quote_text}</p>"
        }
      ]
    }
  ],
  "Testimonial Quote Image": [
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    }
  ],
  "Speaker profiles display": [
    {
      "description": "The UI should display a list of speaker profiles, each containing a profile picture, name, title, and a brief bio. The layout should be responsive, with a single column on mobile devices and a grid layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SpeakerProfilesList><SpeakerProfileCard/><SpeakerProfileCard/><!-- Add more SpeakerProfileCard components here --></SpeakerProfilesList></div>",
      "components": [
        {
          "name": "SpeakerProfileCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single speaker's profile information.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><img src=\"{profile_picture_url}\" alt=\"{speaker_name}\" class=\"w-20 h-20 rounded-full mb-2\"/><h2 class=\"text-lg\">{speaker_name}</h2><p class=\"text-sm\">{title}</p><p class=\"text-sm\">{bio}</p></div>"
        },
        {
          "name": "SpeakerProfilesList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `SpeakerProfileCard`s) and displays them in a responsive grid layout.",
          "html": "<div class=\"grid gap-4 sm:grid-cols-2 lg:grid-cols-3\">{children}</div>"
        }
      ]
    }
  ],
  "Trending topics display for popular discussions": [
    {
      "description": "The UI should display a list of trending topics, each with a title, a brief description, and a call-to-action button.",
      "html": "<div class=\"container mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><TrendingTopicList><!-- list of TrendingTopicCard components will go here --></TrendingTopicList></div>",
      "components": [
        {
          "name": "TrendingTopicList",
          "is_standalone": false,
          "description": "component that takes children, which will be a list of `TrendingTopicCard` components",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Call-to-Action: Prominent button or link": [
    {
      "description": "A prominent call-to-action (CTA) button or link that stands out on the page, encouraging users to take a specific action.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:pt-12\"><!-- Hero section content here --><CallToActionButton/><!-- Additional content or footer here --></div>",
      "components": [
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "Standalone component that displays a prominent CTA button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Tag cloud for filtering": [
    {
      "description": "The UI should display a collection of tags in a cloud-like layout, with each tag having a varying font size and color to represent its importance or frequency. The tags should be clickable, allowing the user to filter content based on the selected tag.",
      "html": "<div class=\"max-w-md mx-auto pt-4\"><h2 class=\"text-lg font-bold mb-4\">Filter by Tag</h2><TagCloud><Tag/><Tag/><!-- ... additional Tag components --></TagCloud></div>",
      "components": [
        {
          "name": "TagCloud",
          "is_standalone": false,
          "description": "The main component that contains all the tags. (Takes children)",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        },
        {
          "name": "Tag",
          "is_standalone": true,
          "description": "A single tag component that displays the tag text and is clickable. (Standalone)",
          "html": "<li class=\"mr-2 mb-2\"><a href=\"#\" class=\"text-sm font-bold text-{tag_color} hover:text-{hover_tag_color}\">{tag_text} </a></li>"
        }
      ]
    }
  ],
  "Call to Action": [
    {
      "description": "The UI should be a prominent call-to-action (CTA) button that stands out on the page, encouraging users to take a specific action. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CallToActionButton/></div>",
      "components": [
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "(standalone): The primary CTA button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a prominent call-to-action (CTA) button that stands out on the page. It should be centered horizontally on the page and have a bold, contrasting color scheme to grab the user's attention.",
      "html": "<section class=\"flex justify-center mt-12\"><CallToActionButton/></section>",
      "components": [
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "(standalone): A single button component that renders a CTA.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "360-degree image viewer": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible image viewer that displays a 360-degree image. The viewer should have a circular navigation control at the bottom to rotate the image. The image should be center-aligned and take up most of the available space.",
      "html": "<div class=\"flex h-screen justify-center\"><ImageViewer><ImageStage/><NavigationControl/></ImageViewer></div>",
      "components": [
        {
          "name": "ImageStage",
          "is_standalone": true,
          "description": "A standalone component that displays the 360-degree image.",
          "html": "<div class=\"flex-1 overflow-hidden\"><img src={image_url} alt=\"360-degree image\" class=\"object-contain w-full h-full\"/></div>"
        },
        {
          "name": "NavigationControl",
          "is_standalone": true,
          "description": "A standalone component that displays the circular navigation control.",
          "html": "<div class=\"fixed bottom-0 left-1/2 -translate-x-1/2 mb-4 md:mb-8\"><div class=\"inline-flex rounded-full bg-gray-100 p-2\"><button class=\"rounded-full p-2\"><span aria-hidden=\"true\">&lt;</span></button><button class=\"rounded-full p-2\"><span aria-hidden=\"true\">&gt;</span></button></div></div>"
        },
        {
          "name": "ImageViewer",
          "is_standalone": false,
          "description": "A component that takes children (the `ImageStage` and `NavigationControl` components) and provides a container for the image viewer.",
          "html": "<div class=\"flex flex-col h-full\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a interactive 360-degree image viewer that allows users to rotate an image by dragging or clicking on the image. The image should be displayed in a responsive container that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"flex justify-center mb-4\"><DragIndicator/></div><ImageCanvas/><NavigationButtons/></div>",
      "components": [
        {
          "name": "ImageCanvas",
          "is_standalone": true,
          "description": "component (standalone): Displays the 360-degree image.",
          "html": "<div class=\"relative overflow-hidden w-full h-full\"><img src={imageName} class=\"w-full h-full object-contain\"/><div class=\"absolute top-0 left-0 w-full h-full\"><!-- image rotation logic will go here --></div></div>"
        },
        {
          "name": "DragIndicator",
          "is_standalone": true,
          "description": "component (standalone): Displays a visual indicator to hint to the user that they can drag the image.",
          "html": "<div class=\"text-gray-500 text-sm\">Drag to rotate</div>"
        },
        {
          "name": "NavigationButtons",
          "is_standalone": true,
          "description": "component (standalone): Displays previous and next buttons to navigate through the 360-degree image.",
          "html": "<div class=\"flex justify-center\"><button class=\"px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded\"><i class=\"fas fa-chevron-left\"></i></button><button class=\"px-4 py-2 bg-gray-200 hover:bg-gray-300 rounded\"><i class=\"fas fa-chevron-right\"></i></button></div>"
        }
      ]
    }
  ],
  "Featured Product Image Size": [
    {
      "description": "The UI should display a featured product image with a responsive size that adapts to different screen sizes. The image should be centered and take up the full width of its parent container on mobile devices, and then scale up to a maximum width on larger screens.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "A standalone component that displays a featured product image.",
          "html": "<img src={image_url} alt={product_name} class=\"w-full object-cover object-center md:max-w-md lg:max-w-lg rounded\"/>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive featured product image with a default size that adjusts to smaller screens.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "A standalone component that displays the featured product image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full md:w-1/2 lg:w-1/3 mx-auto mb-4 object-cover rounded-md border border-gray-200\"/>"
        }
      ]
    }
  ],
  "Resource download links": [
    {
      "description": "The UI should display a list of downloadable resources with their respective file formats and sizes. The UI should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<section class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h2 class=\"text-lg font-bold\">Download Resources</h2><ul class=\"list-none mb-4\"><DownloadList><!-- download links will be inserted here --></DownloadList></ul></section>",
      "components": [
        {
          "name": "DownloadList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping multiple `DownloadLink` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A simple list of download links for various resources, with an optional description. The links should be clearly labeled and easy to access.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2>Download Resources</h2><ul class=\"list-none mb-0\"><ResourceDownloadList><!-- download links will be inserted here --></ResourceDownloadList></ul></section>",
      "components": [
        {
          "name": "ResourceDownloadList",
          "is_standalone": false,
          "description": "(takes children) - A list of `ResourceDownloadLink` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of downloadable resources with their respective names, descriptions, and download links. The list items should be stacked vertically on smaller screens and horizontally on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4\"><h2 class=\"text-2xl font-bold mb-4\">Downloadable Resources</h2><DownloadResourceList><DownloadResourceCard/><DownloadResourceCard/><!-- Add more DownloadResourceCard components here --></DownloadResourceList></div>",
      "components": [
        {
          "name": "DownloadResourceCard",
          "is_standalone": true,
          "description": "(standalone): A single downloadable resource card with name, description, and download link.",
          "html": "<div class=\"flex flex-col mb-4 p-4 border border-gray-200 rounded\"><h3 class=\"text-lg font-bold\">{resource_name}</h3><p class=\"text-gray-600\">{resource_description}</p><a class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" href=\"{download_link}\">Download</a></div>"
        },
        {
          "name": "DownloadResourceList",
          "is_standalone": false,
          "description": "(takes children): A container for the list of downloadable resources.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of resource download links, with each link showing the resource name, file size, and a download button. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-6\"><h2 class=\"text-2xl font-bold mb-4\">Resource Downloads</h2><ResourceDownloadList><ResourceDownloadLink/><ResourceDownloadLink/><!-- Add more ResourceDownloadLink components here --></ResourceDownloadList></div>",
      "components": [
        {
          "name": "ResourceDownloadLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single resource download link.",
          "html": "<a href=\"{download_url}\" class=\"flex items-center justify-between py-4 border-b border-gray-200\"><span class=\"text-lg\">{resource_name}</span><span class=\"text-sm text-gray-600\">{file_size} KB</span><button class=\"bg-orange-500 hover:bg-orange-700 text-white py-2 px-4 rounded\">Download</button></a>"
        },
        {
          "name": "ResourceDownloadList",
          "is_standalone": false,
          "description": "A component that takes children, which are ResourceDownloadLink components, and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a simple list of resource download links, with each link showing the resource name, a download count, and a button to initiate the download. The list should be responsive, easy to read, and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Download Resources</h2><ResourceDownloadList><ResourceDownloadLink/><ResourceDownloadLink/><!-- Add more ResourceDownloadLink components here --></ResourceDownloadList></div>",
      "components": [
        {
          "name": "ResourceDownloadLink",
          "is_standalone": true,
          "description": "(standalone): A single resource download link with a button.",
          "html": "<a href=\"{download_url}\" class=\"flex justify-between items-center mb-4 px-4 py-2 border border-gray-200 rounded\"><span class=\"text-gray-700\">{resource_name}</span><span class=\"text-gray-500\">{download_count} downloads</span><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download</button></a>"
        },
        {
          "name": "ResourceDownloadList",
          "is_standalone": false,
          "description": "(takes children): A container component to hold a list of `ResourceDownloadLink` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Call-to-Action (CTA) Button: Encourage visitors to take action": [
    {
      "description": "A prominent, responsive, and accessible call-to-action (CTA) button that encourages visitors to take action.",
      "html": "<main class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><!-- Hero section with CTA button --><section class=\"md:flex justify-center\"><!-- CTA button --><CallToActionButton/></section></main>",
      "components": [
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "Standalone component that renders a CTA button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Shopping Cart Icon": [
    {
      "description": "The UI should be a shopping cart icon with a badge indicating the number of items in the cart.",
      "html": "<div class=\"absolute top-2 right-2\"><ShoppingCartIcon/><Badge/></div>",
      "components": [
        {
          "name": "ShoppingCartIcon",
          "is_standalone": true,
          "description": "Standalone component representing the shopping cart icon.",
          "html": "<i class=\"fas fa-shopping-cart text-lg text-gray-500 hover:text-gray-800 cursor-pointer\"></i>"
        },
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "Standalone component representing the badge displaying the number of items in the cart.",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{item_count}</span>"
        }
      ]
    }
  ],
  "Blog Post Author Profile": [
    {
      "description": "The UI should display the author's profile information, including their name, profile picture, bio, and social media links. The profile picture should be circular and surrounded by a subtle border. The bio should be displayed in a readable font size, and the social media links should be displayed as icons with a subtle hover effect.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><AuthorProfile/></div>",
      "components": [
        {
          "name": "AuthorProfile",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile information.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg font-bold\">{authorName}</h5><AuthorBio/><SocialMediaLinks><!-- Social media links will be rendered here --></SocialMediaLinks></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Author Profile Picture\" class=\"w-20 h-20 rounded-full border-2 border-gray-200\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that renders the author's bio.",
          "html": "<p class=\"text-lg\">{authorBio}</p>"
        },
        {
          "name": "SocialMediaLinks",
          "is_standalone": false,
          "description": "Component that renders the author's social media links, takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Secure payment information input": [
    {
      "description": "The UI should be a secure payment information input section with input fields for card number, expiration date, security code, and a button to submit the payment information.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><PaymentInfoForm><CardNumberInput/><ExpirationDateInput/><SecurityCodeInput/><SubmitButton/></PaymentInfoForm></div>",
      "components": [
        {
          "name": "CardNumberInput",
          "is_standalone": true,
          "description": "A standalone component for inputting the card number.",
          "html": "<div class=\"mb-4\"><label htmlFor=\"card-number\" class=\"block mb-2\">Card Number</label><input type=\"text\" id=\"card-number\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "ExpirationDateInput",
          "is_standalone": true,
          "description": "A standalone component for inputting the expiration date.",
          "html": "<div class=\"mb-4\"><label htmlFor=\"expiration-date\" class=\"block mb-2\">Expiration Date</label><input type=\"text\" id=\"expiration-date\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "SecurityCodeInput",
          "is_standalone": true,
          "description": "A standalone component for inputting the security code.",
          "html": "<div class=\"mb-4\"><label htmlFor=\"security-code\" class=\"block mb-2\">Security Code</label><input type=\"text\" id=\"security-code\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "A standalone component for submitting the payment information.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button>"
        },
        {
          "name": "PaymentInfoForm",
          "is_standalone": false,
          "description": "A component that takes children to wrap all the input fields and the submit button.",
          "html": "<form>{children}</form>"
        }
      ]
    },
    {
      "description": "The UI should be a secure payment information input form, responsive and accessible, with clear labels and placeholders, and enough space for the user to input their payment details.",
      "html": "<form class=\"max-w-md mx-auto p-4 mt-4 mb-4 bg-white rounded shadow-md\"><h2 class=\"text-xl font-bold mb-4\">Secure Payment Information</h2><PaymentForm><CardNumberInput/><ExpirationDateInput/><CvcInput/></PaymentForm><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button></form>",
      "components": [
        {
          "name": "CardNumberInput",
          "is_standalone": true,
          "description": "(standalone): a text input for the card number",
          "html": "<input class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" id=\"cardNumber\" placeholder=\"Card Number\" required/>"
        },
        {
          "name": "ExpirationDateInput",
          "is_standalone": true,
          "description": "(standalone): a text input for the expiration date",
          "html": "<input class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" id=\"expirationDate\" placeholder=\"MM/YY\" required/>"
        },
        {
          "name": "CvcInput",
          "is_standalone": true,
          "description": "(standalone): a text input for the CVC code",
          "html": "<input class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" id=\"cvc\" placeholder=\"CVC\" required/>"
        },
        {
          "name": "PaymentForm",
          "is_standalone": false,
          "description": "(takes children): a container for the payment input fields",
          "html": "<div class=\"flex flex-wrap -mx-3 mb-6\">{children}</div>"
        }
      ]
    }
  ],
  "Year/Month Picker Calendars": [
    {
      "description": "The UI should display a responsive, mobile-first calendar picker that allows users to select a year and month. The calendar should be accessible and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><YearMonthPicker/></div>",
      "components": [
        {
          "name": "YearMonthPicker",
          "is_standalone": true,
          "description": "a standalone component that contains the year and month pickers.",
          "html": "<div class=\"flex flex-col\"><CalendarHeader/><div class=\"flex justify-center mb-4\"><YearPicker/><MonthPicker/></div><table class=\"w-full\"><!-- calendar table goes here --></table></div>"
        },
        {
          "name": "YearPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a year.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{year1}\">{year1}</option><option value=\"{year2}\">{year2}</option><!-- more options --></select>"
        },
        {
          "name": "MonthPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a month.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{month1}\">{month1}</option><option value=\"{month2}\">{month2}</option><!-- more options --></select>"
        },
        {
          "name": "CalendarHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the current year and month.",
          "html": "<div class=\"flex justify-center mb-4\"><h2 class=\"text-lg\">{current_year} {current_month}</h2></div>"
        }
      ]
    }
  ],
  "Navigation Menu Toggle": [
    {
      "description": "The UI should be a responsive navigation menu toggle button that can be used to expand or collapse a navigation menu. On mobile devices, it should be a hamburger icon, and on larger screens, it should be a text label indicating whether the menu is open or closed.",
      "html": "<nav><NavigationToggle/><NavigationMenu><!-- navigation menu items here --></NavigationMenu></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that renders a toggle button for the navigation menu.",
          "html": "<button class=\"lg:hidden w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md flex justify-center items-center\" aria-label=\"Toggle navigation menu\"><!-- hamburger icon --><span class=\"sr-only\">Menu</span><span class=\"block lg:hidden\" aria-hidden=\"true\"><span class=\"sr-only\">Open</span>❌ </span><span class=\"hidden lg:block\" aria-hidden=\"true\"><span class=\"sr-only\">Close</span>Menu </span></button>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "Component that takes children, renders the navigation menu and handles the toggle state.",
          "html": "<div class=\"lg:flex lg:flex-wrap lg:justify-center lg:pb-4 lg:w-full lg:bg-white lg:shadow-md lg:rounded-md\" aria-labelledby=\"navigation-menu\">{children}</div>"
        }
      ]
    }
  ],
  "Chat/messaging interface": [
    {
      "description": "The UI should display a list of chat messages, with each message showing the sender's name, the message text, and a timestamp. The UI should also include a text input field for composing new messages and a \"Send\" button to send the message.",
      "html": "<div class=\"flex h-screen max-h-screen overflow-hidden\"><div class=\"flex-1 overflow-y-auto p-4\"><ChatList><!-- content will be inserted here --></ChatList></div><ChatInput/></div>",
      "components": [
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "A standalone component that contains a text input field and a \"Send\" button for composing new messages.",
          "html": "<div class=\"fixed bottom-0 left-0 w-full bg-white p-4\"><input type=\"text\" class=\"w-full p-2\" placeholder=\"Type a message...\"/><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Send </button></div>"
        },
        {
          "name": "ChatList",
          "is_standalone": false,
          "description": "A component that takes children (i.e., multiple `ChatMessage` components) and displays them in a list.",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    }
  ],
  "Alert Notification Icon": [
    {
      "description": "The UI should display an alert notification icon with a numeric badge indicating the number of notifications.",
      "html": "<div class=\"flex items-center justify-center\"><AlertIcon/><NotificationBadge/></div>",
      "components": [
        {
          "name": "AlertIcon",
          "is_standalone": true,
          "description": "Standalone component that displays an alert icon.",
          "html": "<i class=\"fas fa-exclamation-circle text-red-500 text-lg\" aria-label=\"Alert Icon\"></i>"
        },
        {
          "name": "NotificationBadge",
          "is_standalone": true,
          "description": "Standalone component that displays a numeric badge.",
          "html": "<span class=\"bg-red-500 text-white text-sm font-bold py-1 px-2 rounded\">{notification_count}</span>"
        }
      ]
    },
    {
      "description": "The UI should display an alert notification icon, typically used to indicate that there are new notifications or alerts for the user. The icon should be a bell shape with a red badge on top, indicating the number of notifications.",
      "html": "<nav class=\"flex items-center\"><AlertNotificationIcon/></nav>",
      "components": [
        {
          "name": "AlertNotificationIcon",
          "is_standalone": true,
          "description": "A standalone component that displays the alert notification icon.",
          "html": "<span class=\"relative\"><!-- Bell icon --><i class=\"fas fa-bell text-lg text-gray-600\"></i><!-- Red badge with notification count --><span class=\"absolute top-0 right-0 -mt-2 -mr-2 bg-red-500 rounded-full w-4 h-4 text-white text-xs flex items-center justify-center\">{notification_count}</span></span>"
        }
      ]
    },
    {
      "description": "The UI should display an alert notification icon with a numeric indicator besides it, which can be customized to display the number of notifications.",
      "html": "<div class=\"flex items-center\"><AlertIcon/><NotificationBadge/></div>",
      "components": [
        {
          "name": "AlertIcon",
          "is_standalone": true,
          "description": "A standalone component representing the alert icon.",
          "html": "<span class=\"text-lg text-orange-500\"><!-- alert icon --><i class=\"fas fa-exclamation-circle\"></i></span>"
        },
        {
          "name": "NotificationBadge",
          "is_standalone": true,
          "description": "A standalone component representing the notification badge with a numeric indicator.",
          "html": "<span class=\"bg-red-500 text-white rounded-full px-2 py-1 text-sm\">{notificationCount}</span>"
        }
      ]
    },
    {
      "description": "The UI should display an alert notification icon, which is a small icon that indicates a notification or alert. The icon should be a circle with an exclamation mark inside. The icon should be yellow with a black exclamation mark.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertIcon/></div>",
      "components": [
        {
          "name": "AlertIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an alert notification icon.",
          "html": "<i class=\"bg-yellow-400 text-black rounded-full p-2 text-sm\" aria-label=\"Alert notification\"><span class=\"sr-only\">Alert notification</span><span>!</span></i>"
        }
      ]
    },
    {
      "description": "The UI should display a notification icon with a count of alerts. The icon should be a circle with a number inside, indicating the number of alerts.",
      "html": "<nav class=\"flex items-center\"><AlertIcon/><AlertCount/></nav>",
      "components": [
        {
          "name": "AlertIcon",
          "is_standalone": true,
          "description": "Standalone component that displays the notification icon.",
          "html": "<span class=\"rounded-full w-6 h-6 bg-orange-500 text-white text-sm flex items-center justify-center\">{alert_icon}</span>"
        },
        {
          "name": "AlertCount",
          "is_standalone": true,
          "description": "Standalone component that displays the count of alerts.",
          "html": "<span class=\"text-sm font-bold\">{alert_count}</span>"
        }
      ]
    }
  ],
  "Featured Image Gallery": [
    {
      "description": "The UI should be a responsive image gallery with a maximum of 6 images, arranged in a 2x3 grid on large screens, 2 images per row on medium screens, and 1 image per row on small screens. The images should be equally spaced and take up the full width of the gallery. On hover, the images should have a subtle overlay with the image's caption.",
      "html": "<div class=\"max-w-md mx-auto\"><ImageGallery><ImageCard/><ImageCard/><ImageCard/><ImageCard/><ImageCard/><ImageCard/></ImageGallery></div>",
      "components": [
        {
          "name": "ImageCard",
          "is_standalone": true,
          "description": "(standalone) - A single image with a caption overlay",
          "html": "<div class=\"relative overflow-hidden rounded-md\"><img src={image_src} alt={image_alt} class=\"w-full h-48 object-cover rounded-md\"/><div class=\"absolute inset-0 flex justify-center items-center opacity-0 hover:opacity-100 transition duration-300\"><p class=\"text-sm text-white\">{image_caption}</p></div></div>"
        },
        {
          "name": "ImageGallery",
          "is_standalone": false,
          "description": "(takes children) - A container for the image cards, provides the grid layout",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Testimonial Quote Box": [
    {
      "description": "The UI should display a quote from a person, along with their name and title. The quote should be in a larger font size and have a subtle background color to make it stand out. The person's name and title should be displayed below the quote in a smaller font size. The component should be responsive and have a max width to prevent it from taking up too much horizontal space.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><TestimonialQuoteBox/></div>",
      "components": [
        {
          "name": "TestimonialQuoteBox",
          "is_standalone": true,
          "description": "Standalone component that contains the entire testimonial quote box.",
          "html": "<blockquote class=\"bg-gray-100 p-4 md:p-6 lg:p-8 rounded-md\"><QuoteText/><AuthorInfo/></blockquote>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "Standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-bold\">{quote_text}</p>"
        },
        {
          "name": "AuthorInfo",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-sm md:text-base lg:text-lg\">{author_name}, {author_title}</p>"
        }
      ]
    }
  ],
  "Testimonial Quote Author": [
    {
      "description": "A testimonial quote with the author's name and title, shown in a clean and minimalistic design. The quote should be prominently displayed, with the author's information shown below it.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6\"><TestimonialBlock/></div>",
      "components": [
        {
          "name": "TestimonialBlock",
          "is_standalone": true,
          "description": "(standalone): contains the quote, author, and title",
          "html": "<blockquote class=\"text-xl font-bold mb-4\">{quote_text}</blockquote><AuthorInfo/>"
        },
        {
          "name": "AuthorInfo",
          "is_standalone": true,
          "description": "(standalone): displays the author's name and title",
          "html": "<p class=\"text-gray-600\">{author_name}, <span class=\"text-gray-500\">{author_title}</span></p>"
        }
      ]
    },
    {
      "description": "The UI should be a testimonial quote component that displays a quote, the author's name, and their title. The component should be responsive and mobile-friendly, with a clean and simple design.",
      "html": "<div class=\"flex flex-col mb-4\"><TestimonialQuote/></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "(standalone): The main testimonial quote component.",
          "html": "<blockquote class=\"px-4 py-2 bg-gray-100 rounded-lg\"><QuoteText/><AuthorInfo/></blockquote>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "(standalone): The quote text component.",
          "html": "<p class=\"text-lg font-bold\">{quote_text}</p>"
        },
        {
          "name": "AuthorInfo",
          "is_standalone": true,
          "description": "(standalone): The author's name and title component.",
          "html": "<p class=\"text-sm text-gray-600\">{author_name}, {author_title}</p>"
        }
      ]
    },
    {
      "description": "A testimonial quote component that displays a quote, author, and their profession. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><TestimonialQuote/></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, author, and their profession.",
          "html": "<blockquote class=\"text-xl font-bold italic mb-4\">\"&ldquo;{quote}&rdquo;\" <!-- the quote itself --><footer class=\"text-base font-normal\"><span class=\"text-gray-600\">{author}</span><!-- the author's name --><span class=\"text-gray-400\">{profession}</span><!-- the author's profession --></footer></blockquote>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial quote with the author's name and optional title. The quote should be displayed in a larger font size and the author's name and title should be displayed in a smaller font size.",
      "html": "<div class=\"flex flex-col mb-4\"><TestimonialQuote/><div class=\"flex items-center\"><AuthorName/><AuthorTitle/></div></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone, displays the testimonial quote.",
          "html": "<blockquote class=\"text-2xl font-bold mb-2\">{testimonial_quote}</blockquote>"
        },
        {
          "name": "AuthorName",
          "is_standalone": true,
          "description": "Standalone, displays the author's name.",
          "html": "<cite class=\"text-lg\">{author_name}</cite>"
        },
        {
          "name": "AuthorTitle",
          "is_standalone": true,
          "description": "Standalone, displays the author's title (optional).",
          "html": "<span class=\"text-sm text-gray-600\">{author_title}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial quote with the author's name and title. The quote should be in a larger font size to grab attention. The author's name and title should be in a smaller font size and aligned below the quote.",
      "html": "<div class=\"max-w-md mx-auto bg-white p-6 shadow-md rounded\"><TestimonialQuote/><AuthorInfo/></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component to display the quote.",
          "html": "<blockquote class=\"text-lg font-semibold mb-4\">{quote_text}</blockquote>"
        },
        {
          "name": "AuthorInfo",
          "is_standalone": true,
          "description": "Standalone component to display the author's name and title.",
          "html": "<p class=\"text-gray-600\">{author_name}</p><p class=\"text-gray-500 text-sm\">{author_title}</p>"
        }
      ]
    }
  ],
  "Icon Fonts/SVG Sprites": [
    {
      "description": "The UI should display a set of icons, each representing a specific action or concept. The icons should be accessible, responsive, and mobile-first.",
      "html": "<div class=\"flex flex-wrap justify-center\"><IconSet><IconComponent/><IconComponent/><IconComponent/><!-- more icons --></IconSet></div>",
      "components": [
        {
          "name": "IconComponent",
          "is_standalone": true,
          "description": "(standalone) - A single icon element with a specific class for styling.",
          "html": "<i aria-hidden=\"true\" class=\"text-lg {icon_class}\"/>"
        },
        {
          "name": "IconSet",
          "is_standalone": false,
          "description": "(takes children) - A container element that holds multiple `IconComponent`s.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Hero Image: High-resolution background image": [
    {
      "description": "The UI should be a full-bleed hero image that takes up the entire viewport, with a high-resolution background image.",
      "html": "<div class=\"h-screen w-full\"><HeroImageContainer/></div>",
      "components": [
        {
          "name": "HeroImageContainer",
          "is_standalone": true,
          "description": "standalone component that wraps the hero image.",
          "html": "<div class=\"relative h-full w-full\"><img src=\"{hero_image_url}\" alt=\"{hero_image_alt}\" class=\"absolute h-full w-full object-cover\"/><!-- Fallback content for accessibility --><p class=\"sr-only\">{hero_image_alt}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-bleed hero image that takes up the entire screen, with the image centered and scaled to fit the screen.",
      "html": "<div class=\"h-screen w-full\"><HeroImageContainer/></div>",
      "components": [
        {
          "name": "HeroImageContainer",
          "is_standalone": true,
          "description": "Standalone component that wraps the hero image.",
          "html": "<div class=\"h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}><!-- Image will be displayed here --></div>"
        }
      ]
    }
  ],
  "Skill meter with percentage counters": [
    {
      "description": "The UI should consist of a horizontal meter that fills up as the percentage increases. The meter should be divided into sections, each representing a different level of proficiency (e.g., beginner, intermediate, advanced). The current percentage should be displayed next to the meter.",
      "html": "<div class=\"flex flex-wrap justify-center\"><SkillMeter/><PercentageCounter/></div>",
      "components": [
        {
          "name": "SkillMeter",
          "is_standalone": true,
          "description": "A standalone component that represents the meter.",
          "html": "<div class=\"w-full bg-gray-200 h-4 rounded\"><div class=\"bg-blue-500 h-4 rounded\" style={{ width: `${progressPercentage}%` }}></div><div class=\"flex justify-between mx-2\"><!-- meter sections --><MeterSection>Beginner</MeterSection><MeterSection>Intermediate</MeterSection><MeterSection>Advanced</MeterSection></div></div>"
        },
        {
          "name": "MeterSection",
          "is_standalone": false,
          "description": "A component that represents a section of the meter, takes children (e.g., a label for the section).",
          "html": "<div class=\"text-xs\">{children}</div>"
        },
        {
          "name": "PercentageCounter",
          "is_standalone": true,
          "description": "A standalone component that displays the current percentage.",
          "html": "<p class=\"text-lg\">{progressPercentage}%</p>"
        }
      ]
    }
  ],
  "AI-powered recommendations": [
    {
      "description": "The UI should display a list of recommended items, such as products or services, with titles, descriptions, and images. The recommendations should be powered by an AI algorithm and displayed in a responsive, mobile-first design.",
      "html": "<section class=\"mx-auto max-w-md p-4\"><h2 class=\"text-2xl font-bold mb-4\">Recommended for you</h2><RecommendationList><!-- list of RecommendationCard components will be inserted here --></RecommendationList></section>",
      "components": [
        {
          "name": "RecommendationList",
          "is_standalone": false,
          "description": "component that takes children (multiple `RecommendationCard` components) and displays them in a list.",
          "html": "<ul class=\"list-none mb-0 p-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of recommended items, such as products or articles, with a brief description and a link to learn more. The list should be responsive, easy to read, and accessible on various devices.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-3xl font-bold mb-4\">Recommended for you</h2><RecommendationList><RecommendationCard/><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationList></div>",
      "components": [
        {
          "name": "RecommendationCard",
          "is_standalone": true,
          "description": "(standalone) - A single recommended item with a title, description, and link.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p><a class=\"text-blue-600 hover:text-blue-900\" href=\"{link}\">Learn more</a></div>"
        },
        {
          "name": "RecommendationList",
          "is_standalone": false,
          "description": "(takes children) - A container for a list of recommended items.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Featured Image Carousel Nav": [
    {
      "description": "The UI should be a carousel navigation for featured images, allowing users to navigate through multiple images. The navigation should be responsive, mobile-first, and accessible.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselNav><CarouselNavItem/><CarouselNavItem/><CarouselNavItem/><!-- Add more CarouselNavItem components here --></CarouselNav></nav>",
      "components": [
        {
          "name": "CarouselNavItem",
          "is_standalone": true,
          "description": "A standalone component representing a navigation item in the carousel.",
          "html": "<button class=\"w-4 h-4 bg-gray-300 rounded-full mx-1\"><!-- Use Tailwind CSS to style the navigation item --></button>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": false,
          "description": "A component that takes children, representing the navigation container for the carousel.",
          "html": "<ul class=\"flex justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Room Type and Rate Selection": [
    {
      "description": "The UI should display a list of room types with their corresponding rates and amenities. It should be responsive, with a single column layout on mobile devices and a two-column layout on larger screens. Each room type should have a header with the room type name, a list of amenities, and a rate selection dropdown.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-8\"><h1 class=\"text-2xl font-bold mb-4\">Select Room Type and Rate</h1><RoomTypeList><!-- Room type cards will be rendered here --></RoomTypeList></div>",
      "components": [
        {
          "name": "AmenityList",
          "is_standalone": true,
          "description": "A standalone component listing the amenities for a room type.",
          "html": "<ul class=\"list-disc pl-4 mb-4\">{amenities.map((amenity) =>( <li key={amenity}>{amenity}</li>))}</ul>"
        },
        {
          "name": "RateSelector",
          "is_standalone": true,
          "description": "A standalone component allowing the user to select a rate.",
          "html": "<select class=\"w-full p-2 pl-4\">{rateOptions.map((rate) =>( <option key={rate.id} value={rate.id}>{rate.name}</option>))}</select>"
        },
        {
          "name": "RoomTypeList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of room types.",
          "html": "{children}"
        }
      ]
    },
    {
      "description": "The UI should display a list of room types with their corresponding rates. Each room type should have a checkbox to select or deselect it. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold\">Select Room Type and Rate</h2><RoomTypeList><!-- Room type items will be rendered here --></RoomTypeList></div>",
      "components": [
        {
          "name": "RoomTypeList",
          "is_standalone": false,
          "description": "(takes children) - A list of `RoomTypeItem` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A room type and rate selection UI that allows users to choose from different room types and rates.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Select Room Type and Rate</h2><div class=\"flex flex-wrap -mx-4\"><RoomTypeCard/><RoomTypeCard/><RoomTypeCard/><!-- Add more RoomTypeCard components as needed --></div><RateSelection><RateOption/><RateOption/><RateOption/><!-- Add more RateOption components as needed --></RateSelection></div>",
      "components": [
        {
          "name": "RoomTypeCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single room type with its details and rates.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold\">{room_type_name}</h3><p class=\"text-gray-600\">{room_type_description}</p><p class=\"text-lg font-bold\">{price_per_night} per night</p></div>"
        },
        {
          "name": "RateSelection",
          "is_standalone": false,
          "description": "(takes children): A container for selecting rates.",
          "html": "<div class=\"p-4\"><h3 class=\"text-lg font-bold\">Select Rate</h3><div class=\"flex flex-wrap -mx-4\">{children} </div></div>"
        },
        {
          "name": "RateOption",
          "is_standalone": true,
          "description": "(standalone): A single rate option with its details.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><input type=\"radio\" id={rate_id} name=\"rate\"/><label for={rate_id} class=\"text-lg font-bold\">{rate_name}</label><p class=\"text-gray-600\">{rate_description}</p><p class=\"text-lg font-bold\">{rate_price} per night</p></div>"
        }
      ]
    }
  ],
  "Header Search Suggestion": [
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    }
  ],
  "Sticky sidebar": [
    {
      "description": "The UI should have a sticky sidebar that remains fixed on the screen as the user scrolls. The sidebar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex h-screen\"><Sidebar/><MainContent><!-- main content goes here --></MainContent></div>",
      "components": [
        {
          "name": "Sidebar",
          "is_standalone": true,
          "description": "A standalone component that represents the sticky sidebar.",
          "html": "<aside class=\"w-64 bg-gray-100 h-screen sticky top-0 overflow-y-auto hidden md:block\"><!-- sidebar content goes here --></aside>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "A component that takes children, representing the main content of the page.",
          "html": "<main class=\"flex-1 p-4\">{children}</main>"
        }
      ]
    }
  ],
  "Visual indicator showing the completion status of a process or task": [
    {
      "description": "A horizontal progress bar with a fill color indicating the completion percentage.",
      "html": "<div class=\"flex justify-center mb-4\"><ProgressBar/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-full bg-gray-200 h-2 rounded-full\"><div class={`bg-${color} h-2 rounded-full`} style={{ width: `${percentage}%` }}/></div>"
        }
      ]
    }
  ],
  "Chart Builder: Visualize data trends": [
    {
      "description": "The UI should be a responsive, mobile-first chart builder that allows users to visualize data trends. It should have a simple and clean design, with a prominent chart area and accessible interactive elements.",
      "html": "<div class=\"flex flex-col h-screen overflow-hidden\"><ChartHeader/><div class=\"flex flex-grow overflow-hidden\"><DataSelector><!-- data selector options will be rendered here --></DataSelector><div class=\"flex-grow\"><ChartCanvas/><AxisLabels/><Legend/></div></div></div>",
      "components": [
        {
          "name": "ChartHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the chart title and a dropdown menu for selecting the chart type.",
          "html": "<header class=\"bg-white py-4 shadow-md\"><h2 class=\"text-lg\">{chart_title}</h2><div class=\"relative\"><button class=\"bg-gray-200 hover:bg-gray-300 py-2 px-4 rounded\">Chart Type</button><ul class=\"absolute bg-white shadow-md py-2\"><li><a href=\"#\" class=\"block py-2 px-4\">Line Chart</a></li><li><a href=\"#\" class=\"block py-2 px-4\">Bar Chart</a></li><!-- more chart types --></ul></div></header>"
        },
        {
          "name": "ChartCanvas",
          "is_standalone": true,
          "description": "A standalone component that renders the chart using a third-party library (not included in this response).",
          "html": "<div class=\"flex-grow h-full\"><!-- chart will be rendered here --></div>"
        },
        {
          "name": "DataSelector",
          "is_standalone": false,
          "description": "A component that takes children and allows users to select the data to display in the chart.",
          "html": "<div class=\"bg-white py-4 pl-4 pr-2\"><h3 class=\"text-lg\">Select Data</h3><ul class=\"list-none mb-4\">{children} </ul></div>"
        },
        {
          "name": "AxisLabels",
          "is_standalone": true,
          "description": "A standalone component that displays the axis labels for the chart.",
          "html": "<div class=\"flex justify-between mb-4\"><p class=\"text-sm\">{x_axis_label}</p><p class=\"text-sm\">{y_axis_label}</p></div>"
        },
        {
          "name": "Legend",
          "is_standalone": true,
          "description": "A standalone component that displays the legend for the chart.",
          "html": "<div class=\"bg-white py-4 pl-4 pr-2\"><h3 class=\"text-lg\">Legend</h3><ul class=\"list-none mb-4\"><!-- legend items will be rendered here --></ul></div>"
        }
      ]
    }
  ],
  "Upload/Progress Bars": [
    {
      "description": "The UI should display a progress bar that fills up as the upload progresses. The progress bar should be visually appealing, responsive, and accessible.",
      "html": "<div class=\"flex flex-col items-center py-4\"><ProgressBar/><ProgressText/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "Standalone component that displays the progress bar.",
          "html": "<div class=\"bg-gray-200 h-4 w-full rounded-md overflow-hidden\"><div class=\"bg-blue-500 h-4\" style={`width: ${progressPercentage}%`}></div></div>"
        },
        {
          "name": "ProgressText",
          "is_standalone": true,
          "description": "Standalone component that displays the progress text (e.g., \"35% complete\").",
          "html": "<p class=\"text-lg font-bold\">{progressPercentage}% complete</p>"
        }
      ]
    },
    {
      "description": "A horizontal progress bar that fills up as the upload progresses, with a percentage indicator.",
      "html": "<div class=\"flex items-center gap-2\"><ProgressBar/><ProgressIndicator/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "a standalone component that displays the progress of the upload",
          "html": "<div class=\"bg-gray-200 h-2 rounded-lg overflow-hidden\"><div class=\"bg-blue-500 h-2 rounded-lg\" style={{ width: `${progressPercentage}%` }}/></div>"
        },
        {
          "name": "ProgressIndicator",
          "is_standalone": true,
          "description": "a standalone component that displays the percentage of the upload",
          "html": "<p class=\"text-sm\">{progressPercentage} %</p>"
        }
      ]
    }
  ],
  "Product Description Textarea": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible textarea component for entering product descriptions. It should have a clear and concise design, with a clear label and sufficient space for user input.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><label for=\"product-description\" class=\"block mb-2 text-lg\">Product Description</label><ProductDescriptionTextarea/></div>",
      "components": [
        {
          "name": "ProductDescriptionTextarea",
          "is_standalone": true,
          "description": "A standalone component representing the textarea for entering product descriptions.",
          "html": "<textarea id=\"product-description\" class=\"block w-full p-2 pl-10 text-lg text-gray-700 bg-gray-50 rounded\" placeholder=\"Enter product description...\"/>"
        }
      ]
    }
  ],
  "Service/Gig Cards": [
    {
      "description": "The UI should be a grid of service/gig cards, each showcasing a service or gig with a title, description, price, and a call-to-action button. The cards should be responsive, spanning the full width on mobile devices and arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><ServiceGrid><ServiceCard/><ServiceCard/><ServiceCard/><!-- Add more ServiceCard components as needed --></ServiceGrid></div>",
      "components": [
        {
          "name": "ServiceCard",
          "is_standalone": true,
          "description": "a standalone component representing a single service/gig card.",
          "html": "<div class=\"bg-white shadow-md rounded-md p-4 mb-4\"><h2 class=\"text-lg font-bold\">{serviceName}</h2><p class=\"text-gray-600\">{serviceDescription}</p><p class=\"text-lg font-bold\">{servicePrice}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{ctaButtonText} </button></div>"
        },
        {
          "name": "ServiceGrid",
          "is_standalone": false,
          "description": "a component that takes children, representing the grid of service/gig cards.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a card for each service or gig, showcasing its title, description, price, and a call-to-action (CTA) button. The cards should be arranged in a grid, with multiple cards per row on larger screens and a single card per row on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 md:pt-12\"><h2 class=\"text-3xl font-bold mb-4\">Our Services</h2><ServiceGrid><ServiceCard/><ServiceCard/><!-- Add more ServiceCard components here --></ServiceGrid></div>",
      "components": [
        {
          "name": "ServiceCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single service or gig.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4 md:w-1/2 lg:w-1/3 xl:w-1/4\"><h3 class=\"text-lg font-bold\">{serviceName}</h3><p class=\"text-gray-600\">{serviceDescription}</p><p class=\"text-lg font-bold\">{price}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Order Now</button></div>"
        },
        {
          "name": "ServiceGrid",
          "is_standalone": false,
          "description": "A component that takes children (`ServiceCard`s) and arranges them in a grid.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Right-to-Left (RTL) Support": [
    {
      "description": "The UI should be a simple HTML page that demonstrates Right-to-Left (RTL) language support. It should have a header, a paragraph of text, and a button that is aligned to the right side of the page.",
      "html": "<html dir=\"rtl\"><head><title>RTL Support</title><link rel=\"stylesheet\" href=\"styles.css\"/></head><body class=\"h-screen flex flex-col justify-center items-center\"><header><Header/></header><main class=\"max-w-md mx-auto\"><RtlParagraph/><RtlButton/></main></body></html>",
      "components": [
        {
          "name": "Header",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<header class=\"text-3xl font-bold text-right\">{header_title}</header>"
        },
        {
          "name": "RtlParagraph",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-lg text-right\">{paragraph_text}</p>"
        },
        {
          "name": "RtlButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple webpage that supports Right-to-Left (RTL) layout direction, with a heading, paragraph, and a button. The layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex flex-col items-center justify-center h-screen\"><HeadingRTL/><ParagraphRTL/><RTLButton/></div>",
      "components": [
        {
          "name": "HeadingRTL",
          "is_standalone": true,
          "description": "(standalone): A heading component that adjusts its text direction based on the RTL setting.",
          "html": "<h1 class=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl {heading_color}\">{heading_text}</h1>"
        },
        {
          "name": "ParagraphRTL",
          "is_standalone": true,
          "description": "(standalone): A paragraph component that adjusts its text direction based on the RTL setting.",
          "html": "<p class=\"text-lg sm:text-xl md:text-2xl lg:text-3xl {paragraph_color}\">{paragraph_text}</p>"
        },
        {
          "name": "RTLButton",
          "is_standalone": true,
          "description": "(standalone): A button component that adjusts its text direction based on the RTL setting.",
          "html": "<button class=\"bg-{button_color} hover:bg-{button_hover_color} text-{button_text_color} font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    }
  ],
  "Label attached to content to categorize or organize it": [
    {
      "description": "The UI should display a label attached to content, to categorize or organize it. The label should be visually distinct from the content and have a clear visual connection to the content.",
      "html": "<div class=\"flex items-center\"><Label/><ContentContainer><!-- content here --></ContentContainer></div>",
      "components": [
        {
          "name": "Label",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-purple-100 text-purple-800 text-xs font-bold rounded px-2\">{label_text}</span>"
        },
        {
          "name": "ContentContainer",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"ml-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a label attached to content to categorize or organize it. The label should be visually separate from the content and should be easily readable.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LabeledContent><!-- content goes here --><p>{content_text}</p></LabeledContent></div>",
      "components": [
        {
          "name": "ContentLabel",
          "is_standalone": true,
          "description": "a standalone component that displays the label text.",
          "html": "<span class=\"bg-orange-100 text-orange-800 text-xs px-2 py-1 rounded\">{label_text}</span>"
        },
        {
          "name": "LabeledContent",
          "is_standalone": false,
          "description": "a component that takes children and wraps them with a `ContentLabel`.",
          "html": "<div class=\"flex items-center mb-2\"><ContentLabel/><div class=\"ml-2\">{children}</div></div>"
        }
      ]
    }
  ],
  "Dark mode toggle": [
    {
      "description": "A toggle button that switches between light and dark mode, with a moon symbol for dark mode and a sun symbol for light mode.",
      "html": "<nav class=\"flex justify-end mb-4\"><DarkModeToggle/></nav>",
      "components": [
        {
          "name": "DarkModeToggle",
          "is_standalone": true,
          "description": "a standalone component that toggles between light and dark mode.",
          "html": "<button class=\"bg-white dark:bg-gray-800 py-2 px-4 rounded-md\">{isDarkMode ? <span class=\"text-gray-200\">☀️</span>: <span class=\"text-yellow-300\">🌕</span>}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a toggle button that switches between light mode and dark mode. The button should have a moon symbol in light mode and a sun symbol in dark mode.",
      "html": "<div class=\"flex justify-center\"><DarkModeToggle/></div>",
      "components": [
        {
          "name": "DarkModeToggle",
          "is_standalone": true,
          "description": "A standalone component that represents the toggle button.",
          "html": "<button class=\"bg-gray-200 dark:bg-gray-800 hover:bg-gray-300 dark:hover:bg-gray-700 py-2 px-4 rounded-full\"><ToggleIcon/></button>"
        },
        {
          "name": "ToggleIcon",
          "is_standalone": true,
          "description": "A standalone component that represents the icon within the toggle button.",
          "html": "<i class=\"fas fa-{icon_type}\" aria-label=\"{icon_label}\"/><!-- icon_type is either 'moon' or 'sun', icon_label is either 'Dark mode' or 'Light mode' -->"
        }
      ]
    },
    {
      "description": "The UI should be a toggle button that allows users to switch between light and dark modes. The button should be responsive, accessible, and have a clear visual indicator of its state (i.e., whether dark mode is on or off).",
      "html": "<button class=\"flex justify-center w-10 h-10 rounded-full border border-gray-300 dark:border-gray-600 transition duration-300 ease-in-out\"><DarkModeToggle/></button>",
      "components": [
        {
          "name": "DarkModeToggle",
          "is_standalone": true,
          "description": "A standalone component that renders a toggle button to switch between light and dark modes.",
          "html": "<div class=\"flex items-center justify-center w-full h-full\"><span class=\"text-lg\">{darkMode ? \"🌃\" : \"☀️\"} </span><input type=\"checkbox\" id=\"dark-mode-toggle\" class=\"hidden\"/><label htmlFor=\"dark-mode-toggle\" class=\"w-full h-full text-lg\"><span class=\"sr-only\">{darkMode ? \"Turn off dark mode\" : \"Turn on dark mode\"}</span></label></div>"
        }
      ]
    }
  ],
  "Interactive Product Demo Simulation": [
    {
      "description": "The UI should be a responsive, mobile-first, interactive demo simulation that allows users to explore a product's features and benefits. It should have a clean and modern design, with clear typography and prominent calls-to-action.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><ProductHero/><section class=\"flex flex-wrap justify-center mb-4\"><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard></section><CallToAction/><ProductImage/></div>",
      "components": [
        {
          "name": "ProductHero",
          "is_standalone": true,
          "description": "A standalone component that serves as the hero section of the demo simulation, featuring a prominent product image and a brief introduction.",
          "html": "<section class=\"hero bg-cover bg-center h-screen\" style=\"background-image: url('{hero_image_url}')\"><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl lg:text-5xl text-white\">{hero_title}</h1><p class=\"text-lg lg:text-2xl text-white\">{hero_subtitle}</p></div></section>"
        },
        {
          "name": "FeatureCard",
          "is_standalone": false,
          "description": "A component that takes children, used to showcase individual features of the product, including a brief description and a call-to-action.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 lg:p-6\"><div slot=\"content\">{children}</div><CallToAction/></div>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "A standalone component that encourages users to take a specific action, such as \"Learn More\" or \"Get Started\".",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        },
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component that displays a product image.",
          "html": "<img class=\"w-full lg:w-1/2 xl:w-1/3 mx-auto\" src=\"{product_image_url}\" alt=\"{product_image_alt_text}\">"
        }
      ]
    }
  ],
  "Direct message button for private chats": [
    {
      "description": "The UI should be a small, circular button with a messaging icon inside. When hovered, the button should change color to indicate interactivity. The button should be accessible on both desktop and mobile devices.",
      "html": "<button class=\"rounded-full bg-gray-200 hover:bg-gray-300 py-2 px-4 text-lg\"><DirectMessageButton/></button>",
      "components": [
        {
          "name": "DirectMessageButton",
          "is_standalone": true,
          "description": "A standalone component representing the direct message button.",
          "html": "<!-- Direct message icon --><i class=\"fas fa-comment-dots text-xl text-gray-600\"></i>"
        }
      ]
    },
    {
      "description": "The UI should be a button that indicates the ability to send a direct message to someone. It should be a simple, rounded rectangle with a white background, a blue border, and a blue icon of a paper airplane (representing sending a message).",
      "html": "<button class=\"rounded-full bg-white border-2 border-blue-500 hover:bg-blue-500 hover:text-white transition duration-300 ease-in-out\"><DirectMessageButton/></button>",
      "components": [
        {
          "name": "DirectMessageButton",
          "is_standalone": true,
          "description": "(standalone): a button that triggers a direct message",
          "html": "<i class=\"fas fa-paper-plane text-blue-500\"></i>{messageButtonText}"
        }
      ]
    }
  ],
  "Blog Post Category Name": [
    {
      "description": "The UI should display a blog post category name in a clean and simple format, with a responsive design that adapts to different screen sizes. The text should be easy to read and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h2 class=\"text-lg md:text-xl lg:text-2xl font-bold mb-2\"><BlogPostCategoryName/></h2></div>",
      "components": [
        {
          "name": "BlogPostCategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name.",
          "html": "<span class=\"uppercase\">{category_name}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a category name for a blog post, with a visually appealing design that is responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"text-lg font-bold mb-2\"><CategoryName/></div>",
      "components": [
        {
          "name": "CategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name of a blog post.",
          "html": "<span class=\"text-lg\">{category_name}</span>"
        }
      ]
    }
  ],
  "Hero Overlay Pattern": [
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    }
  ],
  "Real-time feedback on form input validity as users type": [
    {
      "description": "The UI should display a form with a single input field and a submit button. As the user types, the input field should display real-time feedback on the input validity, with green text indicating valid input and red text indicating invalid input.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><form><InputField/><FormButton/></form></div>",
      "components": [
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "A standalone component that renders a single input field with real-time feedback on input validity.",
          "html": "<div class=\"mb-4\"><input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your input\" aria-invalid={inputInvalid}/>{inputInvalid ? ( <p class=\"text-xs text-red-600\">{invalidFeedback}</p>) : ( <p class=\"text-xs text-green-600\">{validFeedback}</p>)}</div>"
        },
        {
          "name": "FormButton",
          "is_standalone": true,
          "description": "A standalone component that renders a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" disabled={inputInvalid}>Submit</button>"
        }
      ]
    }
  ],
  "Post/Tweet Embeds": [
    {
      "description": "The UI should display a single post or tweet embed with a username, avatar, timestamp, and content. The embed should be responsive, displaying well on both desktop and mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostEmbed><PostHeader/><PostMeta/><PostContent><!-- Post content goes here --></PostContent></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the username and avatar.",
          "html": "<div class=\"flex items-center mb-2\"><img src={avatarUrl} alt={username} class=\"w-10 h-10 rounded-full mr-2\"/><p class=\"font-bold\">{username}</p></div>"
        },
        {
          "name": "PostMeta",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp.",
          "html": "<p class=\"text-gray-500 text-sm\">{timestamp}</p>"
        },
        {
          "name": "PostContent",
          "is_standalone": false,
          "description": "Takes children, displaying the content of the post.",
          "html": "<div class=\"prose\">{children}</div>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "Takes children, wrapping the entire post embed.",
          "html": "<div class=\" bg-white p-4 rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A post/tweet embed component that displays a user's profile picture, username, tweet/post text, and any media (e.g. image, video) associated with the post.",
      "html": "<div class=\"flex bg-white p-4 border-b border-gray-200\"><UserProfilePicture/><div class=\"ml-4\"><Username/><PostText/><PostMedia/></div></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays a user's profile picture.",
          "html": "<img src={profile_picture_url} class=\"rounded-full h-10 w-10\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "standalone component that displays a user's username.",
          "html": "<p class=\"font-bold\">{username}</p>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone component that displays the text of the post/tweet.",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostMedia",
          "is_standalone": true,
          "description": "standalone component that displays the media associated with the post (e.g. image, video).",
          "html": "<img src={media_url} class=\"max-w-full h-56\"/>"
        }
      ]
    },
    {
      "description": "The UI should display a post or tweet embed with the author's name, profile picture, post content, and other relevant details. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md p-4 mx-auto\"><PostEmbed><PostHeader/><PostContent/><PostMetadata/></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone component to display the author's name and profile picture.",
          "html": "<div class=\"flex items-center mb-2\"><img src={profile_picture_url} class=\"h-10 w-10 rounded-full mr-2\" alt={author_name}/><span class=\"text-sm\">{author_name}</span></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone component to display the post content.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "standalone component to display additional metadata such as the post date and EngagementButton.",
          "html": "<div class=\"flex justify-between mt-2\"><span class=\"text-sm\">{post_date}</span><EngagementButton/></div>"
        },
        {
          "name": "EngagementButton",
          "is_standalone": true,
          "description": "standalone component to display the engagement options (e.g., like, retweet, reply).",
          "html": "<button class=\"text-sm text-blue-500 hover:text-blue-800\">{engagement_text} <!-- e.g., \"Like\", \"Retweet\", \"Reply\" --></button>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "takes children to wrap the entire post embed.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded-lg\">{children}</div>"
        }
      ]
    }
  ],
  "Coupon/Discount Codes": [
    {
      "description": "A clean and simple coupon/discount code input field with a submit button. The input field should be accompanied by a label and a description. The submit button should be prominent and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><form><CouponCodeLabel/><CouponCodeInput/><DescriptionText/><SubmitButton/></form></div>",
      "components": [
        {
          "name": "CouponCodeInput",
          "is_standalone": true,
          "description": "Standalone component that renders a single input field for the coupon/discount code.",
          "html": "<input type=\"text\" id=\"coupon-code\" class=\"block w-full pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that renders a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Apply Code</button>"
        },
        {
          "name": "CouponCodeLabel",
          "is_standalone": true,
          "description": "Standalone component that renders a label for the input field.",
          "html": "<label for=\"coupon-code\" class=\"block text-sm font-bold mb-2\">Enter your coupon code:</label>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": true,
          "description": "Standalone component that renders a small text description.",
          "html": "<p class=\"text-xs text-gray-500\">Enter a valid coupon code to receive your discount.</p>"
        }
      ]
    }
  ],
  "Blog Post Category Link": [
    {
      "description": "A simple link with a text label indicating the blog post category, styled with a subtle hover effect and rounded corners.",
      "html": "<div class=\"flex items-center mb-4\"><BlogPostCategoryLink/></div>",
      "components": [
        {
          "name": "BlogPostCategoryLink",
          "is_standalone": true,
          "description": "A standalone component displaying a single blog post category link.",
          "html": "<a href=\"{categoryLink}\" class=\"text-sm text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out rounded px-2 py-1\">{categoryName}</a>"
        }
      ]
    }
  ],
  "Social media feed with latest posts and images": [
    {
      "description": "The UI should be a social media feed that displays the latest posts and images in a responsive, mobile-first layout. The feed should be accessible and SEO-friendly, with alt text for images and semantic HTML5 elements.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><SocialMediaFeed><PostCard/><PostCard/><!-- Repeat PostCard components for each post in the feed --></SocialMediaFeed></div>",
      "components": [
        {
          "name": "PostCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single post with an image, post text, and post author.",
          "html": "<article class=\"flex flex-col mb-4 md:mb-6 lg:mb-12\"><PostImage/><PostText/><PostAuthor/></article>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image with alt text.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full h-48 object-cover rounded-md\">"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "A standalone component that displays the post text.",
          "html": "<p class=\"text-lg\">{post_text}</p>"
        },
        {
          "name": "PostAuthor",
          "is_standalone": true,
          "description": "A standalone component that displays the post author's name.",
          "html": "<p class=\"text-sm text-gray-600\">{post_author_name}</p>"
        },
        {
          "name": "SocialMediaFeed",
          "is_standalone": false,
          "description": "A component that takes children (multiple PostCard components) and displays them in a feed layout.",
          "html": "<div class=\"flex flex-col divide-y divide-gray-200\">{children}</div>"
        }
      ]
    }
  ],
  "Responsive Post Formatting": [
    {
      "description": "The UI should display a responsive post formatting, with a profile picture, username, post text, and actions (like, comment, share). The post should adapt to different screen sizes, with the profile picture and username on the same line on larger screens, and stacked on smaller screens.",
      "html": "<div class=\"flex flex-wrap md:flex-nowrap md:justify-start mb-4\"><UserProfilePicture/><div class=\"md:ml-4\"><UserName/><PostText/><PostActions/></div></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component, displays the profile picture of the user who made the post.",
          "html": "<img src=\"{profile_picture_url}\" class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "UserName",
          "is_standalone": true,
          "description": "Standalone component, displays the username of the user who made the post.",
          "html": "<span class=\"text-lg\">{username}</span>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "Standalone component, displays the text of the post.",
          "html": "<p class=\"text-gray-600\">{post_text}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "Standalone component, displays the actions for the post (like, comment, share).",
          "html": "<div class=\"flex justify-evenly mt-2\"><button class=\"text-gray-600\">{like_count} likes</button><button class=\"text-gray-600\">{comment_count} comments</button><button class=\"text-gray-600\">Share</button></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post formatting with a header, image, content, and footer sections. The post format should be mobile-first and adaptable to different screen sizes.",
      "html": "<article class=\"mb-4 bg-white rounded shadow-md overflow-hidden\"><PostHeader/><PostImage/><PostContent><!-- post content will be rendered here --></PostContent><PostFooter/></article>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the post header.",
          "html": "<header class=\"p-4 border-b border-gray-200\"><h2 class=\"text-lg font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_by} on {posted_date}</p></header>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "A standalone component that displays the post image.",
          "html": "<img src=\"{image_url}\" class=\"w-full h-48 object-cover\" alt=\"{image_alt_text}\">"
        },
        {
          "name": "PostContent",
          "is_standalone": false,
          "description": "A component that displays the post content and takes children.",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "PostFooter",
          "is_standalone": true,
          "description": "A standalone component that displays the post footer.",
          "html": "<footer class=\"p-4 border-t border-gray-200\"><p class=\"text-sm text-gray-600\">{footer_text}</p></footer>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post format that adapts to different screen sizes, with a clear separation between the post's title, metadata, content, and action buttons. The post format should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContainer><PostHeader/><PostContent/><PostActions/></PostContainer></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone): Displays the post's title and metadata.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-2xl font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_at} by {author_name}</p></header>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the post's content.",
          "html": "<div class=\"text-lg leading-relaxed mb-4\">{post_content}</div>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the post's action buttons (e.g., like, comment, share).",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Like </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Comment </button><button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Share </button></div>"
        },
        {
          "name": "PostContainer",
          "is_standalone": false,
          "description": "(takes children): Wraps the entire post format.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a post in a responsive format, with a title, content, and metadata (author and date). On smaller screens, the metadata should be displayed below the content, and on larger screens, it should be displayed to the side of the content.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><Post/></div>",
      "components": [
        {
          "name": "Post",
          "is_standalone": true,
          "description": "A standalone component that contains the title, content, and metadata of a post.",
          "html": "<div class=\"flex flex-wrap lg:flex-nowrap\"><div class=\"w-full lg:w-1/2 lg:pr-4\"><PostTitle/></div><div class=\"w-full lg:w-1/2 lg:pl-4\"><PostContent/></div><div class=\"w-full lg:w-1/2 lg:pl-4\"><PostMetadata/></div></div>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "A standalone component that displays the author and date of a post.",
          "html": "<p class=\"text-sm text-gray-600\">Posted by {author} on {date}</p>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of a post.",
          "html": "<h2 class=\"text-2xl font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that displays the content of a post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        }
      ]
    }
  ],
  "Post Content: Main text and media of article": [
    {
      "description": "The Post Content UI should have a main text area and a media area (e.g. images, videos) that is responsive and accessible on various devices.",
      "html": "<div class=\"container mx-auto p-4\"><PostContent/></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone, contains the main text and media areas",
          "html": "<div class=\"flex flex-wrap -mx-4\"><PostText/><MediaArea/></div>"
        },
        {
          "name": "MediaArea",
          "is_standalone": true,
          "description": "standalone, contains the media (images, videos) of the post",
          "html": "<div class=\"w-full lg:w-1/2 xl:w-1/3 p-4\"><img src=\"{media_url}\" alt=\"{media_alt_text}\" class=\"w-full h-full object-cover\"/></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, contains the main text of the post",
          "html": "<div class=\"w-full lg:w-1/2 xl:w-2/3 p-4\"><h2 class=\"text-lg font-bold\">{post_title}</h2><p>{post_text}</p></div>"
        }
      ]
    }
  ],
  "Hero section with background image and tagline": [
    {
      "description": "The UI should be a hero section with a background image and a tagline. The background image should cover the full width and height of the section, and the tagline should be centered vertically and horizontally on top of the image.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"absolute inset-0 flex items-center justify-center\"><HeroTagline><p>{tagline_text}</p></HeroTagline></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "A standalone component that represents the background image of the hero section.",
          "html": "<div class=\"absolute inset-0 bg-cover bg-center\" style={{ backgroundImage: `url(${background_image_url})` }}></div>"
        },
        {
          "name": "HeroTagline",
          "is_standalone": false,
          "description": "A component that represents the tagline of the hero section. It takes children (the tagline text).",
          "html": "<div class=\"text-2xl font-bold text-white\">{children}</div>"
        }
      ]
    }
  ],
  "Social Media Profile": [
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    }
  ],
  "Profile picture with dropdown menu options": [
    {
      "description": "A profile picture with a dropdown menu that appears when the profile picture is clicked. The dropdown menu should contain several options.",
      "html": "<div class=\"flex justify-end\"><ProfilePicture/><DropdownMenu><MenuItem/><MenuItem/><MenuItem/></DropdownMenu></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<img src={profile_picture_url} class=\"w-8 h-8 rounded-full cursor-pointer\"/>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"absolute right-0 mt-2 w-48 bg-white rounded-md overflow-hidden shadow-md\">{children}</div>"
        },
        {
          "name": "MenuItem",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href={menu_item_url} class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">{menu_item_text}</a>"
        }
      ]
    },
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    }
  ],
  "Password Strength Meters": [
    {
      "description": "The UI should display a password input field with a meter below it that indicates the strength of the password. The meter should have a color indicator (e.g., green for strong, yellow for medium, red for weak) and a text indicator (e.g., \"Strong\", \"Medium\", \"Weak\").",
      "html": "<div class=\"flex flex-col max-w-md mx-auto p-4\"><PasswordInput/><PasswordStrengthMeter><StrengthIndicator/><StrengthText/></PasswordStrengthMeter></div>",
      "components": [
        {
          "name": "PasswordInput",
          "is_standalone": true,
          "description": "standalone, a single-line text input field for entering a password",
          "html": "<input type=\"password\" class=\"w-full p-2 border border-gray-300 rounded\"/>"
        },
        {
          "name": "PasswordStrengthMeter",
          "is_standalone": false,
          "description": "takes children, displays the password strength meter with a color indicator and text indicator",
          "html": "<div class=\"flex items-center mb-2\">{children}</div>"
        },
        {
          "name": "StrengthIndicator",
          "is_standalone": true,
          "description": "standalone, a colored bar indicating the password strength",
          "html": "<div class=\"h-2 w-full {strength_color} rounded\"></div><!-- strength_color is a dynamic class that changes based on password strength -->"
        },
        {
          "name": "StrengthText",
          "is_standalone": true,
          "description": "standalone, a text indicator of the password strength (e.g., \"Strong\", \"Medium\", \"Weak\")",
          "html": "<p class=\"text-sm\">{strength_text}</p><!-- strength_text is a dynamic text that changes based on password strength -->"
        }
      ]
    }
  ],
  "Alert Close Button Icon": [
    {
      "description": "The UI should be a close button icon for an alert message. It should be a small, clickable icon with a cross symbol, allowing users to close the alert message.",
      "html": "<div class=\"alert\"><!-- alert message content --><AlertCloseButton/></div>",
      "components": [
        {
          "name": "AlertCloseButton",
          "is_standalone": true,
          "description": "A standalone component representing the close button icon.",
          "html": "<button class=\"absolute right-0 top-0 bg-transparent border-0 text-gray-400 hover:text-gray-900\"><span aria-hidden=\"true\">&times;</span></button>"
        }
      ]
    }
  ],
  "Recently visited pages": [
    {
      "description": "A list of recently visited pages, with each page showing its title, URL, and a \"remove\" button to remove it from the list.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Recently Visited Pages</h2><VisitedPagesList><!-- list of VisitedPage components will be rendered here --></VisitedPagesList></div>",
      "components": [
        {
          "name": "VisitedPagesList",
          "is_standalone": false,
          "description": "component that takes children (a list of `VisitedPage` components)",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Callout Box Shadow": [
    {
      "description": "The UI should be a callout box with a shadow effect, which is a rectangular box with a subtle shadow effect to give it a sense of depth. The callout box should be responsive and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto mt-4 p-4 bg-white rounded shadow-md\"><CalloutBoxShadow/></div>",
      "components": [
        {
          "name": "CalloutBoxShadow",
          "is_standalone": true,
          "description": "A standalone component that represents the callout box with a shadow effect.",
          "html": "<div class=\"px-4 py-3\"><p class=\"text-lg font-bold\">{callout_title}</p><p class=\"text-gray-600\">{callout_text}</p></div>"
        }
      ]
    }
  ],
  "Call-to-Action Buttons (CTAs)": [
    {
      "description": "The UI should display a prominently styled Call-to-Action (CTA) button that stands out on the page, with clear and concise text encouraging the user to take action.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12 bg-white rounded-md shadow-md\"><PrimaryCtaButton/></div>",
      "components": [
        {
          "name": "PrimaryCtaButton",
          "is_standalone": true,
          "description": "A standalone component representing a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\">{cta_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent call-to-action button that encourages users to take a specific action. The button should be visually appealing, easy to click, and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PrimaryButton/></div>",
      "components": [
        {
          "name": "PrimaryButton",
          "is_standalone": true,
          "description": "A standalone component that renders a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"button\">{button_text}</button>"
        }
      ]
    }
  ],
  "User Profile and Reputation Systems": [
    {
      "description": "A user profile and reputation system that displays the user's profile information, reputation score, and badges earned.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><UserProfileCard/><div class=\"mt-4\"><h2 class=\"text-lg font-bold\">Reputation</h2><BadgeList><!-- badges will be inserted here --></BadgeList></div></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"bg-white shadow-md p-4 rounded\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{bio}</p><p class=\"text-sm text-gray-500\">{joined_at}</p></div>"
        },
        {
          "name": "BadgeList",
          "is_standalone": false,
          "description": "takes children",
          "html": "<ul class=\"flex flex-wrap\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile information, including their profile picture, username, bio, and reputation score. The reputation score should be displayed prominently, with an option to view a breakdown of the score.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><UserProfile/></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "standalone component that contains the user's profile information",
          "html": "<div class=\"flex flex-col md:flex-row items-center md:items-start\"><UserProfilePicture/><UserProfileInfo/><ReputationScore/></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"User Profile Picture\" class=\"rounded-full w-24 h-24 md:w-48 md:h-48 object-cover\">"
        },
        {
          "name": "UserProfileInfo",
          "is_standalone": true,
          "description": "standalone component that displays the user's username and bio",
          "html": "<div class=\"flex flex-col ml-4 md:ml-6\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-600\">{bio}</p></div>"
        },
        {
          "name": "ReputationScore",
          "is_standalone": true,
          "description": "standalone component that displays the user's reputation score",
          "html": "<div class=\"text-lg font-bold flex items-center\"><span class=\"mr-2\">{reputation_score}</span><span class=\"text-gray-600\">Reputation Score</span><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Breakdown</button></div>"
        }
      ]
    }
  ],
  "Stencil Portals/Masking": [
    {
      "description": "The UI should display a rectangular portal with a masked background, allowing a smaller rectangular area to be visible through a circular \"window\". The portal should have a subtle shadow and a slight border radius. The masked area should be a solid color or a subtle gradient.",
      "html": "<div class=\"relative w-full h-screen\"><PortalMask/><PortalWindow/></div>",
      "components": [
        {
          "name": "PortalMask",
          "is_standalone": true,
          "description": "- standalone - Represents the masked background.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-gray-200\" aria-hidden=\"true\"><!-- masked background --></div>"
        },
        {
          "name": "PortalWindow",
          "is_standalone": true,
          "description": "- standalone - Represents the circular \"window\" through which the background is visible.",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-48 h-48 rounded-full bg-white shadow-md\"><!-- circular \"window\" --><div class=\"w-full h-full bg-{portal_window_background} rounded-full\"></div></div>"
        }
      ]
    }
  ],
  "Trending Topics: List of popular hashtags and topics": [
    {
      "description": "The UI should display a list of trending topics, with each topic showing its name, a brief description, and the number of posts related to that topic. The list should be responsive, with a maximum of 3 columns on large screens, 2 columns on medium screens, and a single column on small screens.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><TrendingTopicList><!-- List of trending topics will be rendered here --></TrendingTopicList></div>",
      "components": [
        {
          "name": "TrendingTopicList",
          "is_standalone": false,
          "description": "Container component that takes children, which are multiple **TrendingTopicCard** components.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of trending topics and hashtags, with each item showing the topic name, a brief description, and the number of posts or engagements. The list should be scrollable and responsive, with a maximum of 5-6 items visible on the screen at a time.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><TrendingTopicList><!-- List of trending topics will be rendered here --></TrendingTopicList></div>",
      "components": [
        {
          "name": "TrendingTopicList",
          "is_standalone": false,
          "description": "(takes children) - contains a list of `TrendingTopicCard` components",
          "html": "<ul class=\"divide-y divide-gray-200\">{children}</ul>"
        }
      ]
    }
  ],
  "Blog Post Comment Form Label": [
    {
      "description": "A simple form label with a text input for commenting on a blog post. The label should be responsive, mobile-first, and accessible.",
      "html": "<form><CommentFormLabel/><CommentInput/></form>",
      "components": [
        {
          "name": "CommentFormLabel",
          "is_standalone": true,
          "description": "A standalone component representing the label for the comment form.",
          "html": "<label class=\"block text-sm font-medium text-gray-700 mb-2\" htmlFor=\"comment\">Leave a comment:</label>"
        },
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "A standalone component representing the text input for the comment.",
          "html": "<input class=\"block w-full pl-10 text-sm text-gray-700\" type=\"text\" id=\"comment\" name=\"comment\"/>"
        }
      ]
    }
  ],
  "Language translation tool": [
    {
      "description": "A simple and intuitive language translation tool with a source language input, a target language dropdown, and a translate button. The translated text is displayed below the input fields.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 pb-8 mb-4 bg-white rounded shadow-md\"><TranslationTool><LanguageInput/><LanguageSelector/><TranslateButton/><TranslatedText/></TranslationTool></div>",
      "components": [
        {
          "name": "LanguageInput",
          "is_standalone": true,
          "description": "standalone, input field for source language text",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter text to translate\"/>"
        },
        {
          "name": "LanguageSelector",
          "is_standalone": true,
          "description": "standalone, dropdown for selecting target language",
          "html": "<select class=\"w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"\">Select language</option><!-- options will be populated dynamically --><option value=\"{language_code}\">{language_name}</option></select>"
        },
        {
          "name": "TranslateButton",
          "is_standalone": true,
          "description": "standalone, button to initiate translation",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Translate</button>"
        },
        {
          "name": "TranslatedText",
          "is_standalone": true,
          "description": "standalone, displays the translated text",
          "html": "<p class=\"text-gray-600\">{translated_text}</p>"
        },
        {
          "name": "TranslationTool",
          "is_standalone": false,
          "description": "takes children, container for the entire translation tool",
          "html": "<div class=\"flex flex-col space-y-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a simple and intuitive design, with a dropdown list of source languages, a textarea for input text, a dropdown list of target languages, and a textarea for output text. The UI should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><TranslationTool><div class=\"flex flex-wrap -mx-4 mb-4\"><div class=\"w-full lg:w-1/2 xl:w-1/2 p-4\"><LanguageSelect/><TextInputArea/></div><div class=\"w-full lg:w-1/2 xl:w-1/2 p-4\"><LanguageSelect/><TranslationResult/></div></div></TranslationTool></div>",
      "components": [
        {
          "name": "LanguageSelect",
          "is_standalone": true,
          "description": "A dropdown list of languages (standalone)",
          "html": "<select class=\"block w-full p-2 pl-10 text-gray-700\">{languageOptions}</select>"
        },
        {
          "name": "TextInputArea",
          "is_standalone": true,
          "description": "A textarea for input text (standalone)",
          "html": "<textarea class=\"block w-full p-2\" rows=\"10\"></textarea>"
        },
        {
          "name": "TranslationResult",
          "is_standalone": true,
          "description": "A textarea for output text (standalone)",
          "html": "<textarea class=\"block w-full p-2\" rows=\"10\" readonly>{translationResult}</textarea>"
        },
        {
          "name": "TranslationTool",
          "is_standalone": false,
          "description": "The main component that contains all the other components (takes children)",
          "html": "<div class=\"max-w-md mx-auto\">{children}</div>"
        }
      ]
    }
  ],
  "Graphic symbol representing the brand or website, usually clickable": [
    {
      "description": "The UI should display a logo that is clickable, responding to different screen sizes, and is accessible.",
      "html": "<a href=\"/\" aria-label=\"Home\"><Logo/></a>",
      "components": [
        {
          "name": "Logo",
          "is_standalone": true,
          "description": "a standalone component representing the brand or website.",
          "html": "<img src={logo_src} alt={logo_alt} class=\"w-8 h-8 md:w-12 md:h-12 lg:w-16 lg:h-16\"/><!-- logo_src: the URL of the logo image, logo_alt: the alt text of the logo -->"
        }
      ]
    }
  ],
  "Inline editable fields": [
    {
      "description": "The UI should display a table with editable fields, resembling a spreadsheet. Each cell in the table should be editable, allowing users to input or edit text.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><EditableTable><EditableTableRow><EditableTableCell/><EditableTableCell/><EditableTableCell/></EditableTableRow><EditableTableRow><EditableTableCell/><EditableTableCell/><EditableTableCell/></EditableTableRow><!-- Add more rows and cells as needed --></EditableTable></div>",
      "components": [
        {
          "name": "EditableTableCell",
          "is_standalone": true,
          "description": "A standalone component representing an individual editable table cell.",
          "html": "<td class=\"bg-white border border-gray-200 p-2\"><input type=\"text\" class=\"w-full p-2 border-none bg-transparent focus:bg-white focus:outline-none\" value={cell_value}/></td>"
        },
        {
          "name": "EditableTableRow",
          "is_standalone": false,
          "description": "A component that takes children, representing a table row with editable cells.",
          "html": "<tr class=\"hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "EditableTable",
          "is_standalone": false,
          "description": "A component that takes children, representing the entire editable table.",
          "html": "<table class=\"w-full border-collapse\"><tbody>{children}</tbody></table>"
        }
      ]
    }
  ],
  "Featured Product Badge Icon": [
    {
      "description": "The UI should feature a small badge icon with a ribbon-like design, indicating a product is featured. The badge should be responsive and accessible.",
      "html": "<span class=\"inline-block\"><FeaturedBadgeIcon/></span>",
      "components": [
        {
          "name": "FeaturedBadgeIcon",
          "is_standalone": true,
          "description": "standalone component, representing the featured product badge icon.",
          "html": "<span class=\"w-6 h-6 bg-orange-500 rounded-full inline-block relative\"><span class=\"ribbon ribbon-vertical\"><!-- ribbon design --><span class=\"ribbon-content text-xs text-white\">{ribbon_text}</span></span><span class=\"featured-badge-icon inline-block w-4 h-4 bg-white rounded-full absolute top-0 right-0 -mt-1 -mr-1\"><!-- icon --><i class=\"fas fa-star text-yellow-500\" aria-hidden=\"true\"></i></span></span>"
        }
      ]
    }
  ],
  "Case Study and Description Text": [
    {
      "description": "The UI should display a section that showcases a case study with a description text. The layout should be responsive, with the description text wrapping to the next line on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-white rounded shadow-md\"><CaseStudySection/><DescriptionText/></section>",
      "components": [
        {
          "name": "CaseStudySection",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-3xl font-bold\">{case_study_title}</h2>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<p class=\"text-lg leading-relaxed\">{children}</p>"
        }
      ]
    }
  ],
  "Navigation bar that remains fixed at the top of the page as users scroll": [
    {
      "description": "The UI should have a navigation bar that remains fixed at the top of the page as users scroll. The navigation bar should be responsive, with items stacking vertically on smaller screens.",
      "html": "<header class=\"fixed top-0 left-0 w-full bg-gray-800 py-4\"><NavigationBar/></header>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "A standalone component that contains navigation items.",
          "html": "<nav class=\"container mx-auto p-4 flex justify-between\"><NavItem>Home</NavItem><NavItem>About</NavItem><NavItem>Contact</NavItem></nav>"
        },
        {
          "name": "NavItem",
          "is_standalone": false,
          "description": "A component that takes children, representing a single navigation item.",
          "html": "<a class=\"text-white hover:text-gray-200 transition duration-300 ease-in-out\">{children}</a>"
        }
      ]
    }
  ],
  "Real-time Updates/Feeds": [
    {
      "description": "The UI should display a real-time updates/feed section, showcasing a list of updates/feeds in a card-like layout. Each card should display the title, description, and timestamp of the update. The UI should be responsive, accessible, and mobile-first.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Real-time Updates/Feeds</h2><FeedList><!-- Feed cards will be rendered here --></FeedList></div>",
      "components": [
        {
          "name": "FeedList",
          "is_standalone": false,
          "description": "A component that renders a list of `FeedCard`s and takes children.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Featured Image Zoom Button": [
    {
      "description": "The UI should display a featured image with a zoom button overlay on top of it. The zoom button should be a circular icon with a zoom-in icon inside. When hovered, the zoom button should change its background color and cursor to indicate interactivity.",
      "html": "<div class=\"relative\"><FeaturedImage/><ZoomButton/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "Standalone component that displays the featured image.",
          "html": "<img src=\"{imageSrc}\" alt=\"{imageAlt}\" class=\"w-full h-full object-cover rounded-md\"/>"
        },
        {
          "name": "ZoomButton",
          "is_standalone": true,
          "description": "Standalone component that displays the zoom button.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-gray-200 hover:bg-gray-300 rounded-full p-2 cursor-pointer\"><span class=\"fas fa-search-plus text-lg\"></span></div>"
        }
      ]
    },
    {
      "description": "The UI should display a featured image with a zoom button overlaid on top of it. When the zoom button is clicked, a larger version of the image should be displayed. The zoom button should be circular and have a zoom icon (+) in the center.",
      "html": "<div class=\"relative\"><FeaturedImage/><ZoomButton/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "standalone, displays the featured image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full h-full object-cover rounded-md\"/>"
        },
        {
          "name": "ZoomButton",
          "is_standalone": true,
          "description": "standalone, displays the zoom button",
          "html": "<button class=\"absolute bottom-4 right-4 rounded-full bg-white p-2 shadow-md\"><span class=\"text-2xl\">+</span></button>"
        }
      ]
    }
  ],
  "User profile page with video history": [
    {
      "description": "The UI should display a user profile page with a header, profile information, and a video history section that lists the user's watched videos.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><UserProfileHeader/><ProfileInfo/><h2 class=\"text-lg font-bold mb-2\">Video History</h2><VideoHistory><VideoHistoryItem/><VideoHistoryItem/><!-- more VideoHistoryItem components here --></VideoHistory></div>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture and name",
          "html": "<div class=\"flex justify-center mb-4\"><img src={profile_picture} class=\"w-24 h-24 rounded-full\"/><h1 class=\"text-2xl font-bold\">{username}</h1></div>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": true,
          "description": "standalone, displays the user's bio and profile information",
          "html": "<div class=\"mb-4\"><p>{bio}</p><!-- other profile information here --></div>"
        },
        {
          "name": "VideoHistory",
          "is_standalone": false,
          "description": "takes children, lists the user's video history",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "VideoHistoryItem",
          "is_standalone": true,
          "description": "standalone, displays a single video in the video history",
          "html": "<li class=\"py-2 border-b border-gray-200\"><img src={video_thumbnail} class=\"w-12 h-12 rounded\"/><div class=\"ml-2\"><h3>{video_title}</h3><p>{video_description}</p></div></li>"
        }
      ]
    }
  ],
  "Sidebar Widget Title": [
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    }
  ],
  "Certificates and Badges": [
    {
      "description": "The UI should display a list of certificates and badges earned by a user. Each certificate or badge should have a title, an issuing organization, an issue date, and an expiration date (if applicable). The UI should be responsive, mobile-first, and accessible.",
      "html": "<section class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Certificates and Badges</h2><CertificatesAndBadgesList><CertificateBadgeCard/><CertificateBadgeCard/><!-- Add more CertificateBadgeCard components here --></CertificatesAndBadgesList></section>",
      "components": [
        {
          "name": "CertificateBadgeCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single certificate or badge.",
          "html": "<article class=\"bg-white shadow-md rounded p-4 mb-4\"><h3 class=\"text-xl font-bold\">{title}</h3><p>Issued by {issuing_organization} on {issue_date}</p>{expiration_date && <p>Expires on {expiration_date}</p>} <img src={badge_image_url} alt={title} class=\"w-20 h-20 mx-auto\"/></article>"
        },
        {
          "name": "CertificatesAndBadgesList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `CertificateBadgeCard` components.",
          "html": "<ul class=\"flex flex-wrap justify-center md:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of certificates and badges earned by a person, with each item featuring an image, title, and issuing organization. The list should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Certificates and Badges</h2><CertificatesList><CertificateBadge/><CertificateBadge/><!-- Add more CertificateBadge components as needed --></CertificatesList></div>",
      "components": [
        {
          "name": "CertificateBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single certificate or badge.",
          "html": "<div class=\"flex items-center mb-4\"><img src={badge_image_url} alt={badge_title} class=\"w-16 h-16 mr-4\"/><div><h3 class=\"text-lg font-bold\">{badge_title}</h3><p>Issued by {issuing_organization}</p></div></div>"
        },
        {
          "name": "CertificatesList",
          "is_standalone": false,
          "description": "A component that displays a list of certificates and badges, and takes children (i.e., multiple `CertificateBadge` components).",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of certificates and badges with their respective names, issuers, and dates. The layout should be responsive, with a mobile-first approach, and should be accessible and SEO-friendly.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6\"><h2 class=\"text-2xl font-bold mb-4\">Certificates and Badges</h2><CertificatesList><CertificateBadge/><CertificateBadge/><!-- Add more CertificateBadge components here --></CertificatesList></section>",
      "components": [
        {
          "name": "CertificateBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single certificate or badge with its details.",
          "html": "<div class=\"flex flex-wrap mb-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold\">{certificate_name}</h3><p>{issuer_name}</p><p>{issue_date}</p></div></div>"
        },
        {
          "name": "CertificatesList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `CertificateBadge` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Price and Discount Badges": [
    {
      "description": "The UI should display two types of badges: a price badge and a discount badge. The price badge shows the original price, and the discount badge shows the discount percentage. The badges should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PriceBadge/><DiscountBadge/></div>",
      "components": [
        {
          "name": "PriceBadge",
          "is_standalone": true,
          "description": "a standalone component that displays the original price.",
          "html": "<span class=\"bg-gray-200 px-2 py-1 rounded-full text-sm\"><p>{original_price}</p></span>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "a standalone component that displays the discount percentage.",
          "html": "<span class=\"bg-orange-200 px-2 py-1 rounded-full text-sm\"><p>{discount_percentage}% Off</p></span>"
        }
      ]
    },
    {
      "description": "The UI should display two badges, one for price and one for discount, with different background colors and text colors. The price badge should have a light blue background and white text, and the discount badge should have a green background and white text.",
      "html": "<div class=\"flex gap-2\"><PriceBadge/><DiscountBadge/></div>",
      "components": [
        {
          "name": "PriceBadge",
          "is_standalone": true,
          "description": "Standalone component, displays the price of an item.",
          "html": "<span class=\"bg-gray-200 text-white rounded py-1 px-2\">{price}</span>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "Standalone component, displays the discount of an item.",
          "html": "<span class=\"bg-green-400 text-white rounded py-1 px-2\">{discount}% off</span>"
        }
      ]
    },
    {
      "description": "The UI should display a price badge with an optional discount badge next to it. The price badge should show the original price, and the discount badge should show the discount percentage and the new price.",
      "html": "<div class=\"flex items-center\"><PriceBadge/><DiscountBadge/></div>",
      "components": [
        {
          "name": "PriceBadge",
          "is_standalone": true,
          "description": "A standalone component that displays the original price.",
          "html": "<span class=\"bg-gray-200 px-2 py-1 text-sm rounded\">{original_price}</span>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "A standalone component that displays the discount percentage and the new price.",
          "html": "<span class=\"bg-orange-200 px-2 py-1 text-sm rounded\">{discount_percentage}% OFF <span class=\"text-gray-600\">{new_price}</span></span>"
        }
      ]
    }
  ],
  "Video/Audio Players": [
    {
      "description": "The UI should have a large video or audio player in the center, with playback controls (play/pause, seek, volume) below it. There should also be a title and optional description above the player.",
      "html": "<div class=\"flex flex-col h-screen p-4\"><div class=\"flex justify-center mb-4\"><MediaTitle/><!-- displays the title of the media --><MediaDescription/><!-- displays a optional description of the media --></div><MediaPlayer/><!-- displays the video or audio content --><MediaControls/><!-- displays the playback controls (play/pause, seek, volume) --></div>",
      "components": [
        {
          "name": "MediaPlayer",
          "is_standalone": true,
          "description": "standalone, displays the video or audio content",
          "html": "<div class=\"w-full h-96 bg-gray-200 rounded-lg\"><!-- video or audio content will be rendered here --></div>"
        },
        {
          "name": "MediaControls",
          "is_standalone": true,
          "description": "standalone, displays the playback controls (play/pause, seek, volume)",
          "html": "<div class=\"flex justify-center mb-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_or_pause_text} </button><div class=\"mx-4\"><input type=\"range\" class=\"w-full\"/></div><button class=\"bg-gray-200 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\">Volume: {volume_level}% </button></div>"
        },
        {
          "name": "MediaTitle",
          "is_standalone": true,
          "description": "standalone, displays the title of the media",
          "html": "<h2 class=\"text-2xl font-bold mb-2\">{media_title}</h2>"
        },
        {
          "name": "MediaDescription",
          "is_standalone": true,
          "description": "standalone, displays a optional description of the media",
          "html": "<p class=\"text-gray-600\">{media_description}</p>"
        }
      ]
    }
  ],
  "Forum Categories and Subforums": [
    {
      "description": "The UI should display a list of forum categories, each containing a title and a list of subforums. Each subforum should also display a title and a brief description.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Forum Categories</h1><ul><ForumCategory/><ForumCategory/><!-- Add more ForumCategory components here --></ul></div>",
      "components": [
        {
          "name": "ForumCategory",
          "is_standalone": true,
          "description": "standalone component that displays a category title and a list of subforums.",
          "html": "<li class=\"py-2\"><h2 class=\"text-lg font-bold\">{category_title}</h2><ul><Subforum/><Subforum/><!-- Add more Subforum components here --></ul></li>"
        },
        {
          "name": "Subforum",
          "is_standalone": true,
          "description": "standalone component that displays a subforum title and description.",
          "html": "<li class=\"py-2\"><h3 class=\"text-md font-bold\">{subforum_title}</h3><p>{subforum_description}</p></li>"
        }
      ]
    }
  ],
  "Checkout process steps": [
    {
      "description": "The UI should be a sequential list of steps to complete the checkout process. Each step should have a title, a brief description, and a visual indicator to show progression.",
      "html": "<nav aria-label=\"Checkout process\"><CheckoutSteps><CheckoutStep/><CheckoutStep/><CheckoutStep/></CheckoutSteps></nav>",
      "components": [
        {
          "name": "CheckoutStep",
          "is_standalone": true,
          "description": "(standalone) - represents a single step in the checkout process",
          "html": "<div class=\"flex items-center mb-4\"><div class=\"w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center mr-4\"><span>{step_number}</span></div><div class=\"flex-1\"><h5 class=\"uppercase text-lg\">{step_title}</h5><p class=\"text-sm\">{step_description}</p></div></div>"
        },
        {
          "name": "CheckoutSteps",
          "is_standalone": false,
          "description": "(takes children) - contains a list of `CheckoutStep` components",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    }
  ],
  "Modal window": [
    {
      "description": "A modal window that appears on top of the main content, with a darkened background, a white overlay with a title, content, and a close button.",
      "html": "<div class=\"fixed inset-0 z-50\"><ModalOverlay/><div class=\"fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-1/2 p-4 bg-white rounded-md shadow-md\"><ModalWindow><ModalHeader><h2>{modal_title}</h2><ModalCloseButton/></ModalHeader><ModalContent>{children}\n</ModalContent></ModalWindow></div></div>",
      "components": [
        {
          "name": "ModalOverlay",
          "is_standalone": true,
          "description": "(standalone): The darkened background that covers the main content.",
          "html": "<div class=\"fixed inset-0 bg-gray-700 bg-opacity-50\"></div>"
        },
        {
          "name": "ModalWindow",
          "is_standalone": false,
          "description": "(takes children): The white overlay that contains the title, content, and close button.",
          "html": "<div class=\"bg-white rounded-md shadow-md\">{children}</div>"
        },
        {
          "name": "ModalHeader",
          "is_standalone": false,
          "description": "(takes children): The top section of the modal window that displays the title.",
          "html": "<div class=\"flex justify-between mb-4\">{children}</div>"
        },
        {
          "name": "ModalCloseButton",
          "is_standalone": true,
          "description": "(standalone): The button to close the modal window.",
          "html": "<button class=\"text-gray-400 hover:text-gray-600 transition duration-300 ease-in-out focus:outline-none\" aria-label=\"Close modal\">×</button>"
        },
        {
          "name": "ModalContent",
          "is_standalone": false,
          "description": "(takes children): The main content area of the modal window.",
          "html": "<div class=\"px-4\">{children}</div>"
        }
      ]
    }
  ],
  "Resume download button with print option": [
    {
      "description": "A button group with two buttons: one to download the resume and another to print the resume. The buttons should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><ResumeActionButtons/></div>",
      "components": [
        {
          "name": "ResumeActionButtons",
          "is_standalone": true,
          "description": "(standalone) - contains the download and print buttons",
          "html": "<div class=\"btn-group\"><ActionButton><i class=\"fas fa-download mr-2\"></i>Download Resume </ActionButton><ActionButton><i class=\"fas fa-print mr-2\"></i>Print Resume </ActionButton></div>"
        },
        {
          "name": "ActionButton",
          "is_standalone": false,
          "description": "(takes children) - a single button with a label and optional icon",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{children}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-friendly button that allows users to download a resume in various formats (e.g., PDF, Word, Text) and also provides an option to print the resume. The button should be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><DownloadResumeButton/></div>",
      "components": [
        {
          "name": "DownloadResumeButton",
          "is_standalone": true,
          "description": "a standalone component that renders a button with a dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download Resume <span class=\"caret ml-2\"></span><DropdownMenu/></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the dropdown menu with options to download the resume in different formats and print the resume.",
          "html": "<ul class=\"dropdown-menu absolute bg-white shadow-md py-2\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{format_url}\" download=\"{filename}\">{format_name} </a><!-- or --><a href=\"#\" onclick=\"window.print()\">Print Resume </a></li>"
        }
      ]
    },
    {
      "description": "A download button with an adjacent print option, styled with a modern and minimalistic design.",
      "html": "<div class=\"flex gap-2\"><ResumeDownloadButton/><PrintOption/></div>",
      "components": [
        {
          "name": "ResumeDownloadButton",
          "is_standalone": true,
          "description": "standalone component for the download button",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Download Resume ({file_size})</button>"
        },
        {
          "name": "PrintOption",
          "is_standalone": true,
          "description": "standalone component for the print option",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-gray-100 font-bold py-2 px-4 rounded\">Print</button>"
        }
      ]
    }
  ],
  "Tooltip providing additional information specific to the context of the element": [
    {
      "description": "The UI should consist of a interactive element (e.g. a button or a link) with a tooltip that appears when hovered or focused. The tooltip should provide additional information specific to the context of the element.",
      "html": "<div class=\"relative\"><ToolTipTrigger/><ToolTipContent/></div>",
      "components": [
        {
          "name": "ToolTipTrigger",
          "is_standalone": true,
          "description": "(standalone): The interactive element that triggers the tooltip.",
          "html": "<a href=\"#\" class=\"...\"><!-- button or link content --></a>"
        },
        {
          "name": "ToolTipContent",
          "is_standalone": false,
          "description": "(takes children): The content of the tooltip.",
          "html": "<div class=\"absolute bg-gray-100 text-sm p-2 rounded\">{children}</div>"
        }
      ]
    }
  ],
  "Sticky/Fixed Navigation": [
    {
      "description": "The UI should have a sticky/fixed navigation bar that is visible at the top of the page, and remains fixed in place as the user scrolls down the page.",
      "html": "<body><NavigationBar/><!-- page content --><main><!-- page content here --></main></body>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "A standalone component that contains the navigation links.",
          "html": "<nav class=\"fixed top-0 left-0 w-full bg-white shadow-md\"><div class=\"max-w-md mx-auto px-4\"><ul class=\"flex justify-between py-4\"><li class=\"mr-4\"><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">Home</a></li><li class=\"mr-4\"><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">About</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">Contact</a></li></ul></div></nav>"
        }
      ]
    }
  ],
  "Trust Badges: Establish credibility with security badges": [
    {
      "description": "The UI should display a horizontal row of trust badges, each representing a security feature or certification. The badges should be evenly spaced and center-aligned, with sufficient padding between each badge to maintain a clean and organized design.",
      "html": "<div class=\"flex justify-center flex-wrap\"><TrustBadgeList><TrustBadge/><TrustBadge/><TrustBadge/><!-- Add more TrustBadge components here --></TrustBadgeList></div>",
      "components": [
        {
          "name": "TrustBadge",
          "is_standalone": true,
          "description": "(standalone): A single trust badge component that displays a security feature or certification.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src=\"{badge_image}\" alt=\"{badge_alt_text}\" class=\"w-12 h-12 mr-4\"><div class=\"text-lg\">{badge_text}</div></div>"
        },
        {
          "name": "TrustBadgeList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps a collection of `TrustBadge` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Product Variations": [
    {
      "description": "The UI should display a featured product with variations, showcasing different options for the same product. The layout should be responsive, with a mobile-first approach, and should include accessibility features.",
      "html": "<div class=\"max-w-md mx-auto\"><ProductHeader/><ProductImage/><div class=\"flex justify-between mb-4\"><VariationSelect/><ProductPrice/></div><ProductVariationsList><ProductVariationItem>{variation_name}</ProductVariationItem><!-- repeat for each variation --></ProductVariationsList><CallToAction/></div>",
      "components": [
        {
          "name": "ProductHeader",
          "is_standalone": true,
          "description": "A standalone component displaying the product name and rating.",
          "html": "<div class=\"mb-4\"><h2 class=\"text-2xl\">{product_name}</h2><p>Rating: {rating}/5</p></div>"
        },
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component displaying the product image.",
          "html": "<img src={product_image_url} alt={product_name} class=\"w-full mb-4\">"
        },
        {
          "name": "VariationSelect",
          "is_standalone": true,
          "description": "A standalone component displaying a dropdown to select a product variation.",
          "html": "<select class=\"w-full p-2 mb-4\"><option value=\"\">Select a variation</option><!-- options will be populated dynamically --></select>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "A standalone component displaying the product price.",
          "html": "<p class=\"text-lg font-bold\">${price}</p>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "A standalone component displaying a call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "ProductVariationsList",
          "is_standalone": false,
          "description": "A component taking children, displaying a list of product variations.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "ProductVariationItem",
          "is_standalone": false,
          "description": "A component taking children, displaying a single product variation item.",
          "html": "<li class=\"py-2 border-b border-gray-200\">{children}</li>"
        }
      ]
    }
  ],
  "Filters and Sorting": [
    {
      "description": "The UI should display a filter and sorting component that allows users to filter and sort a list of items. The filter section should have a dropdown menu with options to filter by category, and the sorting section should have a dropdown menu with options to sort by name, date, or rating. The component should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FiltersAndSortingContainer><FilterDropdown/><SortDropdown/></FiltersAndSortingContainer></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "- standalone component",
          "html": "<div class=\"relative inline-block\"><button class=\"bg-gray-100 hover:bg-gray-200 py-2 px-4 rounded\">{filterPlaceholder}</button><ul class=\"absolute z-10 w-full bg-white shadow-md\"><li><a href=\"#\" class=\"block py-2 px-4\">{filterOption1}</a></li><li><a href=\"#\" class=\"block py-2 px-4\">{filterOption2}</a></li><!-- more filter options --></ul></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "- standalone component",
          "html": "<div class=\"relative inline-block\"><button class=\"bg-gray-100 hover:bg-gray-200 py-2 px-4 rounded\">{sortPlaceholder}</button><ul class=\"absolute z-10 w-full bg-white shadow-md\"><li><a href=\"#\" class=\"block py-2 px-4\">{sortOption1}</a></li><li><a href=\"#\" class=\"block py-2 px-4\">{sortOption2}</a></li><!-- more sort options --></ul></div>"
        },
        {
          "name": "FiltersAndSortingContainer",
          "is_standalone": false,
          "description": "- container component that takes children",
          "html": "<div class=\"flex justify-between mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should consist of a filters section and a sorting section. The filters section should have a dropdown for category, a dropdown for rating, and a text input for searching. The sorting section should have a dropdown for sorting options. The UI should be responsive and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FiltersSection/><SortingSection/></div>",
      "components": [
        {
          "name": "FiltersSection",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><CategoryDropdown/><RatingDropdown/><SearchInput/></div>"
        },
        {
          "name": "CategoryDropdown",
          "is_standalone": true,
          "description": "standalone",
          "html": "<select class=\"w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"\">{category_placeholder}</option><!-- options for categories --></select>"
        },
        {
          "name": "RatingDropdown",
          "is_standalone": true,
          "description": "standalone",
          "html": "<select class=\"w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"\">{rating_placeholder}</option><!-- options for ratings --></select>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Search\"/>"
        },
        {
          "name": "SortingSection",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><SortingDropdown/></div>"
        },
        {
          "name": "SortingDropdown",
          "is_standalone": true,
          "description": "standalone",
          "html": "<select class=\"w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"\">{sorting_placeholder}</option><!-- options for sorting --></select>"
        }
      ]
    }
  ],
  "Prominent banner encouraging users to take a specific action, often displayed at the top of the page": [
    {
      "description": "The UI should be a prominent banner that encourages users to take a specific action, often displayed at the top of the page. It should have a clear call-to-action (CTA) and be visually appealing.",
      "html": "<!-- Hero Banner --><div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-8\"><HeroBanner/></div>",
      "components": [
        {
          "name": "HeroBanner",
          "is_standalone": true,
          "description": "A standalone component that contains a heading, a paragraph, and a call-to-action button.",
          "html": "<!-- Hero Banner Component --><div class=\"bg-orange-500 py-4 md:py-6 lg:py-8\"><div class=\"container mx-auto p-4\"><h2 class=\"text-2xl md:text-3xl lg:text-4xl font-bold text-white\">{heading}</h2><p class=\"text-lg md:text-xl lg:text-2xl text-white\">{description}</p><button class=\"bg-white hover:bg-gray-100 text-orange-500 font-bold py-2 px-4 rounded\">{cta_text}</button></div></div>"
        }
      ]
    }
  ],
  "Course Progress Bars": [
    {
      "description": "The UI should display a progress bar indicating the completion percentage of a course, with a label showing the percentage complete. The progress bar should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><!-- course information --><CourseLabel/><!-- progress bar --><ProgressBar/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "(standalone) - displays the progress bar with a percentage complete label",
          "html": "<div class=\"w-full h-4 rounded bg-gray-200\"><div class=\"h-4 bg-blue-500 rounded\" style={{ width: `${progressPercentage}%` }}></div><p class=\"text-lg\">{progressPercentage}% Complete</p></div>"
        },
        {
          "name": "CourseLabel",
          "is_standalone": true,
          "description": "(standalone) - displays the course name and completion percentage",
          "html": "<h2 class=\"text-lg\">{courseName} - {completionPercentage}% Complete</h2>"
        }
      ]
    }
  ],
  "Trending topics display": [
    {
      "description": "A responsive, mobile-first trending topics display that showcases a list of trending topics with their corresponding counts. The UI should be clean, simple, and easy to navigate.",
      "html": "<div class=\"mx-auto max-w-md p-4 pt-6 lg:max-w-lg\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><ul class=\"divide-y divide-gray-200\"><TrendingTopic/><TrendingTopic/><!-- More trending topics here --></ul></div>",
      "components": [
        {
          "name": "TrendingTopic",
          "is_standalone": true,
          "description": "standalone component that displays a single trending topic",
          "html": "<li class=\"py-4\"><a href=\"#\" class=\"text-gray-900 hover:text-gray-600 transition duration-300 ease-in-out\"><span class=\"text-lg\">{topic_name}</span><TopicCount/></a></li>"
        },
        {
          "name": "TopicCount",
          "is_standalone": true,
          "description": "standalone component that displays the count of a topic",
          "html": "<span class=\"text-gray-600 text-sm\">{topic_count} tweets</span>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, and accessible list of trending topics, with each topic displaying a title, a brief description, and a popularity indicator (e.g., number of tweets). The list should be organized in a grid layout on larger screens and a vertical list on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><TrendingTopicList><!-- trending topics will be inserted here --></TrendingTopicList></div>",
      "components": [
        {
          "name": "TrendingTopicList",
          "is_standalone": false,
          "description": "(takes children): a container for the list of trending topics",
          "html": "<div class=\"grid gap-4 md:grid-cols-2 lg:grid-cols-3\">{children}</div>"
        }
      ]
    }
  ],
  "Button Groups": [
    {
      "description": "The UI should display a group of buttons that can be used to perform different actions. The buttons should be grouped together and spaced evenly. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center\"><ButtonGroup><Button/><Button/><Button/></ButtonGroup></div>",
      "components": [
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "A container component that groups multiple buttons together. This component takes children.",
          "html": "<div class=\"flex flex-wrap justify-center'>{children}</div>"
        },
        {
          "name": "Button",
          "is_standalone": true,
          "description": "An individual button component that can be used to perform an action. This component is standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    }
  ],
  "Social Media Profile Picture": [
    {
      "description": "A circular profile picture with a username displayed below it, responsive and mobile-first.",
      "html": "<div class=\"flex flex-col items-center\"><UserProfilePic/><UsernameText/></div>",
      "components": [
        {
          "name": "UserProfilePic",
          "is_standalone": true,
          "description": "(standalone): Displays a circular profile picture.",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-48 h-48 rounded-full\"/>"
        },
        {
          "name": "UsernameText",
          "is_standalone": true,
          "description": "(standalone): Displays the username as text.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        }
      ]
    }
  ],
  "User profile summary and bio": [
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    }
  ],
  "Cookie Banners": [
    {
      "description": "A cookie banner is a notification that appears at the top or bottom of a webpage, informing users about the use of cookies on the website. It should be a non-obtrusive, dismissible notification that contains a message, an accept button, and an optional link to learn more.",
      "html": "<!-- Cookie banner container --><div class=\"fixed bottom-0 left-0 right-0 p-4 bg-gray-100\"><!-- Cookie banner content --><CookieBanner/></div>",
      "components": [
        {
          "name": "CookieBanner",
          "is_standalone": true,
          "description": "Standalone component that contains the cookie banner message, accept button, and optional link.",
          "html": "<!-- Cookie banner content --><div class=\"flex justify-between\"><p class=\"text-sm\">{cookie_message}</p><div class=\"flex\"><CookieButton/>{optional_link && ( <a href={optional_link.href} target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-sm underline ml-4\">{optional_link.text}</a>)} </div></div>"
        },
        {
          "name": "CookieButton",
          "is_standalone": true,
          "description": "Standalone component that represents the accept button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Accept</button>"
        }
      ]
    }
  ],
  "Product Rating Average": [
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    }
  ],
  "Telephone/Phone Number Inputs": [
    {
      "description": "A responsive, mobile-first, accessible, and SEO-friendly phone number input field with a label and optional error message.",
      "html": "<div class=\"flex flex-col mb-4\"><PhoneNumberInput/><InputError/></div>",
      "components": [
        {
          "name": "PhoneNumberInput",
          "is_standalone": true,
          "description": "A standalone component that renders a phone number input field with a label.",
          "html": "<label class=\"block text-sm mb-1\">Phone Number <input type=\"tel\" class=\"block w-full pl-10 text-sm text-gray-700\" placeholder=\"(___) ___-____\"/></label>"
        },
        {
          "name": "InputError",
          "is_standalone": true,
          "description": "A standalone component that renders an error message below the input field.",
          "html": "<p class=\"text-sm text-red-600\">{error_message}</p>"
        }
      ]
    }
  ],
  "Upload button": [
    {
      "description": "A simple upload button with a label \"Upload a file\" and an icon to indicate file upload.",
      "html": "<UploadButton/>",
      "components": [
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "A standalone component that contains a button with a label and an icon.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" typeof=\"button\"><i class=\"fas fa-upload mr-2\" aria-hidden=\"true\"></i><span>Upload a file</span></button>"
        }
      ]
    }
  ],
  "Price and availability information": [
    {
      "description": "The UI should display price and availability information in a clean and easy-to-read format. The price should be prominent, and the availability information should be displayed below it.",
      "html": "<div class=\"flex flex-col gap-2\"><PriceInfo/><AvailabilityInfo/></div>",
      "components": [
        {
          "name": "PriceInfo",
          "is_standalone": true,
          "description": "Standalone component to display the price information.",
          "html": "<p class=\"text-lg font-bold\">{price_amount} {currency}</p>"
        },
        {
          "name": "AvailabilityInfo",
          "is_standalone": true,
          "description": "Standalone component to display the availability information.",
          "html": "<p>Availability: {availability_status}</p><!-- availability_status can be \"In Stock\", \"Out of Stock\", etc. --><p>Ships in {shipping_time} from {warehouse_location}</p>"
        }
      ]
    }
  ],
  "Header User Profile Picture": [
    {
      "description": "The UI should display a circular user profile picture with a dropdown menu that appears when the user clicks on the profile picture.",
      "html": "<nav class=\"flex justify-end\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></nav>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture.",
          "html": "<div class=\"rounded-full h-10 w-10 overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"User Profile Picture\" class=\"object-cover h-full w-full\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children): Displays a dropdown menu with user profile options.",
          "html": "<div class=\"absolute right-0 mt-2 w-48 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    }
  ],
  "Footer Newsletter Text": [
    {
      "description": "The UI should display a brief text introducing the newsletter, a text input field to enter an email address, and a call-to-action button to submit the email address.",
      "html": "<footer><NewsletterText/><NewsletterInput/><SubscribeButton/></footer>",
      "components": [
        {
          "name": "NewsletterText",
          "is_standalone": true,
          "description": "A standalone component displaying the introductory text.",
          "html": "<p class=\"text-lg xl:text-xl font-bold\">Stay up-to-date with our latest news and updates!</p>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "A standalone component containing a text input field for entering an email address.",
          "html": "<input class=\"w-full xl:w-1/2 p-2 pl-10 text-sm text-gray-700\" type=\"email\" placeholder=\"Enter your email address...\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "A standalone component displaying a call-to-action button to submit the email address.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    }
  ],
  "Footer with copyright information and disclaimer": [
    {
      "description": "The UI should be a simple footer section that displays copyright information and a disclaimer. The footer should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The main footer component that contains the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the copyright information.",
          "html": "<p>&copy; {current_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the disclaimer text.",
          "html": "<p>{disclaimer_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a footer section that displays copyright information and a disclaimer. It should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-4 pb-4\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone): The main footer component that wraps the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto px-4 lg:px-8\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone): Displays the copyright information.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {copyright_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone): Displays the disclaimer.",
          "html": "<p class=\"text-sm text-gray-600\">{disclaimer_text}</p>"
        }
      ]
    }
  ],
  "User Ranks and Badges": [
    {
      "description": "The UI should display a user's rank and badges in a responsive, mobile-friendly format. The rank should be displayed prominently, with the badges listed below it.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileRank/><UserProfileBadges><UserProfileBadge/><UserProfileBadge/><!-- Add more badges here --></UserProfileBadges></div>",
      "components": [
        {
          "name": "UserProfileRank",
          "is_standalone": true,
          "description": "A standalone component that displays the user's rank.",
          "html": "<h2 class=\"text-2xl font-bold\">{rank_name}</h2><p class=\"text-lg text-gray-600\">{rank_description}</p>"
        },
        {
          "name": "UserProfileBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single badge.",
          "html": "<div class=\"flex items-center mb-2\"><img src={badge_image} alt={badge_name} class=\"w-8 h-8 mr-2\"/><span class=\"text-lg\">{badge_name}</span></div>"
        },
        {
          "name": "UserProfileBadges",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of badges.",
          "html": "<ul class=\"list-none m-0 p-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a responsive and accessible way. The rank should be displayed as a title, and the badges should be displayed as a list of icons with tooltips.",
      "html": "<div class=\"flex flex-col items-center md:flex-row md:items-start md:justify-center\"><UserRank/><BadgeList><Badge/><Badge/><!-- Add more badges here --></BadgeList></div>",
      "components": [
        {
          "name": "UserRank",
          "is_standalone": true,
          "description": "A standalone component that displays the user's rank as a title.",
          "html": "<h2 class=\"text-lg font-bold\">{user_rank}</h2>"
        },
        {
          "name": "BadgeList",
          "is_standalone": false,
          "description": "A component that takes children, which are `Badge` components.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row\">{children}</ul>"
        },
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "A standalone component that displays a badge icon with a tooltip.",
          "html": "<li class=\"mr-2 mb-2 md:mr-4 md:mb-4\"><img src={badge_icon} alt={badge_tooltip} class=\"w-8 h-8 md:w-10 md:h-10\"/><span class=\"sr-only\">{badge_tooltip}</span></li>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a compact and visually appealing way. The design should be responsive, with the rank and badges arranged horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-center md:flex-nowrap\"><RankList><RankBadge/><RankBadge/><RankBadge/></RankList></div>",
      "components": [
        {
          "name": "RankBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single badge and its associated rank.",
          "html": "<div class=\"bg-gray-200 p-2 rounded-md\"><img src={badgeImageUrl} alt={badgeAltText} class=\"w-8 h-8\"/><span class=\"text-sm\">{rankName}</span></div>"
        },
        {
          "name": "RankList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of `RankBadge` components.",
          "html": "<ul class=\"list-none m-0 p-0 flex flex-wrap justify-center md:flex-nowrap\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a compact and visually appealing way. The rank should be prominently displayed, and the badges should be shown as a series of icons or images below the rank.",
      "html": "<div class=\"flex flex-col items-center\"><UserRank/><!-- Displays the user's rank --><BadgeList><!-- List of badges will be rendered here --></BadgeList></div>",
      "components": [
        {
          "name": "UserRank",
          "is_standalone": true,
          "description": "component (standalone): Displays the user's rank.",
          "html": "<div class=\"text-2xl font-bold\">{rank_name}</div>"
        },
        {
          "name": "BadgeList",
          "is_standalone": false,
          "description": "component (takes children): Displays a list of badges.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children} <!-- List of Badge components will be rendered here --></div>"
        }
      ]
    }
  ],
  "Contact directory display": [
    {
      "description": "A responsive contact directory display with a list of contacts, each showing name, email, and phone number.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-2xl font-bold mb-4\">Contact Directory</h1><ContactDirectory><!-- list of contact cards will be rendered here --></ContactDirectory></div>",
      "components": [
        {
          "name": "ContactDirectory",
          "is_standalone": false,
          "description": "(takes children) - contains a list of `ContactCard`s",
          "html": "<ul class=\"list-none p-0 mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of contacts, with each contact showing their name, email, and phone number. The list should be responsive and accessible, with a clear visual hierarchy.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-2xl font-bold mb-4\">Contact Directory</h1><ContactDirectory><!-- list of ContactCard components will be rendered here --></ContactDirectory></div>",
      "components": [
        {
          "name": "ContactDirectory",
          "is_standalone": false,
          "description": "A container component that takes children (a list of **ContactCard** components).",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first contact directory display showing a list of contacts with their names, email addresses, and phone numbers.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:pt-12\"><h1 class=\"text-3xl font-bold mb-4\">Contact Directory</h1><ContactList><Contact/><Contact/><!-- add more contacts here --></ContactList></div>",
      "components": [
        {
          "name": "Contact",
          "is_standalone": true,
          "description": "(standalone) - represents a single contact",
          "html": "<div class=\"flex justify-between mb-4\"><div><h2 class=\"text-lg font-bold\">{contact_name}</h2><p class=\"text-gray-600\">{contact_email}</p><p class=\"text-gray-600\">{contact_phone}</p></div></div>"
        },
        {
          "name": "ContactList",
          "is_standalone": false,
          "description": "(takes children) - represents a list of contacts",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The contact directory display should be a grid of contact cards, with each card displaying the contact's name, title, phone number, and email address. The card layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><h1 class=\"text-2xl font-bold mb-4\">Contact Directory</h1><ContactDirectory><ContactCard/><ContactCard/><!-- Add more ContactCard components here --></ContactDirectory></div>",
      "components": [
        {
          "name": "ContactCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single contact's information",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{contact_name}</h2><p class=\"text-gray-600\">{contact_title}</p><p class=\"text-gray-600\">{contact_phone}</p><p class=\"text-gray-600\">{contact_email}</p></div>"
        },
        {
          "name": "ContactDirectory",
          "is_standalone": false,
          "description": "(takes children): Container component that renders a grid of `ContactCard` components",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Product Description Table": [
    {
      "description": "The UI should be a table that displays product information in a clear and organized manner. The table should be responsive, with columns adapting to different screen sizes. The table should also be accessible, with proper semantic HTML and ARIA attributes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ProductDescriptionTable/></div>",
      "components": [
        {
          "name": "ProductDescriptionTable",
          "is_standalone": true,
          "description": "A standalone component that renders a table with product information.",
          "html": "<table class=\"border-collapse w-full\"><thead><TableRow><TableCell>Feature</TableCell><TableCell>Description</TableCell></TableRow></thead><tbody>{tableRows} </tbody></table>"
        },
        {
          "name": "TableCell",
          "is_standalone": false,
          "description": "A component that takes children and renders a table cell with the provided content.",
          "html": "<td class=\"p-2 border\">{children}</td>"
        },
        {
          "name": "TableRow",
          "is_standalone": false,
          "description": "A component that takes children and renders a table row with the provided cells.",
          "html": "<tr class=\"odd:bg-gray-100\">{children}</tr>"
        }
      ]
    }
  ],
  "Drag-and-Drop Interfaces": [
    {
      "description": "A drag-and-drop interface with a drop zone, a list of draggable items, and a button to clear the drop zone.",
      "html": "<div class=\"flex h-screen\"><div class=\"flex-1 overflow-y-auto\"><!-- List of draggable items --><ul class=\"space-y-2\"><DraggableItem/><DraggableItem/><DraggableItem/></ul></div><div class=\"flex-1 border\"><!-- Drop zone --><DropZone><!-- dropped items will be rendered here --></DropZone></div><ClearButton/></div>",
      "components": [
        {
          "name": "DraggableItem",
          "is_standalone": true,
          "description": "- standalone: A single item that can be dragged and dropped.",
          "html": "<div class=\"bg-white shadow-md p-2 rounded\"><p>{item_name}</p></div>"
        },
        {
          "name": "DropZone",
          "is_standalone": false,
          "description": "- takes children: The area where items can be dropped.",
          "html": "<div class=\"h-full p-4 border-dashed border-2\">{children}</div>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "- standalone: A button to clear the drop zone.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Clear</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first drag-and-drop interface that allows users to drag items from a list and drop them into a designated drop zone. The interface should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Drag and Drop Interface</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DraggableList><!-- Draggable items will be rendered here --></DraggableList></div><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DropZone><!-- Dropped items will be rendered here --></DropZone></div></div></div>",
      "components": [
        {
          "name": "DropZone",
          "is_standalone": false,
          "description": "(takes children) - A container that accepts dragged items and displays them in a list.",
          "html": "<div class=\"bg-gray-200 rounded p-4 mb-4 border-2 border-dashed border-gray-400\"><h2 class=\"text-lg font-bold mb-2\">Drop Zone</h2><ul class=\"list-none p-0 m-0\">{children} </ul></div>"
        },
        {
          "name": "DraggableList",
          "is_standalone": false,
          "description": "(takes children) - A list of draggable items that can be dragged and dropped into a drop zone.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Direct message conversation list with online status": [
    {
      "description": "The UI should be a list of direct message conversations, each displaying the conversation title, the last message, and the online status of the other user. The list should be responsive, with a maximum width and scrollable on smaller screens.",
      "html": "<div class=\"max-w-md overflow-y-auto mx-auto p-4\"><!-- Conversation list --><ul><ConversationItem/><ConversationItem/><!-- ... --></ul></div>",
      "components": [
        {
          "name": "ConversationItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single conversation item in the list.",
          "html": "<li class=\"py-4 border-b border-gray-200\"><div class=\"flex items-center\"><img src={user_avatar_url} alt=\"User avatar\" class=\"w-10 h-10 rounded-full mr-3\"/><div class=\"flex-1\"><h5 class=\"text-lg\">{conversation_title}</h5><p class=\"text-gray-600\">{last_message_preview}</p></div><OnlineStatusIndicator/></div></li>"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "(standalone): Indicates whether the other user is online or offline.",
          "html": "<span class={online ? 'text-green-500' : 'text-gray-400'}>{online ? 'Online' : 'Offline'}</span>"
        }
      ]
    }
  ],
  "Button for submitting a new post or comment": [
    {
      "description": "A primary button with a submit icon, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><SubmitButton/></div>",
      "components": [
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\" aria-hidden=\"true\"></i>Submit</button>"
        }
      ]
    }
  ],
  "Upvote and downvote buttons for rating content": [
    {
      "description": "The UI should consist of two buttons, one for upvoting and one for downvoting, placed side by side. The upvote button should have an upward-facing arrow icon, and the downvote button should have a downward-facing arrow icon. The buttons should be small and compact, with a subtle background color and a hover effect to indicate interactivity.",
      "html": "<div class=\"flex items-center\"><RatingButtons/></div>",
      "components": [
        {
          "name": "RatingButtons",
          "is_standalone": true,
          "description": "a standalone component that contains both the upvote and downvote buttons",
          "html": "<div class=\"flex\"><UpvoteButton/><DownvoteButton/></div>"
        },
        {
          "name": "UpvoteButton",
          "is_standalone": true,
          "description": "a standalone component that renders the upvote button",
          "html": "<button class=\"bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded\"><i class=\"fas fa-arrow-up\"></i><span>{upvote_count}</span></button>"
        },
        {
          "name": "DownvoteButton",
          "is_standalone": true,
          "description": "a standalone component that renders the downvote button",
          "html": "<button class=\"bg-gray-100 hover:bg-gray-200 text-gray-800 py-2 px-4 rounded\"><i class=\"fas fa-arrow-down\"></i><span>{downvote_count}</span></button>"
        }
      ]
    }
  ],
  "Newsletter signup form": [
    {
      "description": "The UI should be a simple newsletter signup form with a input field for the email address and a submit button. The form should be responsive, meaning it should adapt to different screen sizes and devices. The form should also be accessible, meaning it should be usable by everyone, regardless of their abilities.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><NewsletterForm><NewsletterInput/><SubmitButton/></NewsletterForm></main>",
      "components": [
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "a standalone component for the email input field",
          "html": "<input class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"email\" placeholder=\"Enter your email address\" aria-label=\"Enter your email address\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "a standalone component for the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "NewsletterForm",
          "is_standalone": false,
          "description": "a component that takes children, which will contain the `NewsletterInput` and `SubmitButton`",
          "html": "<form class=\"flex flex-wrap -mx-3 mb-6\">{children}</form>"
        }
      ]
    }
  ],
  "Search bar": [
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive, mobile-first, and accessible. It should be styled with tailwindcss.",
      "html": "<nav class=\"flex justify-center bg-gray-100 py-4\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone) - The main search bar component that contains the input field and submit button.",
          "html": "<div class=\"flex items-center mx-4\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone) - The input field for the search query.",
          "html": "<input type=\"search\" class=\"px-4 py-2 w-full rounded-md\" placeholder=\"Search...\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone) - The submit button for the search query.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\">Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the search input field and submit button.",
          "html": "<div class=\"flex items-center mb-4\"><SearchInput/><SubmitButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that is the text input field.",
          "html": "<input type=\"search\" class=\"w-full rounded-l p-2 pl-10 text-sm\" placeholder=\"Search...\">"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-r\">Search</button>"
        }
      ]
    }
  ],
  "Call-to-action button with animation effects": [
    {
      "description": "The UI should be a responsive call-to-action (CTA) button with animation effects that grab the user's attention. The button should be prominent on both light and dark backgrounds, have sufficient contrast for accessibility, and be large enough for mobile devices.",
      "html": "<div class=\"flex justify-center\"><AnimatedCTAButton/></div>",
      "components": [
        {
          "name": "AnimatedCTAButton",
          "is_standalone": true,
          "description": "(standalone): A button component with animation effects.",
          "html": "<button class=\"inline-block transition duration-300 ease-in-out hover:scale-110 hover:text-white hover:bg-orange-500 bg-orange-400 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Breadcrumb Home Icon": [
    {
      "description": "The UI should display a breadcrumb navigation with a home icon at the beginning. The home icon should be a clickable link.",
      "html": "<nav aria-label=\"Breadcrumb\" class=\"flex flex-wrap\"><HomeIcon/><Breadcrumb><!-- breadcrumb items will be inserted here --></Breadcrumb></nav>",
      "components": [
        {
          "name": "HomeIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a clickable home icon.",
          "html": "<a href=\"/\" class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\"><i class=\"fas fa-home\"></i></a>"
        },
        {
          "name": "Breadcrumb",
          "is_standalone": false,
          "description": "A component that takes children and displays them as a breadcrumb navigation.",
          "html": "<ul class=\"flex flex-wrap\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a breadcrumb navigation with a home icon. The home icon should be a clickable element that takes the user back to the homepage. The breadcrumb should be responsive, accessible, and SEO-friendly.",
      "html": "<nav aria-label=\"Breadcrumb navigation\"><ol class=\"flex flex-wrap -mb-4\"><li><BreadcrumbHomeIcon/><BreadcrumbItem>Home</BreadcrumbItem></li><!-- more breadcrumb items here --></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbHomeIcon",
          "is_standalone": true,
          "description": "A standalone component representing the home icon in the breadcrumb navigation.",
          "html": "<a href=\"/\" aria-label=\"Go to homepage\"><i class=\"fas fa-home\" aria-hidden=\"true\"></i></a>"
        },
        {
          "name": "BreadcrumbItem",
          "is_standalone": false,
          "description": "A component that takes children, representing a single item in the breadcrumb navigation.",
          "html": "<li class=\"mr-2\">{children} <span aria-hidden=\"true\" class=\"mx-1\">›</span></li>"
        }
      ]
    }
  ],
  "Header User Profile": [
    {
      "description": "The UI should display a header with a user profile section on the right side, containing the user's profile picture, name, and a dropdown menu.",
      "html": "<header class=\"flex justify-between p-4\"><nav>...</nav><UserProfileHeader/></header>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "standalone component that contains the user profile information and dropdown menu.",
          "html": "<div class=\"flex items-center\"><UserProfilePicture/><div class=\"ml-2\"><UserName/><DropdownMenu/></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture.",
          "html": "<img src={user_profile_picture_url} alt={user_name} class=\"w-8 h-8 rounded-full object-cover\"/>"
        },
        {
          "name": "UserName",
          "is_standalone": true,
          "description": "standalone component that displays the user's name.",
          "html": "<p class=\"text-sm\">{user_name}</p>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": true,
          "description": "standalone component that displays a dropdown menu with user options.",
          "html": "<div class=\"relative\"><button class=\"text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\"><span class=\"caret\"></span></button><ul class=\"absolute right-0 w-48 bg-white shadow-md py-2\"><li><a href=\"#\" class=\"block py-2 px-4\">My Profile</a></li><li><a href=\"#\" class=\"block py-2 px-4\">Logout</a></li></ul></div>"
        }
      ]
    }
  ],
  "Friends List: List of friends with profile links": [
    {
      "description": "The Friends List UI should display a list of friends with their profile links. The list should be responsive, mobile-first, and accessible. Each friend's profile link should be displayed with their name and a profile picture.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Friends List</h2><ul class=\"flex flex-wrap justify-center mb-4\"><FriendItem/><FriendItem/><FriendItem/></ul></div>",
      "components": [
        {
          "name": "FriendItem",
          "is_standalone": true,
          "description": "A standalone component representing a single friend's profile link.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><a href=\"{profileLink}\" class=\"block\"><img src=\"{profilePicture}\" alt=\"{friendName}\" class=\"w-12 h-12 rounded-full mb-2\"><span class=\"text-lg\">{friendName}</span></a></li>"
        },
        {
          "name": "FriendsList",
          "is_standalone": false,
          "description": "A component that takes children ( FriendItems ) and renders them in an unordered list.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of friends with profile links. The list should be displayed in a grid on larger screens and a vertical list on smaller screens. Each friend's name should be a link to their profile.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Friends</h2><FriendsList><!-- friend cards will be inserted here --><FriendCard/><FriendCard/><!-- ... --></FriendsList></div>",
      "components": [
        {
          "name": "FriendCard",
          "is_standalone": true,
          "description": "(standalone): a single friend's information with a profile link",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_image_url} alt=\"Profile image\" class=\"w-12 h-12 rounded-full mr-4\"/><a href={profile_url} class=\"text-blue-600 hover:text-blue-900\">{friend_name}</a></div>"
        },
        {
          "name": "FriendsList",
          "is_standalone": false,
          "description": "(takes children): a container for the list of friends",
          "html": "<ul class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Button prompting users to take a specific action, like signing up or purchasing": [
    {
      "description": "A prominent call-to-action (CTA) button that stands out on the page, encouraging users to take a specific action. The button should be responsive, mobile-friendly, and accessible.",
      "html": "<!-- The main container for the CTA button --><div class=\"flex justify-center mb-4\"><ActionButton/></div>",
      "components": [
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "a standalone component that renders a single button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    }
  ],
  "Typography/Font Styles": [
    {
      "description": "The UI should display a selection of typography/font styles, showcasing different font sizes, weights, and styles. The layout should be clean, minimal, and responsive.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TypographySection><TypographySample/><TypographySample/><TypographySample/><!-- Add more TypographySample components here --></TypographySection></div>",
      "components": [
        {
          "name": "TypographySample",
          "is_standalone": true,
          "description": "a standalone component that displays a single typography sample with a specific font style.",
          "html": "<p class=\"text-{font_size} font-{font_weight} {font_style}\">{sample_text}</p>"
        },
        {
          "name": "TypographySection",
          "is_standalone": false,
          "description": "a component that takes children, which is a collection of `TypographySample` components.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Tags and Categories": [
    {
      "description": "The UI should be a responsive, mobile-first layout that displays a list of tags and categories. The tags and categories should be displayed as clickable links, with the number of associated items displayed in parentheses.",
      "html": "<div class=\"container mx-auto p-4\"><h2>Tags</h2><TagList><TagLink/><TagLink/><!-- Add more TagLink components here --></TagList><h2>Categories</h2><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></div>",
      "components": [
        {
          "name": "TagLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single tag as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={tag_url}>{tag_name} ({tag_count})</a>"
        },
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single category as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={category_url}>{category_name} ({category_count})</a>"
        },
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of tags.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of tags and categories in a responsive, mobile-first design. The list should be accessible and SEO-friendly.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Tags and Categories</h1><section class=\"mb-6\"><h2 class=\"text-lg font-bold mb-2\">Tags</h2><TagList><!-- Tags will be rendered here --></TagList></section><section class=\"mb-6\"><h2 class=\"text-lg font-bold mb-2\">Categories</h2><CategoryList><!-- Categories will be rendered here --></CategoryList></section></main>",
      "components": [
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of tags.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of categories.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of tags and categories with a header and a horizontal divider separating the two. Each tag and category should be displayed as a badge with a background color and text.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TagsAndCategoriesHeader/><TagsAndCategoriesDivider/><TagsAndCategoriesList><!-- tags --><TagBadge>{tag_name}</TagBadge><TagBadge>{tag_name}</TagBadge><!-- ... --></TagsAndCategoriesList><TagsAndCategoriesDivider/><TagsAndCategoriesList><!-- categories --><TagBadge>{category_name}</TagBadge><TagBadge>{category_name}</TagBadge><!-- ... --></TagsAndCategoriesList></div>",
      "components": [
        {
          "name": "TagsAndCategoriesHeader",
          "is_standalone": true,
          "description": "standalone, displays the header text",
          "html": "<h2 class=\"text-lg font-bold mb-2\">Tags and Categories</h2>"
        },
        {
          "name": "TagsAndCategoriesDivider",
          "is_standalone": true,
          "description": "standalone, displays a horizontal divider",
          "html": "<hr class=\"border-b border-gray-200\"/>"
        },
        {
          "name": "TagBadge",
          "is_standalone": false,
          "description": "takes children, displays a single tag or category as a badge",
          "html": "<span class=\"bg-gray-200 text-gray-800 px-2 py-1 rounded\">{children}</span>"
        },
        {
          "name": "TagsAndCategoriesList",
          "is_standalone": false,
          "description": "takes children, displays a list of tags or categories",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Related Articles/Recommended Content": [
    {
      "description": "The UI should be a section that displays a list of related articles or recommended content. It should be a Card-based layout with a header, a list of article titles, and a \"More\" button to view more articles.",
      "html": "<section class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-lg font-bold mb-4\">Related Articles</h2><RelatedArticles><!-- Article cards will be inserted here --></RelatedArticles></section>",
      "components": [
        {
          "name": "RelatedArticles",
          "is_standalone": false,
          "description": "(takes children): The container component that holds the list of `ArticleCard`s and the \"More\" button.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children} <button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">More</button></div>"
        }
      ]
    }
  ],
  "Container for content, typically featuring an image, title, and brief description": [
    {
      "description": "The UI should be a responsive, mobile-first container that displays an image, title, and brief description. The image should be displayed at the top, followed by the title and description below it. The container should be accessible and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden\"><MediaCard/></div>",
      "components": [
        {
          "name": "MediaCard",
          "is_standalone": true,
          "description": "A standalone component that contains an image, title, and description.",
          "html": "<div class=\"flex flex-col\"><MediaCardImage/><MediaCardText/></div>"
        },
        {
          "name": "MediaCardImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image.",
          "html": "<img src={imageSrc} alt={imageAlt} class=\"w-full h-48 object-cover rounded-t-xl\"/>"
        },
        {
          "name": "MediaCardText",
          "is_standalone": true,
          "description": "A standalone component that displays a title and description.",
          "html": "<div class=\"p-4\"><h5 class=\"text-lg font-bold\">{title}</h5><p class=\"text-sm\">{description}</p></div>"
        }
      ]
    }
  ],
  "Leaderboard display": [
    {
      "description": "The UI should display a leaderboard with a heading, a list of ranks, and a table with user information. The leaderboard should be responsive, with a maximum width on large screens and a scrollable table on mobile devices.",
      "html": "<div class=\"max-w-3xl mx-auto p-4 lg:p-8\"><LeaderboardHeader/><LeaderboardTable><LeaderboardTableRow><RankColumn/><UsernameColumn/><td>{points}</td></LeaderboardTableRow><!-- Repeat LeaderboardTableRow component for each user --></LeaderboardTable></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "A standalone component displaying the leaderboard heading.",
          "html": "<h1 class=\"text-3xl font-bold mb-4\">Leaderboard</h1>"
        },
        {
          "name": "LeaderboardTable",
          "is_standalone": false,
          "description": "A component taking children, displaying the leaderboard table with user information.",
          "html": "<table class=\"w-full\"><thead><tr><th class=\"px-4 py-2\">Rank</th><th class=\"px-4 py-2\">Username</th><th class=\"px-4 py-2\">Points</th></tr></thead><tbody>{children} </tbody></table>"
        },
        {
          "name": "LeaderboardTableRow",
          "is_standalone": false,
          "description": "A component taking children, displaying a single row in the leaderboard table.",
          "html": "<tr class=\"border-b border-gray-200\">{children}</tr>"
        },
        {
          "name": "UsernameColumn",
          "is_standalone": true,
          "description": "A standalone component displaying a user's username.",
          "html": "<td class=\"px-4 py-2\">{username}</td>"
        },
        {
          "name": "RankColumn",
          "is_standalone": true,
          "description": "A standalone component displaying a user's rank.",
          "html": "<td class=\"px-4 py-2\">{rank}</td>"
        }
      ]
    }
  ],
  "Flash sale countdown": [
    {
      "description": "A flash sale countdown should be a prominent and attention-grabbing component that displays the remaining time (hours, minutes, seconds) until the sale ends. It should be mobile-friendly, responsive, and easily accessible.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-orange-100 rounded-xl\"><h2 class=\"text-2xl font-bold mb-2 text-orange-500\">Flash Sale!</h2><FlashSaleCountdown/><p class=\"text-sm text-gray-500\">Hurry! Sale ends soon! </p></section>",
      "components": [
        {
          "name": "FlashSaleCountdown",
          "is_standalone": true,
          "description": "(standalone): The main component that displays the countdown timer.",
          "html": "<div class=\"flex justify-center mb-4\"><CountdownTimer/></div>"
        },
        {
          "name": "CountdownTimer",
          "is_standalone": true,
          "description": "(standalone): Displays the remaining time in hours, minutes, and seconds.",
          "html": "<div class=\"flex justify-center mb-2\"><span class=\"text-3xl font-bold\">{hours} hour{hours>1 ? 's' : ''}</span><span class=\"text-lg mx-2\">:</span><span class=\"text-3xl font-bold\">{mins} minute{mins>1 ? 's' : ''}</span><span class=\"text-lg mx-2\">:</span><span class=\"text-3xl font-bold\">{secs} second{secs>1 ? 's' : ''}</span></div>"
        }
      ]
    }
  ],
  "Subscription management for channel updates": [
    {
      "description": "The UI should be a responsive subscription management panel for channel updates. It should display a list of channels with toggle buttons to manage subscription status. The panel should be accessible, responsive, and easy to use.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-lg font-bold mb-4\">Subscription Management</h2><ChannelList><!-- list of ChannelSubscriptionCard components will be rendered here --></ChannelList></div>",
      "components": [
        {
          "name": "SubscriptionToggle",
          "is_standalone": true,
          "description": "A standalone component that renders a toggle button to manage subscription status.",
          "html": "<label class=\"inline-flex items-center\"><input type=\"checkbox\" checked=\"{isSubscribed}\" class=\"form-checkbox\"/><span class=\"ml-2\">{isSubscribed ? 'Unsubscribe' : 'Subscribe'}</span></label>"
        },
        {
          "name": "ChannelList",
          "is_standalone": false,
          "description": "A component that takes children (a list of `ChannelSubscriptionCard` components).",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Features Grid: Highlight key benefits in a grid layout": [
    {
      "description": "A responsive grid layout with 3-4 columns, showcasing key benefits of a product or service. Each grid item should have an icon, a heading, and a brief description.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturesGrid><FeatureItem/><FeatureItem/><FeatureItem/><!-- Add more FeatureItem components as needed --></FeaturesGrid></section>",
      "components": [
        {
          "name": "FeatureItem",
          "is_standalone": true,
          "description": "(standalone): A single feature item in the grid, containing an icon, heading, and description.",
          "html": "<div class=\"flex flex-col items-center p-4 lg:p-6\"><i class=\"text-3xl {icon_class} mb-4\"/><!-- icon --><h3 class=\"text-lg font-bold\">{heading}</h3><p class=\"text-gray-600\">{description}</p></div>"
        },
        {
          "name": "FeaturesGrid",
          "is_standalone": false,
          "description": "(takes children): The container element for the feature items, managing the grid layout.",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-8\">{children}</div>"
        }
      ]
    }
  ],
  "Navigation menu displayed in a vertical column alongside the main content": [
    {
      "description": "The UI should display a navigation menu in a vertical column alongside the main content. The navigation menu should be responsive, and the layout should adapt to different screen sizes.",
      "html": "<div class=\"flex h-screen\"><SideNav/><MainContent/></div>",
      "components": [
        {
          "name": "SideNav",
          "is_standalone": true,
          "description": "A standalone component that contains the navigation menu items.",
          "html": "<nav class=\"w-64 bg-gray-100 p-4\"><NavItem>Menu Item 1</NavItem><NavItem>Menu Item 2</NavItem><NavItem>Menu Item 3</NavItem><!-- Add more NavItems here --></nav>"
        },
        {
          "name": "NavItem",
          "is_standalone": false,
          "description": "A component that takes children (the link text) and represents a single navigation menu item.",
          "html": "<a href=\"{nav_item_link}\" class=\"block p-2 hover:bg-gray-200\">{children}</a>"
        },
        {
          "name": "MainContent",
          "is_standalone": true,
          "description": "A standalone component that contains the main content of the page.",
          "html": "<div class=\"flex-1 p-4\"><!-- Main content goes here -->{main_content_text}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a navigation menu on the left side of the page, displayed in a vertical column alongside the main content. The navigation menu should be responsive, taking up the full height of the page on smaller screens and moving to a sidebar on larger screens.",
      "html": "<div class=\"flex h-screen\"><NavigationBar/><MainContent><!-- main content goes here --></MainContent></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone): The navigation menu component that contains the navigation links.",
          "html": "<nav class=\"w-48 xl:w-64 py-4 xl:py-8 bg-gray-100 xl:bg-white xl:shadow-md\"><ul class=\"list-none m-0 p-0\">{navLinks} </ul></nav>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "(takes children): The main content component that contains the page's main content.",
          "html": "<div class=\"flex-1 p-4 xl:p-8\">{children}</div>"
        }
      ]
    }
  ],
  "Social Media Embedded Posts": [
    {
      "description": "The UI should display a list of social media embedded posts, with each post showing the social media platform's icon, the post's content, and any additional metadata such as the author's name and timestamp. The UI should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 md:p-8\"><h2 class=\"text-2xl font-bold mb-4\">Social Media Embedded Posts</h2><ul class=\"list-none mb-0\"><li class=\"mb-4\"><SocialMediaPost/></li><!-- Add more list items for each social media post --></ul></div>",
      "components": [
        {
          "name": "SocialMediaPost",
          "is_standalone": true,
          "description": "a standalone component representing a single social media post.",
          "html": "<li class=\"flex mb-4\"><SocialMediaIcon/><div class=\"flex-1 ml-4\"><PostContent>{post_content}</PostContent><PostMetadata>{author_name} - {timestamp}</PostMetadata></div></li>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": true,
          "description": "a standalone component representing a social media platform's icon.",
          "html": "<img src={social_media_icon_url} alt={social_media_platform_name} class=\"h-8 w-8 mr-2\"/>"
        },
        {
          "name": "PostContent",
          "is_standalone": false,
          "description": "a component that takes children, representing the content of a social media post.",
          "html": "<p>{children}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": false,
          "description": "a component that takes children, representing the metadata of a social media post.",
          "html": "<p class=\"text-gray-600 text-sm\">{children}</p>"
        }
      ]
    }
  ],
  "Progress bar": [
    {
      "description": "The UI should be a horizontal progress bar that shows the progression of a task. The progress bar should be responsive, accessible, and easy to use. It should have a filled portion that indicates the progress and an unfilled portion that indicates the remaining progress.",
      "html": "<ProgressBar/>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "A standalone component that represents the entire progress bar.",
          "html": "<div class=\"w-full h-4 rounded bg-gray-200\"><div class=\"bg-blue-500 h-4 rounded\" style={`width: ${progressPercentage}%`}></div><span class=\"sr-only\">{progressPercentage}% complete</span></div>"
        }
      ]
    }
  ],
  "Progress tracker": [
    {
      "description": "The UI should be a horizontal progress bar with a percentage indicator. The progress bar should be responsive and mobile-friendly.",
      "html": "<div class=\"flex flex-col items-center\"><ProgressBar/><PercentageIndicator/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "Standalone component that displays the progress.",
          "html": "<div class=\"bg-gray-200 h-4 rounded-full\"><div class=\"bg-primary-500 h-4 rounded-full\" style={{ width: `${progressPercentage}%` }}></div></div>"
        },
        {
          "name": "PercentageIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays the percentage.",
          "html": "<p class=\"text-sm\">{progressPercentage}%</p>"
        }
      ]
    }
  ],
  "Stock market ticker": [
    {
      "description": "The UI should display a scrolling list of stock market tickers with the company name, stock symbol, current price, and percentage change. The list should be responsive, with a single column on mobile devices and a multi-column layout on larger screens.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Stock Market Tickers</h1><StockTickerList><!-- List of stock ticker items --></StockTickerList></div>",
      "components": [
        {
          "name": "StockTickerList",
          "is_standalone": false,
          "description": "(takes children): A list of stock market ticker items",
          "html": "<ul class=\"flex flex-wrap -mx-2\">{children}</ul>"
        }
      ]
    }
  ],
  "Message input field with send button and emoji picker": [
    {
      "description": "The UI should be a message input field with a send button and an emoji picker. The input field should be responsive and mobile-friendly. The send button should be enabled only when the input field has some text. The emoji picker should be a dropdown list that appears when the user clicks on the emoji icon. The UI should be accessible, with clear labels and high contrast colors.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><MessageInputField/><SendButton/><EmojiPickerTrigger><EmojiPicker/></EmojiPickerTrigger></div>",
      "components": [
        {
          "name": "MessageInputField",
          "is_standalone": true,
          "description": "standalone component that renders an input field.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Type a message...\"/>"
        },
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "standalone component that renders a button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" disabled={isDisabled}>Send</button>"
        },
        {
          "name": "EmojiPicker",
          "is_standalone": true,
          "description": "standalone component that renders a dropdown list of emojis.",
          "html": "<ul class=\"absolute bg-white rounded shadow-md p-2\">{emojis.map((emoji) =>( <li class=\"py-2 px-4 hover:bg-gray-100\">{emoji}</li>))}</ul>"
        },
        {
          "name": "EmojiPickerTrigger",
          "is_standalone": false,
          "description": "takes children, renders a button that toggles the emoji picker dropdown.",
          "html": "<button class=\"p-2 hover:bg-gray-100 rounded text-lg\">{children}</button>"
        }
      ]
    },
    {
      "description": "A message input field with a send button on the right side, and an emoji picker button on the left side of the input field.",
      "html": "<div class=\"flex items-center bg-white py-2 px-4 rounded-lg\"><EmojiPickerButton/><MessageInputField><input type=\"text\" class=\"px-2 py-1 w-full\"/><SendButton/></MessageInputField></div>",
      "components": [
        {
          "name": "EmojiPickerButton",
          "is_standalone": true,
          "description": "standalone component that renders an emoji picker",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">😊</button>"
        },
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "standalone component that renders a send button",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">{sendButtonText}</button>"
        },
        {
          "name": "MessageInputField",
          "is_standalone": false,
          "description": "component that takes children",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Product filtering and sorting controls": [
    {
      "description": "The UI should display a set of filtering and sorting controls for products, allowing users to narrow down their search results by category, price range, and rating. The controls should be responsive, accessible, and easy to use on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FilterControls><FilterCategorySelect/><PriceRangeSlider/><RatingFilterButtons/><SortBySelect/></FilterControls></div>",
      "components": [
        {
          "name": "FilterCategorySelect",
          "is_standalone": true,
          "description": "A standalone dropdown component for selecting a product category.",
          "html": "<select class=\"bg-white border border-gray-300 rounded-full text-gray-600 py-2 px-4 w-full\"><option value=\"\">{category_placeholder}</option><!-- Option list will be populated dynamically --></select>"
        },
        {
          "name": "PriceRangeSlider",
          "is_standalone": true,
          "description": "A standalone component for selecting a price range.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-2\">Min: {min_price}</span><input type=\"range\" min=\"0\" max=\"100\" value=\"50\" class=\"w-full\"/><span class=\"ml-2\">Max: {max_price}</span></div>"
        },
        {
          "name": "RatingFilterButtons",
          "is_standalone": true,
          "description": "A standalone component for selecting a rating filter.",
          "html": "<div class=\"flex mb-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">4+</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">3+</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">2+</button></div>"
        },
        {
          "name": "SortBySelect",
          "is_standalone": true,
          "description": "A standalone dropdown component for selecting a sorting option.",
          "html": "<select class=\"bg-white border border-gray-300 rounded-full text-gray-600 py-2 px-4 w-full\"><option value=\"\">Sort by</option><option value=\"price_asc\">Price: Low to High</option><option value=\"price_desc\">Price: High to Low</option><option value=\"rating_desc\">Rating: High to Low</option></select>"
        },
        {
          "name": "FilterControls",
          "is_standalone": false,
          "description": "A container component that takes children ( FilterCategorySelect, PriceRangeSlider, RatingFilterButtons, and SortBySelect ).",
          "html": "<div class=\"flex flex-wrap justify-between mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Testimonial Author Image": [
    {
      "description": "A circular image of the testimonial author, displayed to the left of their quote, with a subtle border and shading to give it a slight 3D effect.",
      "html": "<div class=\"flex items-center mb-4\"><TestimonialAuthorImage/><blockquote class=\"ml-4\">{testimonial_quote}</blockquote></div>",
      "components": [
        {
          "name": "TestimonialAuthorImage",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<img src={author_image_url} alt={author_name} class=\"w-12 h-12 rounded-full border-2 border-gray-200 shadow-md\"/>"
        }
      ]
    }
  ],
  "Project showcase display": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible grid of project cards, with each card displaying a project's title, description, and tags.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-2xl font-bold mb-4\">Project Showcase</h2><ProjectGrid><ProjectCard/><ProjectCard/><ProjectCard/><!-- Add more ProjectCard components here --></ProjectGrid></div>",
      "components": [
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "A standalone component displaying a single project's information.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h3 class=\"text-lg font-bold\">{project_title}</h3><p\tclass=\"text-gray-600\">{project_description}</p><ul class=\"flex flex-wrap\">{tags.map((tag) =>( <li key={tag} class=\"mr-2\">{tag}</li>))} </ul></div>"
        },
        {
          "name": "ProjectGrid",
          "is_standalone": false,
          "description": "A container component taking `ProjectCard` children, displaying them in a responsive grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Trip Itinerary and Booking Summary": [
    {
      "description": "The UI should display a trip itinerary and booking summary, showing the trip details, booking information, and a summary of the booking.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SectionCard><TripItinerarySummary/></SectionCard><SectionCard><BookingInfo/></SectionCard><SectionCard><BookingSummary/></SectionCard></div>",
      "components": [
        {
          "name": "TripItinerarySummary",
          "is_standalone": true,
          "description": "standalone, displays trip details",
          "html": "<div class=\"px-4 py-2\"><h2 class=\"text-lg font-bold mb-2\">Trip Itinerary</h2><p>Departure: {departure_date}</p><p>Destination: {destination}</p><p>Duration: {duration} days</p></div>"
        },
        {
          "name": "BookingInfo",
          "is_standalone": true,
          "description": "standalone, displays booking information",
          "html": "<div class=\"px-4 py-2\"><h2 class=\"text-lg font-bold mb-2\">Booking Information</h2><p>Booking ID: {booking_id}</p><p>Booking Date: {booking_date}</p><p>Payment Method: {payment_method}</p></div>"
        },
        {
          "name": "BookingSummary",
          "is_standalone": true,
          "description": "standalone, displays a summary of the booking",
          "html": "<div class=\"px-4 py-2\"><h2 class=\"text-lg font-bold mb-2\">Booking Summary</h2><p>Total Cost: ${total_cost}</p><p>Number of Travelers: {num_travelers}</p></div>"
        },
        {
          "name": "SectionCard",
          "is_standalone": false,
          "description": "takes children, a card layout for displaying information",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-2 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a summary of a trip itinerary and booking details in a clear and organized manner. It should include essential trip information, such as destination, travel dates, accommodation, and transportation details. The UI should be easy to read and understand, with sufficient whitespace to avoid clutter.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TripSummary/><div class=\"mt-4\"><h2 class=\"text-lg font-bold\">Itinerary</h2><ItinerarySection><ItineraryItem/><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection><ItinerarySection><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection></div><BookingDetails/></div>",
      "components": [
        {
          "name": "TripSummary",
          "is_standalone": true,
          "description": "a standalone component that displays a brief summary of the trip.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">{trip_destination}</h2><p>Travel dates: {travel_dates}</p></div>"
        },
        {
          "name": "ItinerarySection",
          "is_standalone": false,
          "description": "a component that takes children, which displays a section of the itinerary (e.g., accommodations, transportation, etc.).",
          "html": "<div class=\"mt-4\"><h3 class=\"text-lg font-bold\">{section_title}</h3>{children}</div>"
        },
        {
          "name": "ItineraryItem",
          "is_standalone": true,
          "description": "a standalone component that displays a single item in the itinerary (e.g., a flight, hotel stay, etc.).",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h4 class=\"text-lg font-bold\">{item_title}</h4><p>{item_description}</p><p>Duration: {item_duration}</p></div>"
        },
        {
          "name": "BookingDetails",
          "is_standalone": true,
          "description": "a standalone component that displays the booking details, such as booking number and status.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">Booking Details</h2><p>Booking number: {booking_number}</p><p>Status: {booking_status}</p></div>"
        }
      ]
    }
  ],
  "Project management tool": [
    {
      "description": "The UI should resemble a typical project management tool, with a dashboard that displays various sections for managing projects, tasks, and team members. The design should be clean, minimalistic, and easy to navigate, with clear typography and ample whitespace.",
      "html": "<header class=\"bg-gray-100 py-4\"><Header/></header><nav class=\"lg:w-1/5 xl:w-1/6 py-4\"><Sidebar><ul><li><a href=\"#projects\">Projects</a></li><li><a href=\"#tasks\">Tasks</a></li><li><a href=\"#team\">Team</a></li></ul></Sidebar></nav><main class=\"lg:w-4/5 xl:w-5/6 p-4\"><DashboardGrid><section class=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4\"><ProjectCard/><ProjectCard/><ProjectCard/></section><section class=\"mt-4\"><h2>Tasks</h2><TaskList><!-- task list items will be rendered here --></TaskList></section><section class=\"mt-4\"><h2>Team</h2><TeamMemberCard/><TeamMemberCard/><TeamMemberCard/></section></DashboardGrid></main>",
      "components": [
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "Standalone, displays project information such as name, description, and status.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><h3 class=\"text-lg\">{project_name}</h3><p class=\"text-gray-600\">{project_description}</p><p class=\"text-gray-600\">Status: {project_status}</p></div>"
        },
        {
          "name": "TaskList",
          "is_standalone": false,
          "description": "Takes children, displays a list of tasks with checkboxes, task names, and due dates.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        },
        {
          "name": "TeamMemberCard",
          "is_standalone": true,
          "description": "Standalone, displays team member information such as name, role, and profile picture.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><img src={profile_picture} alt={name} class=\"w-12 h-12 rounded-full mr-2\"><div class=\"text-lg\">{name}</div><div class=\"text-gray-600\">{role}</div></div>"
        },
        {
          "name": "Sidebar",
          "is_standalone": false,
          "description": "Takes children, displays a navigation menu with links to various sections of the tool.",
          "html": "<div class=\"bg-gray-100 h-screen overflow-y-auto p-4\">{children}</div>"
        },
        {
          "name": "Header",
          "is_standalone": true,
          "description": "Standalone, displays the application's logo and a search bar.",
          "html": "<div class=\"flex justify-between items-center\"><a href=\"#\" class=\"text-lg\">{app_name}</a><input type=\"search\" placeholder=\"Search\" class=\"px-2 py-1 border\"></div>"
        },
        {
          "name": "DashboardGrid",
          "is_standalone": false,
          "description": "Takes children, displays a grid layout for the main dashboard content.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    }
  ],
  "Category List: Links to categorized content": [
    {
      "description": "The UI should display a list of categories, with each category having a title and a link to the corresponding content.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Categories</h2><ul class=\"list-none mb-0\"><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component representing a single category with a link.",
          "html": "<li class=\"mb-2\"><a href=\"{categoryLink}\" class=\"text-blue-600 hover:text-blue-900 transition duration-300\">{categoryName}</a></li>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CategoryLink` components) to display a list of categories.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The Category List should display a list of categorized content links, with each link displaying the category name and a brief description. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Categories</h2><ul class=\"list-none mb-0\"><CategoryList><!-- category links will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of `CategoryLink` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Hero Overlay Background": [
    {
      "description": "The UI should be a hero overlay background with a subtle gradient effect, overlaying a background image. The background image should be blurred to create a sense of depth, and the gradient overlay should have a subtle animation effect to make it stand out.",
      "html": "<div class=\"min-h-screen relative\"><HeroBackground/><HeroGradientOverlay/></div>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "A standalone component that displays the background image and gradient overlay.",
          "html": "<div class=\"absolute inset-0 bg-cover bg-center\" style={`background-image: url(${background_image})`}><div class=\"absolute inset-0 bg-gray-900 opacity-50\"></div></div>"
        },
        {
          "name": "HeroGradientOverlay",
          "is_standalone": true,
          "description": "A standalone component that displays the gradient overlay with animation effect.",
          "html": "<div class=\"absolute inset-0\"><div class=\"absolute inset-0 bg-gradient-to-r from-purple-500 to-pink-500 opacity-75 animate-pulse\"></div></div>"
        }
      ]
    }
  ],
  "Footer Newsletter Label": [
    {
      "description": "The UI should be a responsive footer newsletter label that is easily readable on various devices. It should have a clean and simple design, with a subtle background color and a prominent call-to-action (CTA) button. The label should be accessible and SEO-friendly.",
      "html": "<footer class=\"bg-gray-200 py-12\"><div class=\"max-w-md mx-auto px-4\"><FooterNewsletterLabel/><form><NewsletterInput/><CTAButton/></form></div></footer>",
      "components": [
        {
          "name": "FooterNewsletterLabel",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-lg text-gray-600\">{newsletter_label_text}</p>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "standalone",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "CTAButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    }
  ],
  "QR code generator/display": [
    {
      "description": "The UI should display a QR code generator with a text input field to enter the text to be encoded, a button to generate the QR code, and a display area to show the generated QR code. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><QrCodeGenerator/><QrCodeDisplay><img src=\"{qrcode_url}\" alt=\"Generated QR code\"/></QrCodeDisplay></div>",
      "components": [
        {
          "name": "QrCodeGenerator",
          "is_standalone": true,
          "description": "A standalone component that contains the text input field and generate button.",
          "html": "<div class=\"flex flex-col mb-4\"><input type=\"text\" id=\"qr-code-input\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter text to encode\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Generate QR Code</button></div>"
        },
        {
          "name": "QrCodeDisplay",
          "is_standalone": false,
          "description": "A component that takes children (the generated QR code) and displays it.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Product Feature List Item": [
    {
      "description": "The UI should be a single item in a list of product features, showcasing a specific benefit of the product. It should display an icon, a brief description, and optional additional information.",
      "html": "<ul class=\"flex flex-col gap-4\"><ProductFeatureListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single item in the list of product features",
          "html": "<li class=\"flex items-center gap-2\"><IconWrapper><i class={`{icon_class}`}></i></IconWrapper><FeatureDescription>{description}</FeatureDescription><OptionalInfo>{optional_info}</OptionalInfo></li>"
        },
        {
          "name": "IconWrapper",
          "is_standalone": false,
          "description": "(takes children): wraps an icon with a consistent styling",
          "html": "<span class=\"w-6 h-6 text-lg\">{children}</span>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": false,
          "description": "(takes children): contains the description of the feature",
          "html": "<p class=\"text-lg\">{children}</p>"
        },
        {
          "name": "OptionalInfo",
          "is_standalone": false,
          "description": "(takes children): displays additional information, if available",
          "html": "<p class=\"text-sm text-gray-600\">{children}</p>"
        }
      ]
    },
    {
      "description": "A product feature list item should display an icon, a brief description, and a title, with adequate spacing and margin to separate it from other list items.",
      "html": "<ul class=\"list-none mb-4\"><FeatureListItem/><!-- Add more list items here --></ul>",
      "components": [
        {
          "name": "FeatureListItem",
          "is_standalone": true,
          "description": "a standalone component representing a single list item.",
          "html": "<li class=\"flex items-center mb-4\"><FeatureIcon/><div class=\"ml-4\"><FeatureTitle/><FeatureDescription/></div></li>"
        },
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "a standalone component displaying an icon.",
          "html": "<i class=\"text-xl {icon_class}\"></i>"
        },
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component displaying the title of the feature.",
          "html": "<h3 class=\"text-lg font-bold\">{feature_title}</h3>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "a standalone component displaying the brief description of the feature.",
          "html": "<p class=\"text-gray-600\">{feature_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a list item that displays a product feature with an icon, a brief description, and a optional link to learn more. The component should be responsive and adaptable to different screen sizes.",
      "html": "<ul class=\"flex flex-col md:flex-row md:flex-wrap\"><li class=\"mb-4 md:w-1/2 xl:w-1/3\"><ProductFeatureListItem/></li></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "standalone component that displays a product feature.",
          "html": "<div class=\"flex items-center mb-2\"><FeatureIcon/><div class=\"ml-4\"><h5 class=\"text-lg\">{feature_name}</h5><p class=\"text-gray-600\">{feature_description}</p>{learn_more_url && <LearnMoreLink/>} </div></div>"
        },
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "standalone component that displays an icon for the feature.",
          "html": "<i class=\"fas fa-{feature_icon} text-2xl text-gray-600\"></i>"
        },
        {
          "name": "LearnMoreLink",
          "is_standalone": true,
          "description": "standalone component that displays a link to learn more about the feature.",
          "html": "<a href=\"{learn_more_url}\" class=\"text-blue-600 hover:text-blue-900\">Learn more</a>"
        }
      ]
    },
    {
      "description": "The UI should be a single list item representing a product feature, with an icon, a brief description, and a optional learn more link. The feature item should be responsive and adaptable to different screen sizes.",
      "html": "<li class=\"flex items-center py-4\"><FeatureIcon/><FeatureDescription/><LearnMoreLink/></li>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon representing the feature.",
          "html": "<i class=\"w-6 h-6 text-gray-500 {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "A standalone component that displays a brief description of the feature.",
          "html": "<p class=\"ml-4 text-gray-700\">{feature_description}</p>"
        },
        {
          "name": "LearnMoreLink",
          "is_standalone": true,
          "description": "A standalone component that displays a link to learn more about the feature.",
          "html": "<a class=\"text-blue-600 hover:text-blue-800 transition duration-300 ease-in-out\" href=\"{learn_more_url}\">Learn more</a>"
        }
      ]
    },
    {
      "description": "A single item in a list of product features, displaying an icon, a heading, and a brief description.",
      "html": "<ul class=\"list-none mb-4\"><li class=\"flex items-center mb-4\"><FeatureListItem><FeatureIcon/><FeatureHeading/><FeatureDescription/></FeatureListItem></li><!-- Add more list items here --></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "(standalone): Displaying an icon for the feature",
          "html": "<i class=\"text-lg text-gray-500\">{icon_name}</i>"
        },
        {
          "name": "FeatureHeading",
          "is_standalone": true,
          "description": "(standalone): Displaying the heading of the feature",
          "html": "<h3 class=\"text-lg font-bold\">{heading_text}</h3>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "(standalone): Displaying a brief description of the feature",
          "html": "<p class=\"text-gray-600\">{description_text}</p>"
        },
        {
          "name": "FeatureListItem",
          "is_standalone": false,
          "description": "(takes children): A container for a single feature item, comprising an icon, heading, and description.",
          "html": "<div class=\"flex items-center\"><div class=\"mr-4\">{children}</div><div class=\"flex-1\">{children}</div></div>"
        }
      ]
    }
  ],
  "Character counter for tweet length": [
    {
      "description": "The UI should display a text input field where the user can type their tweet. Below the input field, a counter should display the number of characters remaining, indicating how many more characters the user can type before reaching the tweet limit (280 characters).",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><TweetInput/><CharacterCounter/></div>",
      "components": [
        {
          "name": "TweetInput",
          "is_standalone": true,
          "description": "a standalone component that takes a text input.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Type your tweet...\"/>"
        },
        {
          "name": "CharacterCounter",
          "is_standalone": true,
          "description": "a standalone component that displays the remaining character count.",
          "html": "<p class=\"text-sm text-gray-500\">{remaining_characters} characters remaining</p>"
        }
      ]
    },
    {
      "description": "The UI should be a text input field with a character counter that displays the remaining characters available for a tweet. The counter should turn red when the character limit is exceeded.",
      "html": "<div class=\"flex flex-col\"><TweetInput/><CharacterCounter/></div>",
      "components": [
        {
          "name": "TweetInput",
          "is_standalone": true,
          "description": "A standalone component that represents the text input field.",
          "html": "<input type=\"text\" class=\"w-full p-2 border border-gray-200 rounded\"/>"
        },
        {
          "name": "CharacterCounter",
          "is_standalone": true,
          "description": "A standalone component that displays the remaining characters available for a tweet.",
          "html": "<p class={ remaining_characters <= 0 ? \"text-red-500\" : \"\" }>Characters remaining: {remaining_characters}</p>"
        }
      ]
    },
    {
      "description": "A simple text input with a character count display below it, indicating the number of characters remaining for a tweet (out of 280 characters).",
      "html": "<div class=\"flex flex-col w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><TextAreaInput/><CharacterCountDisplay/></div>",
      "components": [
        {
          "name": "TextAreaInput",
          "is_standalone": true,
          "description": "a standalone component for the text input field",
          "html": "<textarea class=\"w-full p-2 text-lg\" placeholder=\"What's on your mind?\"/>"
        },
        {
          "name": "CharacterCountDisplay",
          "is_standalone": true,
          "description": "a standalone component for displaying the character count",
          "html": "<p class=\"text-sm text-gray-600\">{remaining_characters} characters remaining</p>"
        }
      ]
    }
  ],
  "Animated Counter Statistics Section": [
    {
      "description": "A responsive statistics section that displays animated counter numbers and statistics with a brief description. The section should be divided into equal columns, with each column containing a statistic.",
      "html": "<section class=\"container mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-3xl font-bold mb-4\">Statistics</h2><div class=\"flex flex-wrap -mx-4\"><StatisticCard/><StatisticCard/><StatisticCard/><!-- Add more StatisticCard components as needed --></div></section>",
      "components": [
        {
          "name": "StatisticCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single statistic.",
          "html": "<div class=\"w-full md:w-1/3 xl:w-1/4 p-4\"><p class=\"text-4xl font-bold\">{statistic_number}</p><p class=\"text-gray-600\">{statistic_description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first statistics section that showcases animated counter statistics. It should have a clean and modern design, with a neutral color scheme and clear typography. The section should be divided into multiple columns, with each column representing a different statistic. Each statistic should have a heading, a animated counter, and a brief description.",
      "html": "<section class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-3xl font-bold mb-4\">Statistics</h2><div class=\"flex flex-wrap -mx-4\"><StatisticsSection><StatisticCard/><StatisticCard/><StatisticCard/></StatisticsSection></div></section>",
      "components": [
        {
          "name": "StatisticCard",
          "is_standalone": true,
          "description": "(standalone) - A single statistic card component that displays a heading, an animated counter, and a brief description.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold\">{statistic_heading}</h3><p class=\"text-4xl font-bold\">{animated_counter}</p><p class=\"text-sm\">{statistic_description}</p></div>"
        },
        {
          "name": "StatisticsSection",
          "is_standalone": false,
          "description": "(takes children) - A container component that holds multiple `StatisticCard` components.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    }
  ],
  "About me section with bio and profile picture": [
    {
      "description": "The UI should be a responsive, mobile-first About Me section with a profile picture and a brief bio. The profile picture should be circular and positioned above the bio. The bio should be a short paragraphs of text.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AboutMeContainer/></div>",
      "components": [
        {
          "name": "AboutMeContainer",
          "is_standalone": true,
          "description": "Standalone component that wraps the entire About Me section.",
          "html": "<div class=\"flex flex-col items-center md:flex-row\"><ProfilePicture/><Bio/></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the profile picture.",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{profile_picture_alt}\" class=\"w-24 h-24 rounded-full mb-4 md:mr-4 md:mb-0\"/>"
        },
        {
          "name": "Bio",
          "is_standalone": true,
          "description": "Standalone component that displays the bio text.",
          "html": "<p class=\"text-lg\">{bio_text}</p>"
        }
      ]
    }
  ],
  "Quiz and Assessment Tools": [
    {
      "description": "The UI should display a list of quiz and assessment tools with their names, descriptions, and ratings. The UI should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Quiz and Assessment Tools</h1><QuizList><QuizCard/><QuizCard/><!-- Add more QuizCard components here --></QuizList></main>",
      "components": [
        {
          "name": "QuizCard",
          "is_standalone": true,
          "description": "(standalone): A single quiz or assessment tool card with name, description, and rating.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4 rounded\"><h2 class=\"text-lg font-bold\">{quiz_name}</h2><p class=\"text-gray-600\">{quiz_description}</p><p class=\"text-sm\">Rating: {rating}/5</p></div>"
        },
        {
          "name": "QuizList",
          "is_standalone": false,
          "description": "(takes children): A list of `QuizCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "User-generated content display": [
    {
      "description": "The UI should display user-generated content in a clean and readable format. It should be responsive, mobile-first, and accessible. The content should be displayed in a card-like layout, with a image, title, and description.",
      "html": "<div class=\"max-w-md mx-auto bg-white rounded-xl shadow-md overflow-hidden\"><UserProfilePicture/><ContentCard><ContentTitle/><ContentDescription/></ContentCard></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile picture.",
          "html": "<img src=\"{profile_picture_url}\" alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "ContentCard",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user-generated content in a card-like layout.",
          "html": "<div class=\"px-6 py-4\">{children}</div>"
        },
        {
          "name": "ContentTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the user-generated content.",
          "html": "<h2 class=\"text-lg font-bold\">{content_title}</h2>"
        },
        {
          "name": "ContentDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the user-generated content.",
          "html": "<p class=\"text-gray-600\">{content_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a card with user-generated content, including a username, profile picture, content text, and a timestamp. The card should be responsive, with a maximum width on large screens and a full-width layout on smaller screens.",
      "html": "<div class=\"max-w-lg mx-auto lg:max-w-md\"><UserGeneratedContentCard><ContentHeader/><UserProfilePicture/><ContentText/></UserGeneratedContentCard></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component, displays the user's profile picture.",
          "html": "<img src={profilePictureUrl} alt={username} class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UserGeneratedContentCard",
          "is_standalone": false,
          "description": "Component that takes children, displays the user-generated content in a card layout.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-6\">{children}</div>"
        },
        {
          "name": "ContentHeader",
          "is_standalone": true,
          "description": "Standalone component, displays the username and timestamp.",
          "html": "<div class=\"flex items-center mb-4\"><h2 class=\"font-bold\">{username}</h2><p class=\"text-gray-600\">{timestamp}</p></div>"
        },
        {
          "name": "ContentText",
          "is_standalone": true,
          "description": "Standalone component, displays the content text.",
          "html": "<p class=\"text-lg\">{contentText}</p>"
        }
      ]
    }
  ],
  "Sidebar that remains fixed as users scroll through content": [
    {
      "description": "The UI should have a fixed sidebar that remains stationary as the user scrolls through the content. The sidebar should be positioned on the left side of the screen and should not move even when the user scrolls vertically.",
      "html": "<div class=\"flex h-screen\"><Sidebar/><ContentArea><!-- content goes here --></ContentArea></div>",
      "components": [
        {
          "name": "Sidebar",
          "is_standalone": true,
          "description": "(standalone): The sidebar component that remains fixed as the user scrolls.",
          "html": "<div class=\"fixed top-0 left-0 w-64 h-screen bg-gray-100 p-4\"><!-- sidebar content goes here --></div>"
        },
        {
          "name": "ContentArea",
          "is_standalone": false,
          "description": "(takes children): The content area where the main content is displayed.",
          "html": "<div class=\"ml-64 p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Blog Post Archive": [
    {
      "description": "The UI should be a responsive blog post archive that displays a list of blog posts with their titles, excerpts, and metadata. The layout should be mobile-first, with a card-based design that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Blog Post Archive</h1><BlogPostArchive><!-- Blog post cards will be rendered here --></BlogPostArchive></div>",
      "components": [
        {
          "name": "BlogPostArchive",
          "is_standalone": false,
          "description": "A component that takes children (an array of `BlogPostCard` components).",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    }
  ],
  "Logo display": [
    {
      "description": "The UI should display a logo with a max width of 200px. On larger screens, the logo should be centered horizontally.",
      "html": "<div class=\"max-w-md mx-auto p-4 flex justify-center\"><LogoDisplay/></div>",
      "components": [
        {
          "name": "LogoDisplay",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<img src={logoUrl} alt={logoAlt} class=\"max-w-full h-auto\"/>"
        }
      ]
    },
    {
      "description": "The UI should display a logo with a maximum width of 200 pixels, centered horizontally, and with a subtle shadow effect.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoDisplay/></div>",
      "components": [
        {
          "name": "LogoDisplay",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<img src=\"{logo_url}\" alt=\"{logo_alt_text}\" class=\"max-w-full w-48 h-12 shadow-md rounded-md\"/>"
        }
      ]
    }
  ],
  "News or updates section with date and title": [
    {
      "description": "The UI should be a list of news or updates with each item displaying a date and title. The list should be responsive and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">News & Updates</h2><NewsList><NewsItem/><NewsItem/><!-- insert more NewsItem components here --></NewsList></div>",
      "components": [
        {
          "name": "NewsItem",
          "is_standalone": true,
          "description": "component: standalone",
          "html": "<div class=\"flex mb-4\"><p class=\"text-gray-500 text-sm\">{date}</p><h3 class=\"text-lg font-bold\">{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "component: takes children",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates, each with a date and title. The date should be displayed in a smaller text above the title. The title should be a heading element to provide structure and hierarchy. The list should be responsive, with each item taking up the full width on mobile devices and being stacked horizontally on larger screens.",
      "html": "<div class=\"container max-w-md mx-auto p-4 md:p-8\"><h2>News and Updates</h2><NewsList><NewsCard/><NewsCard/><NewsCard/></NewsList></div>",
      "components": [
        {
          "name": "NewsCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single news or update item.",
          "html": "<div class=\"mb-4 p-4 border-b border-gray-200\"><time dateTime=\"{date_iso}\">{date_display}</time><h3>{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of news or update items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A section displaying news or updates with a date and title.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-white rounded shadow-md\"><UpdateCard/><UpdateCard/><!-- Add more UpdateCard components as needed --></section>",
      "components": [
        {
          "name": "UpdateCard",
          "is_standalone": true,
          "description": "Standalone component displaying a single update.",
          "html": "<div class=\"flex flex-wrap mb-4\"><UpdateDate/><UpdateTitle/></div>"
        },
        {
          "name": "UpdateDate",
          "is_standalone": true,
          "description": "Standalone component displaying the date of the update.",
          "html": "<p class=\"text-sm text-gray-600\">{date}</p>"
        },
        {
          "name": "UpdateTitle",
          "is_standalone": true,
          "description": "Standalone component displaying the title of the update.",
          "html": "<h3 class=\"text-lg font-bold\">{title}</h3>"
        }
      ]
    }
  ],
  "Profile avatar display": [
    {
      "description": "The UI should display a circular profile avatar with a name and a brief description below it. The avatar should be responsive and mobile-friendly.",
      "html": "<div class=\"flex flex-col items-center mb-4\"><ProfileAvatar/><ProfileInfo><p class=\"text-lg\">{profile_name}</p><p class=\"text-sm text-gray-500\">{profile_description}</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfileAvatar",
          "is_standalone": true,
          "description": "(standalone): Displays a circular avatar image",
          "html": "<img src={avatar_url} alt=\"Profile Avatar\" class=\"w-24 h-24 rounded-full object-cover\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "(takes children): Displays the name and description of the profile",
          "html": "<div class=\"text-center\">{children}</div>"
        }
      ]
    }
  ],
  "Search bar for finding products": [
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the search input field and submit button.",
          "html": "<div class=\"flex items-center\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that is a simple input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Search products\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that is a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive, taking up the full width on mobile devices and a maximum width of 400px on desktop devices. The input field should have a placeholder text \"Search for products...\". The submit button should have a search icon and the text \"Search\".",
      "html": "<nav class=\"max-w-md mx-auto p-4\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "a standalone component that contains the input field and submit button.",
          "html": "<div class=\"flex items-center\"><input type=\"text\" placeholder=\"Search for products...\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><SearchButton/></div>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that contains the search icon and text.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i>Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a search bar with a text input field, a search button, and an optional dropdown list of suggestions. The search bar should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center pt-4\"><SearchBar/><div class=\"absolute z-10\"><SearchSuggestions/></div></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the search input field and button.",
          "html": "<div class=\"relative w-full lg:max-w-md\"><input type=\"search\" class=\"w-full bg-white border border-gray-300 rounded-md pl-10 pr-3 py-2\" placeholder=\"Search products...\"/><button class=\"absolute top-0 right-0 p-2\"><i class=\"fas fa-search text-gray-600\"/></button></div>"
        },
        {
          "name": "SearchSuggestions",
          "is_standalone": false,
          "description": "A component that takes children (i.e., a list of suggested products) and renders them in a dropdown list.",
          "html": "<ul class=\"bg-white border border-gray-300 rounded-b-md\">{children}</ul>"
        }
      ]
    }
  ],
  "Shopping cart summary": [
    {
      "description": "A compact summary of the shopping cart, displaying the number of items, subtotal, and a link to view the cart.",
      "html": "<div class=\"bg-gray-100 p-4 rounded-md shadow-md\"><ShoppingCartSummary/></div>",
      "components": [
        {
          "name": "ShoppingCartSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the shopping cart summary.",
          "html": "<div class=\"flex items-center justify-between\"><CartItemCount/><CartSubtotal/><ViewCartLink/></div>"
        },
        {
          "name": "CartItemCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of items in the cart.",
          "html": "<p>{cart_item_count} items</p>"
        },
        {
          "name": "CartSubtotal",
          "is_standalone": true,
          "description": "A standalone component that displays the subtotal of the cart.",
          "html": "<p>Subtotal: {cart_subtotal}</p>"
        },
        {
          "name": "ViewCartLink",
          "is_standalone": true,
          "description": "A standalone component that links to the cart page.",
          "html": "<a href=\"#\" class=\"text-blue-600 hover:underline\">View Cart</a>"
        }
      ]
    },
    {
      "description": "The UI should be a compact summary of the shopping cart, displaying the total items, total cost, and a call-to-action to proceed to checkout. The design should be clean, simple, and easy to read on various devices.",
      "html": "<div class=\"bg-white shadow-md rounded p-4 md:p-6 lg:p-8\"><ShoppingCartSummary/><CartTotal/><CheckoutButton/></div>",
      "components": [
        {
          "name": "ShoppingCartSummary",
          "is_standalone": true,
          "description": "standalone component that displays the shopping cart summary.",
          "html": "<div class=\"flex justify-between mb-4\"><p>{item_count} items in cart</p><p>Subtotal: <span class=\"font-bold\">{subtotal_amount}</span></p></div>"
        },
        {
          "name": "CartTotal",
          "is_standalone": true,
          "description": "standalone component that displays the total cost of the items in the cart.",
          "html": "<p class=\"text-lg font-bold mb-2\">Total: <span>{total_amount}</span></p>"
        },
        {
          "name": "CheckoutButton",
          "is_standalone": true,
          "description": "standalone component that displays a call-to-action button to proceed to checkout.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Checkout</button>"
        }
      ]
    }
  ],
  "Who to follow suggestions for users": [
    {
      "description": "A responsive, mobile-first, and accessible list of user suggestions with profile pictures, usernames, and follow buttons. The list should be easy to navigate and understand, with clear typography and sufficient whitespace.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Who to Follow</h2><UserList><UserProfileSuggestion/><UserProfileSuggestion/><!-- more user suggestions here --></UserList></div>",
      "components": [
        {
          "name": "UserProfileSuggestion",
          "is_standalone": true,
          "description": "a standalone component representing a single user suggestion, with a profile picture, username, and follow button.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" class=\"w-12 h-12 rounded-full mr-4\"/><div><p class=\"text-lg\">{username}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div></div>"
        },
        {
          "name": "UserList",
          "is_standalone": false,
          "description": "a component that takes children, rendering a list of `UserProfileSuggestion` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of user suggestions with their profile pictures, names, and a \"Follow\" button. The list should be scrollable and have a header with a title.",
      "html": "<div class=\"max-h-screen overflow-y-scroll px-4 pt-4\"><h2 class=\"text-lg font-bold\">Who to follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} class=\"w-12 h-12 rounded-full\"/><div class=\"ml-4\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600\">{name}</p></div><button class=\"ml-auto bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow </button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Service offerings display": [
    {
      "description": "The UI should display a list of service offerings in a responsive, mobile-first layout. Each service offering should have a title, a brief description, and an icon. The layout should be accessible and SEO-friendly.",
      "html": "<main class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Our Services</h1><ServiceOfferingList><!-- Service offering cards will be rendered here --></ServiceOfferingList></main>",
      "components": [
        {
          "name": "ServiceOfferingList",
          "is_standalone": false,
          "description": "A component that takes children, which will be a list of `ServiceOfferingCard` components.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Sidebar Widget Content": [
    {
      "description": "The UI should be a compact sidebar widget that displays a title, a short description, and a call-to-action (CTA) button. The widget should be responsive, adapting to different screen sizes and devices.",
      "html": "<div class=\"w-full md:w-1/4 lg:w-1/5 xl:w-1/6 p-4\"><SidebarWidget><WidgetTitle/><WidgetDescription/><CallToActionButton/></SidebarWidget></div>",
      "components": [
        {
          "name": "SidebarWidget",
          "is_standalone": false,
          "description": "The main container for the sidebar widget, which takes children.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        },
        {
          "name": "WidgetTitle",
          "is_standalone": true,
          "description": "A heading element that displays the title of the widget, standalone.",
          "html": "<h2 class=\"text-lg font-bold\">{widget_title}</h2>"
        },
        {
          "name": "WidgetDescription",
          "is_standalone": true,
          "description": "A paragraph element that displays a short description of the widget, standalone.",
          "html": "<p class=\"text-sm\">{widget_description}</p>"
        },
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "A button element that displays a call-to-action, standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Breadcrumbs for navigation": [
    {
      "description": "The UI should display a sequence of breadcrumbs, each representing a navigation step, separated by a separator (e.g., `/`). The breadcrumbs should be responsive, accessible, and SEO-friendly.",
      "html": "<nav aria-label=\"Breadcrumb navigation\"><ol class=\"flex flex-wrap mb-4 list-none\"><BreadcrumbList><Breadcrumb/><!-- more breadcrumbs here --></BreadcrumbList></ol></nav>",
      "components": [
        {
          "name": "Breadcrumb",
          "is_standalone": true,
          "description": "(standalone): Represents a single breadcrumb item.",
          "html": "<li class=\"inline-flex items-center\"><a href=\"{breadcrumb_url}\" class=\"text-gray-600 hover:text-gray-900\">{breadcrumb_label}</a><span class=\"text-gray-600\">{separator}</span></li>"
        },
        {
          "name": "BreadcrumbList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of breadcrumbs.",
          "html": "<ol class=\"flex flex-wrap mb-4 list-none\">{children}</ol>"
        }
      ]
    }
  ],
  "Alert Notification Sound": [
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    }
  ],
  "Product Price Original": [
    {
      "description": "The UI should display the original price of a product, with a strikethrough and a discounted price alongside.",
      "html": "<div class=\"flex items-center\"><ProductPriceOriginal/><DiscountedPrice/></div>",
      "components": [
        {
          "name": "ProductPriceOriginal",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg line-through\">{originalPrice}</p><!-- original price with a strikethrough -->"
        },
        {
          "name": "DiscountedPrice",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg\">{discountedPrice}</p><!-- discounted price -->"
        }
      ]
    }
  ],
  "Testimonial Slider: Showcase social proof from happy customers": [
    {
      "description": "The Testimonial Slider should display quotes from happy customers with their names and photos, enclosed in a container that can be navigated using previous and next buttons. The slider should be responsive, adapting to different screen sizes and devices.",
      "html": "<div class=\"container mx-auto p-4 lg:p-8\"><TestimonialSlider><TestimonialItem/><TestimonialItem/><!-- Add more TestimonialItem components as needed --></TestimonialSlider><SliderNavigation/></div>",
      "components": [
        {
          "name": "TestimonialSlider",
          "is_standalone": false,
          "description": "A container component that wraps the entire slider, including navigation buttons and testimonial items. (Takes children: TestimonialItem)",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><div class=\"flex-1\">{children}</div><SliderNavigation/></div>"
        },
        {
          "name": "TestimonialItem",
          "is_standalone": true,
          "description": "A single testimonial item that displays a customer's quote, name, and photo. (Standalone)",
          "html": "<div class=\"flex flex-col mb-4\"><img src=\"{photo_url}\" alt=\"{customer_name}\" class=\"rounded-full w-16 h-16 mb-2\"/><p class=\"text-lg\">{quote}</p><p class=\"text-sm\">{customer_name}</p></div>"
        },
        {
          "name": "SliderNavigation",
          "is_standalone": true,
          "description": "A component that contains previous and next buttons for navigating the slider. (Standalone)",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-gray-200 hover:bg-gray-300 py-2 px-4 rounded\">Previous</button><button class=\"bg-gray-200 hover:bg-gray-300 py-2 px-4 rounded\">Next</button></div>"
        }
      ]
    }
  ],
  "Poll/Voting Systems": [
    {
      "description": "A poll/voting system UI should display a question, several options to choose from, and the current voting results. It should also allow users to cast their votes.",
      "html": "<div class=\"flex flex-col gap-4\"><PollQuestion/><div class=\"flex flex-col gap-2\"><PollOption>Option 1</PollOption><PollOption>Option 2</PollOption><PollOption>Option 3</PollOption></div><VoteButton/><VoteResults><p>Results:</p><ul><li>Option 1: {option1_votes} votes</li><li>Option 2: {option2_votes} votes</li><li>Option 3: {option3_votes} votes</li></ul></VoteResults></div>",
      "components": [
        {
          "name": "PollQuestion",
          "is_standalone": true,
          "description": "standalone, displays the question being asked",
          "html": "<h2 class=\"text-2xl\">{question_text}</h2>"
        },
        {
          "name": "PollOption",
          "is_standalone": false,
          "description": "takes children, represents a single option with a vote count",
          "html": "<div class=\"flex items-center gap-2\"><input type=\"radio\" name=\"poll_option\" id={`option_${option_id}`}/><label for={`option_${option_id}`}>{children}</label><span class=\"text-gray-500\">{vote_count} votes</span></div>"
        },
        {
          "name": "VoteButton",
          "is_standalone": true,
          "description": "standalone, allows users to cast their vote",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Cast Your Vote</button>"
        },
        {
          "name": "VoteResults",
          "is_standalone": false,
          "description": "takes children, displays the current voting results",
          "html": "<div class=\"bg-gray-100 p-4 rounded\">{children}</div>"
        }
      ]
    }
  ],
  "Sidebars/Dockable Panels": [
    {
      "description": "The UI should have a main content area with a dockable panel on the left side. The panel can be toggled open or closed. When open, it should take up a third of the screen width on larger screens and be fully visible on smaller screens.",
      "html": "<!-- Main container --><div class=\"flex h-screen\"><!-- Toggle sidebar button --><ToggleSidebarButton/><!-- Sidebar panel --><SidebarPanel/><!-- Main content area --><MainContent><!-- Main content goes here --></MainContent></div>",
      "components": [
        {
          "name": "SidebarPanel",
          "is_standalone": true,
          "description": "A standalone component that contains the dockable panel content.",
          "html": "<!-- Sidebar panel content --><div class=\"bg-gray-200 p-4 w-64 md:w-full md:relative md:flex-grow\"><!-- Panel content goes here --></div>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "A component that takes children and wraps the main content area.",
          "html": "<!-- Main content area --><div class=\"flex-grow p-4\">{children}</div>"
        },
        {
          "name": "ToggleSidebarButton",
          "is_standalone": true,
          "description": "A standalone component that toggles the sidebar panel open or closed.",
          "html": "<!-- Toggle sidebar button --><button class=\"bg-gray-200 p-2 rounded\"><i class=\"fas fa-bars\"></i></button>"
        }
      ]
    }
  ],
  "Footer Newsletter Input": [
    {
      "description": "The UI should be a simple newsletter input field with a button to submit the email address. It should be responsive, mobile-friendly, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-6\"><NewsletterInputWrapper/></footer>",
      "components": [
        {
          "name": "NewsletterInputWrapper",
          "is_standalone": true,
          "description": "- standalone component that wraps the newsletter input and button.",
          "html": "<div class=\"max-w-md mx-auto p-4\"><NewsletterInput/><SubscribeButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "- standalone component that is a text input field.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "- standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer newsletter input field with a submit button, responsive and accessible, with a clean and minimalistic design.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-4\"><div class=\"container mx-auto p-4 md:p-6\"><FooterNewsletterInput/></div></footer>",
      "components": [
        {
          "name": "FooterNewsletterInput",
          "is_standalone": true,
          "description": "standalone component that contains the input field and submit button.",
          "html": "<div class=\"w-full max-w-md mx-auto mb-4\"><NewsletterInputField/><SubmitButton/></div>"
        },
        {
          "name": "NewsletterInputField",
          "is_standalone": true,
          "description": "standalone component that is the input field for the newsletter email address.",
          "html": "<input type=\"email\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    }
  ],
  "Floating action button": [
    {
      "description": "The UI should be a circular floating action button that appears in the bottom right corner of the screen. It should have a icon (e.g. a plus sign) and a subtle animation when hovered.",
      "html": "<div class=\"fixed bottom-0 right-0 mb-4 mr-4\"><FloatingActionButton/></div>",
      "components": [
        {
          "name": "FloatingActionButton",
          "is_standalone": true,
          "description": "A standalone component that renders a circular button with an icon.",
          "html": "<button class=\"bg-primary-500 hover:bg-primary-700 text-white font-bold py-2 px-4 rounded-full shadow-md\"><i class=\"fas fa-plus\"></i></button>"
        }
      ]
    }
  ],
  "GloballyUniqueIdentifiableElements": [
    {
      "description": "The UI should display a list of unique elements, each with a unique identifier, name, and description.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-2xl font-bold mb-4\">Globally Unique Identifiable Elements</h1><UniqueIdList><UniqueIdCard/><UniqueIdCard/><UniqueIdCard/><!-- Add more UniqueIdCard components here --></UniqueIdList></div>",
      "components": [
        {
          "name": "UniqueIdCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single unique element's details.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded mb-4\"><h2 class=\"text-lg font-bold\">{element_name}</h2><p class=\"text-gray-600\">{element_description}</p><p class=\"text-sm text-gray-500\">Unique ID: {unique_id}</p></div>"
        },
        {
          "name": "UniqueIdList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple **UniqueIdCard** components.",
          "html": "<ul class=\"divide-y divide-gray-200\">{children}</ul>"
        }
      ]
    }
  ],
  "Revealing/Hover Effects": [
    {
      "description": "The UI should display a container with a revealing hover effect. When the user hovers over the container, a colored background and a heading should be revealed.",
      "html": "<div class=\"relative w-full h-48 md:h-64 lg:h-80 XL:h-96\"><RevealContainer/></div>",
      "components": [
        {
          "name": "RevealContainer",
          "is_standalone": true,
          "description": "standalone component that wraps the revealing hover effect.",
          "html": "<div class=\"absolute inset-0 z-10 overflow-hidden bg-transparent transition duration-300 ease-in-out hover:bg-orange-500 hover:opacity-90\"><RevealContent/></div>"
        },
        {
          "name": "RevealContent",
          "is_standalone": true,
          "description": "standalone component that displays the revealed content (heading and background).",
          "html": "<div class=\"flex items-center justify-center h-full\"><h2 class=\"text-2xl font-bold\">{heading_text}</h2></div>"
        }
      ]
    }
  ],
  "Callout Box Container": [
    {
      "description": "The UI should be a responsive container that holds a callout box, typically used to highlight important information or provide additional context. The container should be mobile-first, accessible, and SEO-friendly.",
      "html": "<section class=\"max-w-md mx-auto p-4 lg:p-6\"><CalloutBoxContainer/></section>",
      "components": [
        {
          "name": "CalloutBoxContainer",
          "is_standalone": true,
          "description": "standalone component that wraps the callout box.",
          "html": "<div class=\"bg-yellow-100 p-4 rounded-md shadow-md\"><CalloutBox/></div>"
        },
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "standalone component that renders the callout box content.",
          "html": "<div class=\"text-lg font-bold\">{callout_title}</div><p class=\"text-base\">{callout_description}</p>"
        }
      ]
    }
  ],
  "Header: Site title and navigation links": [
    {
      "description": "The UI should be a header section at the top of the webpage, featuring a site title on the left side and navigation links on the right side. The site title should be prominent and centered on mobile devices, while the navigation links should be stacked on top of each other on mobile devices and aligned horizontally on larger screens.",
      "html": "<header><Header><SiteTitle/><NavLinks><NavLink/><NavLink/><!-- Add more NavLink components as needed --></NavLinks></Header></header>",
      "components": [
        {
          "name": "SiteTitle",
          "is_standalone": true,
          "description": "(standalone): displays the title of the site",
          "html": "<h1 class=\"text-3xl font-bold\">{site_title}</h1>"
        },
        {
          "name": "NavLink",
          "is_standalone": true,
          "description": "(standalone): displays a single navigation link",
          "html": "<a href=\"{nav_link_url}\" class=\"text-lg\">{nav_link_text}</a>"
        },
        {
          "name": "NavLinks",
          "is_standalone": false,
          "description": "(takes children): a container for multiple `NavLink` components",
          "html": "<nav class=\"flex flex-wrap justify-end md:flex-row\">{children}</nav>"
        },
        {
          "name": "Header",
          "is_standalone": false,
          "description": "(takes children): the top-level component that contains the site title and navigation links",
          "html": "<div class=\"container mx-auto p-4 md:flex md:justify-between\">{children}</div>"
        }
      ]
    }
  ],
  "Avatar Upload: Input field for uploading a profile picture": [
    {
      "description": "The UI should be a simple input field with a label that allows users to upload a profile picture. The input field should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex flex-col md:w-1/2 lg:w-1/3 xl:w-1/4 mx-auto p-4\"><InputLabel/><InputField/><!-- Optional: display uploaded image --><img src=\"{uploaded_image_url}\" alt=\"Profile Picture\" class=\"w-full h-full object-cover rounded-full\"/></div>",
      "components": [
        {
          "name": "InputLabel",
          "is_standalone": true,
          "description": "(standalone) - The label for the input field.",
          "html": "<label for=\"avatar-upload\" class=\"block mb-2 text-sm font-bold text-gray-700\">Upload Profile Picture</label>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "(standalone) - The input field for uploading the profile picture.",
          "html": "<input type=\"file\" id=\"avatar-upload\" class=\"block w-full px-4 py-2 text-gray-700\"/>"
        }
      ]
    }
  ],
  "Featured Product Badge": [
    {
      "description": "The UI should display a small badge indicating that a product is featured, with a subtle background color, white text, and a slight rounded corner.",
      "html": "<span class=\"inline-block px-2 py-1 rounded-md bg-amber-500 text-white text-xs\"><FeaturedBadge/></span>",
      "components": [
        {
          "name": "FeaturedBadge",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span>Featured</span>"
        }
      ]
    }
  ],
  "Search Bar and Filters": [
    {
      "description": "The UI should consist of a search bar with a text input field, a search button, and filters (e.g., dropdowns or checkboxes) to narrow down the search results.",
      "html": "<div class=\"flex flex-col\"><SearchBar/><FilterRow><FilterOption/><FilterOption/><!-- Add more FilterOption components as needed --></FilterRow></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains a text input field and a search button.",
          "html": "<div class=\"flex items-center bg-white rounded-md shadow-md p-2\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that is a text input field.",
          "html": "<input type=\"text\" class=\"border border-gray-200 p-2 w-full\" placeholder=\"Search...\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that is a button.",
          "html": "<button class=\"bg-orange-500 text-white p-2 rounded-md\">Search</button>"
        },
        {
          "name": "FilterRow",
          "is_standalone": false,
          "description": "component that takes children, which will be filter options (e.g., dropdowns or checkboxes).",
          "html": "<div class=\"flex flex-wrap justify-between\">{children}</div>"
        },
        {
          "name": "FilterOption",
          "is_standalone": true,
          "description": "standalone component that represents a single filter option (e.g., a dropdown item or checkbox).",
          "html": "<div class=\"mr-2 mb-2\"><select class=\"border border-gray-200 p-2 w-full\"><option value={option_value}>{option_label}</option></select></div>"
        }
      ]
    },
    {
      "description": "The UI should be a search bar with filters, allowing users to search for specific items and apply filters to narrow down the results. The search bar should be prominent and centered, with filters displayed below it.",
      "html": "<div class=\"container mx-auto p-4\"><SearchAndFilters><SearchBar/><FilterMenu><FilterButton/><!-- more FilterButton components here --></FilterMenu></SearchAndFilters></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "Standalone component for the search input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full py-2 px-4 border-2 border-gray-200 rounded-lg\" placeholder=\"Search...\"/>"
        },
        {
          "name": "FilterButton",
          "is_standalone": true,
          "description": "Standalone component for each filter button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{filter_name}</button>"
        },
        {
          "name": "FilterMenu",
          "is_standalone": false,
          "description": "Component that wraps all filter buttons, takes children.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "SearchAndFilters",
          "is_standalone": false,
          "description": "Component that wraps the search bar and filter menu, takes children.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a search bar with a text input field and a search button. Below the search bar, there should be a filter section with checkboxes and labels. The filter section should be collapsible. The UI should be responsive and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SearchBar/><FilterSection><FilterItem/><FilterItem/><FilterItem/></FilterSection></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone) - a text input field and a search button.",
          "html": "<div class=\"flex mb-4\"><input type=\"text\" class=\"w-full px-2 py-1 border border-gray-200 rounded\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-1 px-2 rounded\">Search</button></div>"
        },
        {
          "name": "FilterSection",
          "is_standalone": false,
          "description": "(takes children) - a collapsible section containing filter checkboxes and labels.",
          "html": "<div class=\"bg-white shadow-md p-2 mb-4\"><h5 class=\"mb-2\">{filterInSectionTitle}</h5><div class=\"flex flex-wrap\">{children} </div></div>"
        },
        {
          "name": "FilterItem",
          "is_standalone": true,
          "description": "(standalone) - a single filter checkbox and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"checkbox\" id=\"{filterItemId}\" class=\"mr-2\"/><label for=\"{filterItemId}\" class=\"text-sm\">{filterItemLabel}</label></div>"
        }
      ]
    }
  ],
  "Pull Quotes/Testimonials": [
    {
      "description": "The UI should display a section of testimonials or pull quotes, featuring quotes from satisfied customers or users. The section should be responsive, with quotes stacking vertically on smaller screens and displaying in a grid on larger screens. Each quote should include a quote text, an author name, and an optional title or company.",
      "html": "<section class=\"max-w-md mx-auto py-12\"><h2 class=\"text-3xl font-bold mb-4\">What Our Customers Say</h2><TestimonialsSection><QuoteCard/><QuoteCard/><QuoteCard/></TestimonialsSection></section>",
      "components": [
        {
          "name": "QuoteCard",
          "is_standalone": true,
          "description": "Standalone component that represents a single quote, containing a quote text, an author name, and an optional title or company.",
          "html": "<div class=\"flex flex-col mb-4 p-4 shadow-md rounded-md\"><blockquote class=\"text-lg\">{quote_text}</blockquote><p class=\"text-sm text-gray-500\">{author_name}, {author_title}</p></div>"
        },
        {
          "name": "TestimonialsSection",
          "is_standalone": false,
          "description": "Component that contains a heading and a wrapper for a list of Quote Cards, takes children.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Warning message displayed within the context of a form or interface element": [
    {
      "description": "The UI should display a warning message in a distinctive style to grab the user's attention, within the context of a form or interface element. The warning message should be easily readable and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 pb-8\"><!-- Form or interface element content --><WarningMessage/><!-- Rest of the form or interface element content --></div>",
      "components": [
        {
          "name": "WarningMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a warning message.",
          "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-4 mb-4\" role=\"alert\"><p class=\"mb-2\">{warning_message}</p></div>"
        }
      ]
    }
  ],
  "Featured Video Player": [
    {
      "description": "The UI should be a responsive video player with a prominent play button, video title, and video description. It should be accessible and SEO-friendly.",
      "html": "<!-- Container for the video player --><div class=\"max-w-md lg:max-w-lg xl:max-w-xl mx-auto p-4\"><!-- Video player component --><VideoPlayer/><!-- Video title component --><VideoTitle/><!-- Video description component --><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that renders the video player.",
          "html": "<!-- Video player container --><div class=\"relative\"><!-- Video element --><video id=\"video\" class=\"w-full h-full\" poster=\"{poster_url}\"><source src=\"{video_url}\" type=\"video/mp4\"/></video><!-- Video play button --><VideoPlayButton/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "Standalone component that renders the play button.",
          "html": "<!-- Play button --><button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Play video\"><span class=\"sr-only\">Play video</span><i class=\"fas fa-play\" aria-hidden=\"true\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that renders the video title.",
          "html": "<!-- Video title --><h2 class=\"text-2xl font-bold mb-2\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that renders the video description.",
          "html": "<!-- Video description --><p class=\"text-lg mb-4\">{video_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    }
  ],
  "Featured content section": [
    {
      "description": "The featured content section should be a prominent section that showcases a highlighted content item, such as a blog post, video, or product. It should be responsive, mobile-first, and accessible. The section should have a clear visual hierarchy, with the featured content item being the main focal point.",
      "html": "<section class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><FeaturedContentSection/></section>",
      "components": [
        {
          "name": "FeaturedContentSection",
          "is_standalone": true,
          "description": "standalone component that contains the featured content item",
          "html": "<div class=\"bg-white rounded shadow-md p-4 md:p-6 lg:p-8\"><FeaturedContentItem/><ContentMeta/><CallToAction/></div>"
        },
        {
          "name": "FeaturedContentItem",
          "is_standalone": true,
          "description": "standalone component that represents the highlighted content item",
          "html": "<h2 class=\"text-2xl md:text-3xl lg:text-4xl\">{title}</h2><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 md:h-64 lg:h-80 object-cover rounded-t-md\"><p class=\"text-lg md:text-xl lg:text-2xl\">{excerpt}</p>"
        },
        {
          "name": "ContentMeta",
          "is_standalone": true,
          "description": "standalone component that displays metadata about the featured content item, such as the date published or author",
          "html": "<ul class=\"list-none mb-4\"><li class=\"inline-block mr-4\">{published_date}</li><li class=\"inline-block mr-4\">{author}</li></ul>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "standalone component that provides a clear call to action, such as \"Read More\" or \"Learn More\"",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{call_to_action_text}</button>"
        }
      ]
    }
  ],
  "Featured Product Image": [
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    }
  ],
  "Lesson/List View of Content": [
    {
      "description": "A responsive, mobile-first list view of lessons/content, with each item displaying a title, description, and call-to-action (CTA) button.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-2xl font-bold mb-4\">Lessons</h1><LessonList><LessonCard/><LessonCard/><!-- Add more LessonCard components here --></LessonList></div>",
      "components": [
        {
          "name": "LessonCard",
          "is_standalone": true,
          "description": "(standalone): A individual lesson/content item in the list.",
          "html": "<div class=\"mb-4 md:mb-6 lg:mb-8\"><h2 class=\"text-lg font-bold\">{lesson_title}</h2><p class=\"text-gray-600\">{lesson_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{lesson_cta_text} </button></div>"
        },
        {
          "name": "LessonList",
          "is_standalone": false,
          "description": "(takes children): The container for the list of lessons/content.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Thumbnail generator for video previews": [
    {
      "description": "A grid of thumbnail previews for video clips, with each thumbnail displaying a screenshot of the video and text overlay showing the video title and duration.",
      "html": "<div class=\"container mx-auto p-4\"><ThumbnailGrid><VideoThumbnail/><VideoThumbnail/><VideoThumbnail/><!-- Add more VideoThumbnail components here --></ThumbnailGrid></div>",
      "components": [
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "a standalone component displaying a single video thumbnail",
          "html": "<div class=\"bg-gray-200 h-32 w-48 relative overflow-hidden\"><img src=\"{thumbnail_url}\" alt=\"{video_title}\" class=\"object-cover h-full w-full\"/><div class=\"absolute bottom-0 left-0 p-2 text-sm text-white\"><p>{video_title}</p><p>{duration} seconds</p></div></div>"
        },
        {
          "name": "ThumbnailGrid",
          "is_standalone": false,
          "description": "a container component that renders a grid of `VideoThumbnail` components and takes children",
          "html": "<div class=\"grid grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive grid of video thumbnails with a preview image, video title, and duration. Each thumbnail should have a hover effect and be accessible.",
      "html": "<div class=\"container mx-auto p-4\"><ThumbnailGrid><VideoThumbnail/><VideoThumbnail/><VideoThumbnail/><!-- Add more VideoThumbnail components as needed --></ThumbnailGrid></div>",
      "components": [
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "A standalone component representing a single video thumbnail.",
          "html": "<div class=\"bg-gray-200 hover:bg-gray-300 rounded-md overflow-hidden shadow-md transition duration-300 ease-in-out\"><img src={thumbnail_url} alt={video_title} class=\"w-full h-40 object-cover\"/><div class=\"p-2\"><h5 class=\"text-lg font-bold\">{video_title}</h5><p class=\"text-sm text-gray-600\">{duration}</p></div></div>"
        },
        {
          "name": "ThumbnailGrid",
          "is_standalone": false,
          "description": "A container component that takes children, which are `VideoThumbnail` components.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Accessibility options": [
    {
      "description": "The UI should be a simple accessibility options panel with features such as font size adjustment, color scheme toggle, and high contrast mode.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 bg-white rounded-md shadow-md\"><h2 class=\"text-lg font-bold mb-4\">Accessibility Options</h2><AccessibilityOptionsPanel/></div>",
      "components": [
        {
          "name": "AccessibilityOptionsPanel",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col space-y-4\"><FontSizeAdjuster/><ColorSchemeToggle/><HighContrastModeToggle/></div>"
        },
        {
          "name": "FontSizeAdjuster",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex items-center\"><label class=\"mr-2\" htmlFor=\"font-size\">Font Size:</label><select class=\"px-2 py-1\" id=\"font-size\"><option value=\"small\">Small</option><option value=\"medium\">Medium</option><option value=\"large\">Large</option></select></div>"
        },
        {
          "name": "ColorSchemeToggle",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex items-center\"><label class=\"mr-2\" htmlFor=\"color-scheme\">Color Scheme:</label><span class=\"mr-2\">{current_scheme}</span><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" onClick={toggleColorScheme}>Toggle</button></div>"
        },
        {
          "name": "HighContrastModeToggle",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex items-center\"><label class=\"mr-2\" htmlFor=\"high-contrast\">High Contrast:</label><input type=\"checkbox\" id=\"high-contrast\" defaultChecked={high_contrast_enabled} onChange={toggleHighContrastMode}/><span class=\"ml-2\">{high_contrast_mode_label}</span></div>"
        }
      ]
    }
  ],
  "Feedback/rating system": [
    {
      "description": "A simple rating system with 5 stars, where users can select a rating from 1 to 5 stars, and leave a feedback comment.",
      "html": "<RatingFeedback><RatingStars/><FeedbackInput/></RatingFeedback>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "A standalone component that displays 5 stars, with the selected stars filled.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{ Array(5).fill(0).map((_, i) =>( <button key={i} class={`w-6 h-6 ${i < rating ? 'text-yellow-400' : 'text-gray-400'} hover:text-yellow-400`} onClick={() =>setRating(i + 1)}><i class=\"fas fa-star\"></i></button>)) }</div>"
        },
        {
          "name": "FeedbackInput",
          "is_standalone": true,
          "description": "A standalone component that is a text input for users to leave a feedback comment.",
          "html": "<textarea class=\"w-full p-4 pl-10 text-sm text-gray-700\" placeholder=\"Leave a feedback...\" value={feedback} onChange={(e) =>setFeedback(e.target.value)}/>"
        },
        {
          "name": "RatingFeedback",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the `RatingStars` and `FeedbackInput` components.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 md:pt-0\">{children}</div>"
        }
      ]
    }
  ],
  "Content moderation tools for admin teams": [
    {
      "description": "The UI should resemble a dashboard with a navigation menu on the left, and a main content area on the right. The navigation menu should display various moderation tools, and the main content area should display the selected tool. The UI should be responsive, with a mobile-first approach, making it accessible on smaller screens.",
      "html": "<div class=\"flex h-screen\"><SidebarNav/><div class=\"flex-1 overflow-y-auto\"><DashboardHeader/><Breadcrumb><span>Home</span><span>Moderation Tools</span><span>Selected Tool</span></Breadcrumb><ModerationTool><ModerationToolCard><ModerationToolCardHeader/><ModerationToolCardBody><!-- moderation tool content --></ModerationToolCardBody></ModerationToolCard></ModerationTool></div></div>",
      "components": [
        {
          "name": "SidebarNav",
          "is_standalone": true,
          "description": "(standalone): A navigation menu component that displays moderation tools.",
          "html": "<nav class=\"w-64 bg-gray-200 h-screen p-4\"><ul><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 1</a></li><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 2</a></li><!-- more tools --></ul></nav>"
        },
        {
          "name": "ModerationTool",
          "is_standalone": false,
          "description": "(takes children): A component that wraps the selected moderation tool.",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "DashboardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component that displays the admin team's name and a search bar.",
          "html": "<header class=\"p-4 bg-white border-b border-gray-200\"><h1 class=\"text-lg\">{admin_team_name}</h1><input type=\"search\" class=\"w-full pl-10 pr-4 py-2\" placeholder=\"Search\"/></header>"
        },
        {
          "name": "Breadcrumb",
          "is_standalone": false,
          "description": "(takes children): A breadcrumb component that displays the current navigation path.",
          "html": "<nav class=\"flex mb-4\">{children}</nav>"
        },
        {
          "name": "ModerationToolCard",
          "is_standalone": false,
          "description": "(takes children): A card component that displays a moderation tool's information.",
          "html": "<div class=\"bg-white border border-gray-200 p-4\"><ModerationToolCardHeader/><ModerationToolCardBody>{children} </ModerationToolCardBody></div>"
        },
        {
          "name": "ModerationToolCardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component for the moderation tool card.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-lg\">{tool_name}</h2><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Edit </button></header>"
        },
        {
          "name": "ModerationToolCardBody",
          "is_standalone": false,
          "description": "(takes children): A body component for the moderation tool card.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Editable Tables": [
    {
      "description": "A table that can be edited, with input fields for each cell, and a \"Save\" button at the bottom.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><EditableTable><EditableTableRow><EditableTableCell><input type=\"text\"/></EditableTableCell><EditableTableCell><input type=\"text\"/></EditableTableCell><EditableTableCell><input type=\"text\"/></EditableTableCell></EditableTableRow><EditableTableRow><EditableTableCell><input type=\"text\"/></EditableTableCell><EditableTableCell><input type=\"text\"/></EditableTableCell><EditableTableCell><input type=\"text\"/></EditableTableCell></EditableTableRow><!-- ... more rows ... --></EditableTable><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Save</button></div>",
      "components": [
        {
          "name": "EditableTableCell",
          "is_standalone": false,
          "description": "(takes children): a single table cell with an input field",
          "html": "<td class=\"border p-2\">{children}</td>"
        },
        {
          "name": "EditableTableRow",
          "is_standalone": false,
          "description": "(takes children): a table row with editable cells",
          "html": "<tr class=\"bg-white\">{children}</tr>"
        },
        {
          "name": "EditableTable",
          "is_standalone": false,
          "description": "(takes children): the entire editable table with multiple rows",
          "html": "<table class=\"table-auto border-collapse w-full\"><tbody>{children}</tbody></table>"
        }
      ]
    }
  ],
  "Social media feed display": [
    {
      "description": "The UI should display a list of social media posts, each containing a profile picture, username, post text, likes, comments, and a timestamp. The feed should be scrollable and responsive, with a maximum of 3 posts per row on desktop and 1 post per row on mobile.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><SocialMediaFeed><SocialMediaPost/><SocialMediaPost/><SocialMediaPost/><!-- Add more posts here --></SocialMediaFeed></div>",
      "components": [
        {
          "name": "SocialMediaPost",
          "is_standalone": true,
          "description": "(standalone): A single social media post",
          "html": "<div class=\"flex mb-4\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-12 h-12 rounded-full mr-4\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{post_text}</p><div class=\"flex justify-between text-sm text-gray-600\"><span>{likes} likes</span><span>{comments} comments</span><span>{timestamp}</span></div></div></div>"
        },
        {
          "name": "SocialMediaFeed",
          "is_standalone": false,
          "description": "(takes children): A container for a list of social media posts",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    }
  ],
  "Appointment scheduler": [
    {
      "description": "The UI should be a responsive, mobile-first design that displays a calendar and a list of available time slots for an appointment. The user can select a date and time, and then submit the appointment request.",
      "html": "<div class=\"flex flex-col h-screen\"><CalendarHeader/><CalendarGrid/><TimeSlotList><TimeSlot>8:00 AM - 9:00 AM</TimeSlot><TimeSlot>9:00 AM - 10:00 AM</TimeSlot><!-- more time slots --></TimeSlotList><AppointmentForm><label for=\"name\">Name:</label><input type=\"text\" id=\"name\"/><label for=\"email\">Email:</label><input type=\"email\" id=\"email\"/><button type=\"submit\">Submit</button></AppointmentForm></div>",
      "components": [
        {
          "name": "CalendarHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the current month and navigation arrows.",
          "html": "<div class=\"flex justify-between mb-4\"><button\tclass=\"text-gray-600 hover:text-gray-900\">«</button><h2 class=\"text-lg\">{current_month}</h2><button\tclass=\"text-gray-600 hover:text-gray-900\">»</button></div>"
        },
        {
          "name": "CalendarGrid",
          "is_standalone": true,
          "description": "a standalone component that displays a grid of days in the current month.",
          "html": "<div class=\"grid grid-cols-7 gap-4 mb-4\">{days_in_month}.map((day, index) =>( <div key={index} class=\"text-center\">{day}</div>))}</div>"
        },
        {
          "name": "TimeSlotList",
          "is_standalone": false,
          "description": "a component that takes children, which displays a list of available time slots.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "TimeSlot",
          "is_standalone": false,
          "description": "a component that takes children, which displays a single time slot.",
          "html": "<li class=\"py-2 border-b\">{children}</li>"
        },
        {
          "name": "AppointmentForm",
          "is_standalone": false,
          "description": "a component that takes children, which displays a form to submit an appointment request.",
          "html": "<form class=\"flex flex-col\">{children}</form>"
        }
      ]
    }
  ],
  "Social Media Icon Link": [
    {
      "description": "A clickable social media icon that links to a specific social media platform.",
      "html": "<a href={<social_media_url>} class=\"flex justify-center w-8 h-8 text-lg transition duration-300 hover:text-primary-500\"><SocialMediaIconLink/></a>",
      "components": [
        {
          "name": "SocialMediaIconLink",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<i class=\"fab fa-{social_media_platform}\"></i><!-- fab is from font awesome brand -->"
        }
      ]
    }
  ],
  "Visual representation of user ratings, often displayed as a row of stars": [
    {
      "description": "The UI should display a row of stars, with some of them filled and some of them empty, to visually represent a user's rating. The number of filled stars should be proportional to the user's rating. For example, if the user has a rating of 4 out of 5, four stars should be filled and one should be empty.",
      "html": "<Rating/>",
      "components": [
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "standalone component that displays the row of stars",
          "html": "<div class=\"flex justify-center mb-4\">{ stars }</div>"
        },
        {
          "name": "Star",
          "is_standalone": true,
          "description": "standalone component that displays a single star, either filled or empty",
          "html": "<i class=\"fas {filled ? 'fa-star' : 'fa-star-o'} text-lg\"></i>"
        }
      ]
    }
  ],
  "Random quote generator": [
    {
      "description": "A centered card with a quote, author, and a button to generate a new quote.",
      "html": "<div class=\"flex h-screen justify-center p-4\"><QuoteCard/><ActionButton/></div>",
      "components": [
        {
          "name": "QuoteCard",
          "is_standalone": true,
          "description": "A standalone component that contains the quote and author.",
          "html": "<div class=\"bg-white rounded p-4 max-w-md shadow-md\"><blockquote class=\"text-lg\">{quote}</blockquote><p class=\"text-gray-500\">— {author}</p></div>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "A standalone component that generates a new quote when clicked.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">New Quote</button>"
        }
      ]
    },
    {
      "description": "A simple page with a quote, author, and a button to generate a new quote. The quote and author are displayed prominently, with the button below.",
      "html": "<div class=\"min-h-screen flex items-center justify-center py-12\"><div class=\"max-w-md\"><QuoteDisplay/><NewQuoteButton/></div></div>",
      "components": [
        {
          "name": "QuoteDisplay",
          "is_standalone": true,
          "description": "(standalone): Displays the quote and author.",
          "html": "<blockquote class=\"text-xl font-bold mb-4\"><p>\"{quote}\"</p><footer class=\"text-sm text-gray-600\">{author}</footer></blockquote>"
        },
        {
          "name": "NewQuoteButton",
          "is_standalone": true,
          "description": "(standalone): A button to generate a new quote.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">New Quote</button>"
        }
      ]
    }
  ],
  "Messaging and Chat Systems": [
    {
      "description": "The UI should resemble a modern messaging or chat system with a thread of messages, where each message is displayed in a bubble-like format, with the sender's name and message text. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-10\"><div class=\"flex flex-col overflow-y-auto h-screen md:h-auto\"><MessageThread><!-- Messages will be rendered here --></MessageThread></div></div>",
      "components": [
        {
          "name": "MessageThread",
          "is_standalone": false,
          "description": "a component that takes children (an array of `MessageBox` components) and displays them in a scrolling container.",
          "html": "<div class=\"flex flex-col overflow-y-auto h-full pb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Travel itinerary planner": [
    {
      "description": "The UI should be a responsive, mobile-first travel itinerary planner that displays a list of trips, each with a title, destination, and dates. Each trip should have an \"Edit\" and \"Delete\" button. The UI should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Travel Itinerary Planner</h1><TripList><TripCard/><TripCard/><!-- Add more TripCard components here --></TripList></div>",
      "components": [
        {
          "name": "TripCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single trip's details.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{trip_title}</h2><p>Destination: {destination}</p><p>Dates: {start_date} - {end_date}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Edit</button><button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Delete</button></div>"
        },
        {
          "name": "TripList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `TripCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "WebSocket/Real-time Updates": [
    {
      "description": "The UI should display real-time updates from a WebSocket connection. It should have a simple layout with a header, a main content area, and a footer. The main content area should display a list of updates in real-time.",
      "html": "<div class=\"min-h-screen flex flex-col\"><header class=\"bg-gray-200 py-4\"><h1 class=\"text-3xl font-bold text-gray-800\">Real-time Updates</h1></header><main class=\"flex-1 p-4\"><WebSocketUpdateList/></main><footer class=\"bg-gray-200 py-4\"><p class=\"text-sm text-gray-600\">&copy; 2023 Real-time Updates</p></footer></div>",
      "components": [
        {
          "name": "WebSocketUpdateList",
          "is_standalone": true,
          "description": "(standalone): A list of WebSocket updates.",
          "html": "<ul class=\"list-none mb-4\"><!-- Update items will be rendered here --></ul>"
        },
        {
          "name": "UpdateTimestamp",
          "is_standalone": true,
          "description": "(standalone): The timestamp of an update item.",
          "html": "<p class=\"text-sm text-gray-600\">{update_timestamp}</p>"
        }
      ]
    },
    {
      "description": "The UI should display real-time updates from a WebSocket connection, showcasing the latest data in a clean and responsive layout. The design should be minimalistic, with a focus on readability and usability.",
      "html": "<main class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Real-time Updates</h1><WebSocketUpdateList/></main>",
      "components": [
        {
          "name": "WebSocketUpdateList",
          "is_standalone": true,
          "description": "a standalone component that renders a list of real-time updates.",
          "html": "<ul class=\"divide-y divide-gray-200\">{updates.map((update, index) =>( <li key={index} class=\"py-4\"><UpdateTime>{update.timestamp}</UpdateTime><UpdateContent>{update.content}</UpdateContent></li>))}</ul>"
        },
        {
          "name": "UpdateTime",
          "is_standalone": false,
          "description": "a component that takes children, displaying the timestamp of each update.",
          "html": "<time class=\"text-gray-500\">{children}</time>"
        },
        {
          "name": "UpdateContent",
          "is_standalone": false,
          "description": "a component that takes children, displaying the content of each update.",
          "html": "<p class=\"text-lg\">{children}</p>"
        }
      ]
    }
  ],
  "Social sharing buttons": [
    {
      "description": "A horizontal row of social sharing buttons, each with a corresponding logo and label, that allow users to share content on various social media platforms. The buttons should be evenly spaced and responsive to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtonGroup><SocialSharingButton/><SocialSharingButton/><SocialSharingButton/><!-- Add more SocialSharingButton components as needed --></SocialSharingButtonGroup></div>",
      "components": [
        {
          "name": "SocialSharingButton",
          "is_standalone": true,
          "description": "A standalone component that represents a single social sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><img src={logoUrl} alt={label} class=\"w-4 h-4 mr-2\">{label}</button>"
        },
        {
          "name": "SocialSharingButtonGroup",
          "is_standalone": false,
          "description": "A component that takes children and wraps the `SocialSharingButton` components.",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "A horizontal row of social media buttons, with each button representing a different platform (e.g. Facebook, Twitter, LinkedIn). The buttons should be evenly spaced and centered within their container.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialShareContainer><SocialShareButton/><SocialShareButton/><SocialShareButton/></SocialShareContainer></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "(standalone): a single social media sharing button",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\" aria-label={social_media_platform_name}><i class={`fab fa-${social_media_platform_icon} mr-2`}/>{share_label}</button>"
        },
        {
          "name": "SocialShareContainer",
          "is_standalone": false,
          "description": "(takes children): a container for the social media buttons",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of social sharing buttons for various platforms (e.g. Facebook, Twitter, LinkedIn, etc.) in a horizontal row. The buttons should be equally spaced and responsive to adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtonsContainer><SocialSharingButton/><SocialSharingButton/><!-- Add more social sharing buttons here --></SocialSharingButtonsContainer></div>",
      "components": [
        {
          "name": "SocialSharingButton",
          "is_standalone": true,
          "description": "(standalone): a single social sharing button",
          "html": "<a href=\"{platform_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"px-2\"><img src=\"{platform_icon_url}\" alt=\"{platform_name} icon\" class=\"w-6 h-6\"><span class=\"sr-only\">{platform_name}</span></a>"
        },
        {
          "name": "SocialSharingButtonsContainer",
          "is_standalone": false,
          "description": "(takes children): a container that holds multiple social sharing buttons",
          "html": "<div class=\"flex justify-center flex-wrap -mx-2\">{children}</div>"
        }
      ]
    }
  ],
  "Footer Section: Provide additional resources and links": [
    {
      "description": "The footer section should be a responsive, mobile-first section that provides additional resources and links. It should be divided into three columns: one for resources, one for links, and one for a newsletter sign-up form. The section should have a dark background with white text.",
      "html": "<footer class=\"bg-dark-900 pt-12 pb-4\"><div class=\"max-w-md mx-auto px-4 lg:max-w-2xl\"><div class=\"flex flex-wrap -mx-4\"><FooterColumn><FooterResources/></FooterColumn><FooterColumn><FooterLinks/></FooterColumn><FooterColumn><FooterNewsletter/></FooterColumn></div></div></footer>",
      "components": [
        {
          "name": "FooterResources",
          "is_standalone": true,
          "description": "A standalone component that lists out additional resources.",
          "html": "<ul class=\"list-none mb-4\"><li><a href=\"{resource1_url}\" class=\"text-white hover:text-gray-200\">{resource1_name}</a></li><li><a href=\"{resource2_url}\" class=\"text-white hover:text-gray-200\">{resource2_name}</a></li><!-- add more list items as needed --></ul>"
        },
        {
          "name": "FooterLinks",
          "is_standalone": true,
          "description": "A standalone component that lists out links.",
          "html": "<ul class=\"list-none mb-4\"><li><a href=\"{link1_url}\" class=\"text-white hover:text-gray-200\">{link1_name}</a></li><li><a href=\"{link2_url}\" class=\"text-white hover:text-gray-200\">{link2_name}</a></li><!-- add more list items as needed --></ul>"
        },
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "A standalone component that contains a newsletter sign-up form.",
          "html": "<form class=\"flex flex-wrap mb-4\"><input type=\"email\" placeholder=\"Enter your email\" class=\"bg-gray-200 py-2 px-4 w-full\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4\">Subscribe</button></form>"
        },
        {
          "name": "FooterColumn",
          "is_standalone": false,
          "description": "A component that takes children and is used to style a column in the footer section.",
          "html": "<div class=\"w-full md:w-1/3 xl:w-1/3 p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Like Button: Button for liking a post": [
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    }
  ],
  "Navigation trail displaying the user's current location within the website's hierarchy": [
    {
      "description": "A horizontal navigation trail showing the user's current location within the website's hierarchy, with each crumb separated by a slash (/) or a greater-than symbol (>), and the current page highlighted.",
      "html": "<nav aria-label=\"Breadcrumb navigation\"><ol class=\"flex flex-wrap mb-4\"><BreadcrumbsTrail><!-- breadcrumbs will be inserted here --></BreadcrumbsTrail></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbsTrail",
          "is_standalone": false,
          "description": "A component taking children, representing the navigation trail itself.",
          "html": "<ol class=\"flex flex-wrap mb-4\">{children}</ol>"
        }
      ]
    }
  ],
  "Interface for selecting tags or categories from a predefined list": [
    {
      "description": "The UI should be a dropdown list of tags or categories. The list should be searchable, and users should be able to select multiple items.",
      "html": "<div class=\"flex flex-wrap justify-center mx-auto max-w-md p-4\"><TagSelector><!-- dropdown list of tags or categories --></TagSelector></div>",
      "components": [
        {
          "name": "TagSelector",
          "is_standalone": false,
          "description": "A dropdown list of tags or categories. Takes children.",
          "html": "<div class=\"relative\"><input type=\"text\" placeholder=\"Search...\" class=\"w-full pl-4 pr-10 py-2 border border-gray-300 rounded\"/><ul class=\"absolute z-10 w-full bg-white shadow-md\">{children} </ul></div>"
        },
        {
          "name": "TagOption",
          "is_standalone": true,
          "description": "A single tag or category option. Standalone.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><input type=\"checkbox\" id=\"{tag_id}\" value=\"{tag_name}\" class=\"mr-2\"/><label htmlFor=\"{tag_id}\">{tag_name}</label></li>"
        }
      ]
    }
  ],
  "Search Input Field": [
    {
      "description": "A simple search input field with a placeholder text and a submit button.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><SearchInput/><SearchButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders a search input field.",
          "html": "<input type=\"search\" class=\"w-full px-4 py-2 text-lg text-gray-700 placeholder-gray-600\" placeholder=\"Search...\" aria-label=\"Search input field\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Search</button>"
        }
      ]
    }
  ],
  "Drag-and-Drop FileUploader Component": [
    {
      "description": "The UI should be a rectangular box with a dashed border, where users can drag and drop files or click to select files to upload. The box should have a label \"Drag and drop files or click to upload\" and a progress bar to show the upload progress.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FileUploader/></div>",
      "components": [
        {
          "name": "FileUploader",
          "is_standalone": true,
          "description": "standalone component that contains a drop zone and a progress bar",
          "html": "<div class=\"bg-gray-50 border-2 border-dashed rounded flex flex-col justify-center p-4\"><DropZone/><ProgressBar/><p>{upload_progress}% uploaded</p><p>{error_message}</p></div>"
        },
        {
          "name": "DropZone",
          "is_standalone": true,
          "description": "standalone component that displays the drag-and-drop area",
          "html": "<div class=\"p-4 text-center\"><p>Drag and drop files or click to upload</p><input type=\"file\" multiple/></div>"
        },
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "standalone component that displays the upload progress",
          "html": "<div class=\"w-full bg-gray-200 rounded h-2\"><div class=\"bg-blue-500 h-2\" style={`width: ${upload_progress}%`}></div></div>"
        }
      ]
    }
  ],
  "Blog Post Category List": [
    {
      "description": "The UI should be a list of blog post categories, with each category displaying its name and the number of posts it contains. The list should be responsive, mobile-first, and easily accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Blog Post Categories</h2><BlogPostCategoryList><!-- list of categories will be rendered here --></BlogPostCategoryList></div>",
      "components": [
        {
          "name": "BlogPostCategoryList",
          "is_standalone": false,
          "description": "(takes children): Represents the list of blog post categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of blog post categories in a responsive and accessible manner. The categories should be displayed in a vertical list with each category displaying its name and the number of posts in that category.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-3xl font-bold mb-4\">Categories</h2><CategoryList/></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": true,
          "description": "a standalone component that displays a list of categories",
          "html": "<ul class=\"list-none mb-0\">{categories.map(category =>( <li key={category.id} class=\"mb-4\"><CategoryItem>{category.name} ({category.postCount})</CategoryItem></li>))}</ul>"
        },
        {
          "name": "CategoryItem",
          "is_standalone": false,
          "description": "a component that takes children (the category name and post count) to display a single category",
          "html": "<a href={categoryUrl} class=\"text-gray-900 hover:text-gray-600 transition duration-300\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of blog post categories, with each category displayed as a separate item in a vertical list. The list should be accessible, mobile-first, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Blog Categories</h2><CategoryList><!-- Category list items will be rendered here --><CategoryListItem/><CategoryListItem/><!-- ... --></CategoryList></div>",
      "components": [
        {
          "name": "CategoryListItem",
          "is_standalone": true,
          "description": "A standalone component representing a single category item in the list.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><a href=\"{category_url}\" class=\"text-gray-900 hover:text-gray-600 transition duration-300\"><span class=\"text-lg\">{category_name}</span><span class=\"text-sm text-gray-600\">{category_description}</span></a></li>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the list of category items.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of categories with a title, possibly with an icon, and a count of posts in each category. The list should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Categories</h2><ul class=\"flex flex-wrap justify-center mb-4\"><CategoryList><!-- category cards will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "a component that wraps the list of categories, and takes children (a list of `CategoryCard` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Switches/Toggles/Buttons": [
    {
      "description": "A toggle button, a switch, and a button, each with a different style, layout, and purpose.",
      "html": "<div class=\"flex flex-col gap-4 p-4\"><ToggleSwitch/><SwitchButton/><ActionButton/></div>",
      "components": [
        {
          "name": "ToggleSwitch",
          "is_standalone": true,
          "description": "A toggle switch component that can be either on or off. Standalone.",
          "html": "<label class=\"inline-flex items-center\"><input type=\"checkbox\" class=\"hidden\"/><span class=\"toggle-slider round\"></span></label>"
        },
        {
          "name": "SwitchButton",
          "is_standalone": true,
          "description": "A switch button component that can be either enabled or disabled. Standalone.",
          "html": "<button class=\"bg-{color}-500 hover:bg-{color}-700 text-white hover:text-white py-2 px-4 rounded\">{label}</button>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "A button component that can be clicked to perform an action. Standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white hover:text-white py-2 px-4 rounded\">{label}</button>"
        }
      ]
    }
  ],
  "Company Phone Number": [
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex justify-center\"><PhoneNumberDisplay/></div>",
      "components": [
        {
          "name": "PhoneNumberDisplay",
          "is_standalone": true,
          "description": "A standalone component that displays the company phone number.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{company_phone_number}</p>"
        }
      ]
    },
    {
      "description": "A simple phone number display component with a clear label and a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PhoneNumberComponent/></div>",
      "components": [
        {
          "name": "PhoneNumberComponent",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg font-medium\">Phone: <span class=\"text-primary\">{phone_number}</span></p>"
        }
      ]
    },
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a suitable icon and styling to make it easily identifiable as a phone number.",
      "html": "<div class=\"flex items-center\"><PhoneNumberItem/></div>",
      "components": [
        {
          "name": "PhoneNumberItem",
          "is_standalone": true,
          "description": "A standalone component that displays a phone number with an icon.",
          "html": "<!-- phoneNumber is a string, e.g. \"+1 123 456 7890\" --><i class=\"fas fa-phone text-gray-500 mr-2\"></i><a href={`tel:${phoneNumber}`} class=\"text-blue-600 hover:text-blue-800\">{phoneNumber}</a>"
        }
      ]
    }
  ],
  "Role-Based Access: Control user permissions": [
    {
      "description": "The UI should display a list of users with their corresponding roles and permissions. The list should be responsive, accessible, and easy to navigate. Each user's information should be displayed in a consistent and clear format.",
      "html": "<main class=\"max-w-md mx-auto p-4 pt-6\"><h1 class=\"text-2xl font-bold mb-4\">Role-Based Access Control</h1><UserList><!-- User list will be inserted here --></UserList></main>",
      "components": [
        {
          "name": "RoleBadge",
          "is_standalone": true,
          "description": "standalone component that displays a role's name and color",
          "html": "<span class=\"bg-{role_color} text-white px-2 py-1 rounded\">{role_name}</span>"
        },
        {
          "name": "PermissionList",
          "is_standalone": true,
          "description": "standalone component that displays a list of permissions",
          "html": "<ul class=\"list-disc pl-4\">{permissions.map(permission =>( <li key={permission}>{permission}</li>))}</ul>"
        },
        {
          "name": "UserList",
          "is_standalone": false,
          "description": "component that takes children, displays a list of users",
          "html": "<ul class=\"divide-y divide-gray-200\">{children}</ul>"
        }
      ]
    }
  ],
  "Callout Box Border Style": [
    {
      "description": "A callout box with a border style, usually used to highlight important information.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains the callout box content.",
          "html": "<div class=\"bg-yellow-100 border-l-4 border-orange-500 p-4 rounded-md\"><p>{callout_message}</p></div>"
        }
      ]
    }
  ],
  "Team member profiles": [
    {
      "description": "The UI should display a grid of team member profiles, with each profile showing the team member's name, role, and a photo. The profiles should be responsive, with a stacked layout on mobile devices and a horizontal layout on larger screens.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Our Team</h1><TeamMemberProfileGrid><TeamMemberProfileCard/><TeamMemberProfileCard/><!-- Add more TeamMemberProfileCard components here --></TeamMemberProfileGrid></div>",
      "components": [
        {
          "name": "TeamMemberProfileCard",
          "is_standalone": true,
          "description": "a standalone component that displays a single team member's profile.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded\"><img src=\"{photo_url}\" alt=\"{name}\" class=\"w-24 h-24 rounded-full mb-2\"><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-gray-600\">{role}</p></div>"
        },
        {
          "name": "TeamMemberProfileGrid",
          "is_standalone": false,
          "description": "a component that takes children (`TeamMemberProfileCard`s) and displays them in a responsive grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive grid of team member profiles, with each profile showing a photo, name, title, and short bio. The grid should be mobile-first, with each profile taking up the full width on small screens and arranging themselves in a grid on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TeamMemberGrid><TeamMemberProfile/><TeamMemberProfile/><!-- Add more TeamMemberProfile components here --></TeamMemberGrid></div>",
      "components": [
        {
          "name": "TeamMemberProfile",
          "is_standalone": true,
          "description": "(standalone) - a single team member profile",
          "html": "<div class=\"flex flex-col items-center p-4 mb-4 bg-white rounded shadow-md\"><img src=\"{photo_url}\" alt=\"{name}\" class=\"w-24 h-24 rounded-full mb-4\"/><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-sm\">{title}</p><p class=\"text-xs\">{bio}</p></div>"
        },
        {
          "name": "TeamMemberGrid",
          "is_standalone": false,
          "description": "(takes children) - a container for a grid of team member profiles",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of team member profiles, each profile containing a photo, name, title, bio, and social media links. The profiles should be displayed in a grid layout, with 2 columns on desktop and 1 column on mobile. Each profile should have a clean and minimalistic design, with a subtle hover effect.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><TeamGrid><TeamMemberProfile/><TeamMemberProfile/><!-- add more profiles here --></TeamGrid></div>",
      "components": [
        {
          "name": "TeamMemberProfile",
          "is_standalone": true,
          "description": "(standalone) - displays a single team member's profile information",
          "html": "<div class=\"bg-white shadow-md rounded p-4 md:p-6 lg:p-8\"><img src={profile_image_url} alt={name} class=\"w-24 h-24 rounded-full mx-auto\"/><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-sm\">{title}</p><p class=\"text-sm\">{bio}</p><ul class=\"flex justify-center mb-4\"><li><a href={linkedin_url} target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-linkedin\"></i></a></li><li><a href={twitter_url} target=\"_blank\" rel=\"noopener noreferrer\"><i class=\"fab fa-twitter\"></i></a></li><!-- add more social media links here --></ul></div>"
        },
        {
          "name": "TeamGrid",
          "is_standalone": false,
          "description": "(takes children) - a grid container that holds multiple `TeamMemberProfile` components",
          "html": "<div class=\"grid gap-4 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2\">{children}</div>"
        }
      ]
    }
  ],
  "Callout Box Border Radius": [
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    }
  ],
  "Voice Command/Audio Feedback": [
    {
      "description": "The UI should display a microphone icon and a circle that represents the audio feedback. The microphone icon should be surrounded by a circle that changes color based on the audio feedback level. The UI should also display a text that indicates the audio feedback level.",
      "html": "<div class=\"flex justify-center mb-4\"><div class=\"relative\"><MicrophoneIcon/><AudioFeedbackCircle/></div><AudioFeedbackText/></div>",
      "components": [
        {
          "name": "MicrophoneIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a microphone icon.",
          "html": "<i class=\"fas fa-microphone text-lg text-gray-500\"/>"
        },
        {
          "name": "AudioFeedbackCircle",
          "is_standalone": true,
          "description": "A standalone component that displays a circle that changes color based on the audio feedback level.",
          "html": "<div class={`w-12 h-12 bg-${audio_feedback_level_color} rounded-full`}/>"
        },
        {
          "name": "AudioFeedbackText",
          "is_standalone": true,
          "description": "A standalone component that displays the audio feedback level.",
          "html": "<p class=\"text-sm text-gray-500\">{audio_feedback_level_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple audio feedback component that visually indicates when the voice command is listening and provides a visual cue for audio feedback.",
      "html": "<div class=\"flex justify-center mb-4\"><AudioIndicator/><AudioFeedback/></div>",
      "components": [
        {
          "name": "AudioIndicator",
          "is_standalone": true,
          "description": "A standalone component that indicates when the voice command is listening. It will be a circle that changes color to indicate when the voice command is active.",
          "html": "<div class=\"h-8 w-8 bg-gray-200 rounded-full {audio_indicator_state}\" <!-- audio_indicator_state will be 'bg-green-500' when listening, otherwise 'bg-gray-200' --><div class=\"h-4 w-4 bg-white rounded-full mx-auto mt-2\" <!-- inner circle --></div></div>"
        },
        {
          "name": "AudioFeedback",
          "is_standalone": true,
          "description": "A standalone component that provides a visual cue for audio feedback. It will display a waveform or a similar visual representation of the audio input.",
          "html": "<div class=\"w-full h-4 bg-gray-200 rounded-lg overflow-hidden\"><div class=\"h-4 bg-blue-500 rounded-lg\" style=\"width: {audio_feedback_width}%\" <!-- audio_feedback_width is a value between 0 and 100 --></div></div>"
        }
      ]
    }
  ],
  "Text providing guidance or instructions within the context of a form field or interface element": [
    {
      "description": "The UI should display a help text or hint that provides guidance or instructions to the user within the context of a form field or interface element. The text should be clearly visible and easily readable.",
      "html": "<div class=\"form-group\"><label for=\"fieldName\">Field Label</label><input type=\"text\" id=\"fieldName\"/><HintText/></div>",
      "components": [
        {
          "name": "HintText",
          "is_standalone": true,
          "description": "(standalone): This component will display the help text or hint.",
          "html": "<span class=\"text-sm text-gray-500\">{hint_text}</span>"
        }
      ]
    }
  ],
  "Product Feature List": [
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    }
  ],
  "Hover Effects/Animations": [
    {
      "description": "The UI should display a box that changes its background color and text color when hovered over, along with a scaling effect.",
      "html": "<div class=\"flex justify-center h-screen\"><HoverEffectBox/></div>",
      "components": [
        {
          "name": "HoverEffectBox",
          "is_standalone": true,
          "description": "A standalone component that displays a box with hover effects.",
          "html": "<div class=\"bg-orange-300 hover:bg-orange-500 transition duration-300 ease-in-out p-10 rounded-md cursor-pointer hover:scale-110\"><p class=\"text-lg text-orange-800 hover:text-white\">{hover_text}</p></div>"
        }
      ]
    }
  ],
  "Search bar for finding videos": [
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "A simple search bar with a search input and a search button. The search bar should be centered on the page and should be responsive.",
      "html": "<div class=\"flex justify-center pt-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains a search input and a search button.",
          "html": "<div class=\"flex items-center bg-white rounded-md shadow-md p-2\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that renders an input field.",
          "html": "<input type=\"search\" class=\"w-full pl-2 py-2 rounded-md\" placeholder=\"Search for videos\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that renders a button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\">Search</button>"
        }
      ]
    }
  ],
  "Privacy policy link": [
    {
      "description": "A simple link to a privacy policy page, visible on all screen sizes.",
      "html": "<footer class=\"flex justify-center pb-4\"><PrivacyPolicyLink/></footer>",
      "components": [
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href=\"/privacy-policy\" class=\"text-sm text-gray-600 hover:text-gray-900\">Privacy Policy</a>"
        }
      ]
    }
  ],
  "Terms and conditions checkbox": [
    {
      "description": "A checkbox with a label that says \"I agree to the terms and conditions\" and a link to the terms and conditions page.",
      "html": "<div class=\"flex items-center\"><TermsAndConditionsCheckbox/><TermsLink/></div>",
      "components": [
        {
          "name": "TermsAndConditionsCheckbox",
          "is_standalone": true,
          "description": "standalone component that includes a checkbox and a label.",
          "html": "<input type=\"checkbox\" id=\"terms-and-conditions-checkbox\" class=\"mr-2\"/><label for=\"terms-and-conditions-checkbox\" class=\"text-sm\">I agree to the {terms_and_conditions_text}</label>"
        },
        {
          "name": "TermsLink",
          "is_standalone": true,
          "description": "standalone component that is a link to the terms and conditions page.",
          "html": "<a href=\"{terms_and_conditions_url}\" class=\"text-sm text-blue-600 hover:text-blue-900\">Read terms and conditions</a>"
        }
      ]
    }
  ],
  "Navigation controls for indicating the current position within a carousel or slideshow": [
    {
      "description": "The UI should display a series of small, clickable indicators that represent the different slides in a carousel or slideshow. The indicator for the current slide should be visually distinct from the others.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselIndicatorList><!-- indicators will be inserted here --></CarouselIndicatorList></nav>",
      "components": [
        {
          "name": "CarouselIndicatorList",
          "is_standalone": false,
          "description": "A container component that holds the indicators for each slide. (Takes children)",
          "html": "<ul class=\"flex items-center\">{children}</ul>"
        },
        {
          "name": "CarouselIndicator",
          "is_standalone": true,
          "description": "A single indicator component that represents a slide. (Standalone)",
          "html": "<li class=\"mx-2\"><button class=\"w-4 h-4 rounded-full {isActive ? 'bg-primary-500' : 'bg-gray-300'}\" aria-current={isActive ? 'step' : undefined}></button></li>"
        }
      ]
    }
  ],
  "Settings icon with dropdown menu options": [
    {
      "description": "The UI should be a settings icon with a dropdown menu that appears when clicked. The settings icon should be a toggleable dropdown menu with a few options.",
      "html": "<div class=\"relative\"><SettingsIcon/><DropdownMenu><DropdownMenuItem/><DropdownMenuItem/><DropdownMenuItem/></DropdownMenu></div>",
      "components": [
        {
          "name": "SettingsIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a settings icon and toggles the dropdown menu when clicked.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded shadow\"><i class=\"fas fa-cog\"></i></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children and displays a dropdown menu with options.",
          "html": "<div class=\"absolute right-0 mt-2 w-48 bg-white rounded-md overflow-hidden shadow-md\">{children}</div>"
        },
        {
          "name": "DropdownMenuItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single option in the dropdown menu.",
          "html": "<a href=\"#\" class=\"block px-4 py-2 text-gray-700 hover:bg-gray-100\">{option_text}</a>"
        }
      ]
    }
  ],
  "Send button to post new tweet": [
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    }
  ],
  "Small pop-up box that provides additional information when users hover over an element": [
    {
      "description": "A small, rectangular box with a subtle background color and rounded corners, appearing on hover over a specific element. The box will contain a short text providing additional information.",
      "html": "<TriggerElement><!-- the element that triggers the tooltip -->Hover over me!\n<TooltipComponent/></TriggerElement>",
      "components": [
        {
          "name": "TooltipComponent",
          "is_standalone": true,
          "description": "(standalone): The entire tooltip box, containing the text.",
          "html": "<div class=\"bg-gray-100 rounded-md p-2 text-sm text-gray-600 absolute top-full left-1/2 -translate-x-1/2 hidden group-hover:block\">{tooltip_text}</div>"
        },
        {
          "name": "TriggerElement",
          "is_standalone": false,
          "description": "(takes children): The element that triggers the tooltip to appear on hover, e.g., a button or a link. Its child is the text or element that the user will hover over.",
          "html": "<span class=\"cursor-pointer relative\">{children}</span>"
        }
      ]
    }
  ],
  "Certifications or licenses section with issuers": [
    {
      "description": "The Certifications or Licenses section should display a list of certificates or licenses with their corresponding issuers, dates, and credential IDs. The section should be organized in a clean and readable manner, with each certification or license displayed in a separate row. The issuer, date, and credential ID should be displayed in a concise and easily readable format.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Certifications and Licenses</h2><CertificationList><CertificationCard/><CertificationCard/><!-- Add more CertificationCard components here --></CertificationList></section>",
      "components": [
        {
          "name": "CertificationCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single certification or license with its issuer, date, and credential ID.",
          "html": "<div class=\"flex justify-between mb-4\"><div><h3 class=\"text-lg font-bold\">{issuer_name}</h3><p>{credential_id}</p></div><div class=\"text-gray-600\"><p>{issue_date}</p></div></div>"
        },
        {
          "name": "CertificationList",
          "is_standalone": false,
          "description": "(takes children): Container component for a list of certifications or licenses.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    }
  ],
  "Hero Section with Text": [
    {
      "description": "The UI should be a hero section with a background image and a section of text overlay on top of it. The background image should be full-width and take up the entire screen height on desktop. On mobile, the image should be smaller and the text should be more prominent.",
      "html": "<section class=\"h-screen w-full relative\"><HeroSection/><HeroText><!-- hero text content goes here --></HeroText></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone) - the main hero section component",
          "html": "<div class=\"h-screen w-full absolute top-0 left-0 bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}/>"
        },
        {
          "name": "HeroText",
          "is_standalone": false,
          "description": "(takes children) - the text overlay component",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-lg md:text-3xl text-white\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Video Play Icon": [
    {
      "description": "The UI should display a play icon overlaid on a featured video thumbnail. The play icon should be a white triangle with a rounded rectangle background. The icon should be responsive, accessible, and mobile-first.",
      "html": "<div class=\"w-full h-full relative\"><img src=\"{thumbnail_url}\" alt=\"Featured Video Thumbnail\" class=\"w-full h-full object-cover rounded-lg\"/><FeaturedVideoPlayIcon/></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayIcon",
          "is_standalone": true,
          "description": "(standalone): displays the play icon overlaid on a featured video thumbnail.",
          "html": "<div class=\"absolute inset-0 flex justify-center items-center bg-gray-800 rounded-lg p-4\"><div class=\"w-10 h-10 bg-white rounded-full flex justify-center items-center\"><span class=\"text-gray-800 text-3xl\">{<!-- play icon -->}</span></div></div>"
        }
      ]
    }
  ],
  "Footer Social Links": [
    {
      "description": "The UI should display a row of social media links at the bottom of the page, with each link represented by an icon. The links should be spaced evenly and be accessible on various devices.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterSocialLinks><SocialLink/><SocialLink/><SocialLink/><!-- Add more SocialLink components as needed --></FooterSocialLinks></footer>",
      "components": [
        {
          "name": "SocialLink",
          "is_standalone": true,
          "description": "(standalone): Displays an individual social media link with an icon.",
          "html": "<a href `{social_media_url}` target=\"_blank\" rel=\"noopener noreferrer\"><i class={`w-6 h-6 text-gray-600 hover:text-gray-900 ${social_media_icon_class}`}></i></a>"
        },
        {
          "name": "FooterSocialLinks",
          "is_standalone": false,
          "description": "(takes children): A container component that holds a row of social media links.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The footer should have a section dedicated to social links, with icons representing different social media platforms. The icons should be spaced evenly and be of a moderate size. The section should be accessible on all devices, including mobile phones.",
      "html": "<footer><!-- social links section --><section class=\"bg-gray-200 py-6\"><div class=\"max-w-md mx-auto px-4\"><h2 class=\"sr-only\">Social Links</h2><ul class=\"flex justify-center mb-4\"><SocialLinks><!-- social links will be inserted here --></SocialLinks></ul></div></section></footer>",
      "components": [
        {
          "name": "SocialLinks",
          "is_standalone": false,
          "description": "- a component that takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Dropdown Menu Item Style": [
    {
      "description": "A dropdown menu item with a caret icon indicating that it has a submenu. The item should be clickable and have a hover effect.",
      "html": "<nav class=\"flex justify-center mb-4\"><ul class=\"flex flex-wrap justify-center mb-4\"><li class=\"mr-4\"><DropdownMenuItem/></li></ul></nav>",
      "components": [
        {
          "name": "DropdownMenuItem",
          "is_standalone": true,
          "description": "standalone, contains text and a caret icon.",
          "html": "<li class=\"inline-flex items-center text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\"><a class=\"dropdown-item py-2 px-4\">{menuItemText}</a><CaretIcon/></li>"
        },
        {
          "name": "CaretIcon",
          "is_standalone": true,
          "description": "standalone, a small triangle icon indicating a submenu.",
          "html": "<span class=\"inline-block align-middle text-gray-600\"><i class=\"fas fa-caret-down mr-2\"></i></span>"
        }
      ]
    }
  ],
  "Page Content Image": [
    {
      "description": "The UI should display a responsive image with a caption, optimized for mobile-first and accessibility.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ImageComponent/></main>",
      "components": [
        {
          "name": "ImageComponent",
          "is_standalone": true,
          "description": "(standalone): Displays an image with a caption.",
          "html": "<figure class=\"flex justify-center mb-4\"><img src=\"{image_src}\" alt=\"{image_alt}\" class=\"w-full md:w-3/4 lg:w-1/2 object-cover rounded\"/><figcaption class=\"text-xs text-gray-600\">{caption_text}</figcaption></figure>"
        },
        {
          "name": "CaptionComponent",
          "is_standalone": true,
          "description": "(standalone): Displays a caption text.",
          "html": "<p class=\"text-xs text-gray-600\">{caption_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display an image with a caption below it. The image should take up the full width of the container and have a maximum height. The caption should be centered below the image.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ImageContent/><ImageCaption/></div>",
      "components": [
        {
          "name": "ImageContent",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<img src={image_src} alt={image_alt} class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "ImageCaption",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-lg text-center\">{caption_text}</p>"
        }
      ]
    }
  ],
  "Customer Profile: View customer details": [
    {
      "description": "A simple profile page with a header, customer information, and a call-to-action (CTA) button.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CustomerProfileHeader/><div class=\"mt-4\"><CustomerInfoSection><p><strong>Email:</strong>{customer_email}</p><p><strong>Phone:</strong>{customer_phone}</p><p><strong>Address:</strong>{customer_address}</p></CustomerInfoSection></div><div class=\"mt-6\"><CallToActionButton/></div></div>",
      "components": [
        {
          "name": "CustomerProfileHeader",
          "is_standalone": true,
          "description": "Standalone component to display the customer's profile picture and name.",
          "html": "<div class=\"flex flex-col items-center\"><img src={customer_profile_picture} class=\"w-24 h-24 rounded-full\" alt=\"Customer Profile Picture\"/><h2 class=\"text-lg font-bold\">{customer_name}</h2></div>"
        },
        {
          "name": "CustomerInfoSection",
          "is_standalone": false,
          "description": "Takes children to display customer information such as email, phone number, and address.",
          "html": "<div class=\"bg-white shadow-md p-4\">{children}</div>"
        },
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "Standalone component to render a CTA button with a customizable label.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_label}</button>"
        }
      ]
    }
  ],
  "Tooltips for information": [
    {
      "description": "The UI should display a tooltip when hovering over an icon or text, providing additional information to the user. The tooltip should be responsive, accessible, and styled with Tailwind CSS.",
      "html": "<!-- A button that triggers the tooltip --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><TooltipTrigger/><TooltipContent>Tooltip information</TooltipContent></button>",
      "components": [
        {
          "name": "TooltipTrigger",
          "is_standalone": true,
          "description": "(standalone): The component that triggers the tooltip when hovered.",
          "html": "<!-- Tooltip trigger icon --><i class=\"fas fa-info-circle\"></i>"
        },
        {
          "name": "TooltipContent",
          "is_standalone": false,
          "description": "(takes children): The component that displays the tooltip content.",
          "html": "<!-- The tooltip content with a tailwindcss tooltip class --><div class=\"tooltip absolute z-10 p-2 text-lg text-gray-600 bg-gray-100 rounded\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a tooltip when a user hovers over an information icon. The tooltip should contain a brief message providing additional information. The UI should be responsive and accessible.",
      "html": "<div class=\"flex justify-center\"><InfoIcon/><Tooltip><p>{tooltip_message}</p></Tooltip></div>",
      "components": [
        {
          "name": "InfoIcon",
          "is_standalone": true,
          "description": "- Standalone component that displays an information icon.",
          "html": "<i class=\"fas fa-info-circle text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\"/>"
        },
        {
          "name": "Tooltip",
          "is_standalone": false,
          "description": "- Takes children; displays a brief message when the user hovers over the `InfoIcon`.",
          "html": "<div class=\"absolute z-10 bg-gray-100 rounded p-2 text-sm text-gray-700\">{children}</div>"
        }
      ]
    }
  ],
  "Alert message display": [
    {
      "description": "The UI should display a message with a background color and text color that indicates the type of alert (e.g. success, error, warning, info). The message should be dismissible and have a close button.",
      "html": "<div class=\"max-w-md p-4 mx-auto mt-4\"><AlertMessage/><CloseButton/></div>",
      "components": [
        {
          "name": "AlertMessage",
          "is_standalone": true,
          "description": "A standalone component that displays an alert message.",
          "html": "<div class=\"bg-{alert_color}-100 border-{alert_color}-400 text-{alert_color}-700 p-4 rounded-md mb-4\">{message}</div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that displays a close button.",
          "html": "<button class=\"absolute top-0 right-0 px-4 py-2 text-gray-600 hover:text-gray-900\"><i class=\"fas fa-times\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should display a colored alert message with a close button.",
      "html": "<div class=\"alert-message\"><AlertMessage/><CloseButton/></div>",
      "components": [
        {
          "name": "AlertMessage",
          "is_standalone": true,
          "description": "(standalone): Displays the alert message.",
          "html": "<p class=\"text-sm text-{alert_color}\">{alert_message}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "(standalone): A button to close the alert message.",
          "html": "<button class=\"text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\" aria-label=\"Close alert\">×</button>"
        }
      ]
    }
  ],
  "Keyboard-Navigable interfaces": [
    {
      "description": "The UI should be a simple, accessible navigation menu that can be navigated using a keyboard. It should have a clear visual focus indicator to help users navigate using their keyboard.",
      "html": "<nav aria-label=\"Main Navigation\" class=\"max-w-md mx-auto p-4\"><NavList><NavItem/><NavItem/><NavItem/></NavList></nav>",
      "components": [
        {
          "name": "NavItem",
          "is_standalone": true,
          "description": "A standalone component representing a single navigation item.",
          "html": "<li tabindex=\"0\" class=\"py-2 px-4 border-b border-gray-200 hover:bg-gray-100 focus:bg-gray-100 focus:outline-none\"><a href=\"{href}\" class=\"text-gray-700\">{label}</a><span class=\"sr-only\">(current)</span></li>"
        },
        {
          "name": "NavList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of navigation items.",
          "html": "<ul role=\"menu\" class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Filter criteria that dynamically adjusts based on the context of the content being displayed": [
    {
      "description": "The UI should display a dynamic filter criteria section that adjusts based on the context of the content being displayed. It should have a title, a dropdown to select the filter criteria, and a input field to enter the filter value. The filter criteria should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><DynamicFilter/></div>",
      "components": [
        {
          "name": "DynamicFilter",
          "is_standalone": true,
          "description": "A standalone component that renders a dynamic filter criteria section.",
          "html": "<div class=\"flex flex-wrap -mx-4 mb-4\"><FilterTitle/><FilterDropdown/><FilterInput/></div>"
        },
        {
          "name": "FilterTitle",
          "is_standalone": true,
          "description": "A standalone component that renders the title of the filter criteria section.",
          "html": "<h5 class=\"text-lg font-bold\">{filter_title}</h5>"
        },
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "A standalone component that renders a dropdown to select the filter criteria.",
          "html": "<select class=\"block w-full pl-10 text-sm text-gray-700\">{filter_criteria_options}</select>"
        },
        {
          "name": "FilterInput",
          "is_standalone": true,
          "description": "A standalone component that renders an input field to enter the filter value.",
          "html": "<input type=\"text\" class=\"block w-full pl-10 pr-10 py-2 text-sm text-gray-700\" placeholder=\"{filter_placeholder}\"/>"
        }
      ]
    }
  ],
  "Featured Image Lightbox Close": [
    {
      "description": "A lightbox with a close button at the top right corner, displaying a large featured image. The lightbox should be modal, overlaying the underlying content.",
      "html": "<div class=\"fixed inset-0 flex justify-center items-center bg-gray-500 bg-opacity-50\"><FeaturedImageLightbox/></div>",
      "components": [
        {
          "name": "FeaturedImageLightbox",
          "is_standalone": true,
          "description": "a standalone component that contains a large featured image and a close button.",
          "html": "<div class=\"max-w-md p-4 bg-white rounded\"><LightboxCloseButton/><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"max-w-full h-auto rounded\"></div>"
        },
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "a standalone component that provides a close button for the lightbox.",
          "html": "<button class=\"absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-800\"><i class=\"fas fa-times\" aria-label=\"Close\"></i></button>"
        }
      ]
    },
    {
      "description": "A Lightbox component that displays a featured image and has a close button.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-screen bg-black bg-opacity-50 flex justify-center\"><Lightbox/></div>",
      "components": [
        {
          "name": "Lightbox",
          "is_standalone": true,
          "description": "A standalone component that contains the image and the close button.",
          "html": "<div class=\"bg-white p-4 max-w-md mx-auto mt-16\"><CloseButton/><img src={imageUrl} alt={imageAlt} class=\"mx-auto\"/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that represents the close button.",
          "html": "<button class=\"absolute top-2 right-2 text-3xl text-gray-500 hover:text-gray-800\">×</button>"
        }
      ]
    },
    {
      "description": "The UI should be a lightbox close button for a featured image. It should be a responsive, mobile-first, accessible, and SEO-friendly component.",
      "html": "<!-- Lightbox container --><div class=\"fixed top-0 left-0 h-screen w-screen bg-black bg-opacity-50 flex justify-center\"><!-- Lightbox content --><div class=\"bg-white p-4 max-w-md m-4\"><!-- Featured image --><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full\"/><!-- Lightbox close button --><LightboxCloseButton/></div></div>",
      "components": [
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "a standalone component representing the close button for the lightbox.",
          "html": "<!-- Lightbox close button --><button class=\"absolute top-0 right-0 p-4 text-lg text-white hover:text-gray-200 focus:outline-none\">×</button>"
        }
      ]
    }
  ],
  "Customer review and rating summaries": [
    {
      "description": "The UI should display a summary of customer reviews, including the average rating and total number of reviews. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto py-4\"><CustomerReviewSummary/><div class=\"flex justify-between mb-4\"><RatingSummary/><ReviewCount/></div></div>",
      "components": [
        {
          "name": "CustomerReviewSummary",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"text-lg font-bold\">{average_rating} out of 5 stars</div>"
        },
        {
          "name": "RatingSummary",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"flex items-center\"><span class=\"text-yellow-500\">{rating_icon}</span><span class=\"ml-2\">{average_rating}</span></div>"
        },
        {
          "name": "ReviewCount",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p>{review_count} reviews</p>"
        }
      ]
    }
  ],
  "Send and save draft buttons": [
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Breadcrumb Separator Style": [
    {
      "description": "The UI should display a breadcrumb separator in a horizontal layout, with each separator element separated by a vertical line. The separators should be responsive, accessible, and mobile-first.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex flex-wrap\"><li><a href=\"#\" class=\"text-gray-600 transition duration-300\">Home</a></li><li><BreadcrumbSeparator/></li><li><a href=\"#\" class=\"text-gray-600 transition duration-300\">About</a></li><li><BreadcrumbSeparator/></li><li><a href=\"#\" class=\"text-gray-600 transition duration-300\">Contact</a></li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span aria-hidden=\"true\" class=\"mx-2\">/</span>"
        }
      ]
    }
  ],
  "Countdown timer component": [
    {
      "description": "The UI should display a countdown timer with days, hours, minutes, and seconds remaining until a specific deadline. The timer should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><CountdownTimer/></div>",
      "components": [
        {
          "name": "CountdownTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the countdown timer.",
          "html": "<div class=\"flex justify-center mb-4\"><TimeUnit>{days} days</TimeUnit><TimeUnit>{hours} hours</TimeUnit><TimeUnit>{minutes} minutes</TimeUnit><TimeUnit>{seconds} seconds</TimeUnit></div>"
        },
        {
          "name": "TimeUnit",
          "is_standalone": false,
          "description": "A component that displays a single unit of time (e.g. days, hours, minutes, seconds). Takes children.",
          "html": "<div class=\"text-2xl font-bold mx-2\">{children}</div>"
        }
      ]
    }
  ],
  "Verified checkmark and badge for official channels": [
    {
      "description": "The UI should display a verified checkmark and a badge to indicate that a channel is official.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><span class=\"text-sm\">{channelName}</span></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a verified checkmark and a badge.",
          "html": "<div class=\"flex items-center bg-yellow-100 rounded-full py-1 px-2 text-yellow-700\"><CheckmarkIcon/><span class=\"text-xs\">Official</span></div>"
        },
        {
          "name": "CheckmarkIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a checkmark icon.",
          "html": "<i class=\"fas fa-check text-green-500\" aria-hidden=\"true\"></i>"
        }
      ]
    },
    {
      "description": "The UI should display a verified checkmark and badge indicating an official channel. The badge should be a rounded rectangle with a checked icon inside, and a subtle border. The text \"Verified\" should be displayed next to the badge.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><VerifiedText/></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-6 h-6 bg-gray-200 rounded-full border border-gray-300 flex justify-center items-center\"><span class=\"text-lg material-icons\">check</span></div>"
        },
        {
          "name": "VerifiedText",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm text-gray-600\">{verified_text}</p>"
        }
      ]
    }
  ],
  "Countdown to event date": [
    {
      "description": "The UI should display a countdown timer showing the days, hours, minutes, and seconds until the event date. The timer should be easily readable and responsive, adjusting to different screen sizes.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 pb-8\"><h2 class=\"text-2xl font-bold mb-4\">Countdown to Event Date</h2><CountdownTimer/></section>",
      "components": [
        {
          "name": "CountdownTimer",
          "is_standalone": true,
          "description": "(standalone): displays the countdown timer",
          "html": "<div class=\"flex justify-center mb-4\"><TimeUnit>{days}</TimeUnit><span class=\"text-lg\">days</span><TimeUnit>{hours}</TimeUnit><span class=\"text-lg\">hours</span><TimeUnit>{minutes}</TimeUnit><span class=\"text-lg\">minutes</span><TimeUnit>{seconds}</TimeUnit><span class=\"text-lg\">seconds</span></div>"
        },
        {
          "name": "TimeUnit",
          "is_standalone": false,
          "description": "(takes children): displays a single unit of time (e.g., days, hours, minutes, seconds)",
          "html": "<span class=\"text-3xl font-bold\">{children}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a countdown to a specific event date, showing the days, hours, minutes, and seconds remaining until the event. The design should be modern, clean, and responsive, with a prominent display of the countdown timer.",
      "html": "<div class=\"max-w-md mx-auto p-4 py-8\"><h2 class=\"text-3xl font-bold mb-4\">Countdown to Event</h2><div class=\"flex justify-center mb-4\"><CountdownTimer/></div></div>",
      "components": [
        {
          "name": "CountdownTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the countdown timer.",
          "html": "<div class=\"flex justify-center mb-4\"><CountdownSegment>{days} days</CountdownSegment><CountdownSegment>{hours} hours</CountdownSegment><CountdownSegment>{minutes} minutes</CountdownSegment><CountdownSegment>{seconds} seconds</CountdownSegment></div>"
        },
        {
          "name": "CountdownSegment",
          "is_standalone": false,
          "description": "A component that displays a single unit of time (days, hours, minutes, seconds) and takes children.",
          "html": "<div class=\"px-4 py-2 mx-2 bg-gray-200 rounded\"><span class=\"text-2xl\">{children}</span></div>"
        }
      ]
    }
  ],
  "Order summary and subtotal display": [
    {
      "description": "The UI should be a compact display of the order summary and subtotal, with clear labels and values. It should be responsive and adaptable to small screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><OrderSummary/><OrderSubtotal/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone, displays the order summary",
          "html": "<div class=\"text-lg\">{order_summary_text}</div>"
        },
        {
          "name": "OrderSubtotal",
          "is_standalone": true,
          "description": "standalone, displays the subtotal",
          "html": "<div class=\"text-lg font-bold\">Subtotal: {subtotal_amount}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a summary of the order, including the subtotal, in a clean and simple format.",
      "html": "<div class=\"p-4 bg-white rounded shadow-md\"><OrderSummary/><SubtotalDisplay/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone component that displays the order summary.",
          "html": "<p class=\"text-lg font-bold\">Order Summary:</p><ul><li class=\"py-2\">Items: {item_count}</li><li class=\"py-2\">Total weight: {total_weight} kg</li><li class=\"py-2\">Shipping: {shipping_method}</li></ul>"
        },
        {
          "name": "SubtotalDisplay",
          "is_standalone": true,
          "description": "standalone component that displays the subtotal.",
          "html": "<p class=\"text-lg font-bold\">Subtotal: <span class=\"text-orange-600\">{subtotal_amount}</span></p>"
        }
      ]
    },
    {
      "description": "The UI should display an order summary with a subtotal, taxes, and a total. The design should be responsive, with a mobile-first approach, and follow accessibility guidelines.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6\"><h2 class=\"text-lg font-bold mb-2\">Order Summary</h2><OrderSummaryComponent/><div class=\"flex justify-between mb-2\"><SubtotalComponent/><TaxComponent/></div><TotalComponent/></section>",
      "components": [
        {
          "name": "OrderSummaryComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the order summary",
          "html": "<ul class=\"list-none mb-4\"><li class=\"flex justify-between mb-2\">{item_name} x {item_quantity}</li><!-- repeat for each item in the order --></ul>"
        },
        {
          "name": "SubtotalComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the subtotal",
          "html": "<p>Subtotal: <span class=\"font-bold\">{subtotal_amount}</span></p>"
        },
        {
          "name": "TaxComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the tax",
          "html": "<p>Tax ({tax_percentage}%): <span class=\"font-bold\">{tax_amount}</span></p>"
        },
        {
          "name": "TotalComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the total",
          "html": "<p class=\"text-lg font-bold\">Total: <span class=\"text-lg font-bold\">{total_amount}</span></p>"
        }
      ]
    }
  ],
  "Like button to show tweet approval": [
    {
      "description": "A simple button with a heart icon and a counter to indicate the number of likes.",
      "html": "<div class=\"flex mb-4\"><!-- container for like button and counter --><LikeButton/><p class=\"text-sm\">{like_count} likes</p></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone component with a heart icon and a counter.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-heart\"></i></button>"
        }
      ]
    }
  ],
  "Sharrre and Social Sharing": [
    {
      "description": "The UI should display a set of social media icons with their respective share buttons. The icons should be evenly spaced and centered horizontally. On mobile devices, the icons should stack vertically.",
      "html": "<div class=\"container mx-auto p-4\"><SocialSharing><SocialMediaIcon/><SocialMediaIcon/><SocialMediaIcon/></SocialSharing></div>",
      "components": [
        {
          "name": "SocialMediaIcon",
          "is_standalone": true,
          "description": "(standalone) - An individual social media icon with a share button.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"inline-block p-2\"><i class=\"fab fa-{social_media_icon_name}\" aria-hidden=\"true\"/><span class=\"sr-only\">{social_media_name}</span></a>"
        },
        {
          "name": "SocialSharing",
          "is_standalone": false,
          "description": "(takes children) - The container for the social media icons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-nowrap\">{children}</div>"
        }
      ]
    }
  ],
  "Code Review and Approval Workflow": [
    {
      "description": "The UI should display a vertical timeline of code review and approval workflow, with each step represented by a circular icon and a brief description. The timeline should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><Timeline><CodeReviewStep/><CodeReviewStep/><CodeReviewStep/><!-- Add more CodeReviewStep components as needed --></Timeline></div>",
      "components": [
        {
          "name": "CodeReviewStep",
          "is_standalone": true,
          "description": "A standalone component representing a single step in the code review process.",
          "html": "<div class=\"flex items-center mb-4\"><div class=\"w-8 h-8 bg-orange-500 rounded-full text-white text-lg\">{step_icon}</div><div class=\"ml-4\"><p class=\"text-lg\">{step_description}</p><small class=\"text-gray-600\">{step_status}</small></div></div>"
        },
        {
          "name": "Timeline",
          "is_standalone": false,
          "description": "A component that takes children, which are `CodeReviewStep` components.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Author and Date Metadata": [
    {
      "description": "The UI should display the author's name and the date of publication in a clean and simple format, with the author's name on top and the date below, aligned to the left.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the author's name",
          "html": "<p class=\"text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the date of publication",
          "html": "<p class=\"text-xs text-gray-500\">{publication_date}</p>"
        }
      ]
    },
    {
      "description": "The UI should display author and date metadata in a compact and readable format, typically used in blog posts, articles, or news websites. The author's name and publication date should be displayed side by side, with the author's name in a slightly larger font size.",
      "html": "<footer class=\"flex justify-between mb-4\"><MetadataContainer><AuthorMetadata/><DateMetadata/></MetadataContainer></footer>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "A standalone component displaying the author's name.",
          "html": "<span class=\"text-lg\">{author_name}</span>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "A standalone component displaying the publication date.",
          "html": "<span class=\"text-gray-600\">{publication_date}</span>"
        },
        {
          "name": "MetadataContainer",
          "is_standalone": false,
          "description": "A container component that takes children, wrapping the author and date metadata components.",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "A simple metadata section displaying the author's name and the date of publication, aligned to the left and styled for readability.",
      "html": "<div class=\"flex flex-wrap justify-start mb-4\"><MetadataContainer><AuthorMetadata/><DateMetadata/></MetadataContainer></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "standalone component displaying the author's name.",
          "html": "<p class=\"text-gray-600 text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "standalone component displaying the date of publication.",
          "html": "<p class=\"text-gray-600 text-sm\">{publication_date}</p>"
        },
        {
          "name": "MetadataContainer",
          "is_standalone": false,
          "description": "container component taking two children: AuthorMetadata and DateMetadata.",
          "html": "<div class=\"flex flex-wrap items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name and the date of publication, with the author's name in a slightly larger font size than the date.",
      "html": "<div class=\"flex justify-between mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "standalone component that displays the author's name.",
          "html": "<p class=\"text-lg\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "standalone component that displays the date of publication.",
          "html": "<p class=\"text-sm text-gray-600\">{publication_date}</p>"
        }
      ]
    }
  ],
  "Integrated Wiki and Documentation Editor": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible Integrated Wiki and Documentation Editor. It should have a navigation sidebar, a primary content area, and a floating action button for creating new pages. The navigation sidebar should display a list of wiki pages, with the ability to search and filter pages. The primary content area should display the selected wiki page's content, with a toolbar for editing and formatting options.",
      "html": "<div class=\"flex h-screen\"><WikiSidebar/><div class=\"flex flex-grow\"><WikiPageContent><!-- Wiki page content goes here --></WikiPageContent><EditorToolbar/></div><FloatingActionButton/></div>",
      "components": [
        {
          "name": "WikiSidebar",
          "is_standalone": true,
          "description": "(standalone): a navigation sidebar component that displays a list of wiki pages",
          "html": "<div class=\"w-64 h-screen p-4 bg-gray-100\"><WikiPageSearch/><WikiPageFilter/><WikiPageList/></div>"
        },
        {
          "name": "WikiPageList",
          "is_standalone": true,
          "description": "(standalone): a component that displays a list of wiki pages",
          "html": "<ul class=\"list-none p-0 m-0\">{wiki_pages.map((page) =>( <li class=\"py-2 px-4 hover:bg-gray-200\"><a href={page.url}>{page.title}</a></li>))}</ul>"
        },
        {
          "name": "WikiPageSearch",
          "is_standalone": true,
          "description": "(standalone): a search input component for searching wiki pages",
          "html": "<input type=\"search\" class=\"w-full p-2 pl-10 text-sm\" placeholder=\"Search wiki pages\"/>"
        },
        {
          "name": "WikiPageFilter",
          "is_standalone": true,
          "description": "(standalone): a filter component for filtering wiki pages",
          "html": "<select class=\"w-full p-2 text-sm\"><option value=\"\">All pages</option>{filters.map((filter) =>( <option value={filter.value}>{filter.label}</option>))}</select>"
        },
        {
          "name": "WikiPageContent",
          "is_standalone": false,
          "description": "(takes children): a component that displays the selected wiki page's content",
          "html": "<div class=\"prose lg:prose-lg mx-auto\">{children}</div>"
        },
        {
          "name": "EditorToolbar",
          "is_standalone": true,
          "description": "(standalone): a toolbar component for editing and formatting options",
          "html": "<div class=\"flex justify-end p-2\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Save </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Preview </button><!-- more toolbar buttons --></div>"
        },
        {
          "name": "FloatingActionButton",
          "is_standalone": true,
          "description": "(standalone): a floating action button component for creating new pages",
          "html": "<button class=\"fixed bottom-4 right-4 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded shadow-md\"><i class=\"fas fa-plus\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should have a clean and minimalistic design, with a focus on readability and ease of use. The top navigation bar should have links to the wiki's homepage, a search bar, and a button to create a new page. The main content area should have a sidebar with a hierarchical list of wiki pages, and the main editing area should have a markdown editor with formatting options.",
      "html": "<div class=\"flex h-screen\"><NavigationBar/><div class=\"flex-grow flex flex-col\"><Sidebar/><div class=\"flex-grow p-4\"><Breadcrumb/><Editor><!-- editor content goes here --></Editor></div></div></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "A standalone component that displays the top navigation bar with links to the wiki's homepage, a search bar, and a button to create a new page.",
          "html": "<nav class=\"bg-gray-200 p-4 flex justify-between\"><a href=\"/\" class=\"text-blue-600 hover:text-blue-900\">Wiki Home</a><input type=\"search\" class=\"bg-white border border-gray-300 p-2\" placeholder=\"Search...\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold p-2\">Create New Page</button></nav>"
        },
        {
          "name": "Sidebar",
          "is_standalone": true,
          "description": "A standalone component that displays a hierarchical list of wiki pages.",
          "html": "<div class=\"w-48 bg-gray-200 p-4\"><h2>Pages</h2><ul>{page_list} <!-- iterate over page list and render each page as a <li>element --></ul></div>"
        },
        {
          "name": "Editor",
          "is_standalone": false,
          "description": "A component that takes children and displays a markdown editor with formatting options.",
          "html": "<div class=\"prose p-4\"><textarea id=\"editor\" class=\"w-full p-2\">{children}</textarea><div class=\"flex justify-between p-2\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold p-2\">Save</button><button class=\"bg-red-500 hover:bg-red-700 text-white font-bold p-2\">Cancel</button></div></div>"
        },
        {
          "name": "Breadcrumb",
          "is_standalone": true,
          "description": "A standalone component that displays the current page's breadcrumb trail.",
          "html": "<nav aria-label=\"Breadcrumb\" class=\"p-2\"><ol class=\"flex\">{breadcrumb_list} <!-- iterate over breadcrumb list and render each item as a <li>element --></ol></nav>"
        }
      ]
    }
  ],
  "Timer display": [
    {
      "description": "The timer display should show the hours, minutes, and seconds in a responsive and mobile-first design. The timer should be easily readable and accessible.",
      "html": "<div class=\"flex justify-center p-4\"><TimerDisplay/></div>",
      "components": [
        {
          "name": "TimerDisplay",
          "is_standalone": true,
          "description": "(standalone): The main timer display component.",
          "html": "<div class=\"flex items-center text-3xl\"><TimeUnit>{hours}</TimeUnit>: <TimeUnit>{minutes}</TimeUnit>: <TimeUnit>{seconds}</TimeUnit></div>"
        },
        {
          "name": "TimeUnit",
          "is_standalone": false,
          "description": "(takes children): A component to display a single time unit (hours, minutes, seconds).",
          "html": "<span class=\"mx-2\">{children}</span>"
        }
      ]
    }
  ],
  "Video call interface": [
    {
      "description": "The UI should display a video feed from the local camera, a video feed from the remote caller, and some controls to manage the call. The layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex h-screen w-full\"><CallLayout><CallHeader/><div class=\"flex flex-wrap justify-center\"><LocalVideoFeed/><RemoteVideoFeed/></div><CallControls/></CallLayout></div>",
      "components": [
        {
          "name": "CallHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the caller's information (e.g. name, profile picture).",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture} alt={caller_name} class=\"w-12 h-12 rounded-full mr-4\"/><h2 class=\"text-lg\">{caller_name}</h2></div>"
        },
        {
          "name": "LocalVideoFeed",
          "is_standalone": true,
          "description": "A standalone component that displays the local video feed from the user's camera.",
          "html": "<video autoplay playsinline class=\"w-full h-full max-w-md max-h-md\"></video>"
        },
        {
          "name": "RemoteVideoFeed",
          "is_standalone": true,
          "description": "A standalone component that displays the remote video feed from the caller.",
          "html": "<video autoplay playsinline class=\"w-full h-full max-w-md max-h-md\"></video>"
        },
        {
          "name": "CallControls",
          "is_standalone": true,
          "description": "A standalone component that displays buttons to manage the call (e.g. mute, unmute, hang up).",
          "html": "<div class=\"flex justify-center mb-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Mute</button><button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded ml-4\">Unmute</button><button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded ml-4\">Hang up</button></div>"
        },
        {
          "name": "CallLayout",
          "is_standalone": false,
          "description": "A container component that takes children and arranges them in a responsive layout.",
          "html": "<!-- this component just wraps its children with some basic layout styles --><div class=\"flex flex-col items-center p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Blog Post Author Info": [
    {
      "description": "The UI should display the author's name, profile picture, and a short bio. It should be a compact, rectangular box with a subtle border and padding.",
      "html": "<div class=\"max-w-md p-4 mx-auto bg-white rounded shadow-md\"><AuthorInfo/></div>",
      "components": [
        {
          "name": "AuthorInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the author's information.",
          "html": "<div class=\"flex items-center mb-2\"><Avatar/><div class=\"ml-2\"><p class=\"text-lg\">{authorName}</p><Bio/></div></div>"
        },
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "A standalone component that displays the author's profile picture.",
          "html": "<img src={profilePictureUrl} class=\"w-12 h-12 rounded-full\" alt=\"{authorName}'s profile picture\"/>"
        },
        {
          "name": "Bio",
          "is_standalone": true,
          "description": "A standalone component that displays the author's bio.",
          "html": "<p class=\"text-gray-600\">{authorBio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's information, including their name, profile picture, and a short bio. The component should be responsive, with the profile picture above the author's name and bio on mobile devices, and to the left of the text on larger screens.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ProfilePicture/><div class=\"ml-4 md:ml-0\"><h5 class=\"mb-1\">{author_name}</h5><AuthorBio/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the author's profile picture.",
          "html": "<img src=\"{author_profile_picture}\" alt=\"{author_name}\" class=\"w-12 h-12 rounded-full mx-auto md:mx-0\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that displays the author's bio.",
          "html": "<p class=\"text-sm\">{author_bio}</p>"
        }
      ]
    }
  ],
  "Social media links with icons and tooltips": [
    {
      "description": "The UI should display a row of social media links with their respective icons and tooltips when hovered.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></div>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that represents a single social media link with an icon and tooltip.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-gray-600 hover:text-gray-900 transition duration-300\"><i class=\"{social_media_icon} w-6 h-6 text-2xl transition duration-300\"/><span class=\"sr-only\">{social_media_name}</span><span class=\"tooltip tooltip-simple\">{social_media_name}</span></a>"
        }
      ]
    }
  ],
  "Product Price Discount": [
    {
      "description": "The UI should display the original price of a product, a discounted price, and a discount percentage. The discounted price should be prominent, and the original price should be struck through. The discount percentage should be displayed clearly.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceDiscountContainer/></div>",
      "components": [
        {
          "name": "ProductPriceDiscountContainer",
          "is_standalone": true,
          "description": "(standalone): A container component that holds the product price discount information.",
          "html": "<div class=\"flex items-center\"><OriginalPrice/>{' '}<s>{original_price}</s><DiscountPrice/>{discount_price} <DiscountPercentage/>({discount_percentage}% off)</div>"
        },
        {
          "name": "OriginalPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the original price of the product.",
          "html": "<span class=\"text-gray-500 text-sm\">{original_price}</span>"
        },
        {
          "name": "DiscountPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discounted price of the product.",
          "html": "<span class=\"text-lg font-bold text-red-600\">{discount_price}</span>"
        },
        {
          "name": "DiscountPercentage",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discount percentage.",
          "html": "<span class=\"text-sm text-gray-600\">{discount_percentage}%</span>"
        }
      ]
    }
  ],
  "Targets/Anchor Links": [
    {
      "description": "The UI should display a list of target links, which are anchor links that jump to specific sections of a webpage. The links should be displayed in a vertical list, with each link on a new line. The links should be highlighted when hovered over. The UI should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex flex-col space-y-4\"><TargetLink/><TargetLink/><TargetLink/><!-- Add more TargetLink components as needed --></div>",
      "components": [
        {
          "name": "TargetLink",
          "is_standalone": true,
          "description": "a standalone component that represents a single target link.",
          "html": "<a href=\"#{target_id}\" class=\"text-blue-600 hover:text-blue-900 hover:underline\">{target_text}</a>"
        }
      ]
    }
  ],
  "Revenue Forecast: Predict future sales": [
    {
      "description": "The UI should be a simple, informative, and responsive dashboard that displays a revenue forecast chart and some key statistics.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><RevenueForecastHeader/><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-2/3 xl:w-3/4 px-4 mb-4 md:mb-0\"><ForecastChart/></div><div class=\"w-full md:w-1/3 xl:w-1/4 px-4\"><KeyStatistics/></div></div></div>",
      "components": [
        {
          "name": "RevenueForecastHeader",
          "is_standalone": true,
          "description": "Standalone, displays the title and a brief description of the revenue forecast.",
          "html": "<div class=\"mb-4\"><h1 class=\"text-2xl font-bold\">Revenue Forecast</h1><p class=\"text-gray-600\">{forecast_description}</p></div>"
        },
        {
          "name": "ForecastChart",
          "is_standalone": true,
          "description": "Standalone, displays a chart showing the revenue forecast.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><canvas id=\"forecast-chart\" width=\"400\" height=\"200\"></canvas></div>"
        },
        {
          "name": "KeyStatistics",
          "is_standalone": true,
          "description": "Standalone, displays a list of key statistics related to the revenue forecast.",
          "html": "<ul class=\"list-none mb-0\"><li class=\"flex justify-between mb-2 p-2 bg-gray-100 rounded\"><span>Projected Revenue:</span><span>${projected_revenue}</span></li><li class=\"flex justify-between mb-2 p-2 bg-gray-100 rounded\"><span>Average Growth Rate:</span><span>{average_growth_rate}%</span></li><li class=\"flex justify-between mb-2 p-2 bg-gray-100 rounded\"><span>Forecast Period:</span><span>{forecast_period}</span></li></ul>"
        }
      ]
    }
  ],
  "Category dropdown menu": [
    {
      "description": "A dropdown menu that displays a list of categories when the user clicks on a dropdown toggle button. The menu should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><DropdownToggle/><DropdownMenu><CategoryItem/><CategoryItem/><!-- Add more CategoryItem components here --></DropdownMenu></div>",
      "components": [
        {
          "name": "DropdownToggle",
          "is_standalone": true,
          "description": "A standalone component that displays a button to toggle the dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Categories <i class=\"fas fa-angle-down\" aria-hidden=\"true\"></i></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of categories.",
          "html": "<ul class=\"absolute bg-white shadow-md mt-2 w-48 rounded\">{children}</ul>"
        },
        {
          "name": "CategoryItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single category item.",
          "html": "<li class=\"py-2 px-4 border-b border-gray-200\">{category_name}</li>"
        }
      ]
    }
  ],
  "Parallax scrolling": [
    {
      "description": "The UI should have a hero section with a background image that appears to move slower than the foreground content when the user scrolls, creating a parallax effect. The foreground content should include a heading, a subheading, and a call-to-action button.",
      "html": "<div class=\"h-screen w-full overflow-hidden\"><HeroSection/></div>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "standalone component that contains the background image and foreground content.",
          "html": "<div class=\"relative h-screen\"><ParallaxBackground/><ForegroundContent/></div>"
        },
        {
          "name": "ParallaxBackground",
          "is_standalone": true,
          "description": "standalone component that displays the background image.",
          "html": "<div class=\"absolute inset-0 w-full h-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroImage})` }}/>"
        },
        {
          "name": "ForegroundContent",
          "is_standalone": true,
          "description": "standalone component that displays the heading, subheading, and call-to-action button.",
          "html": "<div class=\"absolute inset-0 flex flex-col justify-center p-4 lg:p-12\"><h1 class=\"text-4xl font-bold\">{heroHeading}</h1><p class=\"text-lg\">{heroSubheading}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Call to Action</button></div>"
        }
      ]
    }
  ],
  "Product grid layout": [
    {
      "description": "The UI should display a responsive grid of products, with each product showing its image, name, price, and a call-to-action button. The grid should adapt to different screen sizes, with a maximum of 3 columns on larger screens and 1 column on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto px-4 sm:px-6 lg:max-w-7xl lg:px-8\"><ProductGrid><ProductCard/><ProductCard/><ProductCard/><!-- Add more ProductCard components as needed --></ProductGrid></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "(standalone): represents a single product in the grid",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-6 mb-4\"><img src={product_image} alt=\"Product image\" class=\"h-48 w-full object-cover rounded-t\"/><h2 class=\"text-lg\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p><p class=\"text-lg font-bold\">{product_price}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button></div>"
        },
        {
          "name": "ProductGrid",
          "is_standalone": false,
          "description": "(takes children): wraps the product cards in a responsive grid container",
          "html": "<div class=\"grid gap-4 lg:grid-cols-3 md:grid-cols-2 sm:grid-cols-1\">{children}</div>"
        }
      ]
    }
  ],
  "Language selector": [
    {
      "description": "The language selector should be a dropdown menu that displays the current language and allows the user to select from a list of available languages. It should be responsive, mobile-friendly, and accessible.",
      "html": "<nav class=\"lg:flex justify-end pt-2\"><LanguageSelector/></nav>",
      "components": [
        {
          "name": "LanguageSelector",
          "is_standalone": true,
          "description": "(standalone): The main language selector component.",
          "html": "<div class=\"relative\"><button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{currentLanguage} <span class=\"caret\"></span></button><ul class=\"absolute top-full left-0 w-full bg-white rounded-b shadow-md\"><LanguageOption>English</LanguageOption><LanguageOption>Español</LanguageOption><LanguageOption>Français</LanguageOption><!-- Add more language options here --></ul></div>"
        },
        {
          "name": "LanguageOption",
          "is_standalone": false,
          "description": "(takes children): A single language option in the dropdown menu.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href=\"#\" class=\"block\">{children}</a></li>"
        }
      ]
    }
  ],
  "Inline Editing/CRUD": [
    {
      "description": "The UI should be a table with rows representing items that can be edited in-place. Each row should have a column for editing, with a text input and save/cancel buttons. When not editing, the row should display the item's value. The table should be responsive, with columns that adapt to smaller screens.",
      "html": "<table class=\"w-full overflow-hidden\"><thead><tr><th class=\"px-4 py-2\">Item</th><th class=\"px-4 py-2\">Actions</th></tr></thead><tbody><EditableTableRow><EditableTableCell><!-- item value or input field goes here --></EditableTableCell><EditableTableCell><EditButton/><CancelButton/><SaveButton/></EditableTableCell></EditableTableRow><!-- more rows --></tbody></table>",
      "components": [
        {
          "name": "EditableTableRow",
          "is_standalone": false,
          "description": "A table row with an editing state. Takes children.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\" :class=\"{ 'bg-orange-100': isEditing }\">{children}</tr>"
        },
        {
          "name": "EditableTableCell",
          "is_standalone": false,
          "description": "A table cell that contains an editable input. Takes children.",
          "html": "<td class=\"px-4 py-2\" :class=\"{ 'bg-orange-100': isEditing }\">{children}</td>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "A button to enter edit mode. Standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Edit</button>"
        },
        {
          "name": "CancelButton",
          "is_standalone": true,
          "description": "A button to cancel editing. Standalone.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Cancel</button>"
        },
        {
          "name": "SaveButton",
          "is_standalone": true,
          "description": "A button to save changes. Standalone.",
          "html": "<button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Save</button>"
        }
      ]
    }
  ],
  "Featured Video Controls Bar": [
    {
      "description": "The Featured Video Controls Bar is a horizontal bar that sits below a video player, providing controls for playback, volume, and fullscreen mode. It should be compact, compactible, and easily accessible on various devices.",
      "html": "<div class=\"flex justify-between items-center py-2\"><VideoPlaybackControl/><PlaybackTimeIndicator/><VideoVolumeControl/><VideoFullscreenControl/></div>",
      "components": [
        {
          "name": "VideoPlaybackControl",
          "is_standalone": true,
          "description": "A standalone component that toggles video playback.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fa fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play/Pause</span></button>"
        },
        {
          "name": "VideoVolumeControl",
          "is_standalone": true,
          "description": "A standalone component that adjusts video volume.",
          "html": "<div class=\"flex items-center\"><button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button><input type=\"range\" class=\"w-20\"/></div>"
        },
        {
          "name": "VideoFullscreenControl",
          "is_standalone": true,
          "description": "A standalone component that toggles fullscreen mode.",
          "html": "<button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-arrows-alt\" aria-hidden=\"true\"></i><span class=\"sr-only\">Toggle Fullscreen</span></button>"
        },
        {
          "name": "PlaybackTimeIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the current playback time.",
          "html": "<p class=\"text-sm\">{current_time}/ {total_time}</p>"
        }
      ]
    },
    {
      "description": "The featured video controls bar should be a horizontal bar that appears below the featured video. It should have a play/pause button, a timer, and a volume control button. The bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><VideoControlsBar/></div>",
      "components": [
        {
          "name": "VideoControlsBar",
          "is_standalone": true,
          "description": "A standalone component that contains all video controls.",
          "html": "<div class=\"flex justify-between p-2 bg-gray-200 rounded\"><PlayPauseButton/><VideoTimer/><VolumeControlButton/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "A standalone button that toggles the video playback state.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_button_text}</button>"
        },
        {
          "name": "VideoTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the video playback time.",
          "html": "<p class=\"text-gray-600\">{video_current_time}/ {video_duration}</p>"
        },
        {
          "name": "VolumeControlButton",
          "is_standalone": true,
          "description": "A standalone button that controls the video volume.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">{volume_button_text}</button>"
        }
      ]
    }
  ],
  "Audio Players": [
    {
      "description": "The UI should be a responsive audio player with controls to play, pause, and adjust volume. It should be mobile-friendly and accessible.",
      "html": "<!-- Audio player container --><div class=\"flex flex-col items-center justify-center p-4 md:p-8\"><!-- Audio player controls --><AudioPlayer/></div>",
      "components": [
        {
          "name": "AudioPlayer",
          "is_standalone": true,
          "description": "standalone component that contains the audio player controls",
          "html": "<!-- Audio player controls container --><div class=\"flex flex-row items-center justify-center mb-4\"><!-- Play/pause button --><PlayPauseButton/><!-- Volume controller --><VolumeController/><!-- Audio seek bar --><AudioSeekBar/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "standalone component that toggles play and pause states",
          "html": "<!-- Play/pause button container --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_icon} <!-- play or pause icon --></button>"
        },
        {
          "name": "VolumeController",
          "is_standalone": true,
          "description": "standalone component that allows adjusting the volume",
          "html": "<!-- Volume controller container --><div class=\"flex flex-row items-center\"><!-- Volume icon --><span class=\"text-gray-600\">{volume_icon} <!-- volume icon --></span><!-- Volume slider --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"100\" step=\"1\" value=\"{volume_level}\"/></div>"
        },
        {
          "name": "AudioSeekBar",
          "is_standalone": true,
          "description": "standalone component that displays the audio progress",
          "html": "<!-- Audio seek bar container --><div class=\"flex flex-row items-center\"><!-- Audio elapsed time --><span class=\"text-gray-600\">{elapsed_time} <!-- elapsed time --></span><!-- Audio seek bar --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"{audio_duration}\" step=\"1\" value=\"{current_time}\"/><!-- Audio remaining time --><span class=\"text-gray-600\">{remaining_time} <!-- remaining time --></span></div>"
        }
      ]
    }
  ],
  "Expanded dropdown menu displaying multiple levels of navigation or content": [
    {
      "description": "The UI should display a dropdown menu that expands to show multiple levels of navigation or content. The menu should be responsive, mobile-first, and accessible. On hover or click, the menu should expand to show the nested levels of navigation or content.",
      "html": "<nav class=\"flex justify-center\"><DropdownTrigger/><DropdownMenu><DropdownItem>Item 1</DropdownItem><DropdownItem>Item 2\n<DropdownMenu><DropdownItem>Nested Item 2.1</DropdownItem><DropdownItem>Nested Item 2.2</DropdownItem></DropdownMenu></DropdownItem><DropdownItem>Item 3</DropdownItem></DropdownMenu></nav>",
      "components": [
        {
          "name": "DropdownTrigger",
          "is_standalone": true,
          "description": "(standalone) - The trigger element to expand/collapse the dropdown menu.",
          "html": "<button class=\"bg-gray-100 hover:bg-gray-200 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{trigger_text} <span class=\"caret ml-2\"></span></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children) - The container for the dropdown menu.",
          "html": "<ul class=\"absolute bg-white shadow-md py-2 w-48\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": false,
          "description": "(takes children) - A single item in the dropdown menu, which can contain nested items.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"#\" class=\"text-gray-800\">{item_text}</a>{children}</li>"
        }
      ]
    }
  ],
  "Navigation Menu Toggle Text": [
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle text that adapts to different screen sizes. On smaller screens, the toggle text should be displayed, and on larger screens, the navigation menu should be visible.",
      "html": "<div class=\"flex justify-between items-center w-full lg:hidden\"><NavigationToggleText/><NavigationMenu><!-- navigation menu items will be inserted here --></NavigationMenu></div>",
      "components": [
        {
          "name": "NavigationToggleText",
          "is_standalone": true,
          "description": "(standalone): displays the toggle text for the navigation menu",
          "html": "<a href=\"#\" class=\"text-lg font-bold hover:text-gray-700\">{menuToggleText}</a>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "(takes children): displays the navigation menu items",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-center\"><ul class=\"lg:flex lg:flex-wrap\">{children} </ul></nav>"
        }
      ]
    },
    {
      "description": "The UI should display a toggle button to open and close a navigation menu. The toggle button should display a text indicating its current state.",
      "html": "<nav class=\"flex justify-between items-center py-4\"><NavbarToggler/><NavbarToggleText/></nav>",
      "components": [
        {
          "name": "NavbarToggler",
          "is_standalone": true,
          "description": "A standalone component that toggles the navigation menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Toggle navigation menu\"><span class=\"sr-only\">{toggleButtonText}</span></button>"
        },
        {
          "name": "NavbarToggleText",
          "is_standalone": true,
          "description": "A standalone component that displays the toggle button text.",
          "html": "<span class=\"text-sm\">{toggleButtonText}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle text that displays a toggle icon and a label. On desktop, it should be a horizontal layout, and on mobile, it should be a vertical layout.",
      "html": "<div class=\"flex lg:flex-row flex-col justify-between w-full\"><NavigationToggle/></div>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that contains the toggle icon and the label.",
          "html": "<div class=\"flex justify-center lg:justify-start mb-4 lg:mb-0\"><!-- toggle icon --><span class=\"material-icons text-lg md:text-xl\">{toggle_icon}</span><!-- toggle label --><span class=\"ml-2 text-sm md:text-base\">{toggle_label}</span></div>"
        }
      ]
    }
  ],
  "Testimonial Quote Mark": [
    {
      "description": "A beautifully designed testimonial quote mark, usually a large quotation mark that surrounds a quote or review. It adds a touch of elegance and sophistication to the overall design.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><TestimonialQuoteMark/><p class=\"text-lg font-bold\">{quote_text}</p><p class=\"text-gray-600\">{author_name}</p></div>",
      "components": [
        {
          "name": "TestimonialQuoteMark",
          "is_standalone": true,
          "description": "Standalone component that renders a large quotation mark surrounding a quote or review.",
          "html": "<span class=\"text-6xl font-bold text-gray-400\">&ldquo;</span>"
        }
      ]
    }
  ],
  "Wizards": [
    {
      "description": "The Wizard UI should be a simple, responsive, and accessible interface that guides the user through a series of steps to complete a task. It should have a clear and concise layout, with each step building upon the previous one.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><WizardHeader/><div class=\"flex flex-wrap -mx-4\"><WizardStep><WizardStepTitle/><WizardStepContent><!-- step content here --></WizardStepContent></WizardStep><!-- more wizard steps here --></div><WizardFooter/></div>",
      "components": [
        {
          "name": "WizardHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the title and navigation for the wizard.",
          "html": "<div class=\"flex justify-between mb-4\"><h1 class=\"text-2xl\">{wizard_title}</h1><nav class=\"text-sm\"><ol class=\"list-none\"><li><a href=\"#\" class=\"text-blue-600\">{step_1_title}</a></li><li><a href=\"#\" class=\"text-blue-600\">{step_2_title}</a></li><!-- more navigation items here --></ol></nav></div>"
        },
        {
          "name": "WizardStep",
          "is_standalone": false,
          "description": "A component that takes children, representing a single step in the wizard.",
          "html": "<div class=\"wizard-step p-4 mb-4\">{children}</div>"
        },
        {
          "name": "WizardStepTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of a wizard step.",
          "html": "<h2 class=\"text-lg\">{step_title}</h2>"
        },
        {
          "name": "WizardStepContent",
          "is_standalone": false,
          "description": "A component that takes children, representing the content of a wizard step.",
          "html": "<div class=\"wizard-step-content\">{children}</div>"
        },
        {
          "name": "WizardFooter",
          "is_standalone": true,
          "description": "A standalone component that displays the navigation and actions for the wizard.",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"btn btn-primary\">{primary_action}</button><button class=\"btn btn-secondary\">{secondary_action}</button></div>"
        }
      ]
    }
  ],
  "Product Feature Description": [
    {
      "description": "The UI should display a product feature description, which includes a headline, a brief description, and a call-to-action (CTA) button. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6\"><FeatureDescriptionContainer><FeatureHeadline/><FeatureDescription/><CallToActionButton/></FeatureDescriptionContainer></div>",
      "components": [
        {
          "name": "FeatureHeadline",
          "is_standalone": true,
          "description": "Standalone component, displays the headline of the product feature.",
          "html": "<h2 class=\"text-lg font-bold\">{feature_headline}</h2>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "Standalone component, displays a brief description of the product feature.",
          "html": "<p class=\"text-base\">{feature_description}</p>"
        },
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "Standalone component, displays a call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        },
        {
          "name": "FeatureDescriptionContainer",
          "is_standalone": false,
          "description": "Container component, takes children (FeatureHeadline, FeatureDescription, and CallToActionButton).",
          "html": "<div class=\"flex flex-col gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a product feature description, consisting of a header, a brief summary, and a detailed description. It should be responsive, readable, and easy to understand on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProductHeader/><SummarySection><!-- summary content --></SummarySection><DescriptionSection><!-- detailed description content --></DescriptionSection></div>",
      "components": [
        {
          "name": "ProductHeader",
          "is_standalone": true,
          "description": "Standalone, displays the product name and icon.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{product_icon}\" alt=\"Product Icon\" class=\"w-12 h-12 mr-4\"/><h2 class=\"text-lg font-bold\">{product_name}</h2></div>"
        },
        {
          "name": "SummarySection",
          "is_standalone": false,
          "description": "Takes children, displays a brief summary of the product feature.",
          "html": "<section class=\"mb-6\"><h3 class=\"text-lg font-bold mb-2\">{summary_header}</h3><p>{summary_text}</p>{children}</section>"
        },
        {
          "name": "DescriptionSection",
          "is_standalone": false,
          "description": "Takes children, displays a detailed description of the product feature.",
          "html": "<section class=\"mb-6\"><h3 class=\"text-lg font-bold mb-2\">{description_header}</h3><p>{description_text}</p>{children}</section>"
        }
      ]
    },
    {
      "description": "The UI should display a brief description of a product feature, including an icon, a title, and a short paragraph of text.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><ProductFeatureDescription/></div>",
      "components": [
        {
          "name": "ProductFeatureDescription",
          "is_standalone": true,
          "description": "A standalone component that displays a brief description of a product feature.",
          "html": "<div class=\"flex flex-wrap mb-4\"><Icon/><div class=\"ml-4\"><FeatureTitle/><FeatureDescription/></div></div>"
        },
        {
          "name": "Icon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon.",
          "html": "<i class=\"fas fa-{icon_name} text-2xl text-{icon_color} mr-4\"/>"
        },
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the feature.",
          "html": "<h3 class=\"text-lg font-bold\">{feature_title}</h3>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "A standalone component that displays a short paragraph of text describing the feature.",
          "html": "<p class=\"text-sm text-gray-600\">{feature_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a product feature description, which includes a title, a brief description, and a call-to-action (CTA) button. The title should be prominent and centered, while the description should beconcise and easily readable. The CTA button should be prominent and inviting.",
      "html": "<section class=\"max-w-lg mx-auto py-12\"><ProductFeatureDescription/></section>",
      "components": [
        {
          "name": "ProductFeatureDescription",
          "is_standalone": true,
          "description": "standalone component that contains a title, description, and CTA button.",
          "html": "<div class=\"flex flex-col items-center justify-center\"><Title/><Description/><CTAButton/></div>"
        },
        {
          "name": "Title",
          "is_standalone": true,
          "description": "standalone component that displays the title of the product feature.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title}</h2>"
        },
        {
          "name": "Description",
          "is_standalone": true,
          "description": "standalone component that displays the brief description of the product feature.",
          "html": "<p class=\"text-lg mb-8\">{description}</p>"
        },
        {
          "name": "CTAButton",
          "is_standalone": true,
          "description": "standalone component that displays a call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Featured Image Zoom Level": [
    {
      "description": "The UI should display a featured image with a zoom level indicator, allowing users to zoom in or out of the image. The image should be responsive, adapting to different screen sizes and devices. The zoom level indicator should be visually appealing and easy to use.",
      "html": "<div class=\"flex justify-center\"><FeaturedImage/><ZoomControl><button>+</button><button>-</button></ZoomControl><ZoomLevelIndicator/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "a standalone component that displays the featured image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-full object-cover\"/>"
        },
        {
          "name": "ZoomLevelIndicator",
          "is_standalone": true,
          "description": "a standalone component that displays the zoom level indicator.",
          "html": "<p>Zoom: {zoom_level}%</p>"
        },
        {
          "name": "ZoomControl",
          "is_standalone": false,
          "description": "a component that takes children (e.g., zoom in and zoom out buttons).",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Gradients (linear)": [
    {
      "description": "The UI should display a container with a linear gradient background, with two colors transitioning from top to bottom.",
      "html": "<div class=\"h-screen w-full\"><GradientContainer/></div>",
      "components": [
        {
          "name": "GradientContainer",
          "is_standalone": true,
          "description": "a standalone component that displays a linear gradient background.",
          "html": "<div class=\"bg-gradient-to-b from-{top_color} to-{bottom_color} h-full w-full\"></div>"
        }
      ]
    }
  ],
  "Header Logo Image": [
    {
      "description": "The UI should display a logo image in the header section of the website. The logo image should be responsive and centered within its container.",
      "html": "<header class=\"mx-auto p-4\"><HeaderLogo/></header>",
      "components": [
        {
          "name": "HeaderLogo",
          "is_standalone": true,
          "description": "A standalone component that displays a logo image.",
          "html": "<img src={logo_url} alt=\"Logo\" class=\"h-8 md:h-12 w-auto mx-auto\"/>"
        }
      ]
    }
  ],
  "Game Trailer and Video Embeds": [
    {
      "description": "The UI should consist of a full-bleed video trailer section that takes up the full width and height of the screen, with a responsive design that adapts to different screen sizes. The video trailer should be embedded in an iframe with a 16:9 aspect ratio. There should be a placeholder for a game title and a call-to-action button below the video.",
      "html": "<div class=\"container mx-auto p-4 md:p-8\"><VideoTrailerSection/><div class=\"flex justify-center mb-4\"><GameTitle/></div><div class=\"flex justify-center\"><CallToActionButton/></div></div>",
      "components": [
        {
          "name": "VideoTrailerSection",
          "is_standalone": true,
          "description": "(standalone): A full-bleed section that contains the video trailer.",
          "html": "<div class=\"aspect-w-16 aspect-h-9 mb-4\"><iframe src=\"{video_url}\" frameborder=\"0\" allowfullscreen></iframe></div>"
        },
        {
          "name": "GameTitle",
          "is_standalone": true,
          "description": "(standalone): A heading element that displays the game title.",
          "html": "<h1 class=\"text-3xl font-bold\">{game_title}</h1>"
        },
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "(standalone): A button element that displays a call-to-action.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{call_to_action_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a game trailer video with a title, description, and a responsive video embed that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TrailerContainer><TrailerTitle/><VideoEmbed/><TrailerDescription/></TrailerContainer></div>",
      "components": [
        {
          "name": "VideoEmbed",
          "is_standalone": true,
          "description": "(standalone) - A responsive video embed component that adapts to different screen sizes.",
          "html": "<div class=\"aspect-video w-full h-full\"><iframe src={`https://www.youtube.com/embed/${video_id}`} frameborder=\"0\" allowfullscreen class=\"w-full h-full\"/></div>"
        },
        {
          "name": "TrailerTitle",
          "is_standalone": true,
          "description": "(standalone) - A component that displays the title of the game trailer.",
          "html": "<h2 class=\"text-3xl font-bold\">{trailer_title}</h2>"
        },
        {
          "name": "TrailerDescription",
          "is_standalone": true,
          "description": "(standalone) - A component that displays a brief description of the game trailer.",
          "html": "<p class=\"text-lg\">{trailer_description}</p>"
        },
        {
          "name": "TrailerContainer",
          "is_standalone": false,
          "description": "(takes children) - A container component that wraps the video embed, title, and description.",
          "html": "<div class=\"flex flex-col justify-center items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Hero Section with Form": [
    {
      "description": "A hero section with a background image, a heading, a paragraph of text, and a form with input fields and a submit button. The form should be centered and responsive.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><HeroContent/><form><FormInputs/><SubmitButton/></form></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"absolute w-full h-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"text-center mb-8\"><h1 class=\"text-3xl md:text-4xl lg:text-5xl\">{hero_heading}</h1><p class=\"text-lg md:text-xl lg:text-2xl\">{hero_text}</p></div>"
        },
        {
          "name": "FormInputs",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><input class=\"w-full p-2 mb-2\" type=\"text\" placeholder=\"Name:\"/><input class=\"w-full p-2 mb-2\" type=\"email\" placeholder=\"Email:\"/><input class=\"w-full p-2 mb-2\" type=\"tel\" placeholder=\"Phone:\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"w-full p-2 bg-orange-500 hover:bg-orange-700 text-white\">Submit</button>"
        }
      ]
    }
  ],
  "Tweet analytics for engagement metrics": [
    {
      "description": "The UI should be a dashboard displaying tweet analytics for engagement metrics. It should show the number of likes, retweets, replies, and engagements for a tweet.",
      "html": "<div class=\" container mx-auto p-4 pt-6 md:p-6\"><TweetAnalyticsCard/></div>",
      "components": [
        {
          "name": "TweetAnalyticsCard",
          "is_standalone": true,
          "description": "standalone component displaying the tweet analytics",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><h2 class=\"text-lg font-bold\">Tweet Analytics</h2><ul class=\"list-none mb-0\"><MetricItem>Likes: {likes} </MetricItem><MetricItem>Retweets: {retweets} </MetricItem><MetricItem>Replies: {replies} </MetricItem><MetricItem>Engagements: {engagements} </MetricItem></ul></div>"
        },
        {
          "name": "MetricItem",
          "is_standalone": false,
          "description": "takes children, displays a single metric (e.g. likes, retweets, etc.)",
          "html": "<li class=\"flex items-center mb-2\"><span class=\"mr-2\">{icon}</span><span>{children}</span></li>"
        }
      ]
    }
  ],
  "Dropdown Menu Item Icon Color": [
    {
      "description": "The UI should be a dropdown menu item with an icon, where the icon's color can be customized.",
      "html": "<nav class=\"flex justify-center\"><ul class=\"flex flex-col\"><li><DropdownMenuItem><DropdownMenuItemIcon/><span>Menu Item 1</span></DropdownMenuItem></li></ul></nav>",
      "components": [
        {
          "name": "DropdownMenuItemIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon with a customizable color.",
          "html": "<i class=\"w-4 h-4 {icon_color}\" aria-hidden=\"true\">{icon_name}</i>"
        },
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "A component that takes children, wraps the `DropdownMenuItemIcon` component, and displays a dropdown menu item with text.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\">{children}</li>"
        }
      ]
    }
  ],
  "Footer Social Media Link": [
    {
      "description": "The UI should be a responsive footer with social media links. The links should be aligned horizontally on desktop and vertically on mobile. Each link should have an icon representing the social media platform.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><div class=\"max-w-md mx-auto\"><Footer><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></Footer></div></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "(standalone) - A single social media link with an icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon} text-2xl mx-2 text-gray-600 hover:text-gray-900 transition duration-300\"></i></a>"
        },
        {
          "name": "Footer",
          "is_standalone": false,
          "description": "(takes children) - The footer component containing the social media links.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</div>"
        }
      ]
    }
  ],
  "Product Images/Zoom": [
    {
      "description": "The UI should display a product image with a zoom feature, allowing users to hover or click on the image to view a larger, zoomed-in version of the product.",
      "html": "<div class=\"container mx-auto p-4 md:p-8\"><ProductImage/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component that displays a product image with a zoom feature.",
          "html": "<div class=\"relative\"><img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-full object-cover\"/><div class=\"absolute top-0 left-0 w-full h-full bg-black bg-opacity-50 hover:bg-opacity-75 transition duration-300\"><ZoomedImage/></div></div>"
        },
        {
          "name": "ZoomedImage",
          "is_standalone": true,
          "description": "A standalone component that displays a larger, zoomed-in version of the product image.",
          "html": "<img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-full object-contain\"/>"
        }
      ]
    }
  ],
  "Featured Product Title": [
    {
      "description": "The UI should display a prominent title highlighting a featured product. It should be visually appealing, responsive, and accessible.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturedProductTitle/></section>",
      "components": [
        {
          "name": "FeaturedProductTitle",
          "is_standalone": true,
          "description": "Standalone component that displays a highlighted title.",
          "html": "<h2 class=\"text-3xl font-bold mb-4 text-primary\">{product_title}</h2>"
        }
      ]
    }
  ],
  "Shipping and delivery options": [
    {
      "description": "The UI should display shipping and delivery options in a clear and organized manner. It should be responsive, easy to read, and accessible on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionsList><DeliveryOptionCard/><DeliveryOptionCard/><!-- Add more DeliveryOptionCard components as needed --></ShippingOptionsList></section>",
      "components": [
        {
          "name": "DeliveryOptionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single delivery option.",
          "html": "<article class=\"border p-4 mb-4\"><h3 class=\"text-lg font-bold\">{option_name}</h3><p>{description}</p><p>Estimated delivery time: {delivery_time}</p><p>Cost: {cost}</p><!-- Add more details as needed --></article>"
        },
        {
          "name": "ShippingOptionsList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of delivery options.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of shipping and delivery options with their respective details, such as names, prices, and estimated delivery times. The UI should be responsive, with a mobile-first design that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h2 class=\"text-2xl font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionList><!-- shipping options will be rendered here --></ShippingOptionList></div>",
      "components": [
        {
          "name": "ShippingOptionList",
          "is_standalone": false,
          "description": "a component that takes children, which is a list of `ShippingOptionCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Post list with title, score, and comments": [
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    },
    {
      "description": "A list of posts with each item displaying the title, score, and number of comments. The list should be responsive, with a maximum of 3 items per row on larger screens and 1 item per row on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-2xl font-bold mb-4\">Post List</h1><PostList><!-- list of post items --></PostList></div>",
      "components": [
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the list of post items.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Hero Background Image Size": [
    {
      "description": "The UI should feature a hero section with a background image that takes up the full width and height of the viewport, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"h-screen w-full\"><HeroSection/></div>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone) - The main hero section component that contains the background image.",
          "html": "<section class=\"h-full w-full bg-cover bg-center\" style={`background-image: url(${heroImage})`}><!-- content goes here --></section>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background image that scales responsively to fit different screen sizes.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><HeroContent/></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "standalone component that displays the background image",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${imageUrl})` }}/>"
        },
        {
          "name": "HeroContent",
          "is_standalone": true,
          "description": "standalone component that displays content on top of the background image",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-xl text-white\"><h1>{heroHeaderText}</h1><p>{heroDescriptionText}</p></div>"
        }
      ]
    }
  ],
  "Mention display for tagged users": [
    {
      "description": "The UI should display a list of users with tags, allowing users to be mentioned in a post or comment. Each user should be displayed with their username and a tag icon.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Mentioned Users</h2><TaggedUserList><!-- list of tagged users will be rendered here --></TaggedUserList></div>",
      "components": [
        {
          "name": "TaggedUserList",
          "is_standalone": false,
          "description": "A component that takes children, rendering a list of `TaggedUser` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A list of tagged users, each with their username and a \"Remove tag\" button.",
      "html": "<ul class=\"list-none mb-4\"><li class=\"flex justify-between mb-2\"><TaggedUser/></li><!-- more tagged users here --></ul>",
      "components": [
        {
          "name": "TaggedUser",
          "is_standalone": true,
          "description": "A standalone component displaying a single tagged user's information.",
          "html": "<span class=\"mr-2\">{username}</span><RemoveButton/>"
        },
        {
          "name": "RemoveButton",
          "is_standalone": true,
          "description": "A standalone component representing the \"Remove tag\" button.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Remove tag</button>"
        }
      ]
    }
  ],
  "Venue information display": [
    {
      "description": "The UI should display venue information, including the venue name, address, and a description. The layout should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><VenueInfo/></div>",
      "components": [
        {
          "name": "VenueInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the venue information.",
          "html": "<div class=\"flex flex-col gap-4\"><VenueName/><VenueAddress/><VenueDescription/></div>"
        },
        {
          "name": "VenueName",
          "is_standalone": true,
          "description": "a standalone component that displays the venue name.",
          "html": "<h2 class=\"text-2xl font-bold\">{venue_name}</h2>"
        },
        {
          "name": "VenueAddress",
          "is_standalone": true,
          "description": "a standalone component that displays the venue address.",
          "html": "<p class=\"text-lg\">{venue_address}</p>"
        },
        {
          "name": "VenueDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the venue description.",
          "html": "<p class=\"text-lg\">{venue_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should display venue information, including the venue name, address, capacity, and a map. The design should be clean and minimalistic, with clear typography and sufficient white space.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><VenueInfo/><VenueMap/></div>",
      "components": [
        {
          "name": "VenueInfo",
          "is_standalone": true,
          "description": "Standalone component that displays venue information (name, address, capacity).",
          "html": "<div class=\"mb-4\"><h2 class=\"text-lg font-bold\">{venue_name}</h2><p class=\"text-gray-600\">{venue_address}</p><p class=\"text-gray-600\">Capacity: {venue_capacity}</p></div>"
        },
        {
          "name": "VenueMap",
          "is_standalone": true,
          "description": "Standalone component that displays a map of the venue location.",
          "html": "<div class=\"h-64 w-full overflow-hidden rounded\"><!-- Map will be rendered here --><iframe src=\"{map_url}\" frameborder=\"0\" width=\"100%\" height=\"100%\"></iframe></div>"
        }
      ]
    },
    {
      "description": "The UI should display the essential information about a venue, including its name, address, and a brief description. The layout should be responsive, mobile-first, and accessible, with clear typography and sufficient whitespace.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><VenueHeader/><VenueDescription/></div>",
      "components": [
        {
          "name": "VenueHeader",
          "is_standalone": true,
          "description": "Standalone component to display the venue's name and address.",
          "html": "<div class=\"flex justify-between mb-2\"><h2 class=\"text-lg font-bold\">{venue_name}</h2><p class=\"text-gray-600\">{venue_address}</p></div>"
        },
        {
          "name": "VenueDescription",
          "is_standalone": true,
          "description": "Standalone component to display a brief description of the venue.",
          "html": "<p class=\"text-gray-600\">{venue_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should display venue information, including the venue name, address, contact details, and a description. The design should be responsive, mobile-first, and accessible. The layout should be clean and easy to read.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><VenueInformationDisplay/></div>",
      "components": [
        {
          "name": "VenueInformationDisplay",
          "is_standalone": true,
          "description": "(standalone) - The main component that displays the venue information.",
          "html": "<div class=\" flex flex-col gap-4\"><VenueName/><AddressSection/><ContactDetails/><DescriptionSection/></div>"
        },
        {
          "name": "VenueName",
          "is_standalone": true,
          "description": "(standalone) - Displays the name of the venue.",
          "html": "<h2 class=\"text-2xl font-bold\">{venue_name}</h2>"
        },
        {
          "name": "AddressSection",
          "is_standalone": true,
          "description": "(standalone) - Displays the address of the venue.",
          "html": "<div class=\"flex flex-col gap-2\"><h3 class=\"text-lg font-bold\">Address</h3><p>{street_address}</p><p>{city}, {state} {zip_code}</p></div>"
        },
        {
          "name": "ContactDetails",
          "is_standalone": true,
          "description": "(standalone) - Displays the contact details of the venue.",
          "html": "<div class=\"flex flex-col gap-2\"><h3 class=\"text-lg font-bold\">Contact</h3><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        },
        {
          "name": "DescriptionSection",
          "is_standalone": true,
          "description": "(standalone) - Displays a brief description of the venue.",
          "html": "<div class=\"flex flex-col gap-2\"><h3 class=\"text-lg font-bold\">About</h3><p>{venue_description}</p></div>"
        }
      ]
    }
  ],
  "Testimonial Author Title": [
    {
      "description": "The UI should display a testimonial author title, which typically appears below a quote or testimonial text. The title should be visually distinct from the quote text, with a smaller font size and a different font style. The title should also be responsive, adapting to different screen sizes.",
      "html": "<div class=\"flex flex-col items-center mb-4\"><!-- Quote or testimonial text --><blockquote class=\"text-lg italic mb-2\">{testimonial_text}</blockquote><TestimonialAuthorTitle/></div>",
      "components": [
        {
          "name": "TestimonialAuthorTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the author's title.",
          "html": "<p class=\"text-sm font-bold\">{author_title}</p>"
        }
      ]
    }
  ],
  "Sponsorship packages display": [
    {
      "description": "The UI should display a list of sponsorship packages, each with a title, description, and price. The list should be responsive, with a single column on mobile devices and multiple columns on larger screens. Each package should have a clear title, a brief description, and a prominent price display.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-3xl font-bold mb-4\">Sponsorship Packages</h2><SponsorshipPackageList><SponsorshipPackage/><SponsorshipPackage/><SponsorshipPackage/></SponsorshipPackageList></div>",
      "components": [
        {
          "name": "SponsorshipPackage",
          "is_standalone": true,
          "description": "A standalone component that displays a single sponsorship package.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{packageName}</h3><p class=\"text-gray-600\">{packageDescription}</p><p class=\"text-lg font-bold\">{packagePrice}</p></div>"
        },
        {
          "name": "SponsorshipPackageList",
          "is_standalone": false,
          "description": "A component that takes children (a list of `SponsorshipPackage` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a series of sponsorship packages, each containing details such as package name, description, price, and benefits. The design should be clean, modern, and responsive, with clear typography and sufficient whitespace. The layout should adapt to different screen sizes, with a mobile-first approach.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-3xl font-bold mb-4\">Sponsorship Packages</h2><SponsorshipPackageList><!-- package cards will be inserted here --></SponsorshipPackageList></div>",
      "components": [
        {
          "name": "SponsorshipPackageList",
          "is_standalone": false,
          "description": "(takes children): a container for a list of sponsorship packages",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    }
  ],
  "Company Logo Icon": [
    {
      "description": "The UI should be a simple icon that displays the company logo. It should be responsive, mobile-first, and accessible.",
      "html": "/nav><CompanyLogoIcon/></nav>",
      "components": [
        {
          "name": "CompanyLogoIcon",
          "is_standalone": true,
          "description": "A standalone component that displays the company logo.",
          "html": "<a href=\"{homepage_url}\"><img src=\"{logo_url}\" alt=\"Company Logo\" class=\"w-8 h-8 md:w-10 md:h-10 rounded-full\"/></a>"
        }
      ]
    }
  ],
  "Product Description Bullet": [
    {
      "description": "A product description bullet point with a brief description and optional link to learn more.",
      "html": "<ul class=\"list-none mb-4\"><ProductDescriptionBullet/></ul>",
      "components": [
        {
          "name": "ProductDescriptionBullet",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<li class=\"flex items-start mb-2\"><span class=\"text-gray-600 mr-2\">{bullet_icon}</span><span class=\"text-sm\">{description} {learn_more_link}</span></li>"
        }
      ]
    },
    {
      "description": "The UI should display a bullet point with a product description. The bullet point should be a simple icon, and the product description should be a short sentence or phrase.",
      "html": "<div class=\"flex items-center\"><BulletPoint/><DescriptionText/></div>",
      "components": [
        {
          "name": "BulletPoint",
          "is_standalone": true,
          "description": "(standalone): Displays a bullet point icon.",
          "html": "<span class=\"text-xl\">•</span>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": true,
          "description": "(standalone): Displays the product description.",
          "html": "<p class=\"text-lg\">{description_text}</p>"
        }
      ]
    }
  ],
  "Social Media Share Button": [
    {
      "description": "A social media share button should be a rectangular button with an icon representing the social media platform and a text \"Share\" or the platform's name. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaShareButton/></div>",
      "components": [
        {
          "name": "SocialMediaShareButton",
          "is_standalone": true,
          "description": "(standalone): The main share button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><SocialMediaIcon/><span class=\"ml-2\">{platform_name}</span></button>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": true,
          "description": "(standalone): The icon component representing the social media platform.",
          "html": "<i class=\"fab fa-{social_media_platform} mr-2\" aria-hidden=\"true\"></i>"
        }
      ]
    },
    {
      "description": "The UI should be a social media share button that allows users to share content on various social media platforms. The button should be responsive, mobile-first, and accessible. It should have a neutral background color and a prominent call-to-action (CTA) to encourage users to share. The button should also display the social media platform's logo and a brief text indicating the platform's name.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaShareButton/></div>",
      "components": [
        {
          "name": "SocialMediaShareButton",
          "is_standalone": true,
          "description": "(standalone): The main button component that contains the social media platform's logo and text.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><SocialMediaIcon/><SocialMediaText/></button>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": true,
          "description": "(standalone): The social media platform's logo.",
          "html": "<img src={social_media_logo_url} alt={social_media_platform_name} class=\"h-4 w-4 mr-2\"/>"
        },
        {
          "name": "SocialMediaText",
          "is_standalone": true,
          "description": "(standalone): The brief text indicating the social media platform's name.",
          "html": "<span>{social_media_platform_name}</span>"
        }
      ]
    }
  ],
  "Page Content Header Image": [
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    }
  ],
  "Alert Notification Text": [
    {
      "description": "The UI should display a notification text with a background color, text color, and optional close button.",
      "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 p-4 mb-4\"><NotificationText/>{hasCloseButton && <CloseButton/>}\n</div>",
      "components": [
        {
          "name": "NotificationText",
          "is_standalone": true,
          "description": "standalone component that displays the notification text",
          "html": "<p class=\"text-sm\">{notification_text}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "standalone component that displays a close button (optional)",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">×</button>"
        }
      ]
    }
  ],
  "User Profiles and Achievements": [
    {
      "description": "The UI should display a user's profile information and achievements in a clean and modern layout. The profile section should show the user's name, profile picture, and bio. The achievements section should display a list of badges or icons representing the user's accomplishments.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileCard/><h2 class=\"text-lg font-bold mb-2\">Achievements</h2><AchievementList><AchievementBadge/><AchievementBadge/><!-- more AchievementBadge components here --></AchievementList></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile information.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src={profile_picture_url} class=\"w-16 h-16 rounded-full\" alt=\"Profile Picture\"/><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{bio}</p></div>"
        },
        {
          "name": "AchievementBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single achievement badge.",
          "html": "<div class=\"bg-yellow-100 rounded p-2\"><img src={badge_icon_url} class=\"w-8 h-8\" alt=\"Achievement Badge\"/><span class=\"text-sm\">{badge_name}</span></div>"
        },
        {
          "name": "AchievementList",
          "is_standalone": false,
          "description": "A component that takes children (a list of `AchievementBadge` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Social Media Feed": [
    {
      "description": "The social media feed should be a scrollable list of posts, each displaying the user's profile picture, name, post content, and any accompanying media (e.g. images, videos). The feed should be responsive, with posts stacking vertically on smaller screens and displaying in a masonry layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Social Media Feed</h2><div class=\"flex flex-wrap -mx-2\"><SocialMediaPost/><SocialMediaPost/><!-- add more posts here --></div></div>",
      "components": [
        {
          "name": "SocialMediaPost",
          "is_standalone": true,
          "description": "a standalone component representing a single post in the feed",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 px-2 mb-4\"><UserProfilePicture/><div class=\"px-4 py-2\"><h3 class=\"text-lg font-bold\">{username}</h3><PostContent/><MediaThumbnail/></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "a standalone component displaying a user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"w-12 h-12 rounded-full mr-2\"/>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "a standalone component displaying the text content of a post",
          "html": "<p>{post_content}</p>"
        },
        {
          "name": "MediaThumbnail",
          "is_standalone": true,
          "description": "a standalone component displaying a thumbnail for an image or video",
          "html": "<img src=\"{media_thumbnail_url}\" alt=\"Thumbnail for {media_type}\" class=\"w-full h-48 object-cover rounded\"/>"
        }
      ]
    }
  ],
  "Notification bell for new updates": [
    {
      "description": "The UI should be a simple notification bell icon with a red badge indicating the number of new updates. The icon should be clickable, and when clicked, it should display a dropdown list of new updates.",
      "html": "<div class=\"relative inline-block\"><NotificationBell/><div class=\"absolute top-0 right-0 mt-2 mr-2\"><UpdateList><!-- update items will be rendered here --></UpdateList></div></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "A standalone component that renders a clickable bell icon with a red badge indicating the number of new updates.",
          "html": "<div class=\"cursor-pointer\"><i class=\"fas fa-bell text-lg text-gray-600\"></i><span class=\"bg-red-500 text-white rounded-full px-2 py-1\">{new_updates_count}</span></div>"
        },
        {
          "name": "UpdateList",
          "is_standalone": false,
          "description": "A component that takes children, which are individual update items.",
          "html": "<ul class=\"bg-white shadow-md py-2\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    },
    {
      "description": "A notification bell icon with a badge indicating the number of new updates.",
      "html": "<nav><ul><li><NotificationBell/></li></ul></nav>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "(standalone) - The bell icon with a badge indicating new updates.",
          "html": "<a href=\"#\" class=\"relative\"><i class=\"fas fa-bell\">{/* bell icon */}</i><Badge/></a>"
        },
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "(standalone) - A small circle displaying the number of new updates.",
          "html": "<span class=\"absolute top-0 right-0 -mr-2 px-1 bg-red-500 text-white rounded-full text-xs\">{new_update_count}</span>"
        }
      ]
    }
  ],
  "Popover that appears in response to user actions, offering additional options or information": [
    {
      "description": "The UI should be a responsive popover that appears when a user interacts with an element, providing additional options or information. It should be accessible, mobile-friendly, and have a clean design.",
      "html": "<div class=\"relative inline-block\"><PopoverTrigger><!-- trigger element, e.g. a button --><button>Click me!</button></PopoverTrigger><PopoverContent><!-- popover content here --></PopoverContent></div>",
      "components": [
        {
          "name": "PopoverTrigger",
          "is_standalone": false,
          "description": "(takes children): The component that triggers the popover when interacted with.",
          "html": "<div class=\"cursor-pointer\">{children}</div>"
        },
        {
          "name": "PopoverContent",
          "is_standalone": false,
          "description": "(takes children): The content of the popover.",
          "html": "<div class=\"absolute z-10 bg-white py-2 px-4 rounded shadow-md\">{children} <span class=\"absolute top-0 right-0 px-2 py-1 text-gray-600\">× </span></div>"
        }
      ]
    },
    {
      "description": "A small, interactive popup that appears when the user clicks on a specific element (e.g., a button or an icon). The popover should have a subtle animation and a slight shadow to give it a sense of depth. The background should be a light color with dark text, and the overall design should be minimalistic and modern.",
      "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\"><PopoverTrigger/></button><div class=\"fixed inset-0 z-50\"><PopoverContent><!-- popover content goes here --></PopoverContent></div>",
      "components": [
        {
          "name": "PopoverTrigger",
          "is_standalone": true,
          "description": "(standalone): The element that triggers the popover when clicked.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">{trigger_text}</button>"
        },
        {
          "name": "PopoverContent",
          "is_standalone": false,
          "description": "(takes children): The actual popover content that appears when the trigger is clicked.",
          "html": "<div class=\"bg-white shadow-md p-4 w-64 rounded\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive popover that appears when triggered by a user action, such as a click or hover. The popover should display additional options or information related to the trigger element. It should be accessible, with a clear visual connection to the trigger element, and should not obstruct other interactive elements on the page.",
      "html": "<div class=\"flex justify-center\"><PopoverTrigger/><PopoverContent><!-- Popover content goes here --></PopoverContent></div>",
      "components": [
        {
          "name": "PopoverTrigger",
          "is_standalone": true,
          "description": "(standalone): The element that triggers the popover when interacted with.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{popover_trigger_text}</button>"
        },
        {
          "name": "PopoverContent",
          "is_standalone": false,
          "description": "(takes children): The container that holds the additional options or information.",
          "html": "<div class=\"absolute z-10 bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Hero Header with Background Image": [
    {
      "description": "The UI should be a hero header with a full-width background image that takes up the entire screen on mobile devices and scales down to a fixed height on larger screens. The header should also contain a heading and a button.",
      "html": "<div class=\"h-screen md:h-96 w-full\"><HeroHeader/></div>",
      "components": [
        {
          "name": "HeroHeader",
          "is_standalone": true,
          "description": "standalone component that contains the background image, heading, and button.",
          "html": "<div class=\"relative h-full w-full\"><div class=\"absolute inset-0\"><img src=\"{background_image_url}\" alt=\"Hero background image\" class=\"w-full h-full object-cover\"/></div><div class=\"container mx-auto p-4 pt-6 md:pt-12\"><HeroHeading/><HeroCTA/></div></div>"
        },
        {
          "name": "HeroHeading",
          "is_standalone": true,
          "description": "standalone component that contains the heading text.",
          "html": "<h1 class=\"text-3xl md:text-5xl font-bold\">{hero_heading_text}</h1>"
        },
        {
          "name": "HeroCTA",
          "is_standalone": true,
          "description": "standalone component that contains the call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    },
    {
      "description": "A hero header with a background image that takes up the full width of the screen and has a maximum height of the viewport. The header should have a title and a subtitle.",
      "html": "<section class=\"h-screen w-full relative\"><HeroHeader/></section>",
      "components": [
        {
          "name": "HeroHeader",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}><div class=\"absolute inset-0 flex items-center justify-center\"><div class=\"max-w-md\"><HeroTitle/><HeroSubtitle/></div></div></div>"
        },
        {
          "name": "HeroTitle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-4xl font-bold\">{hero_title}</h1>"
        },
        {
          "name": "HeroSubtitle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-lg\">{hero_subtitle}</p>"
        }
      ]
    }
  ],
  "Comment Section": [
    {
      "description": "The comment section should display a list of comments with the commenter's name, profile picture, comment text, and a timestamp. The section should be responsive, with the profile picture and commenter's name on the same line on larger screens, and stacked on top of each other on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-lg font-bold mb-4\">Comments</h2><CommentList><CommentCard/><CommentCard/><!-- Add more CommentCard components here --></CommentList></div>",
      "components": [
        {
          "name": "CommentCard",
          "is_standalone": true,
          "description": "(standalone): A single comment with the commenter's name, profile picture, comment text, and timestamp.",
          "html": "<div class=\"flex items-start mb-4\"><img src=\"{profile_picture_url}\" alt=\"{commenter_name}\" class=\"w-12 h-12 rounded-full mr-4\"/><div><h3 class=\"text-sm font-bold\">{commenter_name}</h3><p class=\"text-sm\">{comment_text}</p><p class=\"text-xs text-gray-500\">{timestamp}</p></div></div>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "(takes children): A list of `CommentCard` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Game Tiles and Grids": [
    {
      "description": "The UI should display a grid of game tiles. Each tile should have a unique background color, a number indicating the tile's value, and an optional \"locked\" indicator.",
      "html": "<div class=\"grid grid-cols-4 gap-4\"><GameGrid/></div>",
      "components": [
        {
          "name": "GameGrid",
          "is_standalone": true,
          "description": "A standalone component that displays a grid of game tiles.",
          "html": "<div class=\"flex flex-wrap justify-center\">{/* an 4x4 grid of GameTile components */ } <GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/></div>"
        },
        {
          "name": "GameTile",
          "is_standalone": false,
          "description": "A component that takes children (the tile's value and optional \"locked\" indicator) and displays a single game tile.",
          "html": "<div class={`h-16 w-16 bg-${tile_color} rounded-md flex justify-center items-center`}><p class=\"text-lg\">{tile_value}</p>{locked && <span class=\"text-xs\">(Locked)</span>} {children}</div>"
        }
      ]
    }
  ],
  "Event listing": [
    {
      "description": "The event listing UI should display a list of upcoming events with their respective details such as title, date, time, location, and a brief description. The UI should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Upcoming Events</h1><EventListing><!-- Event cards will be inserted here --></EventListing></section>",
      "components": [
        {
          "name": "EventListing",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of events.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The event listing UI should display a list of events with essential details, such as the event title, date, location, and a brief description. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<main class=\"container mx-auto p-4 pt-6 md:pt-12\"><h1 class=\"text-3xl font-bold mb-4\">Upcoming Events</h1><EventListing><!-- list of EventCard components will be rendered here --></EventListing></main>",
      "components": [
        {
          "name": "EventListing",
          "is_standalone": false,
          "description": "A component that takes children (a list of `EventCard` components) and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Hero Background Color": [
    {
      "description": "The UI should have a hero section with a background color that takes up the full width of the screen.",
      "html": "<section class=\"h-screen w-full\"><HeroBackground/></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "a standalone component that displays a background color.",
          "html": "<div class=\"h-full w-full bg-{background_color}\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section that takes up the full width and height of the viewport, with a background color that covers the entire hero section.",
      "html": "<div class=\"min-h-screen w-full\"><HeroBackground/></div>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "(standalone): The background color of the hero section.",
          "html": "<div class=\"min-h-screen w-full bg-hero-background\"></div>"
        }
      ]
    }
  ],
  "Availability and Pricing Calendars": [
    {
      "description": "The UI should display a calendar for availability and pricing, showing the dates and corresponding prices. It should have a title, a month selector, and a grid of days with prices.",
      "html": "<div class=\"flex flex-col\"><CalendarTitle/><MonthSelector/><AvailabilityGrid><!-- grid of days with prices --><DayCell/><DayCell/><DayCell/><!-- repeat for each day of the month --></AvailabilityGrid></div>",
      "components": [
        {
          "name": "CalendarTitle",
          "is_standalone": true,
          "description": "Standalone component to display the title of the calendar.",
          "html": "<h2 class=\"text-2xl font-bold\">{calendar_title}</h2>"
        },
        {
          "name": "MonthSelector",
          "is_standalone": true,
          "description": "Standalone component to select the month.",
          "html": "<select class=\"py-2 pl-2 pr-4 text-gray-700\"><option value=\"January\">{month_name}</option><!-- repeat for each month --></select>"
        },
        {
          "name": "AvailabilityGrid",
          "is_standalone": false,
          "description": "Component that takes children to render the grid of days with prices.",
          "html": "<table class=\"w-full\"><tbody><tr>{children} </tr></tbody></table>"
        },
        {
          "name": "DayCell",
          "is_standalone": true,
          "description": "Standalone component to render a single day with its price.",
          "html": "<td class=\"px-2 py-1 border border-gray-200\"><span class=\"text-sm\">{day_number}</span><span class=\"text-xs\">{day_price}</span></td>"
        }
      ]
    }
  ],
  "Hashtag and @Mention Links": [
    {
      "description": "The UI should display a list of hashtag and @mention links, with each link displaying a unique identifier (e.g., #hashtag or @username). The links should be styled differently to distinguish between hashtags and @mentions.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><h2 class=\"text-lg font-bold\">Links</h2><LinkList><HashtagLink/><!-- displays a hashtag link --><MentionLink/><!-- displays an @mention link --><!-- add more links as needed --></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "a standalone component displaying a hashtag link.",
          "html": "<a href `{hashtag_url}` class=\"text-blue-600 hover:text-blue-900\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "a standalone component displaying an @mention link.",
          "html": "<a href `{mention_url}` class=\"text-orange-600 hover:text-orange-900\">@{username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "a component that takes children, displaying a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links. The links should be styled with a subtle background color and underline on hover. The text should be black with a decent font size. The list should be responsive and stack vertically on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone): A single hashtag link component.",
          "html": "<a href={hashtag_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone): A single @mention link component.",
          "html": "<a href={mention_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{mention_username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children): A container component that holds a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links, each link is clickable and can be styled differently.",
      "html": "<ul class=\"flex flex-wrap gap-2\"><li><HashtagLink/></li><li><MentionLink/></li><!-- more links here --></ul>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "standalone, represents a single hashtag link.",
          "html": "<a href={hashtag_link} class=\"text-blue-600 hover:text-blue-900 transition duration-300\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "standalone, represents a single @mention link.",
          "html": "<a href={mention_link} class=\"text-blue-600 hover:text-blue-900 transition duration-300\">@{mention_text}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag links and @mention links. Each link should have a distinct style to differentiate between the two types of links.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><HashtagLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone) - represents a single hashtag link",
          "html": "<a href={`/${hashtag_value}`} class=\"text-blue-500 hover:text-blue-700 transition duration-300\">#{hashtag_value}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone) - represents a single @mention link",
          "html": "<a href={`/@${username}`} class=\"text-green-500 hover:text-green-700 transition duration-300\">@{username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children) - a container for a list of links",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Message body text editor with formatting tools": [
    {
      "description": "The UI should be a text editor with a toolbar containing formatting tools such as bold, italic, underline, and font sizes. The text editor should be responsive and mobile-friendly, with a clean and minimalistic design.",
      "html": "<div class=\"flex flex-col h-screen max-h-screen overflow-y-auto p-4\"><TextEditor/></div>",
      "components": [
        {
          "name": "TextEditor",
          "is_standalone": true,
          "description": "(standalone): The main text editor component containing the text area and toolbar.",
          "html": "<div class=\"flex flex-col h-full w-full\"><Toolbar/><textarea class=\"w-full p-2 h-full overflow-y-auto resize-y\"/></div>"
        },
        {
          "name": "Toolbar",
          "is_standalone": true,
          "description": "(standalone): The toolbar component containing the formatting tools.",
          "html": "<div class=\"flex justify-center mb-2\"><ToolButton><i class=\"fas fa-bold\"/></ToolButton><ToolButton><i class=\"fas fa-italic\"/></ToolButton><ToolButton><i class=\"fas fa-underline\"/></ToolButton><ToolButton><span>Font size: {font_size}</span><select class=\"pl-2\"><option value=\"10\">10px</option><option value=\"12\">12px</option><option value=\"14\">14px</option></select></ToolButton></div>"
        },
        {
          "name": "ToolButton",
          "is_standalone": false,
          "description": "(takes children): A single tool button in the toolbar, containing an icon and optional text.",
          "html": "<button class=\"py-2 px-4 rounded-md hover:bg-gray-100\">{children}</button>"
        }
      ]
    }
  ],
  "Hashtag display for topic tracking": [
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Company Address Info": [
    {
      "description": "The UI should display a company's address information in a clean and easy-to-read format. The address should be divided into separate lines for street address, city, state, and zip code. The UI should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-white rounded shadow-md\"><AddressInfo/></div>",
      "components": [
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the company's address information.",
          "html": "<div class=\"mb-4\"><AddressLine>{street_address}</AddressLine><AddressLine>{city}, {state} {zip_code}</AddressLine></div>"
        },
        {
          "name": "AddressLine",
          "is_standalone": false,
          "description": "a component that displays a single line of the address (e.g., street address, city, state, zip code). This component takes children.",
          "html": "<p class=\"text-lg\">{children}</p>"
        }
      ]
    },
    {
      "description": "A compact, responsive section displaying a company's address information, including street address, city, state, zip, phone number, and email address.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><AddressInfo/></div>",
      "components": [
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"flex flex-wrap mb-4\"><AddressLine>{street_address}</AddressLine><AddressLine>{city}, {state} {zip}</AddressLine><ContactInfo><a href={`tel:${phone_number}`} class=\"text-indigo-600 hover:text-indigo-900\">{phone_number} </a><a href={`mailto:${email}`} class=\"text-indigo-600 hover:text-indigo-900\">{email} </a></ContactInfo></div>"
        },
        {
          "name": "AddressLine",
          "is_standalone": false,
          "description": "takes children",
          "html": "<p class=\"text-gray-600\">{children}</p>"
        },
        {
          "name": "ContactInfo",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display the company's address information in a compact and readable format, including the company name, street address, city, state, zip code, and phone number. The design should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><h2 class=\"text-lg font-bold mb-2\">Company Address</h2><CompanyAddressInfo/></div>",
      "components": [
        {
          "name": "CompanyAddressInfo",
          "is_standalone": true,
          "description": "standalone component that displays the company address information",
          "html": "<div class=\"flex-1 md:mr-4\"><h3 class=\"text-base font-bold\">{company_name}</h3><AddressDetails/><PhoneNumber/></div>"
        },
        {
          "name": "AddressDetails",
          "is_standalone": true,
          "description": "standalone component that displays the street address, city, state, and zip code",
          "html": "<div><p>{street_address}</p><p>{city}, {state} {zip_code}</p></div>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the company phone number",
          "html": "<p>Phone: {phone_number}</p>"
        }
      ]
    }
  ],
  "Loading Spinner: Animated loading indicator": [
    {
      "description": "The UI should be a circular animated loading indicator that spins to indicate that the application is loading or processing something.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"inline-block w-8 h-8 border-4 border-solid rounded-full border-white border-t-transparent animate-spin\"/>"
        }
      ]
    },
    {
      "description": "The UI should be a small, circular loading indicator that rotates to indicate that the system is busy loading data. The spinner should be centered horizontally and vertically, and should be easily accessible on all devices.",
      "html": "<div class=\"flex justify-center items-center h-screen\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full\" role=\"progressbar\" aria-valuetext=\"Loading...\"><span class=\"sr-only\">Loading...</span></div>"
        }
      ]
    }
  ],
  "Hero Section with Video": [
    {
      "description": "The UI should be a hero section with a background video that plays automatically when the page loads. The video should be muted and loop indefinitely. There should be a headline, subheading, and a call-to-action (CTA) button on top of the video. The UI should be responsive and adapt to different screen sizes.",
      "html": "<section class=\"min-h-screen relative\"><HeroVideo/><div class=\"absolute inset-0 flex items-center justify-center\"><HeroContent><HeroHeadline/><HeroSubheading/><HeroCTA/></HeroContent></div></section>",
      "components": [
        {
          "name": "HeroVideo",
          "is_standalone": true,
          "description": "A standalone component that renders a background video.",
          "html": "<video autoplay loop muted class=\"w-full h-full object-cover\"><source src=\"{video_source}\" type=\"video/mp4\">Your browser does not support the video tag.</video>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "A component that takes children, which are the headline, subheading, and CTA button.",
          "html": "<div class=\"container mx-auto p-4 md:p-8\">{children}</div>"
        },
        {
          "name": "HeroHeadline",
          "is_standalone": true,
          "description": "A standalone component that renders the headline text.",
          "html": "<h1 class=\"text-3xl md:text-5xl font-bold\">{headline_text}</h1>"
        },
        {
          "name": "HeroSubheading",
          "is_standalone": true,
          "description": "A standalone component that renders the subheading text.",
          "html": "<p class=\"text-lg md:text-2xl\">{subheading_text}</p>"
        },
        {
          "name": "HeroCTA",
          "is_standalone": true,
          "description": "A standalone component that renders the CTA button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Carousel-like element for browsing through a series of images": [
    {
      "description": "The UI should resemble a carousel, with a series of images displayed in a horizontal row. The user can navigate through the images using previous and next buttons or by clicking on dots that represent each image. The carousel should be responsive, with the images resizing to fit the container width. On smaller screens, the carousel should display a single image at a time, with navigation controls to swipe through the images.",
      "html": "<div class=\"max-w-md mx-auto p-4 sm:p-6 lg:p-8\"><CarouselContainer><ImageSlide/><ImageSlide/><ImageSlide/><!-- Add more ImageSlide components here --></CarouselContainer><CarouselNav/><CarouselDots/></div>",
      "components": [
        {
          "name": "ImageSlide",
          "is_standalone": true,
          "description": "A standalone component that displays a single image.",
          "html": "<div class=\"w-full h-64 bg-cover bg-center\" style={{ backgroundImage: `url(${image_url})` }}></div>"
        },
        {
          "name": "CarouselDots",
          "is_standalone": true,
          "description": "A standalone component that displays a series of dots, one for each image in the carousel.",
          "html": "<div class=\"flex justify-center mb-4\">{num_images} dots, where each dot is a `<span class=\"w-2 h-2 bg-gray-300 rounded-full mx-1\">`</div>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": true,
          "description": "A standalone component that displays previous and next navigation buttons.",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"text-gray-600 hover:text-gray-900\">Previous</button><button class=\"text-gray-600 hover:text-gray-900\">Next</button></div>"
        },
        {
          "name": "CarouselContainer",
          "is_standalone": false,
          "description": "A component that takes children (ImageSlide components) and displays them in a horizontal row.",
          "html": "<div class=\"flex overflow-x-hidden\">{children}</div>"
        }
      ]
    }
  ],
  "Personal interests and hobbies section with icons": [
    {
      "description": "The UI should be a responsive, mobile-first section that displays a person's interests and hobbies with accompanying icons. The section should have a clear and concise layout, with each interest or hobby listed in a grid or flexbox layout.",
      "html": "<section class=\"lg:grid lg:grid-cols-2 xl:grid-cols-3 max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests and Hobbies</h2><InterestsSection><InterestItem/><InterestItem/><InterestItem/><!-- Add more InterestItem components as needed --></InterestsSection></section>",
      "components": [
        {
          "name": "InterestItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single interest or hobby with an icon.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><i class={`w-6 h-6 text-gray-500 {icon_name}`}></i><p class=\"text-sm\">{interest_name}</p></div>"
        },
        {
          "name": "InterestsSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `InterestItem` components) and displays them in a grid or flexbox layout.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of personal interests and hobbies, each accompanied by an icon that represents the interest or hobby. The list should be responsive, with a maximum of 3 items per row on larger screens, and a single column on mobile devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests and Hobbies</h2><InterestsList><InterestItem/><InterestItem/><InterestItem/><!-- Add more InterestItem components as needed --></InterestsList></section>",
      "components": [
        {
          "name": "InterestItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single interest or hobby, consisting of an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><i class={`w-6 h-6 text-lg {icon_class}`}></i><span class=\"ml-2\">{interest_label}</span></div>"
        },
        {
          "name": "InterestsList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of `InterestItem`s.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-nowrap md:flex-row\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a section showcasing personal interests and hobbies, with icons to visually represent each interest. The section should be responsive, with a flexible layout that adapts to different screen sizes. On mobile devices, the interests should be displayed in a single column, while on larger screens, they should be displayed in a grid.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests</h2><HobbiesSection><HobbyItem/><HobbyItem/><!-- more HobbyItem components here --></HobbiesSection></section>",
      "components": [
        {
          "name": "HobbyItem",
          "is_standalone": true,
          "description": "A standalone component representing a single hobby or interest, with an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><p>{hobby_label}</p></div>"
        },
        {
          "name": "HobbiesSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `HobbyItem` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Menu that expands or \"flies out\" from a navigation item when clicked or hovered over": [
    {
      "description": "The UI should display a navigation menu item that, when clicked or hovered over, expands to show a fly-out menu with additional options.",
      "html": "<nav class=\"flex justify-center\"><NavigationItem/><!-- more navigation items --></nav>",
      "components": [
        {
          "name": "NavigationItem",
          "is_standalone": true,
          "description": "Standalone component representing a single navigation item.",
          "html": "<a href=\"#\" class=\"px-4 py-2 hover:bg-gray-100 hover:text-gray-900 transition duration-300 ease-in-out\"><span>{navigation_item_label}</span><FlyoutMenu/></a>"
        },
        {
          "name": "FlyoutMenu",
          "is_standalone": false,
          "description": "Component that takes children, representing the fly-out menu that appears when the navigation item is clicked or hovered over.",
          "html": "<div class=\"absolute bg-white border shadow-md rounded-lg p-4 hidden group-hover:block\">{children}</div>"
        },
        {
          "name": "MenuItem",
          "is_standalone": true,
          "description": "Standalone component representing a single item in the fly-out menu.",
          "html": "<a href=\"#\" class=\"block px-4 py-2 hover:bg-gray-100 hover:text-gray-900 transition duration-300 ease-in-out\"><span>{menu_item_label}</span></a>"
        }
      ]
    }
  ],
  "Countdown Timers": [
    {
      "description": "The UI should display a countdown timer showing days, hours, minutes, and seconds until a specific date and time.",
      "html": "<div class=\"flex justify-center\"><CountdownTimer/></div>",
      "components": [
        {
          "name": "CountdownTimer",
          "is_standalone": true,
          "description": "(standalone): The main countdown timer component.",
          "html": "<div class=\"flex gap-4\"><DayCounter/><span>:</span><HourCounter/><span>:</span><MinuteCounter/><span>:</span><SecondCounter/></div>"
        },
        {
          "name": "DayCounter",
          "is_standalone": true,
          "description": "(standalone): Displays the number of days.",
          "html": "<div class=\"text-4xl\">{days} <span>days</span></div>"
        },
        {
          "name": "HourCounter",
          "is_standalone": true,
          "description": "(standalone): Displays the number of hours.",
          "html": "<div class=\"text-4xl\">{hours} <span>hours</span></div>"
        },
        {
          "name": "MinuteCounter",
          "is_standalone": true,
          "description": "(standalone): Displays the number of minutes.",
          "html": "<div class=\"text-4xl\">{minutes} <span>minutes</span></div>"
        },
        {
          "name": "SecondCounter",
          "is_standalone": true,
          "description": "(standalone): Displays the number of seconds.",
          "html": "<div class=\"text-4xl\">{seconds} <span>seconds</span></div>"
        }
      ]
    }
  ],
  "Header Search Input": [
    {
      "description": "The UI should be a responsive header search input that is mobile-first, accessible, and SEO-friendly. It should have a search icon, a text input field, and a submit button.",
      "html": "<header class=\"bg-white py-4\"><SearchHeader/></header>",
      "components": [
        {
          "name": "SearchHeader",
          "is_standalone": true,
          "description": "standalone component that wraps the entire search input.",
          "html": "<div class=\"container mx-auto p-4 flex justify-center\"><SearchInput/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that contains the search icon, text input field, and submit button.",
          "html": "<div class=\"flex justify-between w-full max-w-md\"><span class=\"inline-flex items-center justify-center w-12 h-12 bg-gray-100 text-gray-500\"><i class=\"fas fa-search\"></i></span><input type=\"search\" id=\"search\" class=\"flex-1 p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_label} </button></div>"
        }
      ]
    }
  ],
  "Tweet edit button for post revisions": [
    {
      "description": "The UI should be a small, circular button with a pencil icon, indicating that it's an edit button for tweet revisions. It should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-end mb-2\"><EditButton/></div>",
      "components": [
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "A standalone component that displays an edit icon and allows users to edit a tweet revision.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded-full\"><i class=\"fas fa-pencil-alt text-sm\" aria-label=\"Edit tweet revision\"></i></button>"
        }
      ]
    }
  ],
  "Button that switches between two states or options when clicked": [
    {
      "description": "A toggle button that changes its label and/or style when clicked, switching between two states or options. The button should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ToggleButtons><ToggleButtonItem/><ToggleButtonItem/></ToggleButtons></div>",
      "components": [
        {
          "name": "ToggleButtonItem",
          "is_standalone": true,
          "description": "(standalone): Representing one toggle option.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\" <!-- Add active or inactive styles based on the toggled state -->:class=\"{ 'bg-gray-300': isActive, 'bg-gray-200': !isActive }\">{optionLabel}</button>"
        },
        {
          "name": "ToggleButtons",
          "is_standalone": false,
          "description": "(takes children): Wraps multiple `ToggleButtonItem` components.",
          "html": "<div class=\"flex flex-nowrap\">{children}</div>"
        }
      ]
    }
  ],
  "Contact information": [
    {
      "description": "The contact information UI should display the company's address, phone number, and email address in a clean and organized manner. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ContactInfo/></div>",
      "components": [
        {
          "name": "ContactInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the contact information.",
          "html": "<div class=\"flex flex-col gap-4\"><Address/><PhoneNumber/><EmailAddress/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "A standalone component that displays the company's address.",
          "html": "<p>{street_address}</p><p>{city_state_zip}</p>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "A standalone component that displays the company's phone number.",
          "html": "<p>Phone: {phone_number}</p>"
        },
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "A standalone component that displays the company's email address.",
          "html": "<p>Email: <a href={`mailto:{email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "A compact contact information section with the company's address, phone number, and email, displayed in a responsive and accessible format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-2\">Get in Touch</h2><ContactInfoList><ContactInfoBlock/><ContactInfoBlock/><ContactInfoBlock/></ContactInfoList></div>",
      "components": [
        {
          "name": "ContactInfoBlock",
          "is_standalone": true,
          "description": "(standalone): A single block of contact information.",
          "html": "<div class=\"flex mb-2\"><span class=\"mr-2\">{icon}</span><div><p class=\"text-sm\">{label}</p><p class=\"text-base\">{info}</p></div></div>"
        },
        {
          "name": "ContactInfoList",
          "is_standalone": false,
          "description": "(takes children): A list of contact information blocks.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Instructor/Author Profiles": [
    {
      "description": "The UI should display the profile information of an instructor or author, including their name, profile picture, bio, and a list of their courses or publications.",
      "html": "<div class=\"flex flex-col items-center p-4\"><ProfileHeader/><BioSection/><h2 class=\"text-lg font-bold mb-2\">Courses</h2><CourseList><!-- Course items will be rendered here --></CourseList></div>",
      "components": [
        {
          "name": "ProfileHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the profile picture and name of the instructor/author.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{name}\" class=\"w-24 h-24 rounded-full mr-4\"/><h1 class=\"text-2xl font-bold\">{name}</h1></div>"
        },
        {
          "name": "BioSection",
          "is_standalone": true,
          "description": "A standalone component that displays the bio of the instructor/author.",
          "html": "<div class=\"mb-4\"><p class=\"text-lg\">{bio}</p></div>"
        },
        {
          "name": "CourseList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of courses or publications.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Table error": [
    {
      "description": "The UI should display a table error message in a responsive, mobile-first design. The error message should be accessible and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><ErrorMessage/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "A standalone component that displays an error message.",
          "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><span class=\"block sm:inline\">{errorMessage}</span></div>"
        }
      ]
    }
  ],
  "Social Media Feed Footer": [
    {
      "description": "The Social Media Feed Footer should be a responsive footer section that displays social media links and a copyright notice. On larger screens, the social media links should be aligned to the right, while on smaller screens, they should stack vertically.",
      "html": "<footer class=\"flex flex-wrap justify-center md:justify-end py-4\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single social media link.",
          "html": "<a class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\" href=\"{social_media_url}\">{social_media_icon} {social_media_name}</a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "A standalone component that displays a copyright notice.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "A component that takes children and displays the social media links and copyright notice.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row md:justify-end\">{children}</div>"
        }
      ]
    },
    {
      "description": "The social media feed footer should be a responsive, mobile-first footer that displays social media links, a copyright notice, and an optional newsletter signup form. On mobile, the links and copyright notice should be stacked vertically, while on larger screens, they should be arranged horizontally.",
      "html": "<footer class=\"max-w-md mx-auto p-4 lg:p-6 bg-gray-200\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/><NewsletterSignup/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "standalone component that takes a social media platform name and URL as props.",
          "html": "<a href=\"{href}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{iconUrl}\" alt=\"{platformName} icon\" class=\"h-6 w-6 mx-auto lg:mx-0\"><span class=\"sr-only\">{platformName}</span></a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "standalone component that takes a copyright year and owner as props.",
          "html": "<p class=\"text-sm text-gray-600\">{copyrightYear} {ownerName}. All rights reserved.</p>"
        },
        {
          "name": "NewsletterSignup",
          "is_standalone": true,
          "description": "standalone component that takes a form action URL and optional label text as props.",
          "html": "<form action=\"{formActionUrl}\" method=\"post\"><label for=\"email\" class=\"sr-only\">Email address</label><input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email address\" class=\"w-full lg:w-auto\"><button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button></form>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "container component that takes children (e.g., `SocialMediaLink`, `CopyrightNotice`, and `NewsletterSignup`).",
          "html": "<div class=\"flex flex-wrap justify-center lg:justify-between\">{children}</div>"
        }
      ]
    }
  ],
  "Progress bar for loading": [
    {
      "description": "A horizontal progress bar that shows the progress of a task, with a fill color that grows from left to right as the task progresses.",
      "html": "<div class=\"w-full h-4 bg-gray-200 rounded\"><div class=\"bg-orange-500 h-4\" style=\"width: <progresspercentage>%\"></div><ProgressBar/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "(standalone component)",
          "html": "<!-- Only used for accessibility, hidden visually --><div aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=\"<progresspercentage>\" role=\"progressbar\"></div>"
        }
      ]
    }
  ],
  "Scroll-to-top button with smooth animation": [
    {
      "description": "The UI should be a scroll-to-top button that appears when the user scrolls down a certain distance from the top of the page. When clicked, it should smoothly animate back to the top of the page. The button should be circular, with an upward arrow icon and a subtle background color. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<!-- main content of the page --><main><!-- page content here --></main><!-- scroll-to-top button --><ScrollToTopButton/>",
      "components": [
        {
          "name": "ScrollToTopButton",
          "is_standalone": true,
          "description": "(standalone): a circular button with an upward arrow icon that, when clicked, scrolls the page back to the top.",
          "html": "<button class=\"fixed bottom-4 right-4 z-50 p-4 bg-gray-100 hover:bg-gray-200 rounded-full shadow-md transition duration-300\" title=\"Scroll to top\"><i class=\"fas fa-chevron-up\" aria-hidden=\"true\"></i><span class=\"sr-only\">Scroll to top</span></button>"
        }
      ]
    }
  ],
  "Partner logos display": [
    {
      "description": "The UI should display a list of partner logos in a row, with each logo appearing one after the other. The logos should be evenly spaced and responsive to different screen sizes.",
      "html": "<!-- Container for the partner logos --><div class=\"flex flex-wrap justify-center\"><!-- Partner logos will be inserted here --><PartnerLogos><!-- Partner logos will be inserted here --></PartnerLogos></div>",
      "components": [
        {
          "name": "PartnerLogos",
          "is_standalone": false,
          "description": "component (takes children): contains a list of `PartnerLogo` components",
          "html": "<!-- Container for multiple partner logos --><div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, horizontal list of logos from various partners. Each logo should be displayed with equal width and a slight gap in between. The list should be scrollable on mobile devices.",
      "html": "<div class=\"container mx-auto p-4 pt-8 md:p-8 md:pt-16\"><h2 class=\"text-lg font-bold mb-4\">Our Partners</h2><div class=\"flex overflow-x-auto\"><PartnerLogosList><PartnerLogo/><PartnerLogo/><!-- more PartnerLogo components here --></PartnerLogosList></div></div>",
      "components": [
        {
          "name": "PartnerLogo",
          "is_standalone": true,
          "description": "a standalone component that displays a single partner's logo",
          "html": "<a href=\"{partner_website}\" class=\"block w-24 mx-2 mb-4 md:w-32 md:mx-4\"><img src=\"{logo_url}\" alt=\"{partner_name}\" class=\"w-full\"/></a>"
        },
        {
          "name": "PartnerLogosList",
          "is_standalone": false,
          "description": "a component that takes children (PartnerLogo components) and displays them in a horizontal list",
          "html": "<div class=\"flex flex-nowrap\">{children}</div>"
        }
      ]
    }
  ],
  "Dropdown menu": [
    {
      "description": "The UI should be a dropdown menu that is hidden by default and appears when the user clicks on a button or hovering over it. The dropdown menu should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"relative inline-flex\"><DropdownButton/><DropdownMenu><DropdownMenuItem/><DropdownMenuItem/><!-- add more DropdownMenuItem here --></DropdownMenu></div>",
      "components": [
        {
          "name": "DropdownButton",
          "is_standalone": true,
          "description": "(standalone): a button that triggers the dropdown menu",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">{button_text}</button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children): a container that holds the dropdown menu items",
          "html": "<div class=\"absolute top-full left-0 w-48 bg-white shadow-md\">{children}</div>"
        },
        {
          "name": "DropdownMenuItem",
          "is_standalone": true,
          "description": "(standalone): an individual item in the dropdown menu",
          "html": "<a href=\"#\" class=\"block py-2 px-4 text-gray-600 hover:text-gray-900\">{menu_item_text}</a>"
        }
      ]
    }
  ],
  "Rich media embed with video playback and playback controls": [
    {
      "description": "The UI should be a rich media embed with a video player that has playback controls, including play/pause, volume control, and a progress bar. The video player should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><RichMediaEmbed/></div>",
      "components": [
        {
          "name": "RichMediaEmbed",
          "is_standalone": true,
          "description": "standalone component that contains the video player and playback controls.",
          "html": "<div class=\"flex flex-col h-full\"><VideoPlayer/></div>"
        },
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "standalone component that contains the video element and playback controls.",
          "html": "<div class=\"flex-grow\"><video src=\"{videoSrc}\" class=\"w-full h-full object-cover\"></video><PlaybackControls/></div>"
        },
        {
          "name": "PlaybackControls",
          "is_standalone": true,
          "description": "standalone component that contains the play/pause button, volume control, and progress bar.",
          "html": "<div class=\"flex justify-between py-2\"><button class=\"text-gray-500 hover:text-gray-700\" aria-label=\"Play/Pause\">{playPauseButtonIcon} </button><ProgressBar/><VolumeControl/></div>"
        },
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "standalone component that displays the video progress.",
          "html": "<div class=\"flex-grow w-full h-2 bg-gray-200 rounded\"><div class=\"bg-orange-500 h-2\" style={{ width: `${progressPercentage}%` }}></div></div>"
        },
        {
          "name": "VolumeControl",
          "is_standalone": true,
          "description": "standalone component that allows the user to adjust the volume.",
          "html": "<div class=\"flex items-center\"><button class=\"text-gray-500 hover:text-gray-700\" aria-label=\"Mute/Unmute\">{muteButtonIcon} </button><div class=\"h-2 w-16 bg-gray-200 rounded\"><div class=\"bg-orange-500 h-2\" style={{ width: `${volumePercentage}%` }}></div></div></div>"
        }
      ]
    }
  ],
  "Product Rating Count": [
    {
      "description": "The UI should display the total number of product ratings and the average rating, with an optional \"Write a review\" button. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductRatingCount/><AverageRating/><WriteAReviewButton/></div>",
      "components": [
        {
          "name": "ProductRatingCount",
          "is_standalone": true,
          "description": "A standalone component that displays the total number of ratings.",
          "html": "<p class=\"text-sm\">{rating_count} ratings</p>"
        },
        {
          "name": "AverageRating",
          "is_standalone": true,
          "description": "A standalone component that displays the average rating.",
          "html": "<p class=\"text-sm\">Average rating: {average_rating}/5</p>"
        },
        {
          "name": "WriteAReviewButton",
          "is_standalone": true,
          "description": "A standalone component that displays a \"Write a review\" button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Write a review</button>"
        }
      ]
    }
  ],
  "Button Group Container": [
    {
      "description": "A responsive button group container that can hold multiple buttons and is accessible on various devices.",
      "html": "<div class=\"flex flex-wrap justify-center\"><ButtonGroupContainer><Button/><!-- Button 1 --><Button/><!-- Button 2 --><Button/><!-- Button 3 --></ButtonGroupContainer></div>",
      "components": [
        {
          "name": "Button",
          "is_standalone": true,
          "description": "(standalone) - A single button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_label}</button>"
        },
        {
          "name": "ButtonGroupContainer",
          "is_standalone": false,
          "description": "(takes children) - A container that holds multiple buttons.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Header User Dropdown": [
    {
      "description": "The UI should display a dropdown menu when the user clicks on their profile picture or username in the header. The dropdown menu should contain links to the user's profile, account settings, and a logout button.",
      "html": "<header class=\"fixed top-0 left-0 w-full bg-white shadow-md\"><nav class=\"container mx-auto p-4 flex justify-between\"><!-- logo and navigation --><a href=\"#\" class=\"text-xl\">Logo</a><ul class=\"flex\"><li><a href=\"#\" class=\"mr-4\">Link 1</a></li><li><a href=\"#\" class=\"mr-4\">Link 2</a></li></ul><!-- user profile dropdown --><div class=\"relative\"><UserProfileDropdown/></div></nav></header>",
      "components": [
        {
          "name": "Header",
          "is_standalone": true,
          "description": "A standalone component that contains the header layout with a profile dropdown.",
          "html": "<nav class=\"container mx-auto p-4 flex justify-between\"><!-- logo and navigation --><a href=\"#\" class=\"text-xl\">Logo</a><ul class=\"flex\"><li><a href=\"#\" class=\"mr-4\">Link 1</a></li><li><a href=\"#\" class=\"mr-4\">Link 2</a></li></ul><!-- user profile dropdown --><div class=\"relative\"><UserProfileDropdown/></div></nav>"
        },
        {
          "name": "UserProfileDropdown",
          "is_standalone": false,
          "description": "A component that takes children and renders a dropdown menu with links to the user's profile and account settings, and a logout button.",
          "html": "<div class=\"absolute top-full right-0 w-48 bg-white shadow-md\"><ul>{children} </ul></div>"
        },
        {
          "name": "DropdownLink",
          "is_standalone": true,
          "description": "A standalone component that renders a single link inside the dropdown menu.",
          "html": "<li><a href=\"#\" class=\"block py-2 px-4\">{link_text}</a></li>"
        }
      ]
    }
  ],
  "Circular button that performs a primary action, typically found in mobile interfaces": [
    {
      "description": "A circular button with a prominent color scheme, typically found in mobile interfaces, that performs a primary action when clicked. The button should have a clear and contrasting background color, with a clear and readable font for the button text.",
      "html": "<div class=\"flex justify-center\"><CircularButton/></div>",
      "components": [
        {
          "name": "CircularButton",
          "is_standalone": true,
          "description": "A standalone component that represents the circular button.",
          "html": "<button class=\"bg-primary-500 hover:bg-primary-700 text-white font-bold py-2 px-4 rounded-full\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a circular button that performs a primary action, typically found in mobile interfaces. The button should be prominent, round, and have a clear call-to-action.",
      "html": "<button class=\"fixed bottom-0 right-0 mb-4 mr-4\"><CircleButton/></button>",
      "components": [
        {
          "name": "CircleButton",
          "is_standalone": true,
          "description": "(standalone): A circular button that performs a primary action.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">{primary_action_text}</button>"
        }
      ]
    }
  ],
  "Alert Notification Icon Color": [
    {
      "description": "The UI should be a notification icon with a colored alert indicator, indicating a notification or update. The icon should be responsive and accessible.",
      "html": "<div class=\"flex justify-center\"><NotificationIcon/></div>",
      "components": [
        {
          "name": "NotificationIcon",
          "is_standalone": true,
          "description": "- Standalone component that displays an icon with an optional alert indicator.",
          "html": "<!-- Notification icon with an optional alert indicator --><span class=\"inline-block relative\"><i class=\"fas fa-bell text-lg text-gray-600\" aria-hidden=\"true\"></i>{has_alert && <span class=\"absolute top-0 right-0 inline-block w-2 h-2 bg-{alert_color}-500 rounded-full\"></span>}</span>"
        }
      ]
    }
  ],
  "Footer Terms Link": [
    {
      "description": "A simple text link in the footer of a website that says \"Terms\" and links to a terms and conditions page.",
      "html": "<footer class=\"flex justify-center p-4\"><FooterTermsLink/></footer>",
      "components": [
        {
          "name": "FooterTermsLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href={termsUrl} class=\"text-sm text-gray-500 hover:text-gray-900 transition duration-300 ease-in-out\">Terms</a>"
        }
      ]
    }
  ],
  "Server icon and name display with dropdown menu": [
    {
      "description": "A compact display of a server icon and name with a dropdown menu that appears when the icon is clicked. The dropdown menu should contain a list of options.",
      "html": "<div class=\"flex items-center\"><ServerIconWithName/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ServerIconWithName",
          "is_standalone": true,
          "description": "A standalone component that displays a server icon and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={serverIconUrl} alt={serverName} class=\"w-6 h-6 rounded-full\"/><span class=\"ml-2 text-lg\">{serverName}</span></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children (menu items) and is initially hidden, becoming visible when the server icon is clicked.",
          "html": "<div class=\"hidden\"><ul class=\"bg-white shadow-md py-2\">{children} </ul></div>"
        }
      ]
    },
    {
      "description": "The UI should display a server icon and name, with a dropdown menu that appears when the user clicks on the icon or name.",
      "html": "<div class=\"flex items-center\"><ServerIcon/><ServerName/><div class=\"hidden lg:block\"><DropdownMenu><!-- menu items will be inserted here --></DropdownMenu></div></div>",
      "components": [
        {
          "name": "ServerIcon",
          "is_standalone": true,
          "description": "standalone component that displays a server icon",
          "html": "<i class=\"fas fa-server text-lg\"></i>"
        },
        {
          "name": "ServerName",
          "is_standalone": true,
          "description": "standalone component that displays the server name",
          "html": "<span>{server_name}</span>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "component that takes children, which are the menu items",
          "html": "<div class=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-md\">{children}</div>"
        }
      ]
    }
  ],
  "Company Email Address": [
    {
      "description": "The UI should display a company email address in a clean and readable format. The email address should be clickable, allowing users to send an email to the company. The component should be responsive, adapting to different screen sizes and devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><p class=\"text-lg font-bold\">Get in touch with us:</p><EmailAddress/></div>",
      "components": [
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href=\"mailto: {company_email_address}\" class=\"text-blue-600 hover:text-blue-900\">{company_email_address}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"mx-auto p-4 md:p-6 lg:p-8\"><EmailAddress/></div>",
      "components": [
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{company_email_address}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a label indicating that it's an email address.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><EmailLabel/><EmailAddress>{companyEmailAddress}</EmailAddress></div>",
      "components": [
        {
          "name": "EmailLabel",
          "is_standalone": true,
          "description": "A standalone component to display the label \"Email\".",
          "html": "<span class=\"text-sm text-gray-600\">Email</span>"
        },
        {
          "name": "EmailAddress",
          "is_standalone": false,
          "description": "A component that takes children to display the actual email address.",
          "html": "<a href={`mailto:${children}`} class=\"text-blue-600 hover:text-blue-800\">{children}</a>"
        }
      ]
    }
  ],
  "User Profile Card: Compact user info and profile link": [
    {
      "description": "The UI should be a compact user profile card that displays the user's profile picture, name, and a link to their profile.",
      "html": "<div class=\"bg-white rounded shadow-md p-4\"><UserProfileCard/></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "Standalone component that contains the user's profile information.",
          "html": "<div class=\"flex items-center\"><ProfilePicture/><div class=\"ml-4\"><p class=\"text-lg\">{userName}</p><ProfileLink/></div></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the user's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "ProfileLink",
          "is_standalone": true,
          "description": "Standalone component that links to the user's profile.",
          "html": "<a href={profileUrl} class=\"text-blue-600 hover:text-blue-400\">View Profile</a>"
        }
      ]
    },
    {
      "description": "A compact, responsive user profile card that displays a user's name, profile picture, and a link to their profile page.",
      "html": "<div class=\"bg-white rounded-md shadow-md p-4\"><UserProfileCard/></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that contains all the user profile information.",
          "html": "<div class=\"flex items-center mb-2\"><ProfilePicture/><div class=\"ml-4\"><Username/><ProfileLink/></div></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full object-cover object-top\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name.",
          "html": "<h2 class=\"text-lg font-bold\">{username}</h2>"
        },
        {
          "name": "ProfileLink",
          "is_standalone": true,
          "description": "A standalone component that displays a link to the user's profile page.",
          "html": "<a href={profile_url} class=\"text-blue-600 hover:text-blue-900\">View Profile</a>"
        }
      ]
    }
  ],
  "Featured Image Caption": [
    {
      "description": "The UI should display a featured image with a caption below it. The image should be responsive and take up the full width of its container. The caption should be centered and displayed in a readable font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FeaturedImage/><ImageCaption/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image.",
          "html": "<img src={image_url} alt={image_alt_text} class=\"w-full h-64 object-cover rounded-lg\"/>"
        },
        {
          "name": "ImageCaption",
          "is_standalone": false,
          "description": "A component that displays a caption, takes a string as a child.",
          "html": "<p class=\"text-center text-lg\">{children}</p>"
        }
      ]
    }
  ],
  "Feed/List View of Posts": [
    {
      "description": "The UI should be a responsive list view of posts, displaying the title, content, and metadata of each post. On smaller screens, the list items should be stacked vertically, and on larger screens, they should be displayed in a grid with multiple columns.",
      "html": "<main class=\"container mx-auto p-4\"><PostList><PostListItem/><PostListItem/><!-- add more PostListItem components here --></PostList></main>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "(standalone): a single list item representing a post",
          "html": "<article class=\"mb-4 bg-white rounded-lg shadow-md p-4\"><h2 class=\"text-lg\">{post_title}</h2><p class=\"text-gray-600\">{post_excerpt}</p><p class=\"text-sm text-gray-500\">{post_author} | {post_date}</p></article>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children): a container for the list of posts, which wraps the PostListItem components",
          "html": "<ul class=\"flex flex-wrap justify-center lg:justify-start\">{children}</ul>"
        }
      ]
    }
  ],
  "Theme selector": [
    {
      "description": "The UI should be a dropdown menu that allows users to select a theme (e.g., light, dark, system) for the application. The dropdown should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"relative inline-block\"><button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">Select Theme\n</button><ul class=\"absolute z-10 bg-white border border-gray-400 rounded\"><ThemeSelector/></ul></div>",
      "components": [
        {
          "name": "ThemeSelector",
          "is_standalone": true,
          "description": "(standalone): The main component that contains the dropdown menu.",
          "html": "<ul class=\"px-2 py-1\"><ThemeOption>Light</ThemeOption><ThemeOption>Dark</ThemeOption><ThemeOption>System</ThemeOption></ul>"
        },
        {
          "name": "ThemeOption",
          "is_standalone": false,
          "description": "(takes children): Represents a single theme option in the dropdown menu.",
          "html": "<li class=\"py-1 px-2 hover:bg-gray-100\">{children}</li>"
        }
      ]
    }
  ],
  "Dropdown Menu Item": [
    {
      "description": "The UI should be a dropdown menu item that displays a label and an optional icon. When clicked, it should reveal a dropdown menu.",
      "html": "<nav class=\"flex flex-wrap justify-center\"><DropdownMenuItem><DropdownMenuIcon/><span>{menuItemLabel}</span></DropdownMenuItem></nav>",
      "components": [
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "Takes children. A single item in a dropdown menu.",
          "html": "<li class=\"dropdown-menu-item\">{children}</li>"
        },
        {
          "name": "DropdownMenuIcon",
          "is_standalone": true,
          "description": "Standalone. An icon displayed next to the label in a dropdown menu item.",
          "html": "<i class=\"fas {iconClass} mr-2\"></i>"
        }
      ]
    }
  ],
  "Event countdown timer": [
    {
      "description": "The UI should display a countdown timer showing the days, hours, minutes, and seconds until a specific event. The timer should be centered and prominent on the page, with a clear and easy-to-read font.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><EventCountdownTimer/></div>",
      "components": [
        {
          "name": "EventCountdownTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the countdown timer.",
          "html": "<div class=\"text-center text-4xl lg:text-6xl\"><CountdownSection>{days} days</CountdownSection><CountdownSection>{hours} hours</CountdownSection><CountdownSection>{minutes} minutes</CountdownSection><CountdownSection>{seconds} seconds</CountdownSection></div>"
        },
        {
          "name": "CountdownSection",
          "is_standalone": false,
          "description": "A component that displays a single section of the countdown timer (e.g. days, hours, minutes, seconds). Takes children.",
          "html": "<div class=\"inline-block text-2xl lg:text-3xl mx-2\">{children}</div>"
        }
      ]
    }
  ],
  "Video Players/Embeds": [
    {
      "description": "The UI should display a responsive video player/embed that adapts to different screen sizes. The video player should have a maximum width and be centered horizontally on the page. The video title and video description should be displayed below the video player.",
      "html": "<div class=\"max-w-md mx-auto\"><VideoPlayer/><VideoTitle/><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "A standalone component that wraps the video player/embed.",
          "html": "<div class=\"video-player aspect-w-16 aspect-h-9\"><iframe src=\"{video_url}\" frameborder=\"0\" allowfullscreen></iframe></div>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the video title.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the video description.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        }
      ]
    }
  ],
  "Hero Overlay Opacity": [
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    }
  ],
  "Order confirmation page": [
    {
      "description": "The order confirmation page should display a success message, order details, and a call-to-action (CTA) to encourage customers to explore more products or log in to their account. The design should be clean, simple, and easy to read.",
      "html": "<main class=\"container mx-auto p-4 md:p-6\"><OrderConfirmationHeader/><section class=\"flex flex-col md:flex-row gap-4\"><OrderDetails><OrderItem/><!-- Add more OrderItem components here --></OrderDetails><CallToAction/></section></main>",
      "components": [
        {
          "name": "OrderConfirmationHeader",
          "is_standalone": true,
          "description": "Standalone component to display the success message.",
          "html": "<h1 class=\"text-3xl font-bold\">{confirmation_message}</h1>"
        },
        {
          "name": "OrderDetails",
          "is_standalone": false,
          "description": "Takes children, displays order details such as order number, date, and total.",
          "html": "<section class=\"flex-1\"><h2 class=\"text-xl font-bold\">Order Details</h2><ul class=\"divide-y divide-gray-200\"><li class=\"py-4\">{children}</li></ul></section>"
        },
        {
          "name": "OrderItem",
          "is_standalone": true,
          "description": "Standalone component to display individual order items.",
          "html": "<li class=\"flex justify-between\"><span class=\"text-gray-600\">{product_name}</span><span class=\"text-gray-600\">{quantity} x {price}</span></li>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "Standalone component to display a CTA button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Tax calculator tool": [
    {
      "description": "The UI should be a simple, easy-to-use tax calculator that allows users to input their income and select their filing status to calculate their tax liability. The UI should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><TaxCalculator/></div>",
      "components": [
        {
          "name": "TaxCalculator",
          "is_standalone": true,
          "description": "(standalone): The main tax calculator component that contains all the other components.",
          "html": "<div class=\"flex flex-col gap-4\"><IncomeInput/><FilingStatusSelect/><TaxResult/></div>"
        },
        {
          "name": "IncomeInput",
          "is_standalone": true,
          "description": "(standalone): A text input field for users to enter their income.",
          "html": "<div class=\"flex flex-col\"><label class=\"text-lg\" htmlFor=\"income\">Income:</label><input type=\"number\" id=\"income\" class=\"w-full p-2 pl-10 text-lg\"/></div>"
        },
        {
          "name": "FilingStatusSelect",
          "is_standalone": true,
          "description": "(standalone): A dropdown select field for users to select their filing status.",
          "html": "<div class=\"flex flex-col\"><label class=\"text-lg\" htmlFor=\"filing-status\">Filing Status:</label><select id=\"filing-status\" class=\"w-full p-2 pl-10 text-lg\"><option value=\"single\">Single</option><option value=\"married-jointly\">Married Filing Jointly</option><option value=\"married-separately\">Married Filing Separately</option><option value=\"head-of-household\">Head of Household</option></select></div>"
        },
        {
          "name": "TaxResult",
          "is_standalone": true,
          "description": "(standalone): A component that displays the calculated tax liability.",
          "html": "<div class=\"text-lg font-bold\">Your tax liability is: ${tax_liability}</div>"
        }
      ]
    }
  ],
  "Notification bell with unread count badge": [
    {
      "description": "A notification bell icon with a small badge displaying the number of unread notifications. The bell should be clickable, and the badge should be highlighted if there are unread notifications.",
      "html": "<NotificationBell/>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "A standalone component that wraps a clickable bell icon and an unread count badge.",
          "html": "<a href=\"{notification_href}\" class=\"flex items-center hover:bg-gray-100 rounded-md p-2\"><i class=\"fas fa-bell\"></i><Badge>{unread_count}</Badge></a>"
        },
        {
          "name": "Badge",
          "is_standalone": false,
          "description": "A component that takes children (the unread count) and displays it in a highlighted circle.",
          "html": "<span class=\"bg-orange-500 rounded-full text-white py-1 px-2 text-xs\">{children}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a notification bell icon with a small badge displaying the number of unread notifications. The badge should be positioned top-right of the bell icon.",
      "html": "<div class=\"flex items-center\"><NotificationBell/><UnreadCountBadge/></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component representing the notification bell icon.",
          "html": "<i class=\"fa fa-bell text-lg text-gray-600\"></i>"
        },
        {
          "name": "UnreadCountBadge",
          "is_standalone": true,
          "description": "standalone component displaying the number of unread notifications.",
          "html": "<div class=\"bg-red-500 text-white rounded-full text-xs p-1\">{unread_count}</div>"
        }
      ]
    }
  ],
  "Recipe cooking timer": [
    {
      "description": "A simple, minimalist design with a prominent timer display, start/stop buttons, and a small area for displaying the recipe name.",
      "html": "<div class=\"flex flex-col mx-auto p-4 max-w-md\"><RecipeHeader/><TimerContainer><TimerDisplay/><ControlButtons/></TimerContainer></div>",
      "components": [
        {
          "name": "RecipeHeader",
          "is_standalone": true,
          "description": "a standalone component displaying the recipe name.",
          "html": "<h2 class=\"text-lg font-bold\">{recipe_name}</h2>"
        },
        {
          "name": "TimerDisplay",
          "is_standalone": true,
          "description": "a standalone component displaying the current time.",
          "html": "<p class=\"text-4xl font-bold\">{mm}:{ss}</p>"
        },
        {
          "name": "ControlButtons",
          "is_standalone": true,
          "description": "a standalone component containing start and stop buttons.",
          "html": "<div class=\"flex justify-center mt-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Start</button><button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Stop</button></div>"
        },
        {
          "name": "TimerContainer",
          "is_standalone": false,
          "description": "a component that takes children, wrapping the timer display and control buttons.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Pricing table": [
    {
      "description": "The UI should be a responsive pricing table with three columns representing different pricing plans. Each column should display the plan name, price, features, and a call-to-action (CTA) button. The table should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PricingTable/></div>",
      "components": [
        {
          "name": "PricingTable",
          "is_standalone": true,
          "description": "standalone component that contains the entire pricing table",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PricingPlan/><PricingPlan/><PricingPlan/></div>"
        },
        {
          "name": "PricingPlan",
          "is_standalone": true,
          "description": "standalone component that represents a single pricing plan",
          "html": "<div class=\"w-full md:w-1/3 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg\">{plan_name}</h3><Price/><FeaturesList/><CallToActionButton/></div>"
        },
        {
          "name": "Price",
          "is_standalone": true,
          "description": "standalone component that displays the price of a pricing plan",
          "html": "<p class=\"text-2xl\">{price_text}</p>"
        },
        {
          "name": "FeaturesList",
          "is_standalone": true,
          "description": "standalone component that displays the features of a pricing plan",
          "html": "<ul class=\"list-none mb-4\"><li>{feature_1}</li><li>{feature_2}</li><li>{feature_3}</li></ul>"
        },
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "standalone component that displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Footer Social Media Icon": [
    {
      "description": "The UI should be a footer social media icon list that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. It should consist of a horizontal list of social media icons (e.g. Facebook, Twitter, Instagram, etc.) with a hover effect to change the icon color.",
      "html": "<footer class=\"px-4 pt-4 md:px-6 md:pt-6 lg:px-8 lg:pt-8\"><FooterSocialMediaIconList/></footer>",
      "components": [
        {
          "name": "FooterSocialMediaIconList",
          "is_standalone": true,
          "description": "A standalone component that contains a list of social media icons.",
          "html": "<ul class=\"flex justify-center md:flex-wrap\"><SocialMediaIcon><i class=\"fab fa-facebook-f\">{facebook_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-twitter\">{twitter_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-instagram\">{instagram_icon}</i></SocialMediaIcon><!-- Add more social media icons here --></ul>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": false,
          "description": "A component that takes children (the icon itself) and is a child of `FooterSocialMediaIconList`.",
          "html": "<li class=\"mr-4 md:mr-6 lg:mr-8\"><a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\">{children} </a></li>"
        }
      ]
    }
  ],
  "Post Card: A single post with user info and actions": [
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Footer Newsletter Submit": [
    {
      "description": "The UI should be a simple newsletter submit form in the footer of a website. It should have a text input for the email address and a submit button. The form should be responsive, mobile-first, and accessible.",
      "html": "<footer><FooterNewsletterSubmit/></footer>",
      "components": [
        {
          "name": "FooterNewsletterSubmit",
          "is_standalone": true,
          "description": "a standalone component that contains the newsletter submit form.",
          "html": "<div class=\"bg-gray-200 p-4 md:p-6 lg:p-8\"><h4 class=\"text-lg md:text-xl lg:text-2xl\">{newsletter_title}</h4><NewsletterInput/><SubmitButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "a standalone component that is a text input for the email address.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "a standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button>"
        }
      ]
    }
  ],
  "Dependancy Graph Visualization Component": [
    {
      "description": "The Dependency Graph Visualization Component should display a graph showing the relationships between different dependencies. The graph should be responsive, accessible, and mobile-friendly. The nodes in the graph should be clickable, and when clicked, the node should be highlighted and the related dependencies should be visually emphasized.",
      "html": "<div class=\"max-w-md mx-auto pt-4\"><DependencyGraphComponent><!-- graph content here --></DependencyGraphComponent></div>",
      "components": [
        {
          "name": "DependencyGraphComponent",
          "is_standalone": false,
          "description": "(takes children) - contains the graph and handles node relationships",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "TooltipComponent",
          "is_standalone": false,
          "description": "(takes children) - displays additional information when a node is hovered or clicked",
          "html": "<div class=\"absolute bg-gray-100 p-2 rounded-md\">{children}</div>"
        }
      ]
    }
  ],
  "Product Showcase with Animated Cards": [
    {
      "description": "The UI should be a product showcase with a grid of animated cards. Each card should have a hover effect and display a product image, title, and description. The grid should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ProductGrid><ProductCard/><ProductCard/><ProductCard/><!-- Add more ProductCard components here --></ProductGrid></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "(standalone): A single product card with a hover effect.",
          "html": "<div class=\"bg-white shadow-md rounded overflow-hidden transition duration-500 hover:scale-105\"><img src={product_image} alt={product_name} class=\"w-full h-48 object-cover rounded-t\"/><div class=\"p-4\"><h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p></div></div>"
        },
        {
          "name": "ProductGrid",
          "is_standalone": false,
          "description": "(takes children): A grid container that wraps multiple `ProductCard` components.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Password strength meter": [
    {
      "description": "The password strength meter UI should consist of a input field for the user to enter their password, a bar that fills up to indicate the strength of the password, and a label to indicate the strength level (e.g. \"Weak\", \"Medium\", \"Strong\").",
      "html": "<div class=\"flex flex-col gap-4\"><PasswordInput/><StrengthMeter><div class=\"bg-gray-200 h-4 w-full rounded\"></div></StrengthMeter><StrengthLabel/></div>",
      "components": [
        {
          "name": "PasswordInput",
          "is_standalone": true,
          "description": "(standalone): A input field for the user to enter their password.",
          "html": "<input type=\"password\" class=\"p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "StrengthMeter",
          "is_standalone": false,
          "description": "(takes children): A bar that fills up to indicate the strength of the password.",
          "html": "<div class=\"h-4 w-full bg-gray-200 rounded\"><div class=\"bg-{color} h-4 w-{width}\" style=\"width: {width}%;\"></div>{children}</div>"
        },
        {
          "name": "StrengthLabel",
          "is_standalone": true,
          "description": "(standalone): A label to indicate the strength level.",
          "html": "<p class=\"text-sm text-gray-600\">{strength_label}</p>"
        }
      ]
    }
  ],
  "Chatbot widget": [
    {
      "description": "The UI should be a chatbot widget that appears as a floating button on the bottom right corner of the screen. When clicked, it expands to a chat window with a header, input field, and a send button. The chat window should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"fixed bottom-4 right-4\"><ChatbotButton/></div><div class=\"hidden md:flex fixed bottom-0 right-0 p-4 bg-white rounded-lg w-64 md:w-96\"><ChatWindow><ChatHeader/><div class=\"flex flex-col p-4\"><ChatInput/><SendButton/></div></ChatWindow></div>",
      "components": [
        {
          "name": "ChatbotButton",
          "is_standalone": true,
          "description": "(standalone): a floating button that triggers the chat window",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\"><i class=\"fas fa-comment\"></i></button>"
        },
        {
          "name": "ChatWindow",
          "is_standalone": false,
          "description": "(takes children): the chat window with a header, input field, and send button",
          "html": "<div class=\"flex flex-col p-4\">{children}</div>"
        },
        {
          "name": "ChatHeader",
          "is_standalone": true,
          "description": "(standalone): the header section of the chat window",
          "html": "<header class=\"flex justify-between p-4\"><h3 class=\"text-lg\">Chatbot</h3><button class=\"text-gray-600 hover:text-gray-900\"><i class=\"fas fa-times\"></i></button></header>"
        },
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "(standalone): the input field for user input",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Type a message...\">"
        },
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "(standalone): the send button",
          "html": "<button class=\"bg-teal-500 hover:bg-teal-700 text-white font-bold py-2 px-4 rounded-full\">Send</button>"
        }
      ]
    }
  ],
  "Condensed menu or navigation bar with minimal space between items": [
    {
      "description": "A condensed navigation bar with minimal space between items, responsive and mobile-first.",
      "html": "<nav class=\"flex flex-wrap justify-center md:flex-nowrap\"><CondensedNav><CondensedNavItem/><CondensedNavItem/><CondensedNavItem/><!-- Add more items here --></CondensedNav></nav>",
      "components": [
        {
          "name": "CondensedNavItem",
          "is_standalone": true,
          "description": "` ( standalone ): A single item in the navigation bar.",
          "html": "<a href=\"{item_url}\" class=\"px-4 py-2 mx-1 text-sm hover:text-gray-600 transition duration-300 ease-in-out\">{item_name}</a>"
        },
        {
          "name": "CondensedNav",
          "is_standalone": false,
          "description": "` ( takes children ): The navigation bar that contains all the items.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-nowrap\">{children}</div>"
        }
      ]
    }
  ],
  "Rating Systems/Reviews": [
    {
      "description": "The UI should display a rating system with a maximum of 5 stars, accompanied by a numerical rating and a review text. The UI should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex flex-col md:flex-row justify-center mb-4\"><RatingContainer><RatingStars/><RatingText/><ReviewText/></RatingContainer></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays a row of rating stars",
          "html": "<div class=\"flex items-center\"><!-- 5 stars -->{/* repeat the star icon 5 times */ } <i class=\"fa fa-star text-yellow-400\" aria-hidden=\"true\"></i>{/* end repeat */ }</div>"
        },
        {
          "name": "RatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical rating",
          "html": "<p class=\"text-sm\">{rating_value} out of 5 stars</p>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): Displays the review text",
          "html": "<p class=\"text-sm\">{review_text}</p>"
        },
        {
          "name": "RatingContainer",
          "is_standalone": false,
          "description": "(takes children): Wraps around the rating components",
          "html": "<div class=\"flex flex-col md:flex-row items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a rating system with reviews, including the average rating, total number of reviews, and individual reviews with ratings and comments.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><RatingSummary/><ReviewList><Review/><Review/><!-- add more Review components as needed --></ReviewList></div>",
      "components": [
        {
          "name": "RatingSummary",
          "is_standalone": true,
          "description": "(standalone): displays the average rating and total number of reviews",
          "html": "<div class=\"flex items-center mb-4\"><div class=\"text-lg\">{average_rating}/ 5</div><span class=\"text-gray-600 text-sm\">{total_reviews} reviews</span></div>"
        },
        {
          "name": "ReviewList",
          "is_standalone": false,
          "description": "(takes children): contains a list of `Review` components",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "Review",
          "is_standalone": true,
          "description": "(standalone): displays a single review with rating and comment",
          "html": "<li class=\"mb-4\"><div class=\"flex items-center\"><div class=\"text-lg\">{rating}/ 5</div><span class=\"text-gray-600 text-sm\">{review_date}</span></div><p>{review_comment}</p></li>"
        }
      ]
    }
  ],
  "Video background": [
    {
      "description": "The UI should be a full-screen video background with a centered container that overlays on top of the video.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><OverlayContainer/></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "standalone component that renders a full-screen video background.",
          "html": "<video class=\"object-cover h-screen w-screen\" autoplay muted loop><source src={video_source} type=\"video/mp4\"/>Your browser does not support the video tag.</video>"
        },
        {
          "name": "OverlayContainer",
          "is_standalone": true,
          "description": "standalone component that renders a centered container that overlays on top of the video.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center\"><!-- add content here --></div>"
        }
      ]
    }
  ],
  "Toggle switches for settings": [
    {
      "description": "The UI should display a toggle switch with a label, allowing users to toggle a setting on or off. The toggle switch should be responsive, accessible, and follow a mobile-first approach.",
      "html": "<div class=\"flex justify-center mb-4\"><ToggleSwitch/></div>",
      "components": [
        {
          "name": "ToggleSwitch",
          "is_standalone": true,
          "description": "A standalone component that renders a toggle switch with a label.",
          "html": "<div class=\"flex items-center mb-2\"><input id=\"toggle-switch\" type=\"checkbox\" class=\"w-10 h-5 transition duration-300 rounded-full outline-none\"/><label for=\"toggle-switch\" class=\"ml-2 text-sm font-medium text-gray-900\">{label_text} </label></div>"
        }
      ]
    }
  ],
  "Share buttons": [
    {
      "description": "The UI should be a horizontal row of social media share buttons, with each button featuring the logo of a popular social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be equally spaced and have a subtle hover effect. The UI should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><ShareButtonContainer><ShareButton/><ShareButton/><ShareButton/><!-- Add more ShareButton components for each social media platform --></ShareButtonContainer></div>",
      "components": [
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "a standalone component that represents a single share button",
          "html": "<a href=\"{share_url}\" class=\"inline-block p-2 rounded-full hover:bg-gray-200 transition duration-300\"><img src=\"{social_media_logo_url}\" alt=\"{social_media_name} Share\" class=\"w-6 h-6\"/></a>"
        },
        {
          "name": "ShareButtonContainer",
          "is_standalone": false,
          "description": "a component that takes children, which will be a group of `ShareButton` components",
          "html": "<div class=\"flex justify-center space-x-2\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Image Carousel Navigation": [
    {
      "description": "The UI should be a navigation component for a featured image carousel, displaying a series of small thumbnails that allow the user to navigate to specific images in the carousel. The component should be responsive, mobile-first, and accessible.",
      "html": "<nav aria-label=\"Featured Image Carousel Navigation\"><ul class=\"flex flex-wrap justify-center mb-4\"><ImageCarouselNavigation/></ul></nav>",
      "components": [
        {
          "name": "ImageCarouselNavigation",
          "is_standalone": true,
          "description": "a standalone component that contains the navigation for the image carousel",
          "html": "<li class=\"mr-4\">{thumbnails}</li>"
        },
        {
          "name": "ThumbnailImage",
          "is_standalone": true,
          "description": "a standalone component that represents the image within a thumbnail",
          "html": "<img src={thumbnail_src} alt={thumbnail_alt} class=\"w-full h-full object-cover rounded-md\"/>"
        }
      ]
    }
  ],
  "User profile with karma, post history, and info": [
    {
      "description": "The UI should display a user's profile information, including their karma score, post history, and additional info. The profile should be divided into sections, with each section having a clear heading and concise information. The design should be clean, minimalistic, and easy to read.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><UserProfileCard/><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Post History</h2><PostHistoryList/></div><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Info</h2><InfoSection/></div></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile information, including their karma score and additional info.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h1 class=\"text-lg font-bold\">{username}</h1><p>Karma: {karma_score}</p><p>{bio}</p></div>"
        },
        {
          "name": "PostHistoryList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of the user's post history.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "PostHistoryItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single post's information, including the post title, date, and content.",
          "html": "<li class=\"py-4 border-b border-gray-200 last:border-0\"><h3 class=\"text-lg\">{post_title}</h3><p class=\"text-sm\">{post_date}</p><p>{post_content}</p></li>"
        },
        {
          "name": "InfoSection",
          "is_standalone": false,
          "description": "A component that takes children, displaying additional information about the user.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg font-bold\">Info</h2>{children}</div>"
        }
      ]
    }
  ],
  "Interactive element used for actions like submitting forms or navigating": [
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly interactive element that can be used for actions like submitting forms or navigating. It should have a clear and consistent visual design, with sufficient color contrast and clear typography.",
      "html": "<Button/>",
      "components": [
        {
          "name": "Button",
          "is_standalone": true,
          "description": "A standalone component that renders a clickable button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"{button_type}\">{button_text}</button>"
        }
      ]
    }
  ],
  "Hero Background Pattern": [
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    }
  ],
  "Geo-location Map Markers": [
    {
      "description": "A responsive map with geo-location markers displaying locations on a map. The map should be accessible, with keyboard navigation and screen reader compatibility. The UI should be mobile-first, with a clean and minimal design.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><MapContainer/></div>",
      "components": [
        {
          "name": "MapContainer",
          "is_standalone": true,
          "description": "Standalone component that wraps the map.",
          "html": "<div class=\"h-full w-full rounded-lg overflow-hidden\"><div class=\"leaflet-container\" id=\"map\"></div></div>"
        },
        {
          "name": "Marker",
          "is_standalone": true,
          "description": "Standalone component representing a location on the map.",
          "html": "<div class=\"marker\"><span class=\"marker-icon\">{marker_icon}</span><span class=\"marker-tooltip\">{marker_tooltip}</span></div>"
        },
        {
          "name": "MarkerPopup",
          "is_standalone": false,
          "description": "Component that displays information about a location when a marker is clicked. Takes children.",
          "html": "<div class=\"popup flex flex-col p-4 bg-white rounded-lg shadow-md\"><h2 class=\"text-lg font-bold\">{location_name}</h2><p>{location_description}</p>{children}</div>"
        }
      ]
    }
  ],
  "Testimonial Quote Font": [
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    }
  ],
  "Page Content Text": [
    {
      "description": "The UI should display a page content text component, which contains a heading and a paragraph of text, with proper margin and padding for readability.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><PageContentText/></div>",
      "components": [
        {
          "name": "PageContentText",
          "is_standalone": true,
          "description": "A standalone component that displays a heading and a paragraph of text.",
          "html": "<div class=\"mb-4\"><h2 class=\"text-lg font-bold mb-2\">{heading}</h2><p class=\"text-gray-600\">{text}</p></div>"
        }
      ]
    }
  ],
  "Dividers/Section Separators": [
    {
      "description": "The UI should have a horizontal divider/section separator that visually separates content sections. The divider should be a thin, horizontal line that takes up the full width of its parent container. On smaller screens, the divider should be slightly thicker to ensure visibility.",
      "html": "<div class=\"container mx-auto p-4\"><!-- content above the divider --><SectionSeparator/><!-- content below the divider --></div>",
      "components": [
        {
          "name": "SectionSeparator",
          "is_standalone": true,
          "description": "a standalone component that renders a horizontal divider",
          "html": "<hr class=\"border border-solid border-gray-300 w-full my-4 md:my-6\"/>"
        }
      ]
    }
  ],
  "Custom Field Builder: Create tailored data fields": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible interface for building custom data fields. It should consist of a header, a field-type selection section, and a field configuration section. The header should display the title \"Custom Field Builder\" and have an optional \"Save\" button. The field-type selection section should display a list of available field types (e.g., text, number, date, etc.). The field configuration section should display fields depending on the selected field type.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><HeaderComponent/><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><FieldTypeSelectorComponent/></div><div class=\"w-full md:w-1/2 xl:w-2/3 p-4\"><FieldConfiguratorComponent><!-- field configuration fields will be rendered here --></FieldConfiguratorComponent></div></div></div>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "(standalone): Displays the title and optional save button.",
          "html": "<header class=\"flex justify-between mb-4\"><h1 class=\"text-lg font-bold\">Custom Field Builder</h1><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Save</button></header>"
        },
        {
          "name": "FieldTypeSelectorComponent",
          "is_standalone": true,
          "description": "(standalone): Displays a list of available field types.",
          "html": "<ul class=\"list-none mb-4\"><li><input type=\"radio\" id=\"text-field\" name=\"field-type\" value=\"text\"/><label for=\"text-field\">Text</label></li><li><input type=\"radio\" id=\"number-field\" name=\"field-type\" value=\"number\"/><label for=\"number-field\">Number</label></li><li><input type=\"radio\" id=\"date-field\" name=\"field-type\" value=\"date\"/><label for=\"date-field\">Date</label></li><!-- more field types will be rendered here --></ul>"
        },
        {
          "name": "FieldConfiguratorComponent",
          "is_standalone": false,
          "description": "(takes children): Displays fields depending on the selected field type.",
          "html": "<!-- field configuration fields will be rendered here based on the selected field type -->{children}"
        }
      ]
    }
  ],
  "Loading spinner with animation and progress circle": [
    {
      "description": "The UI should be a responsive, mobile-first loading spinner with an animation and a progress circle. The progress circle should show the percentage of completion.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "a standalone component that displays the loading animation and progress circle.",
          "html": "<div class=\"relative w-12 h-12 mx-auto\"><!-- animation --><div class=\"animate-spin h-12 w-12 border-4 border-gray-200 rounded-full border-t-transparent\"></div><!-- progress circle --><div class=\"absolute top-0 left-0 w-12 h-12 text-lg text-gray-600\"><span>{progress}%</span></div></div>"
        }
      ]
    }
  ],
  "Social Sharing Network": [
    {
      "description": "The UI should be a responsive, mobile-first layout that displays a feed of social media posts with user avatars, usernames, post content, and social media icons for sharing and liking. The UI should be accessible and SEO-friendly.",
      "html": "<div class=\"container max-w-md mx-auto p-4 pt-6\"><h1 class=\"text-2xl font-bold mb-4\">Social Feed</h1><FeedList><FeedItem/><FeedItem/><!-- more FeedItem components here --></FeedList></div>",
      "components": [
        {
          "name": "FeedItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single social media post.",
          "html": "<div class=\"flex flex-wrap mb-4\"><UserProfile/><PostContent/><SocialMediaIcons/></div>"
        },
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "a standalone component that displays a user's avatar, username, and social media icons.",
          "html": "<div class=\"w-12 h-12 flex-shrink-0 mr-3\"><img src=\"{user_avatar_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full\"/><span class=\"text-lg\">{username}</span></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "a standalone component that displays the content of a social media post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "SocialMediaIcons",
          "is_standalone": true,
          "description": "a standalone component that displays social media icons for sharing and liking.",
          "html": "<div class=\"flex items-center justify-between\"><a href=\"{facebook_url}\" class=\"text-lg mr-2\"><i class=\"fab fa-facebook-f\"></i></a><a href=\"{twitter_url}\" class=\"text-lg mx-2\"><i class=\"fab fa-twitter\"></i></a><a href=\"{instagram_url}\" class=\"text-lg ml-2\"><i class=\"fab fa-instagram\"></i></a></div>"
        },
        {
          "name": "FeedList",
          "is_standalone": false,
          "description": "a component that takes children and displays a list of `FeedItem` components.",
          "html": "<ul class=\"list-none p-0 mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Expanded menu with multiple columns and subsections, often seen in navigation bars": [
    {
      "description": "The UI should be a responsive, multi-column navigation menu with subsections. It should have a clean and minimalistic design, with clear typography and sufficient spacing between elements. On larger screens, the menu should expand to show multiple columns, making it easy to navigate through the various sections.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><NavMenu><NavColumn><NavItem><a href=\"#\" class=\"text-lg\">Section 1</a><NavSubsection><NavItem><a href=\"#\">Subsection 1.1</a></NavItem><NavItem><a href=\"#\">Subsection 1.2</a></NavItem></NavSubsection></NavItem><NavItem><a href=\"#\">Link 2</a></NavItem></NavColumn><NavColumn><NavItem><a href=\"#\">Section 2</a></NavItem><NavItem><a href=\"#\">Link 3</a></NavItem><NavItem><a href=\"#\">Link 4</a></NavItem></NavColumn></NavMenu></div>",
      "components": [
        {
          "name": "NavMenu",
          "is_standalone": false,
          "description": "The main navigation menu component, which takes children.",
          "html": "<nav class=\"flex justify-center lg:flex-wrap\">{children}</nav>"
        },
        {
          "name": "NavItem",
          "is_standalone": false,
          "description": "A single navigation item, which takes children.",
          "html": "<li class=\"mb-4 lg:mb-8\">{children} {subsections && ( <NavSubsection>{subsections} </NavSubsection>)}</li>"
        },
        {
          "name": "NavColumn",
          "is_standalone": false,
          "description": "A column within the navigation menu, which takes children.",
          "html": "<ul class=\"list-none mb-4 lg:mb-8 lg:w-1/2 xl:w-1/3\">{children}</ul>"
        },
        {
          "name": "NavSubsection",
          "is_standalone": false,
          "description": "A subsection within a navigation item, which takes children.",
          "html": "<ul class=\"list-none pl-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Grid layout displaying smaller versions of images or content": [
    {
      "description": "The UI should display a grid layout of smaller versions of images or content, with a responsive design that adapts to different screen sizes. Each grid item should have a consistent size and spacing between them.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><GridGallery/></div>",
      "components": [
        {
          "name": "GridGallery",
          "is_standalone": true,
          "description": "(standalone): The main component that wraps the grid items.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">{/* Grid items will be inserted here */ }</div>"
        },
        {
          "name": "GridItem",
          "is_standalone": false,
          "description": "(takes children): A single item in the grid, containing the smaller version of an image or content.",
          "html": "<div class=\"w-full h-48 md:h-64 lg:h-80 overflow-hidden rounded\">{children} <!-- Image or content will be inserted here --></div>"
        }
      ]
    }
  ],
  "Location map with markers": [
    {
      "description": "The UI should be a responsive map with markers indicating specific locations. The map should be zoomable and pannable, with a clear distinction between the map and the markers.",
      "html": "<div class=\"h-screen w-full overflow-hidden\"><LocationMap/></div>",
      "components": [
        {
          "name": "LocationMap",
          "is_standalone": true,
          "description": "(standalone): The main map component that renders the map and markers.",
          "html": "<div class=\"h-full w-full overflow-hidden\"><div class=\"h-full w-full\" id=\"map\"><!-- map will be rendered here -->{markers} </div></div>"
        },
        {
          "name": "MapMarker",
          "is_standalone": false,
          "description": "(takes children): An individual marker on the map, which can have a label or other details.",
          "html": "<div class=\"absolute\" style=\"top: {marker_top}px; left: {marker_left}px;\"><div class=\"bg-red-500 h-4 w-4 rounded-full cursor-pointer\"/>{children}</div>"
        }
      ]
    }
  ],
  "Customizable Themes: Brand your interface": [
    {
      "description": "A menu with a list of theme options, where each option displays a preview of the theme and allows the user to select it.",
      "html": "<div class=\"w-full p-4 bg-gray-100 rounded\"><h2 class=\"text-lg font-bold mb-2\">Customizable Themes</h2><ThemeSelector><ThemeOption/><ThemeOption/><ThemeOption/><!-- more theme options here --></ThemeSelector></div>",
      "components": [
        {
          "name": "ThemeOption",
          "is_standalone": true,
          "description": "(standalone): a single theme option with a preview and a checkbox to select it",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"checkbox\" class=\"mr-2\"/><div class=\"w-12 h-6 bg-{theme_color} mr-2\"/><span class=\"text-sm\">{theme_name}</span></div>"
        },
        {
          "name": "ThemeSelector",
          "is_standalone": false,
          "description": "(takes children): a container for a list of theme options",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Two-Factor Auth/QR Codes": [
    {
      "description": "A simple page with a header, a section for a QR code, and a section for a 2FA code.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><AuthHeader/><div class=\"flex justify-center mb-4\"><QrCodeSection/></div><div class=\"mb-4\"><TwoFactorCode/></div></div>",
      "components": [
        {
          "name": "AuthHeader",
          "is_standalone": true,
          "description": "- standalone (header for the 2FA page)",
          "html": "<header class=\"mb-4\"><h1 class=\"text-2xl font-bold\">Two-Factor Authentication</h1></header>"
        },
        {
          "name": "QrCodeSection",
          "is_standalone": true,
          "description": "- standalone (section for displaying the QR code)",
          "html": "<section class=\"bg-white p-4 rounded shadow-md\"><img src=\"{qr_code_image_url}\" alt=\"QR Code\" class=\"w-64 h-64 mx-auto\"/><p class=\"text-sm text-gray-600\">{qr_code_instructions}</p></section>"
        },
        {
          "name": "TwoFactorCode",
          "is_standalone": true,
          "description": "- standalone (section for displaying the 2FA code)",
          "html": "<section class=\"bg-white p-4 rounded shadow-md\"><h2 class=\"text-lg font-bold\">Your 2FA Code</h2><p class=\"text-2xl\">{two_factor_code}</p><p class=\"text-sm text-gray-600\">{two_factor_code_instructions}</p></section>"
        }
      ]
    },
    {
      "description": "The UI should display a QR code and a text-based code for 2-factor authentication. The QR code should be large enough to be easily scannable, and the text-based code should be displayed below the QR code. The UI should be simple, clean, and easy to use.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><TwoFactorAuth/></div>",
      "components": [
        {
          "name": "TwoFactorAuth",
          "is_standalone": true,
          "description": "The main component that holds the QR code and text-based code. (Standalone)",
          "html": "<div class=\"flex flex-col items-center\"><QrCode/><CodeText/></div>"
        },
        {
          "name": "QrCode",
          "is_standalone": true,
          "description": "Displays the QR code. (Standalone)",
          "html": "<img src={qr_code_src} alt=\"QR Code\" class=\"w-48 h-48 md:w-64 md:h-64 lg:w-80 lg:h-80 mb-4\"/>"
        },
        {
          "name": "CodeText",
          "is_standalone": true,
          "description": "Displays the text-based code. (Standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{code_text}</p>"
        }
      ]
    }
  ],
  "Core values display": [
    {
      "description": "The UI should display a list of core values in a responsive, mobile-first design. Each value should be displayed as a card with a title, description, and icon.",
      "html": "<section class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Our Core Values</h2><CoreValuesList><CoreValueCard/><CoreValueCard/><!-- add more CoreValueCard components here --></CoreValuesList></section>",
      "components": [
        {
          "name": "CoreValueCard",
          "is_standalone": true,
          "description": "a standalone component that displays a single core value.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4 rounded\"><div class=\"flex items-center mb-2\"><i class=\"fas fa-{icon_type} text-2xl text-gray-500 mr-2\"/><h3 class=\"text-lg font-bold\">{value_title}</h3></div><p>{value_description}</p></div>"
        },
        {
          "name": "CoreValuesList",
          "is_standalone": false,
          "description": "a component that takes children, which are multiple `CoreValueCard` components.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Search Result Item Title": [
    {
      "description": "The UI should display a single search result item with a title that is accessible and responsive.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><h2 class=\"text-lg font-bold mb-2 md:mr-4\"><SearchResultItemTitle/></h2><!-- other search result item details will go here --></div>",
      "components": [
        {
          "name": "SearchResultItemTitle",
          "is_standalone": true,
          "description": "standalone component that displays the title of a search result item.",
          "html": "<a class=\"text-lg font-bold text-gray-900 hover:text-gray-700\" href=\"{result_item_url}\">{result_item_title}</a>"
        }
      ]
    }
  ],
  "Top/Bottom Navigation": [
    {
      "description": "The UI should consist of a top navigation bar and a bottom navigation bar. The top navigation bar should have a logo on the left and some navigation links on the right. The bottom navigation bar should have some navigation links.",
      "html": "<div class=\"h-screen flex flex-col\"><TopNavigationBar/><!-- main content here --><BottomNavigationBar/></div>",
      "components": [
        {
          "name": "TopNavigationBar",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<nav class=\"bg-gray-900 py-4\"><Logo/><ul class=\"flex justify-end\"><li><Link>Link 1</Link></li><li><Link>Link 2</Link></li><li><Link>Link 3</Link></li></ul></nav>"
        },
        {
          "name": "BottomNavigationBar",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<nav class=\"bg-gray-900 py-4\"><ul class=\"flex justify-between\"><li><Link>Link 4</Link></li><li><Link>Link 5</Link></li><li><Link>Link 6</Link></li></ul></nav>"
        },
        {
          "name": "Logo",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<img src={logo_url} alt=\"Logo\" class=\"h-8 w-8\"/>"
        },
        {
          "name": "Link",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<a href={href} class=\"text-white hover:text-gray-200\">{children}</a>"
        }
      ]
    }
  ],
  "Breadcrumb Current Page Text": [
    {
      "description": "The UI should display the current page text in a breadcrumb navigation, with the text being the last item in the breadcrumb trail. The text should be highlighted to indicate the current page.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex flex-wrap\"><!-- previous breadcrumb items --><li><Breadcrumb/>...</li><li aria-current=\"page\"><CurrentPageText/></li></ol></nav>",
      "components": [
        {
          "name": "Breadcrumb",
          "is_standalone": true,
          "description": "A standalone component that renders a single breadcrumb item.",
          "html": "<li><a href=\"{href}\" class=\"text-gray-500 hover:text-gray-900\">{breadcrumb_text}</a></li>"
        },
        {
          "name": "CurrentPageText",
          "is_standalone": true,
          "description": "A standalone component that renders the current page text.",
          "html": "<span aria-current=\"page\" class=\"text-gray-900\">{current_page_text}</span>"
        }
      ]
    }
  ],
  "Callout Box Text": [
    {
      "description": "The UI should be a rectangular box with a subtle background color, a bold title, and a brief text description. The text should be responsive, meaning it should adjust its size and layout according to the screen size.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"bg-gray-100 rounded-lg p-4\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h2 class=\"text-lg font-bold mb-2\">{title}</h2>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    }
  ],
  "Job application form": [
    {
      "description": "The UI should be a simple, responsive job application form with fields for name, email, phone number, resume upload, and a message. It should be easily accessible and readable on various devices.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><ApplicationHeader/><form><FormField><label for=\"name\">Name</label><input type=\"text\" id=\"name\" class=\"w-full p-2\"/></FormField><FormField><label for=\"email\">Email</label><input type=\"email\" id=\"email\" class=\"w-full p-2\"/></FormField><FormField><label for=\"phone\">Phone Number</label><input type=\"tel\" id=\"phone\" class=\"w-full p-2\"/></FormField><ResumeUpload/><FormField><label for=\"message\">Message</label><MessageField/></FormField><SubmitButton/></form></div>",
      "components": [
        {
          "name": "ApplicationHeader",
          "is_standalone": true,
          "description": "(standalone): A header component displaying the title of the job application form.",
          "html": "<h2 class=\"text-2xl font-bold mb-4\">Job Application Form</h2>"
        },
        {
          "name": "FormField",
          "is_standalone": false,
          "description": "(takes children): A wrapper component for each form field, including labels and input fields.",
          "html": "<div class=\"mb-4\"><label for=\"{inputId}\" class=\"block mb-2\">{label}</label>{children}</div>"
        },
        {
          "name": "ResumeUpload",
          "is_standalone": true,
          "description": "(standalone): A component for uploading a resume file.",
          "html": "<div class=\"mb-4\"><label for=\"resume\" class=\"block mb-2\">Resume</label><input type=\"file\" id=\"resume\" class=\"w-full p-2\"/></div>"
        },
        {
          "name": "MessageField",
          "is_standalone": true,
          "description": "(standalone): A textarea component for the applicant's message.",
          "html": "<textarea id=\"message\" class=\"w-full p-2 h-40\" placeholder=\"Write a message...\"></textarea>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "(standalone): A submit button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Apply Now</button>"
        }
      ]
    }
  ],
  "Product Feature List Title": [
    {
      "description": "The UI should display a title for a product feature list, emphasizing the title text with a large font size and prominent styling.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><FeatureListTitle/></div>",
      "components": [
        {
          "name": "FeatureListTitle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{feature_list_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a title section that displays a heading for a list of product features. It should be responsive, accessible, and SEO-friendly.",
      "html": "<header><FeatureTitle/></header>",
      "components": [
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component that displays a title for the product feature list.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title_text}</h2>"
        }
      ]
    }
  ],
  "Horizontal strip typically used for displaying badges, labels, or status indicators": [
    {
      "description": "A horizontal strip with a colored background and text, often used to display badges, labels, or status indicators.",
      "html": "<div class=\"flex justify-center mb-4\"><StatusIndicator/></div>",
      "components": [
        {
          "name": "StatusIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a colored strip with text.",
          "html": "<span class=\"inline-block bg-{color} px-2 py-1 text-sm text-white rounded\">{label}</span>"
        }
      ]
    }
  ],
  "Search Bar: Input field for searching the site": [
    {
      "description": "The UI should be a simple search bar component that consists of a text input field and a search button. The search bar should be responsive, with the search button aligned to the right of the input field on larger screens, and stacked on top of each other on smaller screens.",
      "html": "<nav class=\"max-w-md mx-auto p-4 flex justify-center\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the entire search bar UI",
          "html": "<div class=\"flex flex-wrap items-center\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that represents the text input field",
          "html": "<input type=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that represents the search button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    }
  ],
  "Tag Clouds/Folksonomy": [
    {
      "description": "The UI should display a collection of tags-cloud, with each tag having a size and color that represents its importance or frequency of use. The tags should be organized in a responsive layout that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Tag Cloud</h2><TagCloud><Tag/><Tag/>...\n</TagCloud></div>",
      "components": [
        {
          "name": "Tag",
          "is_standalone": true,
          "description": "(standalone): A single tag element that displays the tag text, with a size and color that represents its importance.",
          "html": "<a href=\"{tag_url}\" class=\"inline-block text-sm px-2 py-1 rounded {tag_color} {tag_size}\">{tag_text}</a>"
        },
        {
          "name": "TagCloud",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps multiple **Tag** components and lays them out in a responsive layout.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Hero/Banner Images": [
    {
      "description": "The UI should display a responsive hero/banner image with a adjustable height that takes the full width of the screen. The image should be centered and have a subtle overlay effect for better readability.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:pt-12 lg:pt-20\"><HeroImage/></div>",
      "components": [
        {
          "name": "HeroImage",
          "is_standalone": true,
          "description": "Standalone component that contains the hero/banner image.",
          "html": "<div class=\"h-full w-full md:h-96 lg:h-128 relative overflow-hidden\"><img src=\"{hero_image_url}\" alt=\"{hero_image_alt}\" class=\"w-full h-full object-cover object-center\"/><div class=\"absolute inset-0 bg-gray-900 opacity-50\"></div><!-- Add overlay text or other elements here --></div>"
        }
      ]
    }
  ]
}