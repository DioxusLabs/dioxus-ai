{
  "Product Rating Count": [
    {
      "description": "The UI should display the total number of product ratings and the average rating, with an optional \"Write a review\" button. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductRatingCount/><AverageRating/><WriteAReviewButton/></div>",
      "components": [
        {
          "name": "ProductRatingCount",
          "is_standalone": true,
          "description": "A standalone component that displays the total number of ratings.",
          "html": "<p class=\"text-sm\">{rating_count} ratings</p>"
        },
        {
          "name": "AverageRating",
          "is_standalone": true,
          "description": "A standalone component that displays the average rating.",
          "html": "<p class=\"text-sm\">Average rating: {average_rating}/5</p>"
        },
        {
          "name": "WriteAReviewButton",
          "is_standalone": true,
          "description": "A standalone component that displays a \"Write a review\" button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Write a review</button>"
        }
      ]
    },
    {
      "description": "The UI should display the total number of product ratings and the average rating, with an optional \"Write a review\" button. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductRatingCount/><AverageRating/><WriteAReviewButton/></div>",
      "components": [
        {
          "name": "ProductRatingCount",
          "is_standalone": true,
          "description": "A standalone component that displays the total number of ratings.",
          "html": "<p class=\"text-sm\">{rating_count} ratings</p>"
        },
        {
          "name": "AverageRating",
          "is_standalone": true,
          "description": "A standalone component that displays the average rating.",
          "html": "<p class=\"text-sm\">Average rating: {average_rating}/5</p>"
        },
        {
          "name": "WriteAReviewButton",
          "is_standalone": true,
          "description": "A standalone component that displays a \"Write a review\" button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Write a review</button>"
        }
      ]
    },
    {
      "description": "The UI should display the total number of product ratings and the average rating, with an optional \"Write a review\" button. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductRatingCount/><AverageRating/><WriteAReviewButton/></div>",
      "components": [
        {
          "name": "ProductRatingCount",
          "is_standalone": true,
          "description": "A standalone component that displays the total number of ratings.",
          "html": "<p class=\"text-sm\">{rating_count} ratings</p>"
        },
        {
          "name": "AverageRating",
          "is_standalone": true,
          "description": "A standalone component that displays the average rating.",
          "html": "<p class=\"text-sm\">Average rating: {average_rating}/5</p>"
        },
        {
          "name": "WriteAReviewButton",
          "is_standalone": true,
          "description": "A standalone component that displays a \"Write a review\" button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Write a review</button>"
        }
      ]
    },
    {
      "description": "The UI should display the total number of product ratings and the average rating, with an optional \"Write a review\" button. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductRatingCount/><AverageRating/><WriteAReviewButton/></div>",
      "components": [
        {
          "name": "ProductRatingCount",
          "is_standalone": true,
          "description": "A standalone component that displays the total number of ratings.",
          "html": "<p class=\"text-sm\">{rating_count} ratings</p>"
        },
        {
          "name": "AverageRating",
          "is_standalone": true,
          "description": "A standalone component that displays the average rating.",
          "html": "<p class=\"text-sm\">Average rating: {average_rating}/5</p>"
        },
        {
          "name": "WriteAReviewButton",
          "is_standalone": true,
          "description": "A standalone component that displays a \"Write a review\" button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Write a review</button>"
        }
      ]
    }
  ],
  "Featured Image Zoom Button": [
    {
      "description": "The UI should display a featured image with a zoom button overlaid on top of it. When the zoom button is clicked, a larger version of the image should be displayed. The zoom button should be circular and have a zoom icon (+) in the center.",
      "html": "<div class=\"relative\"><FeaturedImage/><ZoomButton/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "standalone, displays the featured image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full h-full object-cover rounded-md\"/>"
        },
        {
          "name": "ZoomButton",
          "is_standalone": true,
          "description": "standalone, displays the zoom button",
          "html": "<button class=\"absolute bottom-4 right-4 rounded-full bg-white p-2 shadow-md\"><span class=\"text-2xl\">+</span></button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured image with a zoom button overlay on top of it. The zoom button should be a circular icon with a zoom-in icon inside. When hovered, the zoom button should change its background color and cursor to indicate interactivity.",
      "html": "<div class=\"relative\"><FeaturedImage/><ZoomButton/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "Standalone component that displays the featured image.",
          "html": "<img src=\"{imageSrc}\" alt=\"{imageAlt}\" class=\"w-full h-full object-cover rounded-md\"/>"
        },
        {
          "name": "ZoomButton",
          "is_standalone": true,
          "description": "Standalone component that displays the zoom button.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-gray-200 hover:bg-gray-300 rounded-full p-2 cursor-pointer\"><span class=\"fas fa-search-plus text-lg\"></span></div>"
        }
      ]
    }
  ],
  "Team or colleagues section with photos and bios": [
    {
      "description": "The UI should display a team or colleagues section with a grid of members, each displaying a photo, name, and bio. The grid should be responsive and adapt to different screen sizes. On mobile devices, the grid should display one member per row, and on larger devices, it should display multiple members per row.",
      "html": "<section class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Our Team</h2><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><TeamMemberCard/><TeamMemberCard/><TeamMemberCard/><!-- Add more TeamMemberCard components as needed --></div></section>",
      "components": [
        {
          "name": "TeamMemberCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single team member's photo, name, and bio.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><img src={photo_url} alt={name} class=\"w-32 h-32 rounded-full mb-4\"/><h3 class=\"text-lg font-bold\">{name}</h3><p class=\"text-gray-600\">{bio}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a team or colleagues section with a grid of members, each displaying a photo, name, and bio. The grid should be responsive and adapt to different screen sizes. On mobile devices, the grid should display one member per row, and on larger devices, it should display multiple members per row.",
      "html": "<section class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Our Team</h2><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><TeamMemberCard/><TeamMemberCard/><TeamMemberCard/><!-- Add more TeamMemberCard components as needed --></div></section>",
      "components": [
        {
          "name": "TeamMemberCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single team member's photo, name, and bio.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><img src={photo_url} alt={name} class=\"w-32 h-32 rounded-full mb-4\"/><h3 class=\"text-lg font-bold\">{name}</h3><p class=\"text-gray-600\">{bio}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a section showcasing team members or colleagues with their photos and bios in a grid layout. The section should be responsive, with the grid adapting to different screen sizes. On mobile, the grid should display one column, and on larger screens, it should display multiple columns.",
      "html": "<section class=\"max-w-md mx-auto py-12\"><h2 class=\"text-3xl font-bold mb-4\">Our Team</h2><TeamSection><TeamMemberCard/><TeamMemberCard/><TeamMemberCard/><!-- add more TeamMemberCard components as needed --></TeamSection></section>",
      "components": [
        {
          "name": "TeamMemberCard",
          "is_standalone": true,
          "description": "(standalone) - displays a single team member's photo and bio.",
          "html": "<div class=\"flex flex-col items-center mb-8 md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><img src={profile_photo_url} alt=\"{name}\" class=\"w-24 h-24 rounded-full mb-4\"/><h3 class=\"text-lg font-bold\">{name}</h3><p class=\"text-gray-600\">{bio}</p></div>"
        },
        {
          "name": "TeamSection",
          "is_standalone": false,
          "description": "(takes children) - wraps the team members in a container with a header.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Notification Badge: Displays new notification count": [
    {
      "description": "A small badge that displays a count of new notifications, often placed in the top right corner of a navigation item or icon.",
      "html": "<nav><ul><li><a href=\"#\" class=\"flex items-center\"><span>Notifications</span><NotificationBadge/></a></li></ul></nav>",
      "components": [
        {
          "name": "NotificationBadge",
          "is_standalone": true,
          "description": "Standalone component that displays the notification count.",
          "html": "<div class=\"bg-red-500 text-white rounded-full px-2 py-1 text-xs\">{notificationCount}</div>"
        }
      ]
    }
  ],
  "Customer Profile: View customer details": [
    {
      "description": "A simple profile page with a header, customer information, and a call-to-action (CTA) button.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CustomerProfileHeader/><div class=\"mt-4\"><CustomerInfoSection><p><strong>Email:</strong>{customer_email}</p><p><strong>Phone:</strong>{customer_phone}</p><p><strong>Address:</strong>{customer_address}</p></CustomerInfoSection></div><div class=\"mt-6\"><CallToActionButton/></div></div>",
      "components": [
        {
          "name": "CustomerProfileHeader",
          "is_standalone": true,
          "description": "Standalone component to display the customer's profile picture and name.",
          "html": "<div class=\"flex flex-col items-center\"><img src={customer_profile_picture} class=\"w-24 h-24 rounded-full\" alt=\"Customer Profile Picture\"/><h2 class=\"text-lg font-bold\">{customer_name}</h2></div>"
        },
        {
          "name": "CustomerInfoSection",
          "is_standalone": false,
          "description": "Takes children to display customer information such as email, phone number, and address.",
          "html": "<div class=\"bg-white shadow-md p-4\">{children}</div>"
        },
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "Standalone component to render a CTA button with a customizable label.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_label}</button>"
        }
      ]
    }
  ],
  "Featured Video Controls Bar": [
    {
      "description": "The featured video controls bar should be a horizontal bar that appears below the featured video. It should have a play/pause button, a timer, and a volume control button. The bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><VideoControlsBar/></div>",
      "components": [
        {
          "name": "VideoControlsBar",
          "is_standalone": true,
          "description": "A standalone component that contains all video controls.",
          "html": "<div class=\"flex justify-between p-2 bg-gray-200 rounded\"><PlayPauseButton/><VideoTimer/><VolumeControlButton/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "A standalone button that toggles the video playback state.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_button_text}</button>"
        },
        {
          "name": "VideoTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the video playback time.",
          "html": "<p class=\"text-gray-600\">{video_current_time}/ {video_duration}</p>"
        },
        {
          "name": "VolumeControlButton",
          "is_standalone": true,
          "description": "A standalone button that controls the video volume.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">{volume_button_text}</button>"
        }
      ]
    },
    {
      "description": "The Featured Video Controls Bar is a horizontal bar that sits below a video player, providing controls for playback, volume, and fullscreen mode. It should be compact, compactible, and easily accessible on various devices.",
      "html": "<div class=\"flex justify-between items-center py-2\"><VideoPlaybackControl/><PlaybackTimeIndicator/><VideoVolumeControl/><VideoFullscreenControl/></div>",
      "components": [
        {
          "name": "VideoPlaybackControl",
          "is_standalone": true,
          "description": "A standalone component that toggles video playback.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fa fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play/Pause</span></button>"
        },
        {
          "name": "VideoVolumeControl",
          "is_standalone": true,
          "description": "A standalone component that adjusts video volume.",
          "html": "<div class=\"flex items-center\"><button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button><input type=\"range\" class=\"w-20\"/></div>"
        },
        {
          "name": "VideoFullscreenControl",
          "is_standalone": true,
          "description": "A standalone component that toggles fullscreen mode.",
          "html": "<button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-arrows-alt\" aria-hidden=\"true\"></i><span class=\"sr-only\">Toggle Fullscreen</span></button>"
        },
        {
          "name": "PlaybackTimeIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the current playback time.",
          "html": "<p class=\"text-sm\">{current_time}/ {total_time}</p>"
        }
      ]
    },
    {
      "description": "The featured video controls bar should be a horizontal bar that appears below the featured video. It should have a play/pause button, a timer, and a volume control button. The bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><VideoControlsBar/></div>",
      "components": [
        {
          "name": "VideoControlsBar",
          "is_standalone": true,
          "description": "A standalone component that contains all video controls.",
          "html": "<div class=\"flex justify-between p-2 bg-gray-200 rounded\"><PlayPauseButton/><VideoTimer/><VolumeControlButton/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "A standalone button that toggles the video playback state.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_button_text}</button>"
        },
        {
          "name": "VideoTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the video playback time.",
          "html": "<p class=\"text-gray-600\">{video_current_time}/ {video_duration}</p>"
        },
        {
          "name": "VolumeControlButton",
          "is_standalone": true,
          "description": "A standalone button that controls the video volume.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">{volume_button_text}</button>"
        }
      ]
    },
    {
      "description": "The Featured Video Controls Bar is a horizontal bar that sits below a video player, providing controls for playback, volume, and fullscreen mode. It should be compact, compactible, and easily accessible on various devices.",
      "html": "<div class=\"flex justify-between items-center py-2\"><VideoPlaybackControl/><PlaybackTimeIndicator/><VideoVolumeControl/><VideoFullscreenControl/></div>",
      "components": [
        {
          "name": "VideoPlaybackControl",
          "is_standalone": true,
          "description": "A standalone component that toggles video playback.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fa fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play/Pause</span></button>"
        },
        {
          "name": "VideoVolumeControl",
          "is_standalone": true,
          "description": "A standalone component that adjusts video volume.",
          "html": "<div class=\"flex items-center\"><button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button><input type=\"range\" class=\"w-20\"/></div>"
        },
        {
          "name": "VideoFullscreenControl",
          "is_standalone": true,
          "description": "A standalone component that toggles fullscreen mode.",
          "html": "<button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-arrows-alt\" aria-hidden=\"true\"></i><span class=\"sr-only\">Toggle Fullscreen</span></button>"
        },
        {
          "name": "PlaybackTimeIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the current playback time.",
          "html": "<p class=\"text-sm\">{current_time}/ {total_time}</p>"
        }
      ]
    },
    {
      "description": "The featured video controls bar should be a horizontal bar that appears below the featured video. It should have a play/pause button, a timer, and a volume control button. The bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><VideoControlsBar/></div>",
      "components": [
        {
          "name": "VideoControlsBar",
          "is_standalone": true,
          "description": "A standalone component that contains all video controls.",
          "html": "<div class=\"flex justify-between p-2 bg-gray-200 rounded\"><PlayPauseButton/><VideoTimer/><VolumeControlButton/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "A standalone button that toggles the video playback state.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_button_text}</button>"
        },
        {
          "name": "VideoTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the video playback time.",
          "html": "<p class=\"text-gray-600\">{video_current_time}/ {video_duration}</p>"
        },
        {
          "name": "VolumeControlButton",
          "is_standalone": true,
          "description": "A standalone button that controls the video volume.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">{volume_button_text}</button>"
        }
      ]
    },
    {
      "description": "The featured video controls bar should be a horizontal bar that appears below the featured video. It should have a play/pause button, a timer, and a volume control button. The bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><VideoControlsBar/></div>",
      "components": [
        {
          "name": "VideoControlsBar",
          "is_standalone": true,
          "description": "A standalone component that contains all video controls.",
          "html": "<div class=\"flex justify-between p-2 bg-gray-200 rounded\"><PlayPauseButton/><VideoTimer/><VolumeControlButton/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "A standalone button that toggles the video playback state.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_button_text}</button>"
        },
        {
          "name": "VideoTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the video playback time.",
          "html": "<p class=\"text-gray-600\">{video_current_time}/ {video_duration}</p>"
        },
        {
          "name": "VolumeControlButton",
          "is_standalone": true,
          "description": "A standalone button that controls the video volume.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">{volume_button_text}</button>"
        }
      ]
    },
    {
      "description": "The Featured Video Controls Bar is a horizontal bar that sits below a video player, providing controls for playback, volume, and fullscreen mode. It should be compact, compactible, and easily accessible on various devices.",
      "html": "<div class=\"flex justify-between items-center py-2\"><VideoPlaybackControl/><PlaybackTimeIndicator/><VideoVolumeControl/><VideoFullscreenControl/></div>",
      "components": [
        {
          "name": "VideoPlaybackControl",
          "is_standalone": true,
          "description": "A standalone component that toggles video playback.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fa fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play/Pause</span></button>"
        },
        {
          "name": "VideoVolumeControl",
          "is_standalone": true,
          "description": "A standalone component that adjusts video volume.",
          "html": "<div class=\"flex items-center\"><button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button><input type=\"range\" class=\"w-20\"/></div>"
        },
        {
          "name": "VideoFullscreenControl",
          "is_standalone": true,
          "description": "A standalone component that toggles fullscreen mode.",
          "html": "<button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-arrows-alt\" aria-hidden=\"true\"></i><span class=\"sr-only\">Toggle Fullscreen</span></button>"
        },
        {
          "name": "PlaybackTimeIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the current playback time.",
          "html": "<p class=\"text-sm\">{current_time}/ {total_time}</p>"
        }
      ]
    },
    {
      "description": "The featured video controls bar should be a horizontal bar that appears below the featured video. It should have a play/pause button, a timer, and a volume control button. The bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><VideoControlsBar/></div>",
      "components": [
        {
          "name": "VideoControlsBar",
          "is_standalone": true,
          "description": "A standalone component that contains all video controls.",
          "html": "<div class=\"flex justify-between p-2 bg-gray-200 rounded\"><PlayPauseButton/><VideoTimer/><VolumeControlButton/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "A standalone button that toggles the video playback state.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_button_text}</button>"
        },
        {
          "name": "VideoTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the video playback time.",
          "html": "<p class=\"text-gray-600\">{video_current_time}/ {video_duration}</p>"
        },
        {
          "name": "VolumeControlButton",
          "is_standalone": true,
          "description": "A standalone button that controls the video volume.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">{volume_button_text}</button>"
        }
      ]
    },
    {
      "description": "The Featured Video Controls Bar is a horizontal bar that sits below a video player, providing controls for playback, volume, and fullscreen mode. It should be compact, compactible, and easily accessible on various devices.",
      "html": "<div class=\"flex justify-between items-center py-2\"><VideoPlaybackControl/><PlaybackTimeIndicator/><VideoVolumeControl/><VideoFullscreenControl/></div>",
      "components": [
        {
          "name": "VideoPlaybackControl",
          "is_standalone": true,
          "description": "A standalone component that toggles video playback.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fa fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play/Pause</span></button>"
        },
        {
          "name": "VideoVolumeControl",
          "is_standalone": true,
          "description": "A standalone component that adjusts video volume.",
          "html": "<div class=\"flex items-center\"><button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button><input type=\"range\" class=\"w-20\"/></div>"
        },
        {
          "name": "VideoFullscreenControl",
          "is_standalone": true,
          "description": "A standalone component that toggles fullscreen mode.",
          "html": "<button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-arrows-alt\" aria-hidden=\"true\"></i><span class=\"sr-only\">Toggle Fullscreen</span></button>"
        },
        {
          "name": "PlaybackTimeIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the current playback time.",
          "html": "<p class=\"text-sm\">{current_time}/ {total_time}</p>"
        }
      ]
    },
    {
      "description": "The featured video controls bar should be a horizontal bar that appears below the featured video. It should have a play/pause button, a timer, and a volume control button. The bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex justify-center mb-4\"><VideoControlsBar/></div>",
      "components": [
        {
          "name": "VideoControlsBar",
          "is_standalone": true,
          "description": "A standalone component that contains all video controls.",
          "html": "<div class=\"flex justify-between p-2 bg-gray-200 rounded\"><PlayPauseButton/><VideoTimer/><VolumeControlButton/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "A standalone button that toggles the video playback state.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_button_text}</button>"
        },
        {
          "name": "VideoTimer",
          "is_standalone": true,
          "description": "A standalone component that displays the video playback time.",
          "html": "<p class=\"text-gray-600\">{video_current_time}/ {video_duration}</p>"
        },
        {
          "name": "VolumeControlButton",
          "is_standalone": true,
          "description": "A standalone button that controls the video volume.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">{volume_button_text}</button>"
        }
      ]
    },
    {
      "description": "The Featured Video Controls Bar is a horizontal bar that sits below a video player, providing controls for playback, volume, and fullscreen mode. It should be compact, compactible, and easily accessible on various devices.",
      "html": "<div class=\"flex justify-between items-center py-2\"><VideoPlaybackControl/><PlaybackTimeIndicator/><VideoVolumeControl/><VideoFullscreenControl/></div>",
      "components": [
        {
          "name": "VideoPlaybackControl",
          "is_standalone": true,
          "description": "A standalone component that toggles video playback.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fa fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play/Pause</span></button>"
        },
        {
          "name": "VideoVolumeControl",
          "is_standalone": true,
          "description": "A standalone component that adjusts video volume.",
          "html": "<div class=\"flex items-center\"><button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-volume-up\" aria-hidden=\"true\"></i></button><input type=\"range\" class=\"w-20\"/></div>"
        },
        {
          "name": "VideoFullscreenControl",
          "is_standalone": true,
          "description": "A standalone component that toggles fullscreen mode.",
          "html": "<button class=\"bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\"><i class=\"fa fa-arrows-alt\" aria-hidden=\"true\"></i><span class=\"sr-only\">Toggle Fullscreen</span></button>"
        },
        {
          "name": "PlaybackTimeIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the current playback time.",
          "html": "<p class=\"text-sm\">{current_time}/ {total_time}</p>"
        }
      ]
    }
  ],
  "Search bar for finding videos": [
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "A simple search bar with a search input and a search button. The search bar should be centered on the page and should be responsive.",
      "html": "<div class=\"flex justify-center pt-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains a search input and a search button.",
          "html": "<div class=\"flex items-center bg-white rounded-md shadow-md p-2\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that renders an input field.",
          "html": "<input type=\"search\" class=\"w-full pl-2 py-2 rounded-md\" placeholder=\"Search for videos\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that renders a button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\">Search</button>"
        }
      ]
    },
    {
      "description": "The search bar should be a compact input field with a search icon and a submit button. It should be responsive, taking up the full width on mobile devices and adjusting to a wider layout on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-8\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and submit button.",
          "html": "<div class=\"flex items-center w-full\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders the input field.",
          "html": "<input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-lg\" placeholder=\"Find a video...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders the submit button and search icon.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    }
  ],
  "Footer Social Media Icon": [
    {
      "description": "The UI should be a footer social media icon list that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. It should consist of a horizontal list of social media icons (e.g. Facebook, Twitter, Instagram, etc.) with a hover effect to change the icon color.",
      "html": "<footer class=\"px-4 pt-4 md:px-6 md:pt-6 lg:px-8 lg:pt-8\"><FooterSocialMediaIconList/></footer>",
      "components": [
        {
          "name": "FooterSocialMediaIconList",
          "is_standalone": true,
          "description": "A standalone component that contains a list of social media icons.",
          "html": "<ul class=\"flex justify-center md:flex-wrap\"><SocialMediaIcon><i class=\"fab fa-facebook-f\">{facebook_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-twitter\">{twitter_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-instagram\">{instagram_icon}</i></SocialMediaIcon><!-- Add more social media icons here --></ul>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": false,
          "description": "A component that takes children (the icon itself) and is a child of `FooterSocialMediaIconList`.",
          "html": "<li class=\"mr-4 md:mr-6 lg:mr-8\"><a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\">{children} </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a footer social media icon list that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. It should consist of a horizontal list of social media icons (e.g. Facebook, Twitter, Instagram, etc.) with a hover effect to change the icon color.",
      "html": "<footer class=\"px-4 pt-4 md:px-6 md:pt-6 lg:px-8 lg:pt-8\"><FooterSocialMediaIconList/></footer>",
      "components": [
        {
          "name": "FooterSocialMediaIconList",
          "is_standalone": true,
          "description": "A standalone component that contains a list of social media icons.",
          "html": "<ul class=\"flex justify-center md:flex-wrap\"><SocialMediaIcon><i class=\"fab fa-facebook-f\">{facebook_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-twitter\">{twitter_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-instagram\">{instagram_icon}</i></SocialMediaIcon><!-- Add more social media icons here --></ul>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": false,
          "description": "A component that takes children (the icon itself) and is a child of `FooterSocialMediaIconList`.",
          "html": "<li class=\"mr-4 md:mr-6 lg:mr-8\"><a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\">{children} </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a footer social media icon list that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. It should consist of a horizontal list of social media icons (e.g. Facebook, Twitter, Instagram, etc.) with a hover effect to change the icon color.",
      "html": "<footer class=\"px-4 pt-4 md:px-6 md:pt-6 lg:px-8 lg:pt-8\"><FooterSocialMediaIconList/></footer>",
      "components": [
        {
          "name": "FooterSocialMediaIconList",
          "is_standalone": true,
          "description": "A standalone component that contains a list of social media icons.",
          "html": "<ul class=\"flex justify-center md:flex-wrap\"><SocialMediaIcon><i class=\"fab fa-facebook-f\">{facebook_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-twitter\">{twitter_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-instagram\">{instagram_icon}</i></SocialMediaIcon><!-- Add more social media icons here --></ul>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": false,
          "description": "A component that takes children (the icon itself) and is a child of `FooterSocialMediaIconList`.",
          "html": "<li class=\"mr-4 md:mr-6 lg:mr-8\"><a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\">{children} </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a footer social media icon list that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. It should consist of a horizontal list of social media icons (e.g. Facebook, Twitter, Instagram, etc.) with a hover effect to change the icon color.",
      "html": "<footer class=\"px-4 pt-4 md:px-6 md:pt-6 lg:px-8 lg:pt-8\"><FooterSocialMediaIconList/></footer>",
      "components": [
        {
          "name": "FooterSocialMediaIconList",
          "is_standalone": true,
          "description": "A standalone component that contains a list of social media icons.",
          "html": "<ul class=\"flex justify-center md:flex-wrap\"><SocialMediaIcon><i class=\"fab fa-facebook-f\">{facebook_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-twitter\">{twitter_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-instagram\">{instagram_icon}</i></SocialMediaIcon><!-- Add more social media icons here --></ul>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": false,
          "description": "A component that takes children (the icon itself) and is a child of `FooterSocialMediaIconList`.",
          "html": "<li class=\"mr-4 md:mr-6 lg:mr-8\"><a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\">{children} </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a footer social media icon list that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. It should consist of a horizontal list of social media icons (e.g. Facebook, Twitter, Instagram, etc.) with a hover effect to change the icon color.",
      "html": "<footer class=\"px-4 pt-4 md:px-6 md:pt-6 lg:px-8 lg:pt-8\"><FooterSocialMediaIconList/></footer>",
      "components": [
        {
          "name": "FooterSocialMediaIconList",
          "is_standalone": true,
          "description": "A standalone component that contains a list of social media icons.",
          "html": "<ul class=\"flex justify-center md:flex-wrap\"><SocialMediaIcon><i class=\"fab fa-facebook-f\">{facebook_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-twitter\">{twitter_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-instagram\">{instagram_icon}</i></SocialMediaIcon><!-- Add more social media icons here --></ul>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": false,
          "description": "A component that takes children (the icon itself) and is a child of `FooterSocialMediaIconList`.",
          "html": "<li class=\"mr-4 md:mr-6 lg:mr-8\"><a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\">{children} </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a footer social media icon list that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. It should consist of a horizontal list of social media icons (e.g. Facebook, Twitter, Instagram, etc.) with a hover effect to change the icon color.",
      "html": "<footer class=\"px-4 pt-4 md:px-6 md:pt-6 lg:px-8 lg:pt-8\"><FooterSocialMediaIconList/></footer>",
      "components": [
        {
          "name": "FooterSocialMediaIconList",
          "is_standalone": true,
          "description": "A standalone component that contains a list of social media icons.",
          "html": "<ul class=\"flex justify-center md:flex-wrap\"><SocialMediaIcon><i class=\"fab fa-facebook-f\">{facebook_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-twitter\">{twitter_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-instagram\">{instagram_icon}</i></SocialMediaIcon><!-- Add more social media icons here --></ul>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": false,
          "description": "A component that takes children (the icon itself) and is a child of `FooterSocialMediaIconList`.",
          "html": "<li class=\"mr-4 md:mr-6 lg:mr-8\"><a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\">{children} </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a footer social media icon list that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. It should consist of a horizontal list of social media icons (e.g. Facebook, Twitter, Instagram, etc.) with a hover effect to change the icon color.",
      "html": "<footer class=\"px-4 pt-4 md:px-6 md:pt-6 lg:px-8 lg:pt-8\"><FooterSocialMediaIconList/></footer>",
      "components": [
        {
          "name": "FooterSocialMediaIconList",
          "is_standalone": true,
          "description": "A standalone component that contains a list of social media icons.",
          "html": "<ul class=\"flex justify-center md:flex-wrap\"><SocialMediaIcon><i class=\"fab fa-facebook-f\">{facebook_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-twitter\">{twitter_icon}</i></SocialMediaIcon><SocialMediaIcon><i class=\"fab fa-instagram\">{instagram_icon}</i></SocialMediaIcon><!-- Add more social media icons here --></ul>"
        },
        {
          "name": "SocialMediaIcon",
          "is_standalone": false,
          "description": "A component that takes children (the icon itself) and is a child of `FooterSocialMediaIconList`.",
          "html": "<li class=\"mr-4 md:mr-6 lg:mr-8\"><a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\">{children} </a></li>"
        }
      ]
    }
  ],
  "Footer with copyright information and disclaimer": [
    {
      "description": "The UI should be a simple footer section that displays copyright information and a disclaimer. The footer should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The main footer component that contains the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the copyright information.",
          "html": "<p>&copy; {current_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the disclaimer text.",
          "html": "<p>{disclaimer_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer section that displays copyright information and a disclaimer. The footer should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The main footer component that contains the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the copyright information.",
          "html": "<p>&copy; {current_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the disclaimer text.",
          "html": "<p>{disclaimer_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer section that displays copyright information and a disclaimer. The footer should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The main footer component that contains the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the copyright information.",
          "html": "<p>&copy; {current_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the disclaimer text.",
          "html": "<p>{disclaimer_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer section that displays copyright information and a disclaimer. The footer should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The main footer component that contains the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the copyright information.",
          "html": "<p>&copy; {current_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the disclaimer text.",
          "html": "<p>{disclaimer_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer section that displays copyright information and a disclaimer. The footer should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The main footer component that contains the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the copyright information.",
          "html": "<p>&copy; {current_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the disclaimer text.",
          "html": "<p>{disclaimer_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer section that displays copyright information and a disclaimer. The footer should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The main footer component that contains the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the copyright information.",
          "html": "<p>&copy; {current_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the disclaimer text.",
          "html": "<p>{disclaimer_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer section that displays copyright information and a disclaimer. The footer should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The main footer component that contains the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the copyright information.",
          "html": "<p>&copy; {current_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays the disclaimer text.",
          "html": "<p>{disclaimer_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a footer section that displays copyright information and a disclaimer. It should be responsive, mobile-first, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-4 pb-4\"><FooterComponent/></footer>",
      "components": [
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone): The main footer component that wraps the copyright information and disclaimer.",
          "html": "<div class=\"max-w-md mx-auto px-4 lg:px-8\"><CopyrightComponent/><DisclaimerComponent/></div>"
        },
        {
          "name": "CopyrightComponent",
          "is_standalone": true,
          "description": "(standalone): Displays the copyright information.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {copyright_year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "DisclaimerComponent",
          "is_standalone": true,
          "description": "(standalone): Displays the disclaimer.",
          "html": "<p class=\"text-sm text-gray-600\">{disclaimer_text}</p>"
        }
      ]
    }
  ],
  "Cookie Banners": [
    {
      "description": "A cookie banner is a notification that appears at the top or bottom of a webpage, informing users about the use of cookies on the website. It should be a non-obtrusive, dismissible notification that contains a message, an accept button, and an optional link to learn more.",
      "html": "<!-- Cookie banner container --><div class=\"fixed bottom-0 left-0 right-0 p-4 bg-gray-100\"><!-- Cookie banner content --><CookieBanner/></div>",
      "components": [
        {
          "name": "CookieBanner",
          "is_standalone": true,
          "description": "Standalone component that contains the cookie banner message, accept button, and optional link.",
          "html": "<!-- Cookie banner content --><div class=\"flex justify-between\"><p class=\"text-sm\">{cookie_message}</p><div class=\"flex\"><CookieButton/>{optional_link && ( <a href={optional_link.href} target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-sm underline ml-4\">{optional_link.text}</a>)} </div></div>"
        },
        {
          "name": "CookieButton",
          "is_standalone": true,
          "description": "Standalone component that represents the accept button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Accept</button>"
        }
      ]
    }
  ],
  "Header Search Input": [
    {
      "description": "The UI should be a responsive header search input that is mobile-first, accessible, and SEO-friendly. It should have a search icon, a text input field, and a submit button.",
      "html": "<header class=\"bg-white py-4\"><SearchHeader/></header>",
      "components": [
        {
          "name": "SearchHeader",
          "is_standalone": true,
          "description": "standalone component that wraps the entire search input.",
          "html": "<div class=\"container mx-auto p-4 flex justify-center\"><SearchInput/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that contains the search icon, text input field, and submit button.",
          "html": "<div class=\"flex justify-between w-full max-w-md\"><span class=\"inline-flex items-center justify-center w-12 h-12 bg-gray-100 text-gray-500\"><i class=\"fas fa-search\"></i></span><input type=\"search\" id=\"search\" class=\"flex-1 p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_label} </button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header search input that is mobile-first, accessible, and SEO-friendly. It should have a search icon, a text input field, and a submit button.",
      "html": "<header class=\"bg-white py-4\"><SearchHeader/></header>",
      "components": [
        {
          "name": "SearchHeader",
          "is_standalone": true,
          "description": "standalone component that wraps the entire search input.",
          "html": "<div class=\"container mx-auto p-4 flex justify-center\"><SearchInput/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that contains the search icon, text input field, and submit button.",
          "html": "<div class=\"flex justify-between w-full max-w-md\"><span class=\"inline-flex items-center justify-center w-12 h-12 bg-gray-100 text-gray-500\"><i class=\"fas fa-search\"></i></span><input type=\"search\" id=\"search\" class=\"flex-1 p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_label} </button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header search input that is mobile-first, accessible, and SEO-friendly. It should have a search icon, a text input field, and a submit button.",
      "html": "<header class=\"bg-white py-4\"><SearchHeader/></header>",
      "components": [
        {
          "name": "SearchHeader",
          "is_standalone": true,
          "description": "standalone component that wraps the entire search input.",
          "html": "<div class=\"container mx-auto p-4 flex justify-center\"><SearchInput/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that contains the search icon, text input field, and submit button.",
          "html": "<div class=\"flex justify-between w-full max-w-md\"><span class=\"inline-flex items-center justify-center w-12 h-12 bg-gray-100 text-gray-500\"><i class=\"fas fa-search\"></i></span><input type=\"search\" id=\"search\" class=\"flex-1 p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_label} </button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header search input that is mobile-first, accessible, and SEO-friendly. It should have a search icon, a text input field, and a submit button.",
      "html": "<header class=\"bg-white py-4\"><SearchHeader/></header>",
      "components": [
        {
          "name": "SearchHeader",
          "is_standalone": true,
          "description": "standalone component that wraps the entire search input.",
          "html": "<div class=\"container mx-auto p-4 flex justify-center\"><SearchInput/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that contains the search icon, text input field, and submit button.",
          "html": "<div class=\"flex justify-between w-full max-w-md\"><span class=\"inline-flex items-center justify-center w-12 h-12 bg-gray-100 text-gray-500\"><i class=\"fas fa-search\"></i></span><input type=\"search\" id=\"search\" class=\"flex-1 p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_label} </button></div>"
        }
      ]
    }
  ],
  "Icon Fonts/SVG Sprites": [
    {
      "description": "The UI should display a set of icons, each representing a specific action or concept. The icons should be accessible, responsive, and mobile-first.",
      "html": "<div class=\"flex flex-wrap justify-center\"><IconSet><IconComponent/><IconComponent/><IconComponent/><!-- more icons --></IconSet></div>",
      "components": [
        {
          "name": "IconComponent",
          "is_standalone": true,
          "description": "(standalone) - A single icon element with a specific class for styling.",
          "html": "<i aria-hidden=\"true\" class=\"text-lg {icon_class}\"/>"
        },
        {
          "name": "IconSet",
          "is_standalone": false,
          "description": "(takes children) - A container element that holds multiple `IconComponent`s.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of icons, each representing a specific action or concept. The icons should be accessible, responsive, and mobile-first.",
      "html": "<div class=\"flex flex-wrap justify-center\"><IconSet><IconComponent/><IconComponent/><IconComponent/><!-- more icons --></IconSet></div>",
      "components": [
        {
          "name": "IconComponent",
          "is_standalone": true,
          "description": "(standalone) - A single icon element with a specific class for styling.",
          "html": "<i aria-hidden=\"true\" class=\"text-lg {icon_class}\"/>"
        },
        {
          "name": "IconSet",
          "is_standalone": false,
          "description": "(takes children) - A container element that holds multiple `IconComponent`s.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of icons, each representing a specific action or concept. The icons should be accessible, responsive, and mobile-first.",
      "html": "<div class=\"flex flex-wrap justify-center\"><IconSet><IconComponent/><IconComponent/><IconComponent/><!-- more icons --></IconSet></div>",
      "components": [
        {
          "name": "IconComponent",
          "is_standalone": true,
          "description": "(standalone) - A single icon element with a specific class for styling.",
          "html": "<i aria-hidden=\"true\" class=\"text-lg {icon_class}\"/>"
        },
        {
          "name": "IconSet",
          "is_standalone": false,
          "description": "(takes children) - A container element that holds multiple `IconComponent`s.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of icons, each representing a specific action or concept. The icons should be accessible, responsive, and mobile-first.",
      "html": "<div class=\"flex flex-wrap justify-center\"><IconSet><IconComponent/><IconComponent/><IconComponent/><!-- more icons --></IconSet></div>",
      "components": [
        {
          "name": "IconComponent",
          "is_standalone": true,
          "description": "(standalone) - A single icon element with a specific class for styling.",
          "html": "<i aria-hidden=\"true\" class=\"text-lg {icon_class}\"/>"
        },
        {
          "name": "IconSet",
          "is_standalone": false,
          "description": "(takes children) - A container element that holds multiple `IconComponent`s.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of icons, each representing a specific action or concept. The icons should be accessible, responsive, and mobile-first.",
      "html": "<div class=\"flex flex-wrap justify-center\"><IconSet><IconComponent/><IconComponent/><IconComponent/><!-- more icons --></IconSet></div>",
      "components": [
        {
          "name": "IconComponent",
          "is_standalone": true,
          "description": "(standalone) - A single icon element with a specific class for styling.",
          "html": "<i aria-hidden=\"true\" class=\"text-lg {icon_class}\"/>"
        },
        {
          "name": "IconSet",
          "is_standalone": false,
          "description": "(takes children) - A container element that holds multiple `IconComponent`s.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Product Variations": [
    {
      "description": "The UI should display a featured product with variations, showcasing different options for the same product. The layout should be responsive, with a mobile-first approach, and should include accessibility features.",
      "html": "<div class=\"max-w-md mx-auto\"><ProductHeader/><ProductImage/><div class=\"flex justify-between mb-4\"><VariationSelect/><ProductPrice/></div><ProductVariationsList><ProductVariationItem>{variation_name}</ProductVariationItem><!-- repeat for each variation --></ProductVariationsList><CallToAction/></div>",
      "components": [
        {
          "name": "ProductHeader",
          "is_standalone": true,
          "description": "A standalone component displaying the product name and rating.",
          "html": "<div class=\"mb-4\"><h2 class=\"text-2xl\">{product_name}</h2><p>Rating: {rating}/5</p></div>"
        },
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component displaying the product image.",
          "html": "<img src={product_image_url} alt={product_name} class=\"w-full mb-4\">"
        },
        {
          "name": "VariationSelect",
          "is_standalone": true,
          "description": "A standalone component displaying a dropdown to select a product variation.",
          "html": "<select class=\"w-full p-2 mb-4\"><option value=\"\">Select a variation</option><!-- options will be populated dynamically --></select>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "A standalone component displaying the product price.",
          "html": "<p class=\"text-lg font-bold\">${price}</p>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "A standalone component displaying a call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "ProductVariationsList",
          "is_standalone": false,
          "description": "A component taking children, displaying a list of product variations.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "ProductVariationItem",
          "is_standalone": false,
          "description": "A component taking children, displaying a single product variation item.",
          "html": "<li class=\"py-2 border-b border-gray-200\">{children}</li>"
        }
      ]
    },
    {
      "description": "The UI should display a featured product with variations, showcasing different options for the same product. The layout should be responsive, with a mobile-first approach, and should include accessibility features.",
      "html": "<div class=\"max-w-md mx-auto\"><ProductHeader/><ProductImage/><div class=\"flex justify-between mb-4\"><VariationSelect/><ProductPrice/></div><ProductVariationsList><ProductVariationItem>{variation_name}</ProductVariationItem><!-- repeat for each variation --></ProductVariationsList><CallToAction/></div>",
      "components": [
        {
          "name": "ProductHeader",
          "is_standalone": true,
          "description": "A standalone component displaying the product name and rating.",
          "html": "<div class=\"mb-4\"><h2 class=\"text-2xl\">{product_name}</h2><p>Rating: {rating}/5</p></div>"
        },
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component displaying the product image.",
          "html": "<img src={product_image_url} alt={product_name} class=\"w-full mb-4\">"
        },
        {
          "name": "VariationSelect",
          "is_standalone": true,
          "description": "A standalone component displaying a dropdown to select a product variation.",
          "html": "<select class=\"w-full p-2 mb-4\"><option value=\"\">Select a variation</option><!-- options will be populated dynamically --></select>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "A standalone component displaying the product price.",
          "html": "<p class=\"text-lg font-bold\">${price}</p>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "A standalone component displaying a call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "ProductVariationsList",
          "is_standalone": false,
          "description": "A component taking children, displaying a list of product variations.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "ProductVariationItem",
          "is_standalone": false,
          "description": "A component taking children, displaying a single product variation item.",
          "html": "<li class=\"py-2 border-b border-gray-200\">{children}</li>"
        }
      ]
    },
    {
      "description": "The UI should display a featured product with variations, showcasing different options for the same product. The layout should be responsive, with a mobile-first approach, and should include accessibility features.",
      "html": "<div class=\"max-w-md mx-auto\"><ProductHeader/><ProductImage/><div class=\"flex justify-between mb-4\"><VariationSelect/><ProductPrice/></div><ProductVariationsList><ProductVariationItem>{variation_name}</ProductVariationItem><!-- repeat for each variation --></ProductVariationsList><CallToAction/></div>",
      "components": [
        {
          "name": "ProductHeader",
          "is_standalone": true,
          "description": "A standalone component displaying the product name and rating.",
          "html": "<div class=\"mb-4\"><h2 class=\"text-2xl\">{product_name}</h2><p>Rating: {rating}/5</p></div>"
        },
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component displaying the product image.",
          "html": "<img src={product_image_url} alt={product_name} class=\"w-full mb-4\">"
        },
        {
          "name": "VariationSelect",
          "is_standalone": true,
          "description": "A standalone component displaying a dropdown to select a product variation.",
          "html": "<select class=\"w-full p-2 mb-4\"><option value=\"\">Select a variation</option><!-- options will be populated dynamically --></select>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "A standalone component displaying the product price.",
          "html": "<p class=\"text-lg font-bold\">${price}</p>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "A standalone component displaying a call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "ProductVariationsList",
          "is_standalone": false,
          "description": "A component taking children, displaying a list of product variations.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "ProductVariationItem",
          "is_standalone": false,
          "description": "A component taking children, displaying a single product variation item.",
          "html": "<li class=\"py-2 border-b border-gray-200\">{children}</li>"
        }
      ]
    }
  ],
  "Semantic HTML5 Markup": [
    {
      "description": "The UI should be a basic web page with a header, navigation, main content area, and footer. The layout should be responsive and mobile-friendly.",
      "html": "<html lang=\"en\"><head><meta charset=\"UTF-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/><title>{title}</title></head><body class=\"min-h-screen flex flex-col\"><HeaderComponent/><NavigationComponent/><main class=\"flex-1\"><MainComponent><!-- child components will be rendered here --></MainComponent></main><FooterComponent/></body></html>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "(standalone) - The topmost section of the page, containing the site's title and navigation.",
          "html": "<header class=\"bg-blue-500 py-4 text-white\"><h1>{site_title}</h1></header>"
        },
        {
          "name": "NavigationComponent",
          "is_standalone": true,
          "description": "(standalone) - A list of links to other parts of the site.",
          "html": "<nav class=\"bg-gray-200 py-4\"><ul class=\"flex flex-wrap justify-center\"><li class=\"mr-4\"><a href=\"{nav_link_1}\">{nav_text_1}</a></li><li class=\"mr-4\"><a href=\"{nav_link_2}\">{nav_text_2}</a></li><!-- more links here --></ul></nav>"
        },
        {
          "name": "MainComponent",
          "is_standalone": false,
          "description": "(takes children) - The main content area of the page, containing articles, images, or other content.",
          "html": "<div class=\"px-4 pt-4\">{children}</div>"
        },
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The bottommost section of the page, containing copyright information and other miscellaneous links.",
          "html": "<footer class=\"bg-gray-200 py-4\"><p>&copy; {year} {site_name}</p></footer>"
        }
      ]
    },
    {
      "description": "The UI should be a basic web page with a header, navigation, main content area, and footer. The layout should be responsive and mobile-friendly.",
      "html": "<html lang=\"en\"><head><meta charset=\"UTF-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/><title>{title}</title></head><body class=\"min-h-screen flex flex-col\"><HeaderComponent/><NavigationComponent/><main class=\"flex-1\"><MainComponent><!-- child components will be rendered here --></MainComponent></main><FooterComponent/></body></html>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "(standalone) - The topmost section of the page, containing the site's title and navigation.",
          "html": "<header class=\"bg-blue-500 py-4 text-white\"><h1>{site_title}</h1></header>"
        },
        {
          "name": "NavigationComponent",
          "is_standalone": true,
          "description": "(standalone) - A list of links to other parts of the site.",
          "html": "<nav class=\"bg-gray-200 py-4\"><ul class=\"flex flex-wrap justify-center\"><li class=\"mr-4\"><a href=\"{nav_link_1}\">{nav_text_1}</a></li><li class=\"mr-4\"><a href=\"{nav_link_2}\">{nav_text_2}</a></li><!-- more links here --></ul></nav>"
        },
        {
          "name": "MainComponent",
          "is_standalone": false,
          "description": "(takes children) - The main content area of the page, containing articles, images, or other content.",
          "html": "<div class=\"px-4 pt-4\">{children}</div>"
        },
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The bottommost section of the page, containing copyright information and other miscellaneous links.",
          "html": "<footer class=\"bg-gray-200 py-4\"><p>&copy; {year} {site_name}</p></footer>"
        }
      ]
    },
    {
      "description": "A basic HTML5 document structure with semantic meaning, containing a header, navigation, main content area, sidebar, and footer.",
      "html": "<html lang=\"en\"><head><meta charset=\"UTF-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/><title>{document_title}</title></head><body><HeaderComponent/><NavComponent/><main><MainComponent><!-- Main content area --></MainComponent></main><aside><SidebarComponent/></aside><FooterComponent/></body></html>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<header class=\"bg-gray-200 p-4\"><h1>{header_title}</h1></header>"
        },
        {
          "name": "NavComponent",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<nav class=\"flex justify-between p-4 bg-gray-200\"><ul class=\"flex\"><li><a href=\"#\" class=\"text-gray-600\">{nav_item_1}</a></li><li><a href=\"#\" class=\"text-gray-600\">{nav_item_2}</a></li><li><a href=\"#\" class=\"text-gray-600\">{nav_item_3}</a></li></ul></nav>"
        },
        {
          "name": "MainComponent",
          "is_standalone": false,
          "description": "- takes children",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "SidebarComponent",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<aside class=\"bg-gray-200 p-4\"><h2>{sidebar_title}</h2><ul><li>{sidebar_item_1}</li><li>{sidebar_item_2}</li><li>{sidebar_item_3}</li></ul></aside>"
        },
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<footer class=\"bg-gray-200 p-4\"><p>&copy; {current_year} {footer_text}</p></footer>"
        }
      ]
    },
    {
      "description": "The UI should be a basic web page with a header, navigation, main content area, and footer. The layout should be responsive and mobile-friendly.",
      "html": "<html lang=\"en\"><head><meta charset=\"UTF-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/><title>{title}</title></head><body class=\"min-h-screen flex flex-col\"><HeaderComponent/><NavigationComponent/><main class=\"flex-1\"><MainComponent><!-- child components will be rendered here --></MainComponent></main><FooterComponent/></body></html>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "(standalone) - The topmost section of the page, containing the site's title and navigation.",
          "html": "<header class=\"bg-blue-500 py-4 text-white\"><h1>{site_title}</h1></header>"
        },
        {
          "name": "NavigationComponent",
          "is_standalone": true,
          "description": "(standalone) - A list of links to other parts of the site.",
          "html": "<nav class=\"bg-gray-200 py-4\"><ul class=\"flex flex-wrap justify-center\"><li class=\"mr-4\"><a href=\"{nav_link_1}\">{nav_text_1}</a></li><li class=\"mr-4\"><a href=\"{nav_link_2}\">{nav_text_2}</a></li><!-- more links here --></ul></nav>"
        },
        {
          "name": "MainComponent",
          "is_standalone": false,
          "description": "(takes children) - The main content area of the page, containing articles, images, or other content.",
          "html": "<div class=\"px-4 pt-4\">{children}</div>"
        },
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The bottommost section of the page, containing copyright information and other miscellaneous links.",
          "html": "<footer class=\"bg-gray-200 py-4\"><p>&copy; {year} {site_name}</p></footer>"
        }
      ]
    },
    {
      "description": "The UI should be a basic web page with a header, navigation, main content area, and footer. The layout should be responsive and mobile-friendly.",
      "html": "<html lang=\"en\"><head><meta charset=\"UTF-8\"/><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/><title>{title}</title></head><body class=\"min-h-screen flex flex-col\"><HeaderComponent/><NavigationComponent/><main class=\"flex-1\"><MainComponent><!-- child components will be rendered here --></MainComponent></main><FooterComponent/></body></html>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "(standalone) - The topmost section of the page, containing the site's title and navigation.",
          "html": "<header class=\"bg-blue-500 py-4 text-white\"><h1>{site_title}</h1></header>"
        },
        {
          "name": "NavigationComponent",
          "is_standalone": true,
          "description": "(standalone) - A list of links to other parts of the site.",
          "html": "<nav class=\"bg-gray-200 py-4\"><ul class=\"flex flex-wrap justify-center\"><li class=\"mr-4\"><a href=\"{nav_link_1}\">{nav_text_1}</a></li><li class=\"mr-4\"><a href=\"{nav_link_2}\">{nav_text_2}</a></li><!-- more links here --></ul></nav>"
        },
        {
          "name": "MainComponent",
          "is_standalone": false,
          "description": "(takes children) - The main content area of the page, containing articles, images, or other content.",
          "html": "<div class=\"px-4 pt-4\">{children}</div>"
        },
        {
          "name": "FooterComponent",
          "is_standalone": true,
          "description": "(standalone) - The bottommost section of the page, containing copyright information and other miscellaneous links.",
          "html": "<footer class=\"bg-gray-200 py-4\"><p>&copy; {year} {site_name}</p></footer>"
        }
      ]
    }
  ],
  "Recommendations and 'You Might Like'": [
    {
      "description": "The UI should display a list of recommendations and \"You Might Like\" suggestions, with each item having a title, description, and a call-to-action button. The UI should be responsive, mobile-first, and accessible, with clear headings and sufficient spacing between elements.",
      "html": "<div class=\"max-w-lg mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Recommendations</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList><h2 class=\"text-xl font-bold mb-4 mt-8\">You Might Like</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList></div>",
      "components": [
        {
          "name": "RecommendationCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single recommendation with a title, description, and a call-to-action button.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "RecommendationsList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `RecommendationCard` components, and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of recommendations and \"You Might Like\" suggestions, with each item having a title, description, and a call-to-action button. The UI should be responsive, mobile-first, and accessible, with clear headings and sufficient spacing between elements.",
      "html": "<div class=\"max-w-lg mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Recommendations</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList><h2 class=\"text-xl font-bold mb-4 mt-8\">You Might Like</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList></div>",
      "components": [
        {
          "name": "RecommendationCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single recommendation with a title, description, and a call-to-action button.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "RecommendationsList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `RecommendationCard` components, and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of recommendations and \"You Might Like\" suggestions, with each item having a title, description, and a call-to-action button. The UI should be responsive, mobile-first, and accessible, with clear headings and sufficient spacing between elements.",
      "html": "<div class=\"max-w-lg mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Recommendations</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList><h2 class=\"text-xl font-bold mb-4 mt-8\">You Might Like</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList></div>",
      "components": [
        {
          "name": "RecommendationCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single recommendation with a title, description, and a call-to-action button.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "RecommendationsList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `RecommendationCard` components, and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of recommendations and \"You Might Like\" suggestions, with each item having a title, description, and a call-to-action button. The UI should be responsive, mobile-first, and accessible, with clear headings and sufficient spacing between elements.",
      "html": "<div class=\"max-w-lg mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Recommendations</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList><h2 class=\"text-xl font-bold mb-4 mt-8\">You Might Like</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList></div>",
      "components": [
        {
          "name": "RecommendationCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single recommendation with a title, description, and a call-to-action button.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "RecommendationsList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `RecommendationCard` components, and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of recommendations and \"You Might Like\" suggestions, with each item having a title, description, and a call-to-action button. The UI should be responsive, mobile-first, and accessible, with clear headings and sufficient spacing between elements.",
      "html": "<div class=\"max-w-lg mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Recommendations</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList><h2 class=\"text-xl font-bold mb-4 mt-8\">You Might Like</h2><RecommendationsList><RecommendationCard/><RecommendationCard/><!-- Add more RecommendationCard components here --></RecommendationsList></div>",
      "components": [
        {
          "name": "RecommendationCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single recommendation with a title, description, and a call-to-action button.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "RecommendationsList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `RecommendationCard` components, and displays them in a list.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Blog Post Archive": [
    {
      "description": "The UI should be a responsive blog post archive that displays a list of blog posts with their titles, excerpts, and metadata. The layout should be mobile-first, with a card-based design that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Blog Post Archive</h1><BlogPostArchive><!-- Blog post cards will be rendered here --></BlogPostArchive></div>",
      "components": [
        {
          "name": "BlogPostArchive",
          "is_standalone": false,
          "description": "A component that takes children (an array of `BlogPostCard` components).",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive blog post archive that displays a list of blog posts with their titles, excerpts, and metadata. The layout should be mobile-first, with a card-based design that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Blog Post Archive</h1><BlogPostArchive><!-- Blog post cards will be rendered here --></BlogPostArchive></div>",
      "components": [
        {
          "name": "BlogPostArchive",
          "is_standalone": false,
          "description": "A component that takes children (an array of `BlogPostCard` components).",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive blog post archive that displays a list of blog posts with their titles, excerpts, and metadata. The layout should be mobile-first, with a card-based design that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Blog Post Archive</h1><BlogPostArchive><!-- Blog post cards will be rendered here --></BlogPostArchive></div>",
      "components": [
        {
          "name": "BlogPostArchive",
          "is_standalone": false,
          "description": "A component that takes children (an array of `BlogPostCard` components).",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive blog post archive that displays a list of blog posts with their titles, excerpts, and metadata. The layout should be mobile-first, with a card-based design that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Blog Post Archive</h1><BlogPostArchive><!-- Blog post cards will be rendered here --></BlogPostArchive></div>",
      "components": [
        {
          "name": "BlogPostArchive",
          "is_standalone": false,
          "description": "A component that takes children (an array of `BlogPostCard` components).",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive blog post archive that displays a list of blog posts with their titles, excerpts, and metadata. The layout should be mobile-first, with a card-based design that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Blog Post Archive</h1><BlogPostArchive><!-- Blog post cards will be rendered here --></BlogPostArchive></div>",
      "components": [
        {
          "name": "BlogPostArchive",
          "is_standalone": false,
          "description": "A component that takes children (an array of `BlogPostCard` components).",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    }
  ],
  "Testimonial Quote Image": [
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote with an image of the person who said it, along with their name and title.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><TestimonialCard/></div>",
      "components": [
        {
          "name": "TestimonialCard",
          "is_standalone": true,
          "description": "A standalone component that displays a quote, image, name, and title.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ImageAvatar/><div class=\"md:ml-4\"><QuoteText/><PersonInfo/></div></div>"
        },
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-bold mb-2\">{quote_text}</blockquote>"
        },
        {
          "name": "ImageAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the image of the person who said the quote.",
          "html": "<img src={image_url} alt={person_name} class=\"w-24 h-24 rounded-full mb-4 md:mb-0\"/>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the name and title of the person who said the quote.",
          "html": "<p class=\"text-lg\">{person_name}</p><p class=\"text-sm\">{person_title}</p>"
        }
      ]
    }
  ],
  "Two-Factor Auth/QR Codes": [
    {
      "description": "The UI should display a QR code and a text-based code for 2-factor authentication. The QR code should be large enough to be easily scannable, and the text-based code should be displayed below the QR code. The UI should be simple, clean, and easy to use.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><TwoFactorAuth/></div>",
      "components": [
        {
          "name": "TwoFactorAuth",
          "is_standalone": true,
          "description": "The main component that holds the QR code and text-based code. (Standalone)",
          "html": "<div class=\"flex flex-col items-center\"><QrCode/><CodeText/></div>"
        },
        {
          "name": "QrCode",
          "is_standalone": true,
          "description": "Displays the QR code. (Standalone)",
          "html": "<img src={qr_code_src} alt=\"QR Code\" class=\"w-48 h-48 md:w-64 md:h-64 lg:w-80 lg:h-80 mb-4\"/>"
        },
        {
          "name": "CodeText",
          "is_standalone": true,
          "description": "Displays the text-based code. (Standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{code_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a QR code and a text-based code for 2-factor authentication. The QR code should be large enough to be easily scannable, and the text-based code should be displayed below the QR code. The UI should be simple, clean, and easy to use.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><TwoFactorAuth/></div>",
      "components": [
        {
          "name": "TwoFactorAuth",
          "is_standalone": true,
          "description": "The main component that holds the QR code and text-based code. (Standalone)",
          "html": "<div class=\"flex flex-col items-center\"><QrCode/><CodeText/></div>"
        },
        {
          "name": "QrCode",
          "is_standalone": true,
          "description": "Displays the QR code. (Standalone)",
          "html": "<img src={qr_code_src} alt=\"QR Code\" class=\"w-48 h-48 md:w-64 md:h-64 lg:w-80 lg:h-80 mb-4\"/>"
        },
        {
          "name": "CodeText",
          "is_standalone": true,
          "description": "Displays the text-based code. (Standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{code_text}</p>"
        }
      ]
    },
    {
      "description": "A simple page with a header, a section for a QR code, and a section for a 2FA code.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><AuthHeader/><div class=\"flex justify-center mb-4\"><QrCodeSection/></div><div class=\"mb-4\"><TwoFactorCode/></div></div>",
      "components": [
        {
          "name": "AuthHeader",
          "is_standalone": true,
          "description": "- standalone (header for the 2FA page)",
          "html": "<header class=\"mb-4\"><h1 class=\"text-2xl font-bold\">Two-Factor Authentication</h1></header>"
        },
        {
          "name": "QrCodeSection",
          "is_standalone": true,
          "description": "- standalone (section for displaying the QR code)",
          "html": "<section class=\"bg-white p-4 rounded shadow-md\"><img src=\"{qr_code_image_url}\" alt=\"QR Code\" class=\"w-64 h-64 mx-auto\"/><p class=\"text-sm text-gray-600\">{qr_code_instructions}</p></section>"
        },
        {
          "name": "TwoFactorCode",
          "is_standalone": true,
          "description": "- standalone (section for displaying the 2FA code)",
          "html": "<section class=\"bg-white p-4 rounded shadow-md\"><h2 class=\"text-lg font-bold\">Your 2FA Code</h2><p class=\"text-2xl\">{two_factor_code}</p><p class=\"text-sm text-gray-600\">{two_factor_code_instructions}</p></section>"
        }
      ]
    },
    {
      "description": "The UI should display a QR code and a text-based code for 2-factor authentication. The QR code should be large enough to be easily scannable, and the text-based code should be displayed below the QR code. The UI should be simple, clean, and easy to use.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><TwoFactorAuth/></div>",
      "components": [
        {
          "name": "TwoFactorAuth",
          "is_standalone": true,
          "description": "The main component that holds the QR code and text-based code. (Standalone)",
          "html": "<div class=\"flex flex-col items-center\"><QrCode/><CodeText/></div>"
        },
        {
          "name": "QrCode",
          "is_standalone": true,
          "description": "Displays the QR code. (Standalone)",
          "html": "<img src={qr_code_src} alt=\"QR Code\" class=\"w-48 h-48 md:w-64 md:h-64 lg:w-80 lg:h-80 mb-4\"/>"
        },
        {
          "name": "CodeText",
          "is_standalone": true,
          "description": "Displays the text-based code. (Standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{code_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a QR code and a text-based code for 2-factor authentication. The QR code should be large enough to be easily scannable, and the text-based code should be displayed below the QR code. The UI should be simple, clean, and easy to use.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><TwoFactorAuth/></div>",
      "components": [
        {
          "name": "TwoFactorAuth",
          "is_standalone": true,
          "description": "The main component that holds the QR code and text-based code. (Standalone)",
          "html": "<div class=\"flex flex-col items-center\"><QrCode/><CodeText/></div>"
        },
        {
          "name": "QrCode",
          "is_standalone": true,
          "description": "Displays the QR code. (Standalone)",
          "html": "<img src={qr_code_src} alt=\"QR Code\" class=\"w-48 h-48 md:w-64 md:h-64 lg:w-80 lg:h-80 mb-4\"/>"
        },
        {
          "name": "CodeText",
          "is_standalone": true,
          "description": "Displays the text-based code. (Standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{code_text}</p>"
        }
      ]
    }
  ],
  "Callout Box Shadow": [
    {
      "description": "The UI should be a callout box with a shadow effect, which is a rectangular box with a subtle shadow effect to give it a sense of depth. The callout box should be responsive and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto mt-4 p-4 bg-white rounded shadow-md\"><CalloutBoxShadow/></div>",
      "components": [
        {
          "name": "CalloutBoxShadow",
          "is_standalone": true,
          "description": "A standalone component that represents the callout box with a shadow effect.",
          "html": "<div class=\"px-4 py-3\"><p class=\"text-lg font-bold\">{callout_title}</p><p class=\"text-gray-600\">{callout_text}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a shadow effect, which is a rectangular box with a subtle shadow effect to give it a sense of depth. The callout box should be responsive and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto mt-4 p-4 bg-white rounded shadow-md\"><CalloutBoxShadow/></div>",
      "components": [
        {
          "name": "CalloutBoxShadow",
          "is_standalone": true,
          "description": "A standalone component that represents the callout box with a shadow effect.",
          "html": "<div class=\"px-4 py-3\"><p class=\"text-lg font-bold\">{callout_title}</p><p class=\"text-gray-600\">{callout_text}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a shadow effect, which is a rectangular box with a subtle shadow effect to give it a sense of depth. The callout box should be responsive and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto mt-4 p-4 bg-white rounded shadow-md\"><CalloutBoxShadow/></div>",
      "components": [
        {
          "name": "CalloutBoxShadow",
          "is_standalone": true,
          "description": "A standalone component that represents the callout box with a shadow effect.",
          "html": "<div class=\"px-4 py-3\"><p class=\"text-lg font-bold\">{callout_title}</p><p class=\"text-gray-600\">{callout_text}</p></div>"
        }
      ]
    }
  ],
  "Testimonial Quote Font": [
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote in a prominent font style, suitable for a testimonial section. The quote should be resizable and legible on various devices.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><blockquote class=\"quote\"><QuoteText/></blockquote></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "A standalone component that displays the quote text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl font-serif italic\">{quote_text}</p>"
        }
      ]
    }
  ],
  "Verified checkmark and badge for official channels": [
    {
      "description": "The UI should display a verified checkmark and badge indicating an official channel. The badge should be a rounded rectangle with a checked icon inside, and a subtle border. The text \"Verified\" should be displayed next to the badge.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><VerifiedText/></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-6 h-6 bg-gray-200 rounded-full border border-gray-300 flex justify-center items-center\"><span class=\"text-lg material-icons\">check</span></div>"
        },
        {
          "name": "VerifiedText",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm text-gray-600\">{verified_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a verified checkmark and badge indicating an official channel. The badge should be a rounded rectangle with a checked icon inside, and a subtle border. The text \"Verified\" should be displayed next to the badge.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><VerifiedText/></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-6 h-6 bg-gray-200 rounded-full border border-gray-300 flex justify-center items-center\"><span class=\"text-lg material-icons\">check</span></div>"
        },
        {
          "name": "VerifiedText",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm text-gray-600\">{verified_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a verified checkmark and badge indicating an official channel. The badge should be a rounded rectangle with a checked icon inside, and a subtle border. The text \"Verified\" should be displayed next to the badge.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><VerifiedText/></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-6 h-6 bg-gray-200 rounded-full border border-gray-300 flex justify-center items-center\"><span class=\"text-lg material-icons\">check</span></div>"
        },
        {
          "name": "VerifiedText",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm text-gray-600\">{verified_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a verified checkmark and badge indicating an official channel. The badge should be a rounded rectangle with a checked icon inside, and a subtle border. The text \"Verified\" should be displayed next to the badge.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><VerifiedText/></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-6 h-6 bg-gray-200 rounded-full border border-gray-300 flex justify-center items-center\"><span class=\"text-lg material-icons\">check</span></div>"
        },
        {
          "name": "VerifiedText",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm text-gray-600\">{verified_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a verified checkmark and badge indicating an official channel. The badge should be a rounded rectangle with a checked icon inside, and a subtle border. The text \"Verified\" should be displayed next to the badge.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><VerifiedText/></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-6 h-6 bg-gray-200 rounded-full border border-gray-300 flex justify-center items-center\"><span class=\"text-lg material-icons\">check</span></div>"
        },
        {
          "name": "VerifiedText",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm text-gray-600\">{verified_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a verified checkmark and badge indicating an official channel. The badge should be a rounded rectangle with a checked icon inside, and a subtle border. The text \"Verified\" should be displayed next to the badge.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><VerifiedText/></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-6 h-6 bg-gray-200 rounded-full border border-gray-300 flex justify-center items-center\"><span class=\"text-lg material-icons\">check</span></div>"
        },
        {
          "name": "VerifiedText",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm text-gray-600\">{verified_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a verified checkmark and badge indicating an official channel. The badge should be a rounded rectangle with a checked icon inside, and a subtle border. The text \"Verified\" should be displayed next to the badge.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><VerifiedText/></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"w-6 h-6 bg-gray-200 rounded-full border border-gray-300 flex justify-center items-center\"><span class=\"text-lg material-icons\">check</span></div>"
        },
        {
          "name": "VerifiedText",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-sm text-gray-600\">{verified_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a verified checkmark and a badge to indicate that a channel is official.",
      "html": "<div class=\"flex items-center\"><VerifiedBadge/><span class=\"text-sm\">{channelName}</span></div>",
      "components": [
        {
          "name": "VerifiedBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a verified checkmark and a badge.",
          "html": "<div class=\"flex items-center bg-yellow-100 rounded-full py-1 px-2 text-yellow-700\"><CheckmarkIcon/><span class=\"text-xs\">Official</span></div>"
        },
        {
          "name": "CheckmarkIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a checkmark icon.",
          "html": "<i class=\"fas fa-check text-green-500\" aria-hidden=\"true\"></i>"
        }
      ]
    }
  ],
  "Room Type and Rate Selection": [
    {
      "description": "The UI should display a list of room types with their corresponding rates and amenities. It should be responsive, with a single column layout on mobile devices and a two-column layout on larger screens. Each room type should have a header with the room type name, a list of amenities, and a rate selection dropdown.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-8\"><h1 class=\"text-2xl font-bold mb-4\">Select Room Type and Rate</h1><RoomTypeList><!-- Room type cards will be rendered here --></RoomTypeList></div>",
      "components": [
        {
          "name": "AmenityList",
          "is_standalone": true,
          "description": "A standalone component listing the amenities for a room type.",
          "html": "<ul class=\"list-disc pl-4 mb-4\">{amenities.map((amenity) =>( <li key={amenity}>{amenity}</li>))}</ul>"
        },
        {
          "name": "RateSelector",
          "is_standalone": true,
          "description": "A standalone component allowing the user to select a rate.",
          "html": "<select class=\"w-full p-2 pl-4\">{rateOptions.map((rate) =>( <option key={rate.id} value={rate.id}>{rate.name}</option>))}</select>"
        },
        {
          "name": "RoomTypeList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of room types.",
          "html": "{children}"
        }
      ]
    },
    {
      "description": "The UI should display a list of room types with their corresponding rates and amenities. It should be responsive, with a single column layout on mobile devices and a two-column layout on larger screens. Each room type should have a header with the room type name, a list of amenities, and a rate selection dropdown.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-8\"><h1 class=\"text-2xl font-bold mb-4\">Select Room Type and Rate</h1><RoomTypeList><!-- Room type cards will be rendered here --></RoomTypeList></div>",
      "components": [
        {
          "name": "AmenityList",
          "is_standalone": true,
          "description": "A standalone component listing the amenities for a room type.",
          "html": "<ul class=\"list-disc pl-4 mb-4\">{amenities.map((amenity) =>( <li key={amenity}>{amenity}</li>))}</ul>"
        },
        {
          "name": "RateSelector",
          "is_standalone": true,
          "description": "A standalone component allowing the user to select a rate.",
          "html": "<select class=\"w-full p-2 pl-4\">{rateOptions.map((rate) =>( <option key={rate.id} value={rate.id}>{rate.name}</option>))}</select>"
        },
        {
          "name": "RoomTypeList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of room types.",
          "html": "{children}"
        }
      ]
    },
    {
      "description": "The UI should display a list of room types with their corresponding rates. Each room type should have a checkbox to select or deselect it. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold\">Select Room Type and Rate</h2><RoomTypeList><!-- Room type items will be rendered here --></RoomTypeList></div>",
      "components": [
        {
          "name": "RoomTypeList",
          "is_standalone": false,
          "description": "(takes children) - A list of `RoomTypeItem` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A room type and rate selection UI that allows users to choose from different room types and rates.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Select Room Type and Rate</h2><div class=\"flex flex-wrap -mx-4\"><RoomTypeCard/><RoomTypeCard/><RoomTypeCard/><!-- Add more RoomTypeCard components as needed --></div><RateSelection><RateOption/><RateOption/><RateOption/><!-- Add more RateOption components as needed --></RateSelection></div>",
      "components": [
        {
          "name": "RoomTypeCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single room type with its details and rates.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold\">{room_type_name}</h3><p class=\"text-gray-600\">{room_type_description}</p><p class=\"text-lg font-bold\">{price_per_night} per night</p></div>"
        },
        {
          "name": "RateSelection",
          "is_standalone": false,
          "description": "(takes children): A container for selecting rates.",
          "html": "<div class=\"p-4\"><h3 class=\"text-lg font-bold\">Select Rate</h3><div class=\"flex flex-wrap -mx-4\">{children} </div></div>"
        },
        {
          "name": "RateOption",
          "is_standalone": true,
          "description": "(standalone): A single rate option with its details.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><input type=\"radio\" id={rate_id} name=\"rate\"/><label for={rate_id} class=\"text-lg font-bold\">{rate_name}</label><p class=\"text-gray-600\">{rate_description}</p><p class=\"text-lg font-bold\">{rate_price} per night</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of room types with their corresponding rates and amenities. It should be responsive, with a single column layout on mobile devices and a two-column layout on larger screens. Each room type should have a header with the room type name, a list of amenities, and a rate selection dropdown.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-8\"><h1 class=\"text-2xl font-bold mb-4\">Select Room Type and Rate</h1><RoomTypeList><!-- Room type cards will be rendered here --></RoomTypeList></div>",
      "components": [
        {
          "name": "AmenityList",
          "is_standalone": true,
          "description": "A standalone component listing the amenities for a room type.",
          "html": "<ul class=\"list-disc pl-4 mb-4\">{amenities.map((amenity) =>( <li key={amenity}>{amenity}</li>))}</ul>"
        },
        {
          "name": "RateSelector",
          "is_standalone": true,
          "description": "A standalone component allowing the user to select a rate.",
          "html": "<select class=\"w-full p-2 pl-4\">{rateOptions.map((rate) =>( <option key={rate.id} value={rate.id}>{rate.name}</option>))}</select>"
        },
        {
          "name": "RoomTypeList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of room types.",
          "html": "{children}"
        }
      ]
    },
    {
      "description": "The UI should display a list of room types with their corresponding rates and amenities. It should be responsive, with a single column layout on mobile devices and a two-column layout on larger screens. Each room type should have a header with the room type name, a list of amenities, and a rate selection dropdown.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-8\"><h1 class=\"text-2xl font-bold mb-4\">Select Room Type and Rate</h1><RoomTypeList><!-- Room type cards will be rendered here --></RoomTypeList></div>",
      "components": [
        {
          "name": "AmenityList",
          "is_standalone": true,
          "description": "A standalone component listing the amenities for a room type.",
          "html": "<ul class=\"list-disc pl-4 mb-4\">{amenities.map((amenity) =>( <li key={amenity}>{amenity}</li>))}</ul>"
        },
        {
          "name": "RateSelector",
          "is_standalone": true,
          "description": "A standalone component allowing the user to select a rate.",
          "html": "<select class=\"w-full p-2 pl-4\">{rateOptions.map((rate) =>( <option key={rate.id} value={rate.id}>{rate.name}</option>))}</select>"
        },
        {
          "name": "RoomTypeList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of room types.",
          "html": "{children}"
        }
      ]
    },
    {
      "description": "The UI should display a list of room types with their corresponding rates and amenities. It should be responsive, with a single column layout on mobile devices and a two-column layout on larger screens. Each room type should have a header with the room type name, a list of amenities, and a rate selection dropdown.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-8\"><h1 class=\"text-2xl font-bold mb-4\">Select Room Type and Rate</h1><RoomTypeList><!-- Room type cards will be rendered here --></RoomTypeList></div>",
      "components": [
        {
          "name": "AmenityList",
          "is_standalone": true,
          "description": "A standalone component listing the amenities for a room type.",
          "html": "<ul class=\"list-disc pl-4 mb-4\">{amenities.map((amenity) =>( <li key={amenity}>{amenity}</li>))}</ul>"
        },
        {
          "name": "RateSelector",
          "is_standalone": true,
          "description": "A standalone component allowing the user to select a rate.",
          "html": "<select class=\"w-full p-2 pl-4\">{rateOptions.map((rate) =>( <option key={rate.id} value={rate.id}>{rate.name}</option>))}</select>"
        },
        {
          "name": "RoomTypeList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of room types.",
          "html": "{children}"
        }
      ]
    }
  ],
  "Google Maps Embeds": [
    {
      "description": "The UI should display a Google Maps embed with a search bar and a map container. The search bar should allow users to enter a location, and the map container should display the location on a Google Map.",
      "html": "<div class=\"h-screen w-full flex flex-col\"><GoogleMapEmbed><MapSearchBar/><MapContainer/></GoogleMapEmbed></div>",
      "components": [
        {
          "name": "MapSearchBar",
          "is_standalone": true,
          "description": "standalone component that renders a search input field and a search button.",
          "html": "<div class=\"p-4 flex justify-center\"><input type=\"search\" placeholder=\"Enter a location\" class=\"bg-white border border-gray-300 rounded-md py-2 pl-2 pr-4\"/><button class=\"bg-orange-500 text-white px-4 py-2 rounded-md\">Search </button></div>"
        },
        {
          "name": "MapContainer",
          "is_standalone": true,
          "description": "standalone component that renders a container for the Google Map.",
          "html": "<div class=\"h-full w-full\" id=\"map\" style={{ width: '100%', height: 'calc(100vh - 64px)' }}><!-- map will be rendered here --></div>"
        },
        {
          "name": "GoogleMapEmbed",
          "is_standalone": false,
          "description": "component that takes children, which wraps the `MapSearchBar` and `MapContainer` components.",
          "html": "<div class=\"h-full w-full flex flex-col\">{children}</div>"
        }
      ]
    }
  ],
  "Responsive Table Layout": [
    {
      "description": "The UI should display a responsive table layout with a header row, multiple data rows, and columns that adjust their width based on the screen size.",
      "html": "<ResponsiveTable><TableHeader><TableCell><span>Column 1</span></TableCell><TableCell><span>Column 2</span></TableCell><TableCell><span>Column 3</span></TableCell></TableHeader><TableRow><TableCell>{cellData1}</TableCell><TableCell>{cellData2}</TableCell><TableCell>{cellData3}</TableCell></TableRow><!-- More TableRow components here --></ResponsiveTable>",
      "components": [
        {
          "name": "ResponsiveTable",
          "is_standalone": false,
          "description": "The main container for the responsive table layout. Takes children.",
          "html": "<div class=\"overflow-x-auto\"><table class=\"w-full border-collapse\">{children} </table></div>"
        },
        {
          "name": "TableHeader",
          "is_standalone": false,
          "description": "The header row of the table. Takes children.",
          "html": "<thead><tr class=\"bg-gray-100\">{children} </tr></thead>"
        },
        {
          "name": "TableRow",
          "is_standalone": false,
          "description": "A single row in the table. Takes children.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "TableCell",
          "is_standalone": false,
          "description": "A single cell in the table. Takes children.",
          "html": "<td class=\"px-4 py-2\">{children}</td>"
        }
      ]
    }
  ],
  "Responsive Post Formatting": [
    {
      "description": "The UI should display a responsive post format that adapts to different screen sizes, with a clear separation between the post's title, metadata, content, and action buttons. The post format should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContainer><PostHeader/><PostContent/><PostActions/></PostContainer></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone): Displays the post's title and metadata.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-2xl font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_at} by {author_name}</p></header>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the post's content.",
          "html": "<div class=\"text-lg leading-relaxed mb-4\">{post_content}</div>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the post's action buttons (e.g., like, comment, share).",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Like </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Comment </button><button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Share </button></div>"
        },
        {
          "name": "PostContainer",
          "is_standalone": false,
          "description": "(takes children): Wraps the entire post format.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post format that adapts to different screen sizes, with a clear separation between the post's title, metadata, content, and action buttons. The post format should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContainer><PostHeader/><PostContent/><PostActions/></PostContainer></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone): Displays the post's title and metadata.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-2xl font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_at} by {author_name}</p></header>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the post's content.",
          "html": "<div class=\"text-lg leading-relaxed mb-4\">{post_content}</div>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the post's action buttons (e.g., like, comment, share).",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Like </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Comment </button><button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Share </button></div>"
        },
        {
          "name": "PostContainer",
          "is_standalone": false,
          "description": "(takes children): Wraps the entire post format.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a post in a responsive format, with a title, content, and metadata (author and date). On smaller screens, the metadata should be displayed below the content, and on larger screens, it should be displayed to the side of the content.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><Post/></div>",
      "components": [
        {
          "name": "Post",
          "is_standalone": true,
          "description": "A standalone component that contains the title, content, and metadata of a post.",
          "html": "<div class=\"flex flex-wrap lg:flex-nowrap\"><div class=\"w-full lg:w-1/2 lg:pr-4\"><PostTitle/></div><div class=\"w-full lg:w-1/2 lg:pl-4\"><PostContent/></div><div class=\"w-full lg:w-1/2 lg:pl-4\"><PostMetadata/></div></div>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "A standalone component that displays the author and date of a post.",
          "html": "<p class=\"text-sm text-gray-600\">Posted by {author} on {date}</p>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of a post.",
          "html": "<h2 class=\"text-2xl font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that displays the content of a post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post formatting, with a profile picture, username, post text, and actions (like, comment, share). The post should adapt to different screen sizes, with the profile picture and username on the same line on larger screens, and stacked on smaller screens.",
      "html": "<div class=\"flex flex-wrap md:flex-nowrap md:justify-start mb-4\"><UserProfilePicture/><div class=\"md:ml-4\"><UserName/><PostText/><PostActions/></div></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component, displays the profile picture of the user who made the post.",
          "html": "<img src=\"{profile_picture_url}\" class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "UserName",
          "is_standalone": true,
          "description": "Standalone component, displays the username of the user who made the post.",
          "html": "<span class=\"text-lg\">{username}</span>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "Standalone component, displays the text of the post.",
          "html": "<p class=\"text-gray-600\">{post_text}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "Standalone component, displays the actions for the post (like, comment, share).",
          "html": "<div class=\"flex justify-evenly mt-2\"><button class=\"text-gray-600\">{like_count} likes</button><button class=\"text-gray-600\">{comment_count} comments</button><button class=\"text-gray-600\">Share</button></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post format that adapts to different screen sizes, with a clear separation between the post's title, metadata, content, and action buttons. The post format should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContainer><PostHeader/><PostContent/><PostActions/></PostContainer></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone): Displays the post's title and metadata.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-2xl font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_at} by {author_name}</p></header>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the post's content.",
          "html": "<div class=\"text-lg leading-relaxed mb-4\">{post_content}</div>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the post's action buttons (e.g., like, comment, share).",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Like </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Comment </button><button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Share </button></div>"
        },
        {
          "name": "PostContainer",
          "is_standalone": false,
          "description": "(takes children): Wraps the entire post format.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post format that adapts to different screen sizes, with a clear separation between the post's title, metadata, content, and action buttons. The post format should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContainer><PostHeader/><PostContent/><PostActions/></PostContainer></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone): Displays the post's title and metadata.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-2xl font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_at} by {author_name}</p></header>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the post's content.",
          "html": "<div class=\"text-lg leading-relaxed mb-4\">{post_content}</div>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the post's action buttons (e.g., like, comment, share).",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Like </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Comment </button><button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Share </button></div>"
        },
        {
          "name": "PostContainer",
          "is_standalone": false,
          "description": "(takes children): Wraps the entire post format.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post format that adapts to different screen sizes, with a clear separation between the post's title, metadata, content, and action buttons. The post format should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContainer><PostHeader/><PostContent/><PostActions/></PostContainer></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone): Displays the post's title and metadata.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-2xl font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_at} by {author_name}</p></header>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the post's content.",
          "html": "<div class=\"text-lg leading-relaxed mb-4\">{post_content}</div>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the post's action buttons (e.g., like, comment, share).",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Like </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Comment </button><button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Share </button></div>"
        },
        {
          "name": "PostContainer",
          "is_standalone": false,
          "description": "(takes children): Wraps the entire post format.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post format that adapts to different screen sizes, with a clear separation between the post's title, metadata, content, and action buttons. The post format should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContainer><PostHeader/><PostContent/><PostActions/></PostContainer></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone): Displays the post's title and metadata.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-2xl font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_at} by {author_name}</p></header>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the post's content.",
          "html": "<div class=\"text-lg leading-relaxed mb-4\">{post_content}</div>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the post's action buttons (e.g., like, comment, share).",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Like </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Comment </button><button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Share </button></div>"
        },
        {
          "name": "PostContainer",
          "is_standalone": false,
          "description": "(takes children): Wraps the entire post format.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive post formatting with a header, image, content, and footer sections. The post format should be mobile-first and adaptable to different screen sizes.",
      "html": "<article class=\"mb-4 bg-white rounded shadow-md overflow-hidden\"><PostHeader/><PostImage/><PostContent><!-- post content will be rendered here --></PostContent><PostFooter/></article>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the post header.",
          "html": "<header class=\"p-4 border-b border-gray-200\"><h2 class=\"text-lg font-bold\">{post_title}</h2><p class=\"text-sm text-gray-600\">{posted_by} on {posted_date}</p></header>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "A standalone component that displays the post image.",
          "html": "<img src=\"{image_url}\" class=\"w-full h-48 object-cover\" alt=\"{image_alt_text}\">"
        },
        {
          "name": "PostContent",
          "is_standalone": false,
          "description": "A component that displays the post content and takes children.",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "PostFooter",
          "is_standalone": true,
          "description": "A standalone component that displays the post footer.",
          "html": "<footer class=\"p-4 border-t border-gray-200\"><p class=\"text-sm text-gray-600\">{footer_text}</p></footer>"
        }
      ]
    }
  ],
  "Hero Background Pattern": [
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a hero section with a background pattern, typically used as a visually appealing introduction to a website or page.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><HeroBackgroundPattern/><HeroContent><!-- hero content goes here --></HeroContent></div>",
      "components": [
        {
          "name": "HeroBackgroundPattern",
          "is_standalone": true,
          "description": "(standalone): a container element that holds the background pattern.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-cover bg-noise\"></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": false,
          "description": "(takes children): a container element that holds the content inside the hero section.",
          "html": "<div class=\"relative z-10 p-4 md:p-6 lg:p-12\">{children}</div>"
        }
      ]
    }
  ],
  "Upload/Progress Bars": [
    {
      "description": "The UI should display a progress bar that fills up as the upload progresses. The progress bar should be visually appealing, responsive, and accessible.",
      "html": "<div class=\"flex flex-col items-center py-4\"><ProgressBar/><ProgressText/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "Standalone component that displays the progress bar.",
          "html": "<div class=\"bg-gray-200 h-4 w-full rounded-md overflow-hidden\"><div class=\"bg-blue-500 h-4\" style={`width: ${progressPercentage}%`}></div></div>"
        },
        {
          "name": "ProgressText",
          "is_standalone": true,
          "description": "Standalone component that displays the progress text (e.g., \"35% complete\").",
          "html": "<p class=\"text-lg font-bold\">{progressPercentage}% complete</p>"
        }
      ]
    },
    {
      "description": "The UI should display a progress bar that fills up as the upload progresses. The progress bar should be visually appealing, responsive, and accessible.",
      "html": "<div class=\"flex flex-col items-center py-4\"><ProgressBar/><ProgressText/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "Standalone component that displays the progress bar.",
          "html": "<div class=\"bg-gray-200 h-4 w-full rounded-md overflow-hidden\"><div class=\"bg-blue-500 h-4\" style={`width: ${progressPercentage}%`}></div></div>"
        },
        {
          "name": "ProgressText",
          "is_standalone": true,
          "description": "Standalone component that displays the progress text (e.g., \"35% complete\").",
          "html": "<p class=\"text-lg font-bold\">{progressPercentage}% complete</p>"
        }
      ]
    },
    {
      "description": "A horizontal progress bar that fills up as the upload progresses, with a percentage indicator.",
      "html": "<div class=\"flex items-center gap-2\"><ProgressBar/><ProgressIndicator/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "a standalone component that displays the progress of the upload",
          "html": "<div class=\"bg-gray-200 h-2 rounded-lg overflow-hidden\"><div class=\"bg-blue-500 h-2 rounded-lg\" style={{ width: `${progressPercentage}%` }}/></div>"
        },
        {
          "name": "ProgressIndicator",
          "is_standalone": true,
          "description": "a standalone component that displays the percentage of the upload",
          "html": "<p class=\"text-sm\">{progressPercentage} %</p>"
        }
      ]
    },
    {
      "description": "The UI should display a progress bar that fills up as the upload progresses. The progress bar should be visually appealing, responsive, and accessible.",
      "html": "<div class=\"flex flex-col items-center py-4\"><ProgressBar/><ProgressText/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "Standalone component that displays the progress bar.",
          "html": "<div class=\"bg-gray-200 h-4 w-full rounded-md overflow-hidden\"><div class=\"bg-blue-500 h-4\" style={`width: ${progressPercentage}%`}></div></div>"
        },
        {
          "name": "ProgressText",
          "is_standalone": true,
          "description": "Standalone component that displays the progress text (e.g., \"35% complete\").",
          "html": "<p class=\"text-lg font-bold\">{progressPercentage}% complete</p>"
        }
      ]
    },
    {
      "description": "The UI should display a progress bar that fills up as the upload progresses. The progress bar should be visually appealing, responsive, and accessible.",
      "html": "<div class=\"flex flex-col items-center py-4\"><ProgressBar/><ProgressText/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "Standalone component that displays the progress bar.",
          "html": "<div class=\"bg-gray-200 h-4 w-full rounded-md overflow-hidden\"><div class=\"bg-blue-500 h-4\" style={`width: ${progressPercentage}%`}></div></div>"
        },
        {
          "name": "ProgressText",
          "is_standalone": true,
          "description": "Standalone component that displays the progress text (e.g., \"35% complete\").",
          "html": "<p class=\"text-lg font-bold\">{progressPercentage}% complete</p>"
        }
      ]
    }
  ],
  "Notification bell for new updates": [
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    },
    {
      "description": "The UI should be a simple notification bell icon with a red badge indicating the number of new updates. The icon should be clickable, and when clicked, it should display a dropdown list of new updates.",
      "html": "<div class=\"relative inline-block\"><NotificationBell/><div class=\"absolute top-0 right-0 mt-2 mr-2\"><UpdateList><!-- update items will be rendered here --></UpdateList></div></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "A standalone component that renders a clickable bell icon with a red badge indicating the number of new updates.",
          "html": "<div class=\"cursor-pointer\"><i class=\"fas fa-bell text-lg text-gray-600\"></i><span class=\"bg-red-500 text-white rounded-full px-2 py-1\">{new_updates_count}</span></div>"
        },
        {
          "name": "UpdateList",
          "is_standalone": false,
          "description": "A component that takes children, which are individual update items.",
          "html": "<ul class=\"bg-white shadow-md py-2\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    },
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    },
    {
      "description": "The UI should be a simple notification bell icon with a red badge indicating the number of new updates. The icon should be clickable, and when clicked, it should display a dropdown list of new updates.",
      "html": "<div class=\"relative inline-block\"><NotificationBell/><div class=\"absolute top-0 right-0 mt-2 mr-2\"><UpdateList><!-- update items will be rendered here --></UpdateList></div></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "A standalone component that renders a clickable bell icon with a red badge indicating the number of new updates.",
          "html": "<div class=\"cursor-pointer\"><i class=\"fas fa-bell text-lg text-gray-600\"></i><span class=\"bg-red-500 text-white rounded-full px-2 py-1\">{new_updates_count}</span></div>"
        },
        {
          "name": "UpdateList",
          "is_standalone": false,
          "description": "A component that takes children, which are individual update items.",
          "html": "<ul class=\"bg-white shadow-md py-2\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A notification bell icon with a badge indicating the number of new updates.",
      "html": "<nav><ul><li><NotificationBell/></li></ul></nav>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "(standalone) - The bell icon with a badge indicating new updates.",
          "html": "<a href=\"#\" class=\"relative\"><i class=\"fas fa-bell\">{/* bell icon */}</i><Badge/></a>"
        },
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "(standalone) - A small circle displaying the number of new updates.",
          "html": "<span class=\"absolute top-0 right-0 -mr-2 px-1 bg-red-500 text-white rounded-full text-xs\">{new_update_count}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    },
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    },
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    },
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    },
    {
      "description": "The UI should be a simple notification bell icon with a red badge indicating the number of new updates. The icon should be clickable, and when clicked, it should display a dropdown list of new updates.",
      "html": "<div class=\"relative inline-block\"><NotificationBell/><div class=\"absolute top-0 right-0 mt-2 mr-2\"><UpdateList><!-- update items will be rendered here --></UpdateList></div></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "A standalone component that renders a clickable bell icon with a red badge indicating the number of new updates.",
          "html": "<div class=\"cursor-pointer\"><i class=\"fas fa-bell text-lg text-gray-600\"></i><span class=\"bg-red-500 text-white rounded-full px-2 py-1\">{new_updates_count}</span></div>"
        },
        {
          "name": "UpdateList",
          "is_standalone": false,
          "description": "A component that takes children, which are individual update items.",
          "html": "<ul class=\"bg-white shadow-md py-2\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a bell icon with a red badge indicating the number of new updates. The bell icon should change color when hovered or focused. When clicked, a dropdown list of new updates should appear.",
      "html": "<div class=\"flex justify-end mr-4\"><NotificationBell/></div><!-- dropdown list of updates --><div class=\"hidden absolute z-10 bg-white py-2 w-64 rounded shadow-md\"><UpdateItem>{children}</UpdateItem></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-white hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 rounded-full p-2\" aria-label=\"Notification bell\"><i class=\"fas fa-bell\"></i><UpdateBadge/></button>"
        },
        {
          "name": "UpdateBadge",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{update_count}</span>"
        },
        {
          "name": "UpdateItem",
          "is_standalone": false,
          "description": "takes children (list of updates)",
          "html": "<li class=\"py-2 border-b border-gray-200 text-sm\">{children} <!-- new update item text --></li>"
        }
      ]
    }
  ],
  "Product Feature List Title": [
    {
      "description": "The UI should be a title section that displays a heading for a list of product features. It should be responsive, accessible, and SEO-friendly.",
      "html": "<header><FeatureTitle/></header>",
      "components": [
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component that displays a title for the product feature list.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title_text}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a title section that displays a heading for a list of product features. It should be responsive, accessible, and SEO-friendly.",
      "html": "<header><FeatureTitle/></header>",
      "components": [
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component that displays a title for the product feature list.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title_text}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a title section that displays a heading for a list of product features. It should be responsive, accessible, and SEO-friendly.",
      "html": "<header><FeatureTitle/></header>",
      "components": [
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component that displays a title for the product feature list.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title_text}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a title section that displays a heading for a list of product features. It should be responsive, accessible, and SEO-friendly.",
      "html": "<header><FeatureTitle/></header>",
      "components": [
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component that displays a title for the product feature list.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title_text}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a title section that displays a heading for a list of product features. It should be responsive, accessible, and SEO-friendly.",
      "html": "<header><FeatureTitle/></header>",
      "components": [
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component that displays a title for the product feature list.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title_text}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a title section that displays a heading for a list of product features. It should be responsive, accessible, and SEO-friendly.",
      "html": "<header><FeatureTitle/></header>",
      "components": [
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component that displays a title for the product feature list.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title_text}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a title for a product feature list, emphasizing the title text with a large font size and prominent styling.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><FeatureListTitle/></div>",
      "components": [
        {
          "name": "FeatureListTitle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{feature_list_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a title section that displays a heading for a list of product features. It should be responsive, accessible, and SEO-friendly.",
      "html": "<header><FeatureTitle/></header>",
      "components": [
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component that displays a title for the product feature list.",
          "html": "<h2 class=\"text-3xl font-bold mb-4\">{title_text}</h2>"
        }
      ]
    }
  ],
  "Email filtering and sorting options": [
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact and responsive email filtering and sorting options panel that can be easily accessed from an email inbox. It should have a minimalistic design with clear labels and intuitive icons. The panel should be adaptable to different screen sizes and devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-white rounded shadow-md\"><FilterPanel><EmailFilterOption/><EmailFilterOption/><EmailFilterOption/></FilterPanel><SortPanel><EmailSortOption/><EmailSortOption/><EmailSortOption/></SortPanel></div>",
      "components": [
        {
          "name": "EmailFilterOption",
          "is_standalone": true,
          "description": "(standalone) - A single filter option with a checkbox and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"checkbox\" id=\"{filterId}\" class=\"mr-2\"><label for=\"{filterId}\" class=\"text-sm\">{filterLabel}</label></div>"
        },
        {
          "name": "EmailSortOption",
          "is_standalone": true,
          "description": "(standalone) - A single sort option with a radio button and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"radio\" id=\"{sortId}\" class=\"mr-2\"><label for=\"{sortId}\" class=\"text-sm\">{sortLabel}</label></div>"
        },
        {
          "name": "FilterPanel",
          "is_standalone": false,
          "description": "(takes children) - The main filter panel that contains all the filter options.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg mb-2\">Filters</h5>{children}</div>"
        },
        {
          "name": "SortPanel",
          "is_standalone": false,
          "description": "(takes children) - The main sort panel that contains all the sort options.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg mb-2\">Sort by</h5>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact and responsive email filtering and sorting options panel that can be easily accessed from an email inbox. It should have a minimalistic design with clear labels and intuitive icons. The panel should be adaptable to different screen sizes and devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-white rounded shadow-md\"><FilterPanel><EmailFilterOption/><EmailFilterOption/><EmailFilterOption/></FilterPanel><SortPanel><EmailSortOption/><EmailSortOption/><EmailSortOption/></SortPanel></div>",
      "components": [
        {
          "name": "EmailFilterOption",
          "is_standalone": true,
          "description": "(standalone) - A single filter option with a checkbox and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"checkbox\" id=\"{filterId}\" class=\"mr-2\"><label for=\"{filterId}\" class=\"text-sm\">{filterLabel}</label></div>"
        },
        {
          "name": "EmailSortOption",
          "is_standalone": true,
          "description": "(standalone) - A single sort option with a radio button and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"radio\" id=\"{sortId}\" class=\"mr-2\"><label for=\"{sortId}\" class=\"text-sm\">{sortLabel}</label></div>"
        },
        {
          "name": "FilterPanel",
          "is_standalone": false,
          "description": "(takes children) - The main filter panel that contains all the filter options.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg mb-2\">Filters</h5>{children}</div>"
        },
        {
          "name": "SortPanel",
          "is_standalone": false,
          "description": "(takes children) - The main sort panel that contains all the sort options.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg mb-2\">Sort by</h5>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact and responsive email filtering and sorting options panel that can be easily accessed from an email inbox. It should have a minimalistic design with clear labels and intuitive icons. The panel should be adaptable to different screen sizes and devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-white rounded shadow-md\"><FilterPanel><EmailFilterOption/><EmailFilterOption/><EmailFilterOption/></FilterPanel><SortPanel><EmailSortOption/><EmailSortOption/><EmailSortOption/></SortPanel></div>",
      "components": [
        {
          "name": "EmailFilterOption",
          "is_standalone": true,
          "description": "(standalone) - A single filter option with a checkbox and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"checkbox\" id=\"{filterId}\" class=\"mr-2\"><label for=\"{filterId}\" class=\"text-sm\">{filterLabel}</label></div>"
        },
        {
          "name": "EmailSortOption",
          "is_standalone": true,
          "description": "(standalone) - A single sort option with a radio button and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"radio\" id=\"{sortId}\" class=\"mr-2\"><label for=\"{sortId}\" class=\"text-sm\">{sortLabel}</label></div>"
        },
        {
          "name": "FilterPanel",
          "is_standalone": false,
          "description": "(takes children) - The main filter panel that contains all the filter options.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg mb-2\">Filters</h5>{children}</div>"
        },
        {
          "name": "SortPanel",
          "is_standalone": false,
          "description": "(takes children) - The main sort panel that contains all the sort options.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg mb-2\">Sort by</h5>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a set of filtering and sorting options for an email inbox. There should be a dropdown for selecting filters (e.g. \"Unread\", \"Starred\", etc.), a dropdown for selecting sorting methods (e.g. \"Oldest\", \"Newest\", etc.), and a button to apply the selected filters and sorting.",
      "html": "<div class=\"flex justify-between p-4\"><FilterSortBar><FilterDropdown/><SortDropdown/><ApplyButton/></FilterSortBar></div>",
      "components": [
        {
          "name": "FilterDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting filters",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a filter</option><option value=\"unread\">Unread</option><option value=\"starred\">Starred</option><!-- more options --></select></div>"
        },
        {
          "name": "SortDropdown",
          "is_standalone": true,
          "description": "(standalone): a dropdown component for selecting sorting methods",
          "html": "<div class=\"relative inline-block\"><select class=\"w-full p-2 pl-10 text-sm\"><option value=\"\">Select a sort method</option><option value=\"oldest\">Oldest</option><option value=\"newest\">Newest</option><!-- more options --></select></div>"
        },
        {
          "name": "ApplyButton",
          "is_standalone": true,
          "description": "(standalone): a button to apply the selected filters and sorting",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Apply</button>"
        },
        {
          "name": "FilterSortBar",
          "is_standalone": false,
          "description": "(takes children): a container component to hold the filtering and sorting options",
          "html": "<div class=\"flex justify-between items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Customer Review Stars": [
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer review with a rating system represented by stars, with a text description of the review.",
      "html": "<div class=\"flex flex-wrap mb-4\"><Reviewstars/><ReviewText/></div>",
      "components": [
        {
          "name": "Reviewstars",
          "is_standalone": true,
          "description": "(standalone): displays the rating system using stars",
          "html": "<div class=\"flex text-lg\">{[1, 2, 3, 4, 5].map((star, index) =>( <span class={index < rating ? 'text-yellow-400' : 'text-gray-400'}>&#9733; </span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the text description of the review",
          "html": "<p class=\"text-lg\">{review_text}</p>"
        }
      ]
    }
  ],
  "Hero Overlay Pattern": [
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a full-width background image, overlaid with text content. The background image should be responsive and mobile-friendly. The text content should be centered and overlaid on top of the background image.",
      "html": "<div class=\"h-screen w-full relative\"><HeroComponent/></div>",
      "components": [
        {
          "name": "HeroComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the hero section with background image and overlaid text content.",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${heroImage});`}><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayTextComponent/></div></div>"
        },
        {
          "name": "OverlayTextComponent",
          "is_standalone": true,
          "description": "Standalone component that renders the text content overlaid on top of the background image.",
          "html": "<div class=\"text-white text-3xl md:text-5xl lg:text-6xl\"><h1>{heroTitle}</h1><p>{heroDescription}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{heroButtonText}</button></div>"
        }
      ]
    }
  ],
  "Hero section with background image and tagline": [
    {
      "description": "The UI should be a hero section with a background image and a tagline. The background image should cover the full width and height of the section, and the tagline should be centered vertically and horizontally on top of the image.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"absolute inset-0 flex items-center justify-center\"><HeroTagline><p>{tagline_text}</p></HeroTagline></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "A standalone component that represents the background image of the hero section.",
          "html": "<div class=\"absolute inset-0 bg-cover bg-center\" style={{ backgroundImage: `url(${background_image_url})` }}></div>"
        },
        {
          "name": "HeroTagline",
          "is_standalone": false,
          "description": "A component that represents the tagline of the hero section. It takes children (the tagline text).",
          "html": "<div class=\"text-2xl font-bold text-white\">{children}</div>"
        }
      ]
    }
  ],
  "Leaderboards and Rankings": [
    {
      "description": "The UI should display a leaderboard that shows rankings of players or teams, along with their points, wins, and losses. The leaderboard should be responsive, mobile-first, and accessible, with a clean and modern design.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><LeaderboardHeader/><table class=\"w-full\"><tbody><RankingRow><PlayerInfo/><StatColumn/><StatColumn/><StatColumn/></RankingRow><!-- Repeat RankingRow for each ranking --></tbody></table></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the header of the leaderboard with column titles.",
          "html": "<thead class=\"bg-gray-100\"><tr><th class=\"px-4 py-2\">Rank</th><th class=\"px-4 py-2\">Player/Team</th><th class=\"px-4 py-2\">Points</th><th class=\"px-4 py-2\">Wins</th><th class=\"px-4 py-2\">Losses</th></tr></thead>"
        },
        {
          "name": "RankingRow",
          "is_standalone": false,
          "description": "(takes children) - Displays a single ranking row with player/team information and stats.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "PlayerInfo",
          "is_standalone": true,
          "description": "(standalone) - Displays the player/team name and avatar.",
          "html": "<td class=\"px-4 py-2\"><img src=\"{avatar_url}\" alt=\"{player_name}\" class=\"w-8 h-8 rounded-full mr-2\"/><span class=\"text-lg\">{player_name}</span></td>"
        },
        {
          "name": "StatColumn",
          "is_standalone": true,
          "description": "(standalone) - Displays a single stat column (e.g., points, wins, losses).",
          "html": "<td class=\"px-4 py-2 text-center\">{stat_value}</td>"
        }
      ]
    },
    {
      "description": "The UI should display a leaderboard that shows rankings of players or teams, along with their points, wins, and losses. The leaderboard should be responsive, mobile-first, and accessible, with a clean and modern design.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><LeaderboardHeader/><table class=\"w-full\"><tbody><RankingRow><PlayerInfo/><StatColumn/><StatColumn/><StatColumn/></RankingRow><!-- Repeat RankingRow for each ranking --></tbody></table></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the header of the leaderboard with column titles.",
          "html": "<thead class=\"bg-gray-100\"><tr><th class=\"px-4 py-2\">Rank</th><th class=\"px-4 py-2\">Player/Team</th><th class=\"px-4 py-2\">Points</th><th class=\"px-4 py-2\">Wins</th><th class=\"px-4 py-2\">Losses</th></tr></thead>"
        },
        {
          "name": "RankingRow",
          "is_standalone": false,
          "description": "(takes children) - Displays a single ranking row with player/team information and stats.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "PlayerInfo",
          "is_standalone": true,
          "description": "(standalone) - Displays the player/team name and avatar.",
          "html": "<td class=\"px-4 py-2\"><img src=\"{avatar_url}\" alt=\"{player_name}\" class=\"w-8 h-8 rounded-full mr-2\"/><span class=\"text-lg\">{player_name}</span></td>"
        },
        {
          "name": "StatColumn",
          "is_standalone": true,
          "description": "(standalone) - Displays a single stat column (e.g., points, wins, losses).",
          "html": "<td class=\"px-4 py-2 text-center\">{stat_value}</td>"
        }
      ]
    },
    {
      "description": "A simple leaderboard and ranking system that displays a table with usernames, rankings, and scores.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><RankingTable><LeaderboardHeader/><!-- Leaderboard rows will be rendered here --></RankingTable></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the header of the leaderboard table.",
          "html": "<thead><tr><th class=\"text-left\">Rank</th><th class=\"text-left\">Username</th><th class=\"text-right\">Score</th></tr></thead>"
        },
        {
          "name": "RankingTable",
          "is_standalone": false,
          "description": "A component that takes children and displays the entire leaderboard table.",
          "html": "<div class=\"overflow-x-auto\"><table class=\"w-full\">{children} </table></div>"
        }
      ]
    },
    {
      "description": "The UI should display a leaderboard that shows rankings of players or teams, along with their points, wins, and losses. The leaderboard should be responsive, mobile-first, and accessible, with a clean and modern design.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><LeaderboardHeader/><table class=\"w-full\"><tbody><RankingRow><PlayerInfo/><StatColumn/><StatColumn/><StatColumn/></RankingRow><!-- Repeat RankingRow for each ranking --></tbody></table></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the header of the leaderboard with column titles.",
          "html": "<thead class=\"bg-gray-100\"><tr><th class=\"px-4 py-2\">Rank</th><th class=\"px-4 py-2\">Player/Team</th><th class=\"px-4 py-2\">Points</th><th class=\"px-4 py-2\">Wins</th><th class=\"px-4 py-2\">Losses</th></tr></thead>"
        },
        {
          "name": "RankingRow",
          "is_standalone": false,
          "description": "(takes children) - Displays a single ranking row with player/team information and stats.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "PlayerInfo",
          "is_standalone": true,
          "description": "(standalone) - Displays the player/team name and avatar.",
          "html": "<td class=\"px-4 py-2\"><img src=\"{avatar_url}\" alt=\"{player_name}\" class=\"w-8 h-8 rounded-full mr-2\"/><span class=\"text-lg\">{player_name}</span></td>"
        },
        {
          "name": "StatColumn",
          "is_standalone": true,
          "description": "(standalone) - Displays a single stat column (e.g., points, wins, losses).",
          "html": "<td class=\"px-4 py-2 text-center\">{stat_value}</td>"
        }
      ]
    },
    {
      "description": "The UI should display a leaderboard that shows rankings of players or teams, along with their points, wins, and losses. The leaderboard should be responsive, mobile-first, and accessible, with a clean and modern design.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><LeaderboardHeader/><table class=\"w-full\"><tbody><RankingRow><PlayerInfo/><StatColumn/><StatColumn/><StatColumn/></RankingRow><!-- Repeat RankingRow for each ranking --></tbody></table></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the header of the leaderboard with column titles.",
          "html": "<thead class=\"bg-gray-100\"><tr><th class=\"px-4 py-2\">Rank</th><th class=\"px-4 py-2\">Player/Team</th><th class=\"px-4 py-2\">Points</th><th class=\"px-4 py-2\">Wins</th><th class=\"px-4 py-2\">Losses</th></tr></thead>"
        },
        {
          "name": "RankingRow",
          "is_standalone": false,
          "description": "(takes children) - Displays a single ranking row with player/team information and stats.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "PlayerInfo",
          "is_standalone": true,
          "description": "(standalone) - Displays the player/team name and avatar.",
          "html": "<td class=\"px-4 py-2\"><img src=\"{avatar_url}\" alt=\"{player_name}\" class=\"w-8 h-8 rounded-full mr-2\"/><span class=\"text-lg\">{player_name}</span></td>"
        },
        {
          "name": "StatColumn",
          "is_standalone": true,
          "description": "(standalone) - Displays a single stat column (e.g., points, wins, losses).",
          "html": "<td class=\"px-4 py-2 text-center\">{stat_value}</td>"
        }
      ]
    },
    {
      "description": "The UI should display a leaderboard that shows rankings of players or teams, along with their points, wins, and losses. The leaderboard should be responsive, mobile-first, and accessible, with a clean and modern design.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><LeaderboardHeader/><table class=\"w-full\"><tbody><RankingRow><PlayerInfo/><StatColumn/><StatColumn/><StatColumn/></RankingRow><!-- Repeat RankingRow for each ranking --></tbody></table></div>",
      "components": [
        {
          "name": "LeaderboardHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the header of the leaderboard with column titles.",
          "html": "<thead class=\"bg-gray-100\"><tr><th class=\"px-4 py-2\">Rank</th><th class=\"px-4 py-2\">Player/Team</th><th class=\"px-4 py-2\">Points</th><th class=\"px-4 py-2\">Wins</th><th class=\"px-4 py-2\">Losses</th></tr></thead>"
        },
        {
          "name": "RankingRow",
          "is_standalone": false,
          "description": "(takes children) - Displays a single ranking row with player/team information and stats.",
          "html": "<tr class=\"border-b border-gray-200 hover:bg-gray-100\">{children}</tr>"
        },
        {
          "name": "PlayerInfo",
          "is_standalone": true,
          "description": "(standalone) - Displays the player/team name and avatar.",
          "html": "<td class=\"px-4 py-2\"><img src=\"{avatar_url}\" alt=\"{player_name}\" class=\"w-8 h-8 rounded-full mr-2\"/><span class=\"text-lg\">{player_name}</span></td>"
        },
        {
          "name": "StatColumn",
          "is_standalone": true,
          "description": "(standalone) - Displays a single stat column (e.g., points, wins, losses).",
          "html": "<td class=\"px-4 py-2 text-center\">{stat_value}</td>"
        }
      ]
    }
  ],
  "Like/Comment/Share Buttons": [
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with each button having an icon and a count for likes/comments/shares.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "(standalone): represents the like button with a like count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{like_icon}</span><span>{like_count} likes</span></button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "(standalone): represents the comment button with a comment count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{comment_icon}</span><span>{comment_count} comments</span></button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "(standalone): represents the share button with a share count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{share_icon}</span><span>{share_count} shares</span></button>"
        }
      ]
    },
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with each button having an icon and a count for likes/comments/shares.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "(standalone): represents the like button with a like count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{like_icon}</span><span>{like_count} likes</span></button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "(standalone): represents the comment button with a comment count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{comment_icon}</span><span>{comment_count} comments</span></button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "(standalone): represents the share button with a share count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{share_icon}</span><span>{share_count} shares</span></button>"
        }
      ]
    },
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with a slight gap between each button.",
      "html": "<div class=\"flex justify-between items-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-thumbs-up\"/>{like_count}</button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-comment\"/>{comment_count}</button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "- standalone",
          "html": "<button class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-share\"/>{share_count}</button>"
        }
      ]
    },
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with each button having an icon and a count for likes/comments/shares.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "(standalone): represents the like button with a like count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{like_icon}</span><span>{like_count} likes</span></button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "(standalone): represents the comment button with a comment count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{comment_icon}</span><span>{comment_count} comments</span></button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "(standalone): represents the share button with a share count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{share_icon}</span><span>{share_count} shares</span></button>"
        }
      ]
    },
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with each button having an icon and a count for likes/comments/shares.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "(standalone): represents the like button with a like count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{like_icon}</span><span>{like_count} likes</span></button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "(standalone): represents the comment button with a comment count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{comment_icon}</span><span>{comment_count} comments</span></button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "(standalone): represents the share button with a share count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{share_icon}</span><span>{share_count} shares</span></button>"
        }
      ]
    },
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with each button having an icon and a count for likes/comments/shares.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "(standalone): represents the like button with a like count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{like_icon}</span><span>{like_count} likes</span></button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "(standalone): represents the comment button with a comment count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{comment_icon}</span><span>{comment_count} comments</span></button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "(standalone): represents the share button with a share count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{share_icon}</span><span>{share_count} shares</span></button>"
        }
      ]
    },
    {
      "description": "A horizontal row of three buttons for liking, commenting, and sharing, with each button having an icon and a count for likes/comments/shares.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><LikeButton/><CommentButton/><ShareButton/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "(standalone): represents the like button with a like count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{like_icon}</span><span>{like_count} likes</span></button>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "(standalone): represents the comment button with a comment count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{comment_icon}</span><span>{comment_count} comments</span></button>"
        },
        {
          "name": "ShareButton",
          "is_standalone": true,
          "description": "(standalone): represents the share button with a share count",
          "html": "<button class=\"inline-flex items-center px-2 py-1 border border-gray-300 rounded-md\"><span class=\"mr-1\">{share_icon}</span><span>{share_count} shares</span></button>"
        }
      ]
    }
  ],
  "Trust Badges: Establish credibility with security badges": [
    {
      "description": "The UI should display a horizontal row of trust badges, each representing a security feature or certification. The badges should be evenly spaced and center-aligned, with sufficient padding between each badge to maintain a clean and organized design.",
      "html": "<div class=\"flex justify-center flex-wrap\"><TrustBadgeList><TrustBadge/><TrustBadge/><TrustBadge/><!-- Add more TrustBadge components here --></TrustBadgeList></div>",
      "components": [
        {
          "name": "TrustBadge",
          "is_standalone": true,
          "description": "(standalone): A single trust badge component that displays a security feature or certification.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src=\"{badge_image}\" alt=\"{badge_alt_text}\" class=\"w-12 h-12 mr-4\"><div class=\"text-lg\">{badge_text}</div></div>"
        },
        {
          "name": "TrustBadgeList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps a collection of `TrustBadge` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of trust badges, each representing a security feature or certification. The badges should be evenly spaced and center-aligned, with sufficient padding between each badge to maintain a clean and organized design.",
      "html": "<div class=\"flex justify-center flex-wrap\"><TrustBadgeList><TrustBadge/><TrustBadge/><TrustBadge/><!-- Add more TrustBadge components here --></TrustBadgeList></div>",
      "components": [
        {
          "name": "TrustBadge",
          "is_standalone": true,
          "description": "(standalone): A single trust badge component that displays a security feature or certification.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src=\"{badge_image}\" alt=\"{badge_alt_text}\" class=\"w-12 h-12 mr-4\"><div class=\"text-lg\">{badge_text}</div></div>"
        },
        {
          "name": "TrustBadgeList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps a collection of `TrustBadge` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of trust badges, each representing a security feature or certification. The badges should be evenly spaced and center-aligned, with sufficient padding between each badge to maintain a clean and organized design.",
      "html": "<div class=\"flex justify-center flex-wrap\"><TrustBadgeList><TrustBadge/><TrustBadge/><TrustBadge/><!-- Add more TrustBadge components here --></TrustBadgeList></div>",
      "components": [
        {
          "name": "TrustBadge",
          "is_standalone": true,
          "description": "(standalone): A single trust badge component that displays a security feature or certification.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src=\"{badge_image}\" alt=\"{badge_alt_text}\" class=\"w-12 h-12 mr-4\"><div class=\"text-lg\">{badge_text}</div></div>"
        },
        {
          "name": "TrustBadgeList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps a collection of `TrustBadge` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of trust badges, each representing a security feature or certification. The badges should be evenly spaced and center-aligned, with sufficient padding between each badge to maintain a clean and organized design.",
      "html": "<div class=\"flex justify-center flex-wrap\"><TrustBadgeList><TrustBadge/><TrustBadge/><TrustBadge/><!-- Add more TrustBadge components here --></TrustBadgeList></div>",
      "components": [
        {
          "name": "TrustBadge",
          "is_standalone": true,
          "description": "(standalone): A single trust badge component that displays a security feature or certification.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src=\"{badge_image}\" alt=\"{badge_alt_text}\" class=\"w-12 h-12 mr-4\"><div class=\"text-lg\">{badge_text}</div></div>"
        },
        {
          "name": "TrustBadgeList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps a collection of `TrustBadge` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of trust badges, each representing a security feature or certification. The badges should be evenly spaced and center-aligned, with sufficient padding between each badge to maintain a clean and organized design.",
      "html": "<div class=\"flex justify-center flex-wrap\"><TrustBadgeList><TrustBadge/><TrustBadge/><TrustBadge/><!-- Add more TrustBadge components here --></TrustBadgeList></div>",
      "components": [
        {
          "name": "TrustBadge",
          "is_standalone": true,
          "description": "(standalone): A single trust badge component that displays a security feature or certification.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src=\"{badge_image}\" alt=\"{badge_alt_text}\" class=\"w-12 h-12 mr-4\"><div class=\"text-lg\">{badge_text}</div></div>"
        },
        {
          "name": "TrustBadgeList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps a collection of `TrustBadge` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of trust badges, each representing a security feature or certification. The badges should be evenly spaced and center-aligned, with sufficient padding between each badge to maintain a clean and organized design.",
      "html": "<div class=\"flex justify-center flex-wrap\"><TrustBadgeList><TrustBadge/><TrustBadge/><TrustBadge/><!-- Add more TrustBadge components here --></TrustBadgeList></div>",
      "components": [
        {
          "name": "TrustBadge",
          "is_standalone": true,
          "description": "(standalone): A single trust badge component that displays a security feature or certification.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src=\"{badge_image}\" alt=\"{badge_alt_text}\" class=\"w-12 h-12 mr-4\"><div class=\"text-lg\">{badge_text}</div></div>"
        },
        {
          "name": "TrustBadgeList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps a collection of `TrustBadge` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of trust badges, each representing a security feature or certification. The badges should be evenly spaced and center-aligned, with sufficient padding between each badge to maintain a clean and organized design.",
      "html": "<div class=\"flex justify-center flex-wrap\"><TrustBadgeList><TrustBadge/><TrustBadge/><TrustBadge/><!-- Add more TrustBadge components here --></TrustBadgeList></div>",
      "components": [
        {
          "name": "TrustBadge",
          "is_standalone": true,
          "description": "(standalone): A single trust badge component that displays a security feature or certification.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src=\"{badge_image}\" alt=\"{badge_alt_text}\" class=\"w-12 h-12 mr-4\"><div class=\"text-lg\">{badge_text}</div></div>"
        },
        {
          "name": "TrustBadgeList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps a collection of `TrustBadge` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Testimonial Quote Text": [
    {
      "description": "The UI should display a quote from a person, with their name and occupation below the quote. The quote should be the main focus, with the person's information secondary. The UI should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><Testimonial><QuoteText/><PersonInfo/></Testimonial></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "standalone, displays the quote text",
          "html": "<blockquote class=\"text-lg font-bold mb-4\">\"{quote_text}\"</blockquote>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "standalone, displays the person's name and occupation",
          "html": "<div class=\"text-gray-600\"><p class=\"font-bold\">{person_name}</p><p class=\"text-sm\">{person_occupation}</p></div>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "takes children, contains the quote text and person information",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial quote text with a LARGE font size, light color text on a darker background, and have some padding around it to make it stand out.",
      "html": "<div class=\"bg-neutral-800 p-4 mb-4\"><TestimonialQuoteText/></div>",
      "components": [
        {
          "name": "TestimonialQuoteText",
          "is_standalone": true,
          "description": "standalone component that displays the testimonial quote text.",
          "html": "<quote class=\"text-3xl font-bold text-white\">{testimonial_text}</quote>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a person, with their name and occupation below the quote. The quote should be the main focus, with the person's information secondary. The UI should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><Testimonial><QuoteText/><PersonInfo/></Testimonial></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "standalone, displays the quote text",
          "html": "<blockquote class=\"text-lg font-bold mb-4\">\"{quote_text}\"</blockquote>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "standalone, displays the person's name and occupation",
          "html": "<div class=\"text-gray-600\"><p class=\"font-bold\">{person_name}</p><p class=\"text-sm\">{person_occupation}</p></div>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "takes children, contains the quote text and person information",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial quote text with a LARGE font size, light color text on a darker background, and have some padding around it to make it stand out.",
      "html": "<div class=\"bg-neutral-800 p-4 mb-4\"><TestimonialQuoteText/></div>",
      "components": [
        {
          "name": "TestimonialQuoteText",
          "is_standalone": true,
          "description": "standalone component that displays the testimonial quote text.",
          "html": "<quote class=\"text-3xl font-bold text-white\">{testimonial_text}</quote>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a person, with their name and occupation below the quote. The quote should be the main focus, with the person's information secondary. The UI should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><Testimonial><QuoteText/><PersonInfo/></Testimonial></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "standalone, displays the quote text",
          "html": "<blockquote class=\"text-lg font-bold mb-4\">\"{quote_text}\"</blockquote>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "standalone, displays the person's name and occupation",
          "html": "<div class=\"text-gray-600\"><p class=\"font-bold\">{person_name}</p><p class=\"text-sm\">{person_occupation}</p></div>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "takes children, contains the quote text and person information",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a person, with their name and occupation below the quote. The quote should be the main focus, with the person's information secondary. The UI should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><Testimonial><QuoteText/><PersonInfo/></Testimonial></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "standalone, displays the quote text",
          "html": "<blockquote class=\"text-lg font-bold mb-4\">\"{quote_text}\"</blockquote>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "standalone, displays the person's name and occupation",
          "html": "<div class=\"text-gray-600\"><p class=\"font-bold\">{person_name}</p><p class=\"text-sm\">{person_occupation}</p></div>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "takes children, contains the quote text and person information",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial quote text with a LARGE font size, light color text on a darker background, and have some padding around it to make it stand out.",
      "html": "<div class=\"bg-neutral-800 p-4 mb-4\"><TestimonialQuoteText/></div>",
      "components": [
        {
          "name": "TestimonialQuoteText",
          "is_standalone": true,
          "description": "standalone component that displays the testimonial quote text.",
          "html": "<quote class=\"text-3xl font-bold text-white\">{testimonial_text}</quote>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial quote with a quote text, an author name, and an optional occupation and organization. The quote text should be displayed prominently, and the author information should be displayed below the quote text.",
      "html": "<div class=\"flex flex-col items-center\"><TestimonialQuote/><AuthorInfo><AuthorName/><AuthorDetails/></AuthorInfo></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays the quote text.",
          "html": "<blockquote class=\"text-lg font-serif italic mb-4\">{quote_text}</blockquote>"
        },
        {
          "name": "AuthorInfo",
          "is_standalone": false,
          "description": "Component that displays the author name, occupation, and organization. Takes children.",
          "html": "<div class=\"flex items-center mb-2\">{children}</div>"
        },
        {
          "name": "AuthorName",
          "is_standalone": true,
          "description": "Standalone component that displays the author name.",
          "html": "<p class=\"text-base font-bold\">{author_name}</p>"
        },
        {
          "name": "AuthorDetails",
          "is_standalone": true,
          "description": "Standalone component that displays the occupation and organization.",
          "html": "<p class=\"text-sm text-gray-600\">{occupation} at {organization}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a person, with their name and occupation below the quote. The quote should be the main focus, with the person's information secondary. The UI should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><Testimonial><QuoteText/><PersonInfo/></Testimonial></div>",
      "components": [
        {
          "name": "QuoteText",
          "is_standalone": true,
          "description": "standalone, displays the quote text",
          "html": "<blockquote class=\"text-lg font-bold mb-4\">\"{quote_text}\"</blockquote>"
        },
        {
          "name": "PersonInfo",
          "is_standalone": true,
          "description": "standalone, displays the person's name and occupation",
          "html": "<div class=\"text-gray-600\"><p class=\"font-bold\">{person_name}</p><p class=\"text-sm\">{person_occupation}</p></div>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "takes children, contains the quote text and person information",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Statistics Section: Showcase impressive metrics and data": [
    {
      "description": "The Statistics Section should display impressive metrics and data in a visually appealing way, with clear headings, easy-to-read fonts, and sufficient whitespace to make the numbers stand out.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-3xl font-bold mb-4\">Key Statistics</h2><StatisticsSection><StatisticCard/><StatisticCard/><StatisticCard/></StatisticsSection></section>",
      "components": [
        {
          "name": "StatisticCard",
          "is_standalone": true,
          "description": "a standalone component that displays a single metric, consisting of a title, value, and optional description.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{statistic_title}</h3><p class=\"text-3xl font-bold\">{statistic_value}</p><p class=\"text-gray-600\">{statistic_description}</p></div>"
        },
        {
          "name": "StatisticsSection",
          "is_standalone": false,
          "description": "a component that takes children, wrapping multiple `StatisticCard`s in a container with a heading.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Scroll-Activated Animation Effect": [
    {
      "description": "The UI should display a box that animates when the user scrolls to a certain point on the page. The box should be invisible until the animation is triggered.",
      "html": "<div class=\"h-screen overflow-y-scroll\"><!-- scrollable content --><p>{scrollable_content}</p><!-- animated box --><AnimatedBox/><!-- more scrollable content --><p>{more_scrollable_content}</p></div>",
      "components": [
        {
          "name": "AnimatedBox",
          "is_standalone": true,
          "description": "(standalone) : A box that animates when the user scrolls to a certain point on the page.",
          "html": "<div class=\"hidden opacity-0 transition-all duration-500\" data-animate-trigger=\"scroll\" data-animate-class=\"block opacity-100\"><!-- animated content --><p>{animated_content}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a box that animates when the user scrolls to a certain point on the page. The box should be invisible until the animation is triggered.",
      "html": "<div class=\"h-screen overflow-y-scroll\"><!-- scrollable content --><p>{scrollable_content}</p><!-- animated box --><AnimatedBox/><!-- more scrollable content --><p>{more_scrollable_content}</p></div>",
      "components": [
        {
          "name": "AnimatedBox",
          "is_standalone": true,
          "description": "(standalone) : A box that animates when the user scrolls to a certain point on the page.",
          "html": "<div class=\"hidden opacity-0 transition-all duration-500\" data-animate-trigger=\"scroll\" data-animate-class=\"block opacity-100\"><!-- animated content --><p>{animated_content}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a scroll-activated animation effect. Initially, the animation is hidden, and as the user scrolls down, the animation is triggered and becomes visible. The animation can be a fade-in, slide-in, or any other creative effect.",
      "html": "<div class=\"h-screen overflow-y-scroll\"><!-- content before the animation --><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet nulla auctor, vestibulum magna sed, convallis ex.</p><AnimatedSection/><!-- content after the animation --><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed sit amet nulla auctor, vestibulum magna sed, convallis ex.</p></div>",
      "components": [
        {
          "name": "AnimatedSection",
          "is_standalone": true,
          "description": "standalone component that wraps the animation effect.",
          "html": "<section class=\"w-full h-64 bg-orange-200 animate-fadeIn\"><!-- animation content --><h2>{animated_title}</h2><p>{animated_text}</p></section>"
        },
        {
          "name": "AnimationTrigger",
          "is_standalone": true,
          "description": "standalone component that triggers the animation when scrolled into view.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-1 bg-transparent\"><!-- empty element to trigger the animation --></div>"
        }
      ]
    },
    {
      "description": "The UI should display a box that animates when the user scrolls to a certain point on the page. The box should be invisible until the animation is triggered.",
      "html": "<div class=\"h-screen overflow-y-scroll\"><!-- scrollable content --><p>{scrollable_content}</p><!-- animated box --><AnimatedBox/><!-- more scrollable content --><p>{more_scrollable_content}</p></div>",
      "components": [
        {
          "name": "AnimatedBox",
          "is_standalone": true,
          "description": "(standalone) : A box that animates when the user scrolls to a certain point on the page.",
          "html": "<div class=\"hidden opacity-0 transition-all duration-500\" data-animate-trigger=\"scroll\" data-animate-class=\"block opacity-100\"><!-- animated content --><p>{animated_content}</p></div>"
        }
      ]
    }
  ],
  "Page Content Header Image": [
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should display a full-width header image with a responsive design, ensuring it looks good on all devices and screen sizes. The image should be centered horizontally and take up the full width of the screen.",
      "html": "<header><PageContentHeaderImage/></header>",
      "components": [
        {
          "name": "PageContentHeaderImage",
          "is_standalone": true,
          "description": "Standalone component, displays a full-width image.",
          "html": "<div class=\"h-screen w-full relative\"><img src=\"{header_image_url}\" alt=\"{header_image_alt}\" class=\"w-full h-full object-cover object-center\"/></div>"
        }
      ]
    }
  ],
  "Loading Animations/Spinners": [
    {
      "description": "The UI should display a loading animation/spinner that indicates to the user that the system is processing information. The animation should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "A standalone component that displays a loading animation.",
          "html": "<div class=\"rounded-full border-2 border-gray-500 h-12 w-12 animate-spin\"><div class=\"rounded-full border-2 border-gray-500 h-10 w-10 mx-auto\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a loading animation/spinner that indicates to the user that the system is processing information. The animation should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "A standalone component that displays a loading animation.",
          "html": "<div class=\"rounded-full border-2 border-gray-500 h-12 w-12 animate-spin\"><div class=\"rounded-full border-2 border-gray-500 h-10 w-10 mx-auto\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a loading animation/spinner that indicates to the user that the system is processing information. The animation should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "A standalone component that displays a loading animation.",
          "html": "<div class=\"rounded-full border-2 border-gray-500 h-12 w-12 animate-spin\"><div class=\"rounded-full border-2 border-gray-500 h-10 w-10 mx-auto\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a loading animation/spinner that indicates to the user that the system is processing information. The animation should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "A standalone component that displays a loading animation.",
          "html": "<div class=\"rounded-full border-2 border-gray-500 h-12 w-12 animate-spin\"><div class=\"rounded-full border-2 border-gray-500 h-10 w-10 mx-auto\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a loading animation/spinner that indicates to the user that the system is processing information. The animation should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "A standalone component that displays a loading animation.",
          "html": "<div class=\"rounded-full border-2 border-gray-500 h-12 w-12 animate-spin\"><div class=\"rounded-full border-2 border-gray-500 h-10 w-10 mx-auto\"></div></div>"
        }
      ]
    }
  ],
  "Audio Players": [
    {
      "description": "The UI should be a responsive audio player with controls to play, pause, and adjust volume. It should be mobile-friendly and accessible.",
      "html": "<!-- Audio player container --><div class=\"flex flex-col items-center justify-center p-4 md:p-8\"><!-- Audio player controls --><AudioPlayer/></div>",
      "components": [
        {
          "name": "AudioPlayer",
          "is_standalone": true,
          "description": "standalone component that contains the audio player controls",
          "html": "<!-- Audio player controls container --><div class=\"flex flex-row items-center justify-center mb-4\"><!-- Play/pause button --><PlayPauseButton/><!-- Volume controller --><VolumeController/><!-- Audio seek bar --><AudioSeekBar/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "standalone component that toggles play and pause states",
          "html": "<!-- Play/pause button container --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_icon} <!-- play or pause icon --></button>"
        },
        {
          "name": "VolumeController",
          "is_standalone": true,
          "description": "standalone component that allows adjusting the volume",
          "html": "<!-- Volume controller container --><div class=\"flex flex-row items-center\"><!-- Volume icon --><span class=\"text-gray-600\">{volume_icon} <!-- volume icon --></span><!-- Volume slider --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"100\" step=\"1\" value=\"{volume_level}\"/></div>"
        },
        {
          "name": "AudioSeekBar",
          "is_standalone": true,
          "description": "standalone component that displays the audio progress",
          "html": "<!-- Audio seek bar container --><div class=\"flex flex-row items-center\"><!-- Audio elapsed time --><span class=\"text-gray-600\">{elapsed_time} <!-- elapsed time --></span><!-- Audio seek bar --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"{audio_duration}\" step=\"1\" value=\"{current_time}\"/><!-- Audio remaining time --><span class=\"text-gray-600\">{remaining_time} <!-- remaining time --></span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive audio player with controls to play, pause, and adjust volume. It should be mobile-friendly and accessible.",
      "html": "<!-- Audio player container --><div class=\"flex flex-col items-center justify-center p-4 md:p-8\"><!-- Audio player controls --><AudioPlayer/></div>",
      "components": [
        {
          "name": "AudioPlayer",
          "is_standalone": true,
          "description": "standalone component that contains the audio player controls",
          "html": "<!-- Audio player controls container --><div class=\"flex flex-row items-center justify-center mb-4\"><!-- Play/pause button --><PlayPauseButton/><!-- Volume controller --><VolumeController/><!-- Audio seek bar --><AudioSeekBar/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "standalone component that toggles play and pause states",
          "html": "<!-- Play/pause button container --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_icon} <!-- play or pause icon --></button>"
        },
        {
          "name": "VolumeController",
          "is_standalone": true,
          "description": "standalone component that allows adjusting the volume",
          "html": "<!-- Volume controller container --><div class=\"flex flex-row items-center\"><!-- Volume icon --><span class=\"text-gray-600\">{volume_icon} <!-- volume icon --></span><!-- Volume slider --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"100\" step=\"1\" value=\"{volume_level}\"/></div>"
        },
        {
          "name": "AudioSeekBar",
          "is_standalone": true,
          "description": "standalone component that displays the audio progress",
          "html": "<!-- Audio seek bar container --><div class=\"flex flex-row items-center\"><!-- Audio elapsed time --><span class=\"text-gray-600\">{elapsed_time} <!-- elapsed time --></span><!-- Audio seek bar --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"{audio_duration}\" step=\"1\" value=\"{current_time}\"/><!-- Audio remaining time --><span class=\"text-gray-600\">{remaining_time} <!-- remaining time --></span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive audio player with controls to play, pause, and adjust volume. It should be mobile-friendly and accessible.",
      "html": "<!-- Audio player container --><div class=\"flex flex-col items-center justify-center p-4 md:p-8\"><!-- Audio player controls --><AudioPlayer/></div>",
      "components": [
        {
          "name": "AudioPlayer",
          "is_standalone": true,
          "description": "standalone component that contains the audio player controls",
          "html": "<!-- Audio player controls container --><div class=\"flex flex-row items-center justify-center mb-4\"><!-- Play/pause button --><PlayPauseButton/><!-- Volume controller --><VolumeController/><!-- Audio seek bar --><AudioSeekBar/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "standalone component that toggles play and pause states",
          "html": "<!-- Play/pause button container --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_icon} <!-- play or pause icon --></button>"
        },
        {
          "name": "VolumeController",
          "is_standalone": true,
          "description": "standalone component that allows adjusting the volume",
          "html": "<!-- Volume controller container --><div class=\"flex flex-row items-center\"><!-- Volume icon --><span class=\"text-gray-600\">{volume_icon} <!-- volume icon --></span><!-- Volume slider --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"100\" step=\"1\" value=\"{volume_level}\"/></div>"
        },
        {
          "name": "AudioSeekBar",
          "is_standalone": true,
          "description": "standalone component that displays the audio progress",
          "html": "<!-- Audio seek bar container --><div class=\"flex flex-row items-center\"><!-- Audio elapsed time --><span class=\"text-gray-600\">{elapsed_time} <!-- elapsed time --></span><!-- Audio seek bar --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"{audio_duration}\" step=\"1\" value=\"{current_time}\"/><!-- Audio remaining time --><span class=\"text-gray-600\">{remaining_time} <!-- remaining time --></span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive audio player with controls to play, pause, and adjust volume. It should be mobile-friendly and accessible.",
      "html": "<!-- Audio player container --><div class=\"flex flex-col items-center justify-center p-4 md:p-8\"><!-- Audio player controls --><AudioPlayer/></div>",
      "components": [
        {
          "name": "AudioPlayer",
          "is_standalone": true,
          "description": "standalone component that contains the audio player controls",
          "html": "<!-- Audio player controls container --><div class=\"flex flex-row items-center justify-center mb-4\"><!-- Play/pause button --><PlayPauseButton/><!-- Volume controller --><VolumeController/><!-- Audio seek bar --><AudioSeekBar/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "standalone component that toggles play and pause states",
          "html": "<!-- Play/pause button container --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_icon} <!-- play or pause icon --></button>"
        },
        {
          "name": "VolumeController",
          "is_standalone": true,
          "description": "standalone component that allows adjusting the volume",
          "html": "<!-- Volume controller container --><div class=\"flex flex-row items-center\"><!-- Volume icon --><span class=\"text-gray-600\">{volume_icon} <!-- volume icon --></span><!-- Volume slider --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"100\" step=\"1\" value=\"{volume_level}\"/></div>"
        },
        {
          "name": "AudioSeekBar",
          "is_standalone": true,
          "description": "standalone component that displays the audio progress",
          "html": "<!-- Audio seek bar container --><div class=\"flex flex-row items-center\"><!-- Audio elapsed time --><span class=\"text-gray-600\">{elapsed_time} <!-- elapsed time --></span><!-- Audio seek bar --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"{audio_duration}\" step=\"1\" value=\"{current_time}\"/><!-- Audio remaining time --><span class=\"text-gray-600\">{remaining_time} <!-- remaining time --></span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive audio player with controls to play, pause, and adjust volume. It should be mobile-friendly and accessible.",
      "html": "<!-- Audio player container --><div class=\"flex flex-col items-center justify-center p-4 md:p-8\"><!-- Audio player controls --><AudioPlayer/></div>",
      "components": [
        {
          "name": "AudioPlayer",
          "is_standalone": true,
          "description": "standalone component that contains the audio player controls",
          "html": "<!-- Audio player controls container --><div class=\"flex flex-row items-center justify-center mb-4\"><!-- Play/pause button --><PlayPauseButton/><!-- Volume controller --><VolumeController/><!-- Audio seek bar --><AudioSeekBar/></div>"
        },
        {
          "name": "PlayPauseButton",
          "is_standalone": true,
          "description": "standalone component that toggles play and pause states",
          "html": "<!-- Play/pause button container --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_pause_icon} <!-- play or pause icon --></button>"
        },
        {
          "name": "VolumeController",
          "is_standalone": true,
          "description": "standalone component that allows adjusting the volume",
          "html": "<!-- Volume controller container --><div class=\"flex flex-row items-center\"><!-- Volume icon --><span class=\"text-gray-600\">{volume_icon} <!-- volume icon --></span><!-- Volume slider --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"100\" step=\"1\" value=\"{volume_level}\"/></div>"
        },
        {
          "name": "AudioSeekBar",
          "is_standalone": true,
          "description": "standalone component that displays the audio progress",
          "html": "<!-- Audio seek bar container --><div class=\"flex flex-row items-center\"><!-- Audio elapsed time --><span class=\"text-gray-600\">{elapsed_time} <!-- elapsed time --></span><!-- Audio seek bar --><input type=\"range\" class=\"w-full h-2 rounded-lg\" min=\"0\" max=\"{audio_duration}\" step=\"1\" value=\"{current_time}\"/><!-- Audio remaining time --><span class=\"text-gray-600\">{remaining_time} <!-- remaining time --></span></div>"
        }
      ]
    }
  ],
  "Page Content Paragraph": [
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "A simple paragraph of text that is responsive, accessible, and readable on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ContentParagraph/></div>",
      "components": [
        {
          "name": "ContentParagraph",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg leading-relaxed mb-4\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "A simple paragraph of text that is responsive, accessible, and readable on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ContentParagraph/></div>",
      "components": [
        {
          "name": "ContentParagraph",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg leading-relaxed mb-4\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "A simple paragraph of text that is responsive, accessible, and readable on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ContentParagraph/></div>",
      "components": [
        {
          "name": "ContentParagraph",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg leading-relaxed mb-4\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "A simple paragraph of text that is responsive, accessible, and readable on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ContentParagraph/></div>",
      "components": [
        {
          "name": "ContentParagraph",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg leading-relaxed mb-4\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a paragraph of text with a clear hierarchy, suitable for a content page.",
      "html": "<div class=\"max-w-prose mx-auto p-4 lg:p-6\"><Paragraph/></div>",
      "components": [
        {
          "name": "Paragraph",
          "is_standalone": true,
          "description": "A standalone component that displays a paragraph of text.",
          "html": "<p class=\"text-lg leading-relaxed\">{paragraph_text}</p>"
        }
      ]
    }
  ],
  "Year/Month Picker Calendars": [
    {
      "description": "The UI should display a responsive, mobile-first calendar picker that allows users to select a year and month. The calendar should be accessible and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><YearMonthPicker/></div>",
      "components": [
        {
          "name": "YearMonthPicker",
          "is_standalone": true,
          "description": "a standalone component that contains the year and month pickers.",
          "html": "<div class=\"flex flex-col\"><CalendarHeader/><div class=\"flex justify-center mb-4\"><YearPicker/><MonthPicker/></div><table class=\"w-full\"><!-- calendar table goes here --></table></div>"
        },
        {
          "name": "YearPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a year.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{year1}\">{year1}</option><option value=\"{year2}\">{year2}</option><!-- more options --></select>"
        },
        {
          "name": "MonthPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a month.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{month1}\">{month1}</option><option value=\"{month2}\">{month2}</option><!-- more options --></select>"
        },
        {
          "name": "CalendarHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the current year and month.",
          "html": "<div class=\"flex justify-center mb-4\"><h2 class=\"text-lg\">{current_year} {current_month}</h2></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive, mobile-first calendar picker that allows users to select a year and month. The calendar should be accessible and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><YearMonthPicker/></div>",
      "components": [
        {
          "name": "YearMonthPicker",
          "is_standalone": true,
          "description": "a standalone component that contains the year and month pickers.",
          "html": "<div class=\"flex flex-col\"><CalendarHeader/><div class=\"flex justify-center mb-4\"><YearPicker/><MonthPicker/></div><table class=\"w-full\"><!-- calendar table goes here --></table></div>"
        },
        {
          "name": "YearPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a year.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{year1}\">{year1}</option><option value=\"{year2}\">{year2}</option><!-- more options --></select>"
        },
        {
          "name": "MonthPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a month.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{month1}\">{month1}</option><option value=\"{month2}\">{month2}</option><!-- more options --></select>"
        },
        {
          "name": "CalendarHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the current year and month.",
          "html": "<div class=\"flex justify-center mb-4\"><h2 class=\"text-lg\">{current_year} {current_month}</h2></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive, mobile-first calendar picker that allows users to select a year and month. The calendar should be accessible and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><YearMonthPicker/></div>",
      "components": [
        {
          "name": "YearMonthPicker",
          "is_standalone": true,
          "description": "a standalone component that contains the year and month pickers.",
          "html": "<div class=\"flex flex-col\"><CalendarHeader/><div class=\"flex justify-center mb-4\"><YearPicker/><MonthPicker/></div><table class=\"w-full\"><!-- calendar table goes here --></table></div>"
        },
        {
          "name": "YearPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a year.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{year1}\">{year1}</option><option value=\"{year2}\">{year2}</option><!-- more options --></select>"
        },
        {
          "name": "MonthPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a month.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{month1}\">{month1}</option><option value=\"{month2}\">{month2}</option><!-- more options --></select>"
        },
        {
          "name": "CalendarHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the current year and month.",
          "html": "<div class=\"flex justify-center mb-4\"><h2 class=\"text-lg\">{current_year} {current_month}</h2></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive, mobile-first calendar picker that allows users to select a year and month. The calendar should be accessible and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><YearMonthPicker/></div>",
      "components": [
        {
          "name": "YearMonthPicker",
          "is_standalone": true,
          "description": "a standalone component that contains the year and month pickers.",
          "html": "<div class=\"flex flex-col\"><CalendarHeader/><div class=\"flex justify-center mb-4\"><YearPicker/><MonthPicker/></div><table class=\"w-full\"><!-- calendar table goes here --></table></div>"
        },
        {
          "name": "YearPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a year.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{year1}\">{year1}</option><option value=\"{year2}\">{year2}</option><!-- more options --></select>"
        },
        {
          "name": "MonthPicker",
          "is_standalone": true,
          "description": "a standalone component that allows users to select a month.",
          "html": "<select class=\"block w-full p-2 pl-10 text-sm text-gray-700\"><option value=\"{month1}\">{month1}</option><option value=\"{month2}\">{month2}</option><!-- more options --></select>"
        },
        {
          "name": "CalendarHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the current year and month.",
          "html": "<div class=\"flex justify-center mb-4\"><h2 class=\"text-lg\">{current_year} {current_month}</h2></div>"
        }
      ]
    }
  ],
  "Error/Success Messages": [
    {
      "description": "The UI should display error or success messages in a clear and concise manner, with a clear visual indicator of the message type (error or success). The message should be easily readable and accessible on various devices.",
      "html": "<div class=\"flex justify-center\"><ErrorMessage/><!-- or --><SuccessMessage/><!-- or --><MessageType/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "standalone component to display an error message",
          "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{error_message}</strong><span class=\"block\">{error_details}</span></div>"
        },
        {
          "name": "SuccessMessage",
          "is_standalone": true,
          "description": "standalone component to display a success message",
          "html": "<div class=\"bg-green-100 border border-green-500 text-green-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{success_message}</strong><span class=\"block\">{success_details}</span></div>"
        },
        {
          "name": "MessageType",
          "is_standalone": true,
          "description": "standalone component to display a generic message (can be used for error or success messages)",
          "html": "<div class=\"bg-{message_color}-100 border border-{message_color}-500 text-{message_color}-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{message}</strong><span class=\"block\">{message_details}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display error or success messages in a clear and concise manner, with a clear visual indicator of the message type (error or success). The message should be easily readable and accessible on various devices.",
      "html": "<div class=\"flex justify-center\"><ErrorMessage/><!-- or --><SuccessMessage/><!-- or --><MessageType/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "standalone component to display an error message",
          "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{error_message}</strong><span class=\"block\">{error_details}</span></div>"
        },
        {
          "name": "SuccessMessage",
          "is_standalone": true,
          "description": "standalone component to display a success message",
          "html": "<div class=\"bg-green-100 border border-green-500 text-green-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{success_message}</strong><span class=\"block\">{success_details}</span></div>"
        },
        {
          "name": "MessageType",
          "is_standalone": true,
          "description": "standalone component to display a generic message (can be used for error or success messages)",
          "html": "<div class=\"bg-{message_color}-100 border border-{message_color}-500 text-{message_color}-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{message}</strong><span class=\"block\">{message_details}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display error or success messages in a clear and concise manner, with a clear visual indicator of the message type (error or success). The message should be easily readable and accessible on various devices.",
      "html": "<div class=\"flex justify-center\"><ErrorMessage/><!-- or --><SuccessMessage/><!-- or --><MessageType/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "standalone component to display an error message",
          "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{error_message}</strong><span class=\"block\">{error_details}</span></div>"
        },
        {
          "name": "SuccessMessage",
          "is_standalone": true,
          "description": "standalone component to display a success message",
          "html": "<div class=\"bg-green-100 border border-green-500 text-green-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{success_message}</strong><span class=\"block\">{success_details}</span></div>"
        },
        {
          "name": "MessageType",
          "is_standalone": true,
          "description": "standalone component to display a generic message (can be used for error or success messages)",
          "html": "<div class=\"bg-{message_color}-100 border border-{message_color}-500 text-{message_color}-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{message}</strong><span class=\"block\">{message_details}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display error or success messages in a clear and concise manner, with a clear visual indicator of the message type (error or success). The message should be easily readable and accessible on various devices.",
      "html": "<div class=\"flex justify-center\"><ErrorMessage/><!-- or --><SuccessMessage/><!-- or --><MessageType/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "standalone component to display an error message",
          "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{error_message}</strong><span class=\"block\">{error_details}</span></div>"
        },
        {
          "name": "SuccessMessage",
          "is_standalone": true,
          "description": "standalone component to display a success message",
          "html": "<div class=\"bg-green-100 border border-green-500 text-green-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{success_message}</strong><span class=\"block\">{success_details}</span></div>"
        },
        {
          "name": "MessageType",
          "is_standalone": true,
          "description": "standalone component to display a generic message (can be used for error or success messages)",
          "html": "<div class=\"bg-{message_color}-100 border border-{message_color}-500 text-{message_color}-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{message}</strong><span class=\"block\">{message_details}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display error or success messages in a clear and concise manner, with a clear visual indicator of the message type (error or success). The message should be easily readable and accessible on various devices.",
      "html": "<div class=\"flex justify-center\"><ErrorMessage/><!-- or --><SuccessMessage/><!-- or --><MessageType/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "standalone component to display an error message",
          "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{error_message}</strong><span class=\"block\">{error_details}</span></div>"
        },
        {
          "name": "SuccessMessage",
          "is_standalone": true,
          "description": "standalone component to display a success message",
          "html": "<div class=\"bg-green-100 border border-green-500 text-green-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{success_message}</strong><span class=\"block\">{success_details}</span></div>"
        },
        {
          "name": "MessageType",
          "is_standalone": true,
          "description": "standalone component to display a generic message (can be used for error or success messages)",
          "html": "<div class=\"bg-{message_color}-100 border border-{message_color}-500 text-{message_color}-700 px-4 py-3 rounded relative\"><strong class=\"font-bold\">{message}</strong><span class=\"block\">{message_details}</span></div>"
        }
      ]
    }
  ],
  "Customer Review Profile": [
    {
      "description": "The UI should display a customer's profile with a profile picture, name, rating, and a brief review. The profile picture should be circular and placed to the left of the review information. The rating should be displayed using a 5-star system.",
      "html": "<div class=\"flex items-center mb-4\"><ProfilePicture/><ReviewInformation><h5 class=\"text-lg\">{customer_name}</h5><Rating/><ReviewText/></ReviewInformation></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\">"
        },
        {
          "name": "ReviewInformation",
          "is_standalone": false,
          "description": "(takes children) - contains the customer's name, rating, and review",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's rating using a 5-star system",
          "html": "<div class=\"flex mb-2\">{Array(5).fill(0).map((_, i) =>( <span key={i} class={`text-yellow-400 ${i < rating ? 'fill-current' : 'fill-none'}`}><i class=\"fas fa-star\"></i></span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's brief review",
          "html": "<p class=\"text-gray-600\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer's profile with a profile picture, name, rating, and a brief review. The profile picture should be circular and placed to the left of the review information. The rating should be displayed using a 5-star system.",
      "html": "<div class=\"flex items-center mb-4\"><ProfilePicture/><ReviewInformation><h5 class=\"text-lg\">{customer_name}</h5><Rating/><ReviewText/></ReviewInformation></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\">"
        },
        {
          "name": "ReviewInformation",
          "is_standalone": false,
          "description": "(takes children) - contains the customer's name, rating, and review",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's rating using a 5-star system",
          "html": "<div class=\"flex mb-2\">{Array(5).fill(0).map((_, i) =>( <span key={i} class={`text-yellow-400 ${i < rating ? 'fill-current' : 'fill-none'}`}><i class=\"fas fa-star\"></i></span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's brief review",
          "html": "<p class=\"text-gray-600\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The Customer Review Profile UI should display a customer's name, profile picture, rating, review, and date of review. It should be responsive, displaying the profile picture and review text side by side on larger screens, and stacked on smaller screens.",
      "html": "<div class=\"md:flex md:items-center mb-4\"><CustomerProfilePicture/><div class=\"md:ml-4\"><CustomerName/><ReviewContainer><ReviewRating/><ReviewText/><ReviewDate/></ReviewContainer></div></div>",
      "components": [
        {
          "name": "CustomerProfilePicture",
          "is_standalone": true,
          "description": "(standalone): displays the customer's profile picture",
          "html": "<img src={profile_picture_url} alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "ReviewRating",
          "is_standalone": true,
          "description": "(standalone): displays the customer's rating (e.g. 4/5 stars)",
          "html": "<div class=\"text-lg\">{rating_out_of_five}/ 5</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the customer's written review",
          "html": "<p>{review_text}</p>"
        },
        {
          "name": "ReviewDate",
          "is_standalone": true,
          "description": "(standalone): displays the date of the review",
          "html": "<p class=\"text-sm text-gray-600\">{review_date}</p>"
        },
        {
          "name": "CustomerName",
          "is_standalone": true,
          "description": "(standalone): displays the customer's name",
          "html": "<h3 class=\"text-lg\">{customer_name}</h3>"
        },
        {
          "name": "ReviewContainer",
          "is_standalone": false,
          "description": "(takes children): contains the review rating, text, and date",
          "html": "<div class=\"flex flex-col md:flex-row items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a customer's profile with a profile picture, name, rating, and a brief review. The profile picture should be circular and placed to the left of the review information. The rating should be displayed using a 5-star system.",
      "html": "<div class=\"flex items-center mb-4\"><ProfilePicture/><ReviewInformation><h5 class=\"text-lg\">{customer_name}</h5><Rating/><ReviewText/></ReviewInformation></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\">"
        },
        {
          "name": "ReviewInformation",
          "is_standalone": false,
          "description": "(takes children) - contains the customer's name, rating, and review",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's rating using a 5-star system",
          "html": "<div class=\"flex mb-2\">{Array(5).fill(0).map((_, i) =>( <span key={i} class={`text-yellow-400 ${i < rating ? 'fill-current' : 'fill-none'}`}><i class=\"fas fa-star\"></i></span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's brief review",
          "html": "<p class=\"text-gray-600\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer's profile with a profile picture, name, rating, and a brief review. The profile picture should be circular and placed to the left of the review information. The rating should be displayed using a 5-star system.",
      "html": "<div class=\"flex items-center mb-4\"><ProfilePicture/><ReviewInformation><h5 class=\"text-lg\">{customer_name}</h5><Rating/><ReviewText/></ReviewInformation></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\">"
        },
        {
          "name": "ReviewInformation",
          "is_standalone": false,
          "description": "(takes children) - contains the customer's name, rating, and review",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's rating using a 5-star system",
          "html": "<div class=\"flex mb-2\">{Array(5).fill(0).map((_, i) =>( <span key={i} class={`text-yellow-400 ${i < rating ? 'fill-current' : 'fill-none'}`}><i class=\"fas fa-star\"></i></span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's brief review",
          "html": "<p class=\"text-gray-600\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a customer's profile with a profile picture, name, rating, and a brief review. The profile picture should be circular and placed to the left of the review information. The rating should be displayed using a 5-star system.",
      "html": "<div class=\"flex items-center mb-4\"><ProfilePicture/><ReviewInformation><h5 class=\"text-lg\">{customer_name}</h5><Rating/><ReviewText/></ReviewInformation></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\">"
        },
        {
          "name": "ReviewInformation",
          "is_standalone": false,
          "description": "(takes children) - contains the customer's name, rating, and review",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's rating using a 5-star system",
          "html": "<div class=\"flex mb-2\">{Array(5).fill(0).map((_, i) =>( <span key={i} class={`text-yellow-400 ${i < rating ? 'fill-current' : 'fill-none'}`}><i class=\"fas fa-star\"></i></span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's brief review",
          "html": "<p class=\"text-gray-600\">{review_text}</p>"
        }
      ]
    },
    {
      "description": "The Customer Review Profile UI should display a customer's name, profile picture, rating, review, and date of review. It should be responsive, displaying the profile picture and review text side by side on larger screens, and stacked on smaller screens.",
      "html": "<div class=\"md:flex md:items-center mb-4\"><CustomerProfilePicture/><div class=\"md:ml-4\"><CustomerName/><ReviewContainer><ReviewRating/><ReviewText/><ReviewDate/></ReviewContainer></div></div>",
      "components": [
        {
          "name": "CustomerProfilePicture",
          "is_standalone": true,
          "description": "(standalone): displays the customer's profile picture",
          "html": "<img src={profile_picture_url} alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "ReviewRating",
          "is_standalone": true,
          "description": "(standalone): displays the customer's rating (e.g. 4/5 stars)",
          "html": "<div class=\"text-lg\">{rating_out_of_five}/ 5</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone): displays the customer's written review",
          "html": "<p>{review_text}</p>"
        },
        {
          "name": "ReviewDate",
          "is_standalone": true,
          "description": "(standalone): displays the date of the review",
          "html": "<p class=\"text-sm text-gray-600\">{review_date}</p>"
        },
        {
          "name": "CustomerName",
          "is_standalone": true,
          "description": "(standalone): displays the customer's name",
          "html": "<h3 class=\"text-lg\">{customer_name}</h3>"
        },
        {
          "name": "ReviewContainer",
          "is_standalone": false,
          "description": "(takes children): contains the review rating, text, and date",
          "html": "<div class=\"flex flex-col md:flex-row items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a customer's profile with a profile picture, name, rating, and a brief review. The profile picture should be circular and placed to the left of the review information. The rating should be displayed using a 5-star system.",
      "html": "<div class=\"flex items-center mb-4\"><ProfilePicture/><ReviewInformation><h5 class=\"text-lg\">{customer_name}</h5><Rating/><ReviewText/></ReviewInformation></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"Customer Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\">"
        },
        {
          "name": "ReviewInformation",
          "is_standalone": false,
          "description": "(takes children) - contains the customer's name, rating, and review",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's rating using a 5-star system",
          "html": "<div class=\"flex mb-2\">{Array(5).fill(0).map((_, i) =>( <span key={i} class={`text-yellow-400 ${i < rating ? 'fill-current' : 'fill-none'}`}><i class=\"fas fa-star\"></i></span>))}</div>"
        },
        {
          "name": "ReviewText",
          "is_standalone": true,
          "description": "(standalone) - displays the customer's brief review",
          "html": "<p class=\"text-gray-600\">{review_text}</p>"
        }
      ]
    }
  ],
  "Instructor/Author Profiles": [
    {
      "description": "The UI should display the profile information of an instructor or author, including their name, profile picture, bio, and a list of their courses or publications.",
      "html": "<div class=\"flex flex-col items-center p-4\"><ProfileHeader/><BioSection/><h2 class=\"text-lg font-bold mb-2\">Courses</h2><CourseList><!-- Course items will be rendered here --></CourseList></div>",
      "components": [
        {
          "name": "ProfileHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the profile picture and name of the instructor/author.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{name}\" class=\"w-24 h-24 rounded-full mr-4\"/><h1 class=\"text-2xl font-bold\">{name}</h1></div>"
        },
        {
          "name": "BioSection",
          "is_standalone": true,
          "description": "A standalone component that displays the bio of the instructor/author.",
          "html": "<div class=\"mb-4\"><p class=\"text-lg\">{bio}</p></div>"
        },
        {
          "name": "CourseList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of courses or publications.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Callout Box Title": [
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a title that grabs the user's attention. It should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-yellow-100 rounded\"><CalloutBoxTitle/><!-- Callout box content goes here --></div>",
      "components": [
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays a title.",
          "html": "<h2 class=\"text-lg font-bold\">{callout_box_title}</h2>"
        }
      ]
    }
  ],
  "User Profile Card: Compact user info and profile link": [
    {
      "description": "A compact, responsive user profile card that displays a user's name, profile picture, and a link to their profile page.",
      "html": "<div class=\"bg-white rounded-md shadow-md p-4\"><UserProfileCard/></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that contains all the user profile information.",
          "html": "<div class=\"flex items-center mb-2\"><ProfilePicture/><div class=\"ml-4\"><Username/><ProfileLink/></div></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full object-cover object-top\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name.",
          "html": "<h2 class=\"text-lg font-bold\">{username}</h2>"
        },
        {
          "name": "ProfileLink",
          "is_standalone": true,
          "description": "A standalone component that displays a link to the user's profile page.",
          "html": "<a href={profile_url} class=\"text-blue-600 hover:text-blue-900\">View Profile</a>"
        }
      ]
    },
    {
      "description": "A compact, responsive user profile card that displays a user's name, profile picture, and a link to their profile page.",
      "html": "<div class=\"bg-white rounded-md shadow-md p-4\"><UserProfileCard/></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that contains all the user profile information.",
          "html": "<div class=\"flex items-center mb-2\"><ProfilePicture/><div class=\"ml-4\"><Username/><ProfileLink/></div></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full object-cover object-top\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name.",
          "html": "<h2 class=\"text-lg font-bold\">{username}</h2>"
        },
        {
          "name": "ProfileLink",
          "is_standalone": true,
          "description": "A standalone component that displays a link to the user's profile page.",
          "html": "<a href={profile_url} class=\"text-blue-600 hover:text-blue-900\">View Profile</a>"
        }
      ]
    },
    {
      "description": "The UI should be a compact user profile card that displays the user's profile picture, name, and a link to their profile.",
      "html": "<div class=\"bg-white rounded shadow-md p-4\"><UserProfileCard/></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "Standalone component that contains the user's profile information.",
          "html": "<div class=\"flex items-center\"><ProfilePicture/><div class=\"ml-4\"><p class=\"text-lg\">{userName}</p><ProfileLink/></div></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the user's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "ProfileLink",
          "is_standalone": true,
          "description": "Standalone component that links to the user's profile.",
          "html": "<a href={profileUrl} class=\"text-blue-600 hover:text-blue-400\">View Profile</a>"
        }
      ]
    },
    {
      "description": "A compact, responsive user profile card that displays a user's name, profile picture, and a link to their profile page.",
      "html": "<div class=\"bg-white rounded-md shadow-md p-4\"><UserProfileCard/></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that contains all the user profile information.",
          "html": "<div class=\"flex items-center mb-2\"><ProfilePicture/><div class=\"ml-4\"><Username/><ProfileLink/></div></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full object-cover object-top\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name.",
          "html": "<h2 class=\"text-lg font-bold\">{username}</h2>"
        },
        {
          "name": "ProfileLink",
          "is_standalone": true,
          "description": "A standalone component that displays a link to the user's profile page.",
          "html": "<a href={profile_url} class=\"text-blue-600 hover:text-blue-900\">View Profile</a>"
        }
      ]
    },
    {
      "description": "A compact, responsive user profile card that displays a user's name, profile picture, and a link to their profile page.",
      "html": "<div class=\"bg-white rounded-md shadow-md p-4\"><UserProfileCard/></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that contains all the user profile information.",
          "html": "<div class=\"flex items-center mb-2\"><ProfilePicture/><div class=\"ml-4\"><Username/><ProfileLink/></div></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full object-cover object-top\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name.",
          "html": "<h2 class=\"text-lg font-bold\">{username}</h2>"
        },
        {
          "name": "ProfileLink",
          "is_standalone": true,
          "description": "A standalone component that displays a link to the user's profile page.",
          "html": "<a href={profile_url} class=\"text-blue-600 hover:text-blue-900\">View Profile</a>"
        }
      ]
    }
  ],
  "Footer Social Media Link": [
    {
      "description": "The UI should be a responsive footer with social media links. The links should be aligned horizontally on desktop and vertically on mobile. Each link should have an icon representing the social media platform.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><div class=\"max-w-md mx-auto\"><Footer><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></Footer></div></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "(standalone) - A single social media link with an icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon} text-2xl mx-2 text-gray-600 hover:text-gray-900 transition duration-300\"></i></a>"
        },
        {
          "name": "Footer",
          "is_standalone": false,
          "description": "(takes children) - The footer component containing the social media links.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer with social media links. The links should be aligned horizontally on desktop and vertically on mobile. Each link should have an icon representing the social media platform.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><div class=\"max-w-md mx-auto\"><Footer><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></Footer></div></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "(standalone) - A single social media link with an icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon} text-2xl mx-2 text-gray-600 hover:text-gray-900 transition duration-300\"></i></a>"
        },
        {
          "name": "Footer",
          "is_standalone": false,
          "description": "(takes children) - The footer component containing the social media links.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer with social media links. The links should be aligned horizontally on desktop and vertically on mobile. Each link should have an icon representing the social media platform.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><div class=\"max-w-md mx-auto\"><Footer><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></Footer></div></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "(standalone) - A single social media link with an icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon} text-2xl mx-2 text-gray-600 hover:text-gray-900 transition duration-300\"></i></a>"
        },
        {
          "name": "Footer",
          "is_standalone": false,
          "description": "(takes children) - The footer component containing the social media links.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer with social media links. The links should be aligned horizontally on desktop and vertically on mobile. Each link should have an icon representing the social media platform.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><div class=\"max-w-md mx-auto\"><Footer><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></Footer></div></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "(standalone) - A single social media link with an icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon} text-2xl mx-2 text-gray-600 hover:text-gray-900 transition duration-300\"></i></a>"
        },
        {
          "name": "Footer",
          "is_standalone": false,
          "description": "(takes children) - The footer component containing the social media links.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer with social media links. The links should be aligned horizontally on desktop and vertically on mobile. Each link should have an icon representing the social media platform.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><div class=\"max-w-md mx-auto\"><Footer><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></Footer></div></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "(standalone) - A single social media link with an icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon} text-2xl mx-2 text-gray-600 hover:text-gray-900 transition duration-300\"></i></a>"
        },
        {
          "name": "Footer",
          "is_standalone": false,
          "description": "(takes children) - The footer component containing the social media links.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer with social media links. The links should be aligned horizontally on desktop and vertically on mobile. Each link should have an icon representing the social media platform.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><div class=\"max-w-md mx-auto\"><Footer><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></Footer></div></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "(standalone) - A single social media link with an icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon} text-2xl mx-2 text-gray-600 hover:text-gray-900 transition duration-300\"></i></a>"
        },
        {
          "name": "Footer",
          "is_standalone": false,
          "description": "(takes children) - The footer component containing the social media links.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer with social media links. The links should be aligned horizontally on desktop and vertically on mobile. Each link should have an icon representing the social media platform.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><div class=\"max-w-md mx-auto\"><Footer><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></Footer></div></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "(standalone) - A single social media link with an icon.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener\" aria-label=\"{social_media_name}\"><i class=\"fab fa-{social_media_icon} text-2xl mx-2 text-gray-600 hover:text-gray-900 transition duration-300\"></i></a>"
        },
        {
          "name": "Footer",
          "is_standalone": false,
          "description": "(takes children) - The footer component containing the social media links.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-no-wrap\">{children}</div>"
        }
      ]
    }
  ],
  "Related Project Suggestions": [
    {
      "description": "The UI should be a list of suggested projects, each with a title, description, and a \"View Project\" button. The list should be displayed in a grid format, with 2-3 columns on larger screens and 1 column on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto pt-4\"><h2 class=\"text-lg font-bold mb-4\">Related Projects</h2><ProjectSuggestionsList><ProjectSuggestionCard/><ProjectSuggestionCard/><ProjectSuggestionCard/></ProjectSuggestionsList></div>",
      "components": [
        {
          "name": "ProjectSuggestionCard",
          "is_standalone": true,
          "description": "a standalone component that displays a single project suggestion.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><h3 class=\"text-lg font-bold\">{project_title}</h3><p class=\"text-gray-600\">{project_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Project</button></div>"
        },
        {
          "name": "ProjectSuggestionsList",
          "is_standalone": false,
          "description": "a component that takes children, displaying a list of `ProjectSuggestionCard`s.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Blog Post Author Info": [
    {
      "description": "The UI should display the author's information, including their name, profile picture, and a short bio. The component should be responsive, with the profile picture above the author's name and bio on mobile devices, and to the left of the text on larger screens.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ProfilePicture/><div class=\"ml-4 md:ml-0\"><h5 class=\"mb-1\">{author_name}</h5><AuthorBio/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the author's profile picture.",
          "html": "<img src=\"{author_profile_picture}\" alt=\"{author_name}\" class=\"w-12 h-12 rounded-full mx-auto md:mx-0\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that displays the author's bio.",
          "html": "<p class=\"text-sm\">{author_bio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's information, including their name, profile picture, and a short bio. The component should be responsive, with the profile picture above the author's name and bio on mobile devices, and to the left of the text on larger screens.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ProfilePicture/><div class=\"ml-4 md:ml-0\"><h5 class=\"mb-1\">{author_name}</h5><AuthorBio/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the author's profile picture.",
          "html": "<img src=\"{author_profile_picture}\" alt=\"{author_name}\" class=\"w-12 h-12 rounded-full mx-auto md:mx-0\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that displays the author's bio.",
          "html": "<p class=\"text-sm\">{author_bio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's information, including their name, profile picture, and a short bio. The component should be responsive, with the profile picture above the author's name and bio on mobile devices, and to the left of the text on larger screens.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ProfilePicture/><div class=\"ml-4 md:ml-0\"><h5 class=\"mb-1\">{author_name}</h5><AuthorBio/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the author's profile picture.",
          "html": "<img src=\"{author_profile_picture}\" alt=\"{author_name}\" class=\"w-12 h-12 rounded-full mx-auto md:mx-0\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that displays the author's bio.",
          "html": "<p class=\"text-sm\">{author_bio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name, profile picture, and a short bio. It should be a compact, rectangular box with a subtle border and padding.",
      "html": "<div class=\"max-w-md p-4 mx-auto bg-white rounded shadow-md\"><AuthorInfo/></div>",
      "components": [
        {
          "name": "AuthorInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the author's information.",
          "html": "<div class=\"flex items-center mb-2\"><Avatar/><div class=\"ml-2\"><p class=\"text-lg\">{authorName}</p><Bio/></div></div>"
        },
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "A standalone component that displays the author's profile picture.",
          "html": "<img src={profilePictureUrl} class=\"w-12 h-12 rounded-full\" alt=\"{authorName}'s profile picture\"/>"
        },
        {
          "name": "Bio",
          "is_standalone": true,
          "description": "A standalone component that displays the author's bio.",
          "html": "<p class=\"text-gray-600\">{authorBio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's information, including their name, profile picture, and a short bio. The component should be responsive, with the profile picture above the author's name and bio on mobile devices, and to the left of the text on larger screens.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ProfilePicture/><div class=\"ml-4 md:ml-0\"><h5 class=\"mb-1\">{author_name}</h5><AuthorBio/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the author's profile picture.",
          "html": "<img src=\"{author_profile_picture}\" alt=\"{author_name}\" class=\"w-12 h-12 rounded-full mx-auto md:mx-0\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that displays the author's bio.",
          "html": "<p class=\"text-sm\">{author_bio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's information, including their name, profile picture, and a short bio. The component should be responsive, with the profile picture above the author's name and bio on mobile devices, and to the left of the text on larger screens.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ProfilePicture/><div class=\"ml-4 md:ml-0\"><h5 class=\"mb-1\">{author_name}</h5><AuthorBio/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the author's profile picture.",
          "html": "<img src=\"{author_profile_picture}\" alt=\"{author_name}\" class=\"w-12 h-12 rounded-full mx-auto md:mx-0\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that displays the author's bio.",
          "html": "<p class=\"text-sm\">{author_bio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's information, including their name, profile picture, and a short bio. The component should be responsive, with the profile picture above the author's name and bio on mobile devices, and to the left of the text on larger screens.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ProfilePicture/><div class=\"ml-4 md:ml-0\"><h5 class=\"mb-1\">{author_name}</h5><AuthorBio/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the author's profile picture.",
          "html": "<img src=\"{author_profile_picture}\" alt=\"{author_name}\" class=\"w-12 h-12 rounded-full mx-auto md:mx-0\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that displays the author's bio.",
          "html": "<p class=\"text-sm\">{author_bio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name, profile picture, and a short bio. It should be a compact, rectangular box with a subtle border and padding.",
      "html": "<div class=\"max-w-md p-4 mx-auto bg-white rounded shadow-md\"><AuthorInfo/></div>",
      "components": [
        {
          "name": "AuthorInfo",
          "is_standalone": true,
          "description": "A standalone component that displays the author's information.",
          "html": "<div class=\"flex items-center mb-2\"><Avatar/><div class=\"ml-2\"><p class=\"text-lg\">{authorName}</p><Bio/></div></div>"
        },
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "A standalone component that displays the author's profile picture.",
          "html": "<img src={profilePictureUrl} class=\"w-12 h-12 rounded-full\" alt=\"{authorName}'s profile picture\"/>"
        },
        {
          "name": "Bio",
          "is_standalone": true,
          "description": "A standalone component that displays the author's bio.",
          "html": "<p class=\"text-gray-600\">{authorBio}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's information, including their name, profile picture, and a short bio. The component should be responsive, with the profile picture above the author's name and bio on mobile devices, and to the left of the text on larger screens.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><ProfilePicture/><div class=\"ml-4 md:ml-0\"><h5 class=\"mb-1\">{author_name}</h5><AuthorBio/></div></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the author's profile picture.",
          "html": "<img src=\"{author_profile_picture}\" alt=\"{author_name}\" class=\"w-12 h-12 rounded-full mx-auto md:mx-0\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that displays the author's bio.",
          "html": "<p class=\"text-sm\">{author_bio}</p>"
        }
      ]
    }
  ],
  "User profile summary and bio": [
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile summary and bio. It should include the user's name, profile picture, and bio text. The profile picture should be a circular image, and the bio text should be in a smaller font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileSummary/><UserProfileBio/></div>",
      "components": [
        {
          "name": "UserProfileSummary",
          "is_standalone": true,
          "description": "A standalone component that displays the user's name and profile picture.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{user_name}\" class=\"w-16 h-16 rounded-full mr-4\"><h2 class=\"text-lg font-bold\">{user_name}</h2></div>"
        },
        {
          "name": "UserProfileBio",
          "is_standalone": true,
          "description": "A standalone component that displays the user's bio text.",
          "html": "<p class=\"text-gray-600 text-sm\">{bio_text}</p>"
        }
      ]
    }
  ],
  "Send and save draft buttons": [
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have two buttons, \"Send\" and \"Save Draft\", side by side, with sufficient padding and margin to make them easily clickable. The buttons should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ButtonGroup><SendButton/><SaveDraftButton/></ButtonGroup></div>",
      "components": [
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        },
        {
          "name": "SaveDraftButton",
          "is_standalone": true,
          "description": "a standalone button component.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Save Draft</button>"
        },
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "a component that takes two children.",
          "html": "<div class=\"flex justify-center mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Video Background with Overlay Text": [
    {
      "description": "The UI should be a full-screen video background with overlay text that is centered and responsive to different screen sizes.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><div class=\"absolute top-0 left-0 h-screen w-screen flex justify-center items-center\"><OverlayText><!-- overlay text content will go here --></OverlayText></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a full-screen video.",
          "html": "<video autoplay loop muted playsinline><source src={videoUrl} type=\"video/mp4\"/></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": false,
          "description": "A component that takes children and displays text over the video background.",
          "html": "<div class=\"text-3xl font-bold text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-bleed video background with an overlay of text. The video should be responsive and take up the full screen. The overlay text should be centered and have a contrasting background to ensure readability.",
      "html": "<div class=\"flex h-screen w-full\"><VideoBackground/><OverlayText/></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "Standalone component that renders a full-bleed video background.",
          "html": "<video class=\"h-full w-full object-cover\" loop autoplay muted><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag.</video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "Standalone component that renders the overlay text.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center py-4 px-8 bg-white bg-opacity-75 rounded\"><h1 class=\"text-3xl\">{heading}</h1><p class=\"text-lg\">{subheading}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text that is centered and responsive to different screen sizes.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><div class=\"absolute top-0 left-0 h-screen w-screen flex justify-center items-center\"><OverlayText><!-- overlay text content will go here --></OverlayText></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a full-screen video.",
          "html": "<video autoplay loop muted playsinline><source src={videoUrl} type=\"video/mp4\"/></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": false,
          "description": "A component that takes children and displays text over the video background.",
          "html": "<div class=\"text-3xl font-bold text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text that is centered and responsive to different screen sizes.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><div class=\"absolute top-0 left-0 h-screen w-screen flex justify-center items-center\"><OverlayText><!-- overlay text content will go here --></OverlayText></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a full-screen video.",
          "html": "<video autoplay loop muted playsinline><source src={videoUrl} type=\"video/mp4\"/></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": false,
          "description": "A component that takes children and displays text over the video background.",
          "html": "<div class=\"text-3xl font-bold text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-bleed video background with an overlay of text. The video should be responsive and take up the full screen. The overlay text should be centered and have a contrasting background to ensure readability.",
      "html": "<div class=\"flex h-screen w-full\"><VideoBackground/><OverlayText/></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "Standalone component that renders a full-bleed video background.",
          "html": "<video class=\"h-full w-full object-cover\" loop autoplay muted><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag.</video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "Standalone component that renders the overlay text.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center py-4 px-8 bg-white bg-opacity-75 rounded\"><h1 class=\"text-3xl\">{heading}</h1><p class=\"text-lg\">{subheading}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a video background with overlay text, where the video takes up the full height and width of the screen, and the overlay text is centered on top of the video with a subtle background to make it readable.",
      "html": "<div class=\"h-screen w-screen relative\"><VideoBackground/><OverlayText/></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "standalone component that renders a full-screen video background",
          "html": "<div class=\"absolute top-0 left-0 w-screen h-screen\"><video autoplay loop muted><source src=\"{video_source}\" type=\"video/mp4\"/></video></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "standalone component that renders text with a subtle background on top of the video",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl bg-gray-800 bg-opacity-50 py-4 px-8 rounded\">{overlay_text}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text that is centered and responsive to different screen sizes.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><div class=\"absolute top-0 left-0 h-screen w-screen flex justify-center items-center\"><OverlayText><!-- overlay text content will go here --></OverlayText></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a full-screen video.",
          "html": "<video autoplay loop muted playsinline><source src={videoUrl} type=\"video/mp4\"/></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": false,
          "description": "A component that takes children and displays text over the video background.",
          "html": "<div class=\"text-3xl font-bold text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text that is centered and responsive to different screen sizes.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><div class=\"absolute top-0 left-0 h-screen w-screen flex justify-center items-center\"><OverlayText><!-- overlay text content will go here --></OverlayText></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a full-screen video.",
          "html": "<video autoplay loop muted playsinline><source src={videoUrl} type=\"video/mp4\"/></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": false,
          "description": "A component that takes children and displays text over the video background.",
          "html": "<div class=\"text-3xl font-bold text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text that is centered and responsive to different screen sizes.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><div class=\"absolute top-0 left-0 h-screen w-screen flex justify-center items-center\"><OverlayText><!-- overlay text content will go here --></OverlayText></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a full-screen video.",
          "html": "<video autoplay loop muted playsinline><source src={videoUrl} type=\"video/mp4\"/></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": false,
          "description": "A component that takes children and displays text over the video background.",
          "html": "<div class=\"text-3xl font-bold text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text that is centered and responsive to different screen sizes.",
      "html": "<div class=\"h-screen w-screen overflow-hidden\"><VideoBackground/><div class=\"absolute top-0 left-0 h-screen w-screen flex justify-center items-center\"><OverlayText><!-- overlay text content will go here --></OverlayText></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "A standalone component that displays a full-screen video.",
          "html": "<video autoplay loop muted playsinline><source src={videoUrl} type=\"video/mp4\"/></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": false,
          "description": "A component that takes children and displays text over the video background.",
          "html": "<div class=\"text-3xl font-bold text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-bleed video background with an overlay of text. The video should be responsive and take up the full screen. The overlay text should be centered and have a contrasting background to ensure readability.",
      "html": "<div class=\"flex h-screen w-full\"><VideoBackground/><OverlayText/></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "Standalone component that renders a full-bleed video background.",
          "html": "<video class=\"h-full w-full object-cover\" loop autoplay muted><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag.</video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "Standalone component that renders the overlay text.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center py-4 px-8 bg-white bg-opacity-75 rounded\"><h1 class=\"text-3xl\">{heading}</h1><p class=\"text-lg\">{subheading}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-screen video background with overlay text. The video background should be responsive and adapt to different screen sizes. The overlay text should be centered and easily readable.",
      "html": "<div class=\"h-screen w-full\"><VideoBackground/><div class=\"absolute inset-0 flex justify-center items-center\"><OverlayText/></div></div>",
      "components": [
        {
          "name": "VideoBackground",
          "is_standalone": true,
          "description": "standalone component that renders a full-screen video background",
          "html": "<video autoplay muted loop class=\"h-full w-full object-cover\"><source src=\"{video_source}\" type=\"video/mp4\"></video>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "standalone component that renders the overlay text",
          "html": "<h1 class=\"text-3xl text-white\">{overlay_text}</h1>"
        }
      ]
    }
  ],
  "Warning or error message for invalid input": [
    {
      "description": "The UI should display a warning or error message for invalid input. It should be a rectangular box with a red or orange background color, a clear and concise message, and an \"X\" icon to close the message.",
      "html": "<div class=\"bg-red-100 p-4 rounded mb-4\"><ErrorMessage/><CloseButton/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "(standalone): Displays the error message.",
          "html": "<p class=\"text-red-700\">{error_message}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "(standalone): Displays an \"X\" icon to close the message.",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">&times;</button>"
        }
      ]
    },
    {
      "description": "The UI should display a warning or error message for invalid input. It should be a rectangular box with a red or orange background color, a clear and concise message, and an \"X\" icon to close the message.",
      "html": "<div class=\"bg-red-100 p-4 rounded mb-4\"><ErrorMessage/><CloseButton/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "(standalone): Displays the error message.",
          "html": "<p class=\"text-red-700\">{error_message}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "(standalone): Displays an \"X\" icon to close the message.",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">&times;</button>"
        }
      ]
    },
    {
      "description": "The UI should display a warning or error message for invalid input. It should be a rectangular box with a red or orange background color, a clear and concise message, and an \"X\" icon to close the message.",
      "html": "<div class=\"bg-red-100 p-4 rounded mb-4\"><ErrorMessage/><CloseButton/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "(standalone): Displays the error message.",
          "html": "<p class=\"text-red-700\">{error_message}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "(standalone): Displays an \"X\" icon to close the message.",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">&times;</button>"
        }
      ]
    }
  ],
  "Tweet edit button for post revisions": [
    {
      "description": "The UI should be a small, circular button with a pencil icon, indicating that it's an edit button for tweet revisions. It should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-end mb-2\"><EditButton/></div>",
      "components": [
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "A standalone component that displays an edit icon and allows users to edit a tweet revision.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded-full\"><i class=\"fas fa-pencil-alt text-sm\" aria-label=\"Edit tweet revision\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a small, circular button with a pencil icon, indicating that it's an edit button for tweet revisions. It should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-end mb-2\"><EditButton/></div>",
      "components": [
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "A standalone component that displays an edit icon and allows users to edit a tweet revision.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded-full\"><i class=\"fas fa-pencil-alt text-sm\" aria-label=\"Edit tweet revision\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a small, circular button with a pencil icon, indicating that it's an edit button for tweet revisions. It should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-end mb-2\"><EditButton/></div>",
      "components": [
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "A standalone component that displays an edit icon and allows users to edit a tweet revision.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded-full\"><i class=\"fas fa-pencil-alt text-sm\" aria-label=\"Edit tweet revision\"></i></button>"
        }
      ]
    }
  ],
  "Hero Image/Header": [
    {
      "description": "The UI should display a hero image/header section that takes up the full width of the screen, with a background image, a heading, and a call-to-action (CTA) button. The heading and CTA button should be centered horizontally and vertically within the hero image.",
      "html": "<section class=\"h-screen w-full relative\"><HeroImageHeader/><!-- hero image background --><div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-center\"><HeroHeading/><CallToAction/></div></section>",
      "components": [
        {
          "name": "HeroImageHeader",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-screen w-full bg-cover bg-center\" style={`background-image: url(${hero_image_url});`}></div>"
        },
        {
          "name": "HeroHeading",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h1 class=\"text-3xl font-bold\">{hero_heading}</h1>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        }
      ]
    }
  ],
  "Project/Task Management Tools": [
    {
      "description": "A responsive dashboard that displays a list of projects with their respective tasks. Each project should have a title, description, and a list of tasks. Tasks should have a title, description, and a completion status indicator.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Project Dashboard</h1><ul class=\"divide-y\"><ProjectCard/><ProjectCard/><!-- Add more ProjectCard components as needed --></ul></div>",
      "components": [
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single project.",
          "html": "<div class=\"p-4 mb-4 bg-white rounded shadow\"><h2 class=\"text-lg font-bold\">{project_title}</h2><p class=\"text-gray-600\">{project_description}</p><TaskList><TaskItem/><TaskItem/><!-- Add more TaskItem components as needed --></TaskList></div>"
        },
        {
          "name": "TaskList",
          "is_standalone": false,
          "description": "A component that takes children (individual tasks) to display.",
          "html": "<ul class=\"pl-4\">{children}</ul>"
        },
        {
          "name": "TaskItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single task.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><input type=\"checkbox\" class=\"mr-2\" {checked}/><span class=\"text-gray-600\">{task_title}</span><p class=\"text-gray-400\">{task_description}</p></li>"
        }
      ]
    }
  ],
  "Forum Categories and Subforums": [
    {
      "description": "The UI should display a list of forum categories, each containing a title and a list of subforums. Each subforum should also display a title and a brief description.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Forum Categories</h1><ul><ForumCategory/><ForumCategory/><!-- Add more ForumCategory components here --></ul></div>",
      "components": [
        {
          "name": "ForumCategory",
          "is_standalone": true,
          "description": "standalone component that displays a category title and a list of subforums.",
          "html": "<li class=\"py-2\"><h2 class=\"text-lg font-bold\">{category_title}</h2><ul><Subforum/><Subforum/><!-- Add more Subforum components here --></ul></li>"
        },
        {
          "name": "Subforum",
          "is_standalone": true,
          "description": "standalone component that displays a subforum title and description.",
          "html": "<li class=\"py-2\"><h3 class=\"text-md font-bold\">{subforum_title}</h3><p>{subforum_description}</p></li>"
        }
      ]
    }
  ],
  "Alert Notification Text": [
    {
      "description": "The UI should display a notification text with a background color, text color, and optional close button.",
      "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 p-4 mb-4\"><NotificationText/>{hasCloseButton && <CloseButton/>}\n</div>",
      "components": [
        {
          "name": "NotificationText",
          "is_standalone": true,
          "description": "standalone component that displays the notification text",
          "html": "<p class=\"text-sm\">{notification_text}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "standalone component that displays a close button (optional)",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">×</button>"
        }
      ]
    },
    {
      "description": "The UI should display a notification text with a background color, text color, and optional close button.",
      "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 p-4 mb-4\"><NotificationText/>{hasCloseButton && <CloseButton/>}\n</div>",
      "components": [
        {
          "name": "NotificationText",
          "is_standalone": true,
          "description": "standalone component that displays the notification text",
          "html": "<p class=\"text-sm\">{notification_text}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "standalone component that displays a close button (optional)",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">×</button>"
        }
      ]
    },
    {
      "description": "The UI should display a notification text with a background color, text color, and optional close button.",
      "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 p-4 mb-4\"><NotificationText/>{hasCloseButton && <CloseButton/>}\n</div>",
      "components": [
        {
          "name": "NotificationText",
          "is_standalone": true,
          "description": "standalone component that displays the notification text",
          "html": "<p class=\"text-sm\">{notification_text}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "standalone component that displays a close button (optional)",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">×</button>"
        }
      ]
    },
    {
      "description": "The UI should display a notification text with a background color, text color, and optional close button.",
      "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 p-4 mb-4\"><NotificationText/>{hasCloseButton && <CloseButton/>}\n</div>",
      "components": [
        {
          "name": "NotificationText",
          "is_standalone": true,
          "description": "standalone component that displays the notification text",
          "html": "<p class=\"text-sm\">{notification_text}</p>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "standalone component that displays a close button (optional)",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300\">×</button>"
        }
      ]
    }
  ],
  "Upload file input field with file type and size limits": [
    {
      "description": "A file upload input field with a label, allowing users to select a file to upload, with file type and size limits.",
      "html": "<div class=\"flex flex-col\"><FileInputLabel/><FileUploadInput/><FileSizeLimit/><FileTypeLimit/></div>",
      "components": [
        {
          "name": "FileUploadInput",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<input type=\"file\" id=\"file-upload\" class=\"block w-full text-sm text-gray-700 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold\" accept=\"{accepted_file_types}\" max-size=\"{max_file_size}\"/>"
        },
        {
          "name": "FileInputLabel",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<label for=\"file-upload\" class=\"text-sm mb-2 block\">Select a file to upload:</label>"
        },
        {
          "name": "FileSizeLimit",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-xs text-gray-500\">Max file size: {max_file_size} MB</p>"
        },
        {
          "name": "FileTypeLimit",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-xs text-gray-500\">Accepted file types: {accepted_file_types}</p>"
        }
      ]
    },
    {
      "description": "The UI should have a file input field that allows users to upload a file. The input field should have a label indicating the accepted file types and a maximum file size.",
      "html": "<div class=\"flex flex-col gap-2\"><Label>Upload File ({acceptedFileTypes})</Label><FileInput/><Description>Max file size: {maxFileSize}MB</Description></div>",
      "components": [
        {
          "name": "FileInput",
          "is_standalone": true,
          "description": "(standalone) - The file input field",
          "html": "<input type=\"file\" class=\"block w-full text-sm text-gray-700 file:mr-4 file:py-2 file:px-4 file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\" accept={acceptedFileTypes} maxLength={maxFileSize * 1024 * 1024}/>"
        },
        {
          "name": "Label",
          "is_standalone": false,
          "description": "(takes children) - The label for the file input field",
          "html": "<label class=\"block mb-2 text-sm font-medium text-gray-700\">{children}</label>"
        },
        {
          "name": "Description",
          "is_standalone": false,
          "description": "(takes children) - The description of the file input field",
          "html": "<p class=\"text-sm text-gray-500\">{children}</p>"
        }
      ]
    }
  ],
  "Community Forum and Chat Tools": [
    {
      "description": "The UI should be a responsive community forum and chat tools page that allows users to discuss topics, ask questions, and interact with each other through a chat system. The page should be divided into two main sections: a forum section that displays a list of discussion topics, and a chat section that allows users to send messages to each other.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Community Forum</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-2/3 xl:w-2/3 px-4 mb-4\"><ForumTopicList/></div><div class=\"w-full md:w-1/3 xl:w-1/3 px-4 mb-4\"><h2 class=\"text-2xl font-bold mb-4\">Chat</h2><ChatMessageList/><ChatInput/></div></div></div>",
      "components": [
        {
          "name": "ForumTopicList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ForumTopicCard** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        },
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "A standalone component that allows users to input and send messages.",
          "html": "<form class=\"flex mb-4\"><input type=\"text\" class=\"w-full p-2 pl-10 text-gray-700\" placeholder=\"Type a message...\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button></form>"
        },
        {
          "name": "ChatMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a single chat message, including the sender's username and message text.",
          "html": "<div class=\"mb-4 p-4 border border-gray-200 rounded\"><p class=\"text-gray-600\">{username}</p><p class=\"text-gray-600\">{messageText}</p></div>"
        },
        {
          "name": "ChatMessageList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ChatMessage** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive community forum and chat tools page that allows users to discuss topics, ask questions, and interact with each other through a chat system. The page should be divided into two main sections: a forum section that displays a list of discussion topics, and a chat section that allows users to send messages to each other.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Community Forum</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-2/3 xl:w-2/3 px-4 mb-4\"><ForumTopicList/></div><div class=\"w-full md:w-1/3 xl:w-1/3 px-4 mb-4\"><h2 class=\"text-2xl font-bold mb-4\">Chat</h2><ChatMessageList/><ChatInput/></div></div></div>",
      "components": [
        {
          "name": "ForumTopicList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ForumTopicCard** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        },
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "A standalone component that allows users to input and send messages.",
          "html": "<form class=\"flex mb-4\"><input type=\"text\" class=\"w-full p-2 pl-10 text-gray-700\" placeholder=\"Type a message...\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button></form>"
        },
        {
          "name": "ChatMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a single chat message, including the sender's username and message text.",
          "html": "<div class=\"mb-4 p-4 border border-gray-200 rounded\"><p class=\"text-gray-600\">{username}</p><p class=\"text-gray-600\">{messageText}</p></div>"
        },
        {
          "name": "ChatMessageList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ChatMessage** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive community forum and chat tools page that allows users to discuss topics, ask questions, and interact with each other through a chat system. The page should be divided into two main sections: a forum section that displays a list of discussion topics, and a chat section that allows users to send messages to each other.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Community Forum</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-2/3 xl:w-2/3 px-4 mb-4\"><ForumTopicList/></div><div class=\"w-full md:w-1/3 xl:w-1/3 px-4 mb-4\"><h2 class=\"text-2xl font-bold mb-4\">Chat</h2><ChatMessageList/><ChatInput/></div></div></div>",
      "components": [
        {
          "name": "ForumTopicList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ForumTopicCard** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        },
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "A standalone component that allows users to input and send messages.",
          "html": "<form class=\"flex mb-4\"><input type=\"text\" class=\"w-full p-2 pl-10 text-gray-700\" placeholder=\"Type a message...\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button></form>"
        },
        {
          "name": "ChatMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a single chat message, including the sender's username and message text.",
          "html": "<div class=\"mb-4 p-4 border border-gray-200 rounded\"><p class=\"text-gray-600\">{username}</p><p class=\"text-gray-600\">{messageText}</p></div>"
        },
        {
          "name": "ChatMessageList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ChatMessage** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive community forum and chat tools page that allows users to discuss topics, ask questions, and interact with each other through a chat system. The page should be divided into two main sections: a forum section that displays a list of discussion topics, and a chat section that allows users to send messages to each other.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Community Forum</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-2/3 xl:w-2/3 px-4 mb-4\"><ForumTopicList/></div><div class=\"w-full md:w-1/3 xl:w-1/3 px-4 mb-4\"><h2 class=\"text-2xl font-bold mb-4\">Chat</h2><ChatMessageList/><ChatInput/></div></div></div>",
      "components": [
        {
          "name": "ForumTopicList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ForumTopicCard** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        },
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "A standalone component that allows users to input and send messages.",
          "html": "<form class=\"flex mb-4\"><input type=\"text\" class=\"w-full p-2 pl-10 text-gray-700\" placeholder=\"Type a message...\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button></form>"
        },
        {
          "name": "ChatMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a single chat message, including the sender's username and message text.",
          "html": "<div class=\"mb-4 p-4 border border-gray-200 rounded\"><p class=\"text-gray-600\">{username}</p><p class=\"text-gray-600\">{messageText}</p></div>"
        },
        {
          "name": "ChatMessageList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ChatMessage** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive community forum and chat tools page that allows users to discuss topics, ask questions, and interact with each other through a chat system. The page should be divided into two main sections: a forum section that displays a list of discussion topics, and a chat section that allows users to send messages to each other.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Community Forum</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-2/3 xl:w-2/3 px-4 mb-4\"><ForumTopicList/></div><div class=\"w-full md:w-1/3 xl:w-1/3 px-4 mb-4\"><h2 class=\"text-2xl font-bold mb-4\">Chat</h2><ChatMessageList/><ChatInput/></div></div></div>",
      "components": [
        {
          "name": "ForumTopicList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ForumTopicCard** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        },
        {
          "name": "ChatInput",
          "is_standalone": true,
          "description": "A standalone component that allows users to input and send messages.",
          "html": "<form class=\"flex mb-4\"><input type=\"text\" class=\"w-full p-2 pl-10 text-gray-700\" placeholder=\"Type a message...\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Send</button></form>"
        },
        {
          "name": "ChatMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a single chat message, including the sender's username and message text.",
          "html": "<div class=\"mb-4 p-4 border border-gray-200 rounded\"><p class=\"text-gray-600\">{username}</p><p class=\"text-gray-600\">{messageText}</p></div>"
        },
        {
          "name": "ChatMessageList",
          "is_standalone": false,
          "description": "A component that takes children (a list of **ChatMessage** components) and displays them in a scrollable list.",
          "html": "<div class=\"overflow-y-auto max-h-screen\">{children}</div>"
        }
      ]
    }
  ],
  "User Ranks and Badges": [
    {
      "description": "The UI should display a user's rank and badges in a responsive, mobile-friendly format. The rank should be displayed prominently, with the badges listed below it.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileRank/><UserProfileBadges><UserProfileBadge/><UserProfileBadge/><!-- Add more badges here --></UserProfileBadges></div>",
      "components": [
        {
          "name": "UserProfileRank",
          "is_standalone": true,
          "description": "A standalone component that displays the user's rank.",
          "html": "<h2 class=\"text-2xl font-bold\">{rank_name}</h2><p class=\"text-lg text-gray-600\">{rank_description}</p>"
        },
        {
          "name": "UserProfileBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single badge.",
          "html": "<div class=\"flex items-center mb-2\"><img src={badge_image} alt={badge_name} class=\"w-8 h-8 mr-2\"/><span class=\"text-lg\">{badge_name}</span></div>"
        },
        {
          "name": "UserProfileBadges",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of badges.",
          "html": "<ul class=\"list-none m-0 p-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a responsive, mobile-friendly format. The rank should be displayed prominently, with the badges listed below it.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileRank/><UserProfileBadges><UserProfileBadge/><UserProfileBadge/><!-- Add more badges here --></UserProfileBadges></div>",
      "components": [
        {
          "name": "UserProfileRank",
          "is_standalone": true,
          "description": "A standalone component that displays the user's rank.",
          "html": "<h2 class=\"text-2xl font-bold\">{rank_name}</h2><p class=\"text-lg text-gray-600\">{rank_description}</p>"
        },
        {
          "name": "UserProfileBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single badge.",
          "html": "<div class=\"flex items-center mb-2\"><img src={badge_image} alt={badge_name} class=\"w-8 h-8 mr-2\"/><span class=\"text-lg\">{badge_name}</span></div>"
        },
        {
          "name": "UserProfileBadges",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of badges.",
          "html": "<ul class=\"list-none m-0 p-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a responsive and accessible way. The rank should be displayed as a title, and the badges should be displayed as a list of icons with tooltips.",
      "html": "<div class=\"flex flex-col items-center md:flex-row md:items-start md:justify-center\"><UserRank/><BadgeList><Badge/><Badge/><!-- Add more badges here --></BadgeList></div>",
      "components": [
        {
          "name": "UserRank",
          "is_standalone": true,
          "description": "A standalone component that displays the user's rank as a title.",
          "html": "<h2 class=\"text-lg font-bold\">{user_rank}</h2>"
        },
        {
          "name": "BadgeList",
          "is_standalone": false,
          "description": "A component that takes children, which are `Badge` components.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row\">{children}</ul>"
        },
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "A standalone component that displays a badge icon with a tooltip.",
          "html": "<li class=\"mr-2 mb-2 md:mr-4 md:mb-4\"><img src={badge_icon} alt={badge_tooltip} class=\"w-8 h-8 md:w-10 md:h-10\"/><span class=\"sr-only\">{badge_tooltip}</span></li>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a compact and visually appealing way. The design should be responsive, with the rank and badges arranged horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-center md:flex-nowrap\"><RankList><RankBadge/><RankBadge/><RankBadge/></RankList></div>",
      "components": [
        {
          "name": "RankBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single badge and its associated rank.",
          "html": "<div class=\"bg-gray-200 p-2 rounded-md\"><img src={badgeImageUrl} alt={badgeAltText} class=\"w-8 h-8\"/><span class=\"text-sm\">{rankName}</span></div>"
        },
        {
          "name": "RankList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of `RankBadge` components.",
          "html": "<ul class=\"list-none m-0 p-0 flex flex-wrap justify-center md:flex-nowrap\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a compact and visually appealing way. The rank should be prominently displayed, and the badges should be shown as a series of icons or images below the rank.",
      "html": "<div class=\"flex flex-col items-center\"><UserRank/><!-- Displays the user's rank --><BadgeList><!-- List of badges will be rendered here --></BadgeList></div>",
      "components": [
        {
          "name": "UserRank",
          "is_standalone": true,
          "description": "component (standalone): Displays the user's rank.",
          "html": "<div class=\"text-2xl font-bold\">{rank_name}</div>"
        },
        {
          "name": "BadgeList",
          "is_standalone": false,
          "description": "component (takes children): Displays a list of badges.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children} <!-- List of Badge components will be rendered here --></div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a responsive, mobile-friendly format. The rank should be displayed prominently, with the badges listed below it.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileRank/><UserProfileBadges><UserProfileBadge/><UserProfileBadge/><!-- Add more badges here --></UserProfileBadges></div>",
      "components": [
        {
          "name": "UserProfileRank",
          "is_standalone": true,
          "description": "A standalone component that displays the user's rank.",
          "html": "<h2 class=\"text-2xl font-bold\">{rank_name}</h2><p class=\"text-lg text-gray-600\">{rank_description}</p>"
        },
        {
          "name": "UserProfileBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single badge.",
          "html": "<div class=\"flex items-center mb-2\"><img src={badge_image} alt={badge_name} class=\"w-8 h-8 mr-2\"/><span class=\"text-lg\">{badge_name}</span></div>"
        },
        {
          "name": "UserProfileBadges",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of badges.",
          "html": "<ul class=\"list-none m-0 p-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a responsive, mobile-friendly format. The rank should be displayed prominently, with the badges listed below it.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileRank/><UserProfileBadges><UserProfileBadge/><UserProfileBadge/><!-- Add more badges here --></UserProfileBadges></div>",
      "components": [
        {
          "name": "UserProfileRank",
          "is_standalone": true,
          "description": "A standalone component that displays the user's rank.",
          "html": "<h2 class=\"text-2xl font-bold\">{rank_name}</h2><p class=\"text-lg text-gray-600\">{rank_description}</p>"
        },
        {
          "name": "UserProfileBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single badge.",
          "html": "<div class=\"flex items-center mb-2\"><img src={badge_image} alt={badge_name} class=\"w-8 h-8 mr-2\"/><span class=\"text-lg\">{badge_name}</span></div>"
        },
        {
          "name": "UserProfileBadges",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of badges.",
          "html": "<ul class=\"list-none m-0 p-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a user's rank and badges in a responsive, mobile-friendly format. The rank should be displayed prominently, with the badges listed below it.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileRank/><UserProfileBadges><UserProfileBadge/><UserProfileBadge/><!-- Add more badges here --></UserProfileBadges></div>",
      "components": [
        {
          "name": "UserProfileRank",
          "is_standalone": true,
          "description": "A standalone component that displays the user's rank.",
          "html": "<h2 class=\"text-2xl font-bold\">{rank_name}</h2><p class=\"text-lg text-gray-600\">{rank_description}</p>"
        },
        {
          "name": "UserProfileBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single badge.",
          "html": "<div class=\"flex items-center mb-2\"><img src={badge_image} alt={badge_name} class=\"w-8 h-8 mr-2\"/><span class=\"text-lg\">{badge_name}</span></div>"
        },
        {
          "name": "UserProfileBadges",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of badges.",
          "html": "<ul class=\"list-none m-0 p-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Coupon/Discount Codes": [
    {
      "description": "A clean and simple coupon/discount code input field with a submit button. The input field should be accompanied by a label and a description. The submit button should be prominent and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><form><CouponCodeLabel/><CouponCodeInput/><DescriptionText/><SubmitButton/></form></div>",
      "components": [
        {
          "name": "CouponCodeInput",
          "is_standalone": true,
          "description": "Standalone component that renders a single input field for the coupon/discount code.",
          "html": "<input type=\"text\" id=\"coupon-code\" class=\"block w-full pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that renders a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Apply Code</button>"
        },
        {
          "name": "CouponCodeLabel",
          "is_standalone": true,
          "description": "Standalone component that renders a label for the input field.",
          "html": "<label for=\"coupon-code\" class=\"block text-sm font-bold mb-2\">Enter your coupon code:</label>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": true,
          "description": "Standalone component that renders a small text description.",
          "html": "<p class=\"text-xs text-gray-500\">Enter a valid coupon code to receive your discount.</p>"
        }
      ]
    },
    {
      "description": "A clean and simple coupon/discount code input field with a submit button. The input field should be accompanied by a label and a description. The submit button should be prominent and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><form><CouponCodeLabel/><CouponCodeInput/><DescriptionText/><SubmitButton/></form></div>",
      "components": [
        {
          "name": "CouponCodeInput",
          "is_standalone": true,
          "description": "Standalone component that renders a single input field for the coupon/discount code.",
          "html": "<input type=\"text\" id=\"coupon-code\" class=\"block w-full pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that renders a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Apply Code</button>"
        },
        {
          "name": "CouponCodeLabel",
          "is_standalone": true,
          "description": "Standalone component that renders a label for the input field.",
          "html": "<label for=\"coupon-code\" class=\"block text-sm font-bold mb-2\">Enter your coupon code:</label>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": true,
          "description": "Standalone component that renders a small text description.",
          "html": "<p class=\"text-xs text-gray-500\">Enter a valid coupon code to receive your discount.</p>"
        }
      ]
    },
    {
      "description": "A clean and simple coupon/discount code input field with a submit button. The input field should be accompanied by a label and a description. The submit button should be prominent and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><form><CouponCodeLabel/><CouponCodeInput/><DescriptionText/><SubmitButton/></form></div>",
      "components": [
        {
          "name": "CouponCodeInput",
          "is_standalone": true,
          "description": "Standalone component that renders a single input field for the coupon/discount code.",
          "html": "<input type=\"text\" id=\"coupon-code\" class=\"block w-full pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that renders a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Apply Code</button>"
        },
        {
          "name": "CouponCodeLabel",
          "is_standalone": true,
          "description": "Standalone component that renders a label for the input field.",
          "html": "<label for=\"coupon-code\" class=\"block text-sm font-bold mb-2\">Enter your coupon code:</label>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": true,
          "description": "Standalone component that renders a small text description.",
          "html": "<p class=\"text-xs text-gray-500\">Enter a valid coupon code to receive your discount.</p>"
        }
      ]
    },
    {
      "description": "A clean and simple coupon/discount code input field with a submit button. The input field should be accompanied by a label and a description. The submit button should be prominent and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><form><CouponCodeLabel/><CouponCodeInput/><DescriptionText/><SubmitButton/></form></div>",
      "components": [
        {
          "name": "CouponCodeInput",
          "is_standalone": true,
          "description": "Standalone component that renders a single input field for the coupon/discount code.",
          "html": "<input type=\"text\" id=\"coupon-code\" class=\"block w-full pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that renders a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Apply Code</button>"
        },
        {
          "name": "CouponCodeLabel",
          "is_standalone": true,
          "description": "Standalone component that renders a label for the input field.",
          "html": "<label for=\"coupon-code\" class=\"block text-sm font-bold mb-2\">Enter your coupon code:</label>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": true,
          "description": "Standalone component that renders a small text description.",
          "html": "<p class=\"text-xs text-gray-500\">Enter a valid coupon code to receive your discount.</p>"
        }
      ]
    },
    {
      "description": "A clean and simple coupon/discount code input field with a submit button. The input field should be accompanied by a label and a description. The submit button should be prominent and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><form><CouponCodeLabel/><CouponCodeInput/><DescriptionText/><SubmitButton/></form></div>",
      "components": [
        {
          "name": "CouponCodeInput",
          "is_standalone": true,
          "description": "Standalone component that renders a single input field for the coupon/discount code.",
          "html": "<input type=\"text\" id=\"coupon-code\" class=\"block w-full pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that renders a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Apply Code</button>"
        },
        {
          "name": "CouponCodeLabel",
          "is_standalone": true,
          "description": "Standalone component that renders a label for the input field.",
          "html": "<label for=\"coupon-code\" class=\"block text-sm font-bold mb-2\">Enter your coupon code:</label>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": true,
          "description": "Standalone component that renders a small text description.",
          "html": "<p class=\"text-xs text-gray-500\">Enter a valid coupon code to receive your discount.</p>"
        }
      ]
    }
  ],
  "Bidding/Auction Functions": [
    {
      "description": "The UI should display an auction item with its details, current bid, and a bidding form. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionItemCard/><div class=\"flex flex-wrap justify-between mb-4\"><AuctionDetails/><CurrentBid/></div><BiddingForm><BidInput/><PlaceBidButton/></BiddingForm></div>",
      "components": [
        {
          "name": "AuctionItemCard",
          "is_standalone": true,
          "description": "(standalone): displays the auction item with its details",
          "html": "<div class=\"bg-white border border-gray-200 rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{item_name}</h2><p class=\"text-gray-600\">{item_description}</p></div>"
        },
        {
          "name": "AuctionDetails",
          "is_standalone": true,
          "description": "(standalone): displays the auction item details",
          "html": "<div class=\"text-gray-600\"><p>Ends: {auction_end_date}</p><p>Category: {category}</p></div>"
        },
        {
          "name": "CurrentBid",
          "is_standalone": true,
          "description": "(standalone): displays the current bid",
          "html": "<div class=\"text-lg font-bold\">{current_bid_amount} {currency}</div>"
        },
        {
          "name": "BiddingForm",
          "is_standalone": false,
          "description": "(takes children): allows users to place a bid",
          "html": "<form class=\"flex flex-wrap\">{children}</form>"
        },
        {
          "name": "BidInput",
          "is_standalone": true,
          "description": "(standalone): a input field for the bid amount",
          "html": "<input type=\"number\" class=\"w-full p-2 border border-gray-200\" value={bid_amount}/>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "(standalone): a button to submit the bid",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        }
      ]
    },
    {
      "description": "The UI should display an auction item with its details, current bid, and a bidding form. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionItemCard/><div class=\"flex flex-wrap justify-between mb-4\"><AuctionDetails/><CurrentBid/></div><BiddingForm><BidInput/><PlaceBidButton/></BiddingForm></div>",
      "components": [
        {
          "name": "AuctionItemCard",
          "is_standalone": true,
          "description": "(standalone): displays the auction item with its details",
          "html": "<div class=\"bg-white border border-gray-200 rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{item_name}</h2><p class=\"text-gray-600\">{item_description}</p></div>"
        },
        {
          "name": "AuctionDetails",
          "is_standalone": true,
          "description": "(standalone): displays the auction item details",
          "html": "<div class=\"text-gray-600\"><p>Ends: {auction_end_date}</p><p>Category: {category}</p></div>"
        },
        {
          "name": "CurrentBid",
          "is_standalone": true,
          "description": "(standalone): displays the current bid",
          "html": "<div class=\"text-lg font-bold\">{current_bid_amount} {currency}</div>"
        },
        {
          "name": "BiddingForm",
          "is_standalone": false,
          "description": "(takes children): allows users to place a bid",
          "html": "<form class=\"flex flex-wrap\">{children}</form>"
        },
        {
          "name": "BidInput",
          "is_standalone": true,
          "description": "(standalone): a input field for the bid amount",
          "html": "<input type=\"number\" class=\"w-full p-2 border border-gray-200\" value={bid_amount}/>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "(standalone): a button to submit the bid",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        }
      ]
    },
    {
      "description": "The UI should display a bidding/auction function with a countdown timer, a current bid indicator, a \"Place Bid\" button, and a list of previous bids. The design should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionContainer><AuctionTimer/><CurrentBidIndicator/><PlaceBidButton/><BidHistoryList><!-- list of previous bids will be rendered here --></BidHistoryList></AuctionContainer></div>",
      "components": [
        {
          "name": "AuctionTimer",
          "is_standalone": true,
          "description": "standalone component to display the countdown timer",
          "html": "<div class=\"text-2xl font-bold\">{time_left} seconds left</div>"
        },
        {
          "name": "CurrentBidIndicator",
          "is_standalone": true,
          "description": "standalone component to display the current bid",
          "html": "<div class=\"text-lg\">{current_bid} by {highest_bidder}</div>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "standalone component for the \"Place Bid\" button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        },
        {
          "name": "BidHistoryList",
          "is_standalone": false,
          "description": "component that takes children to display the list of previous bids",
          "html": "<ul>{children}</ul>"
        },
        {
          "name": "AuctionContainer",
          "is_standalone": false,
          "description": "component that takes children to wrap the entire bidding/auction function UI",
          "html": "<div class=\"shadow-md p-4 bg-white rounded\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display an auction item with its details, current bid, and a bidding form. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionItemCard/><div class=\"flex flex-wrap justify-between mb-4\"><AuctionDetails/><CurrentBid/></div><BiddingForm><BidInput/><PlaceBidButton/></BiddingForm></div>",
      "components": [
        {
          "name": "AuctionItemCard",
          "is_standalone": true,
          "description": "(standalone): displays the auction item with its details",
          "html": "<div class=\"bg-white border border-gray-200 rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{item_name}</h2><p class=\"text-gray-600\">{item_description}</p></div>"
        },
        {
          "name": "AuctionDetails",
          "is_standalone": true,
          "description": "(standalone): displays the auction item details",
          "html": "<div class=\"text-gray-600\"><p>Ends: {auction_end_date}</p><p>Category: {category}</p></div>"
        },
        {
          "name": "CurrentBid",
          "is_standalone": true,
          "description": "(standalone): displays the current bid",
          "html": "<div class=\"text-lg font-bold\">{current_bid_amount} {currency}</div>"
        },
        {
          "name": "BiddingForm",
          "is_standalone": false,
          "description": "(takes children): allows users to place a bid",
          "html": "<form class=\"flex flex-wrap\">{children}</form>"
        },
        {
          "name": "BidInput",
          "is_standalone": true,
          "description": "(standalone): a input field for the bid amount",
          "html": "<input type=\"number\" class=\"w-full p-2 border border-gray-200\" value={bid_amount}/>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "(standalone): a button to submit the bid",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        }
      ]
    },
    {
      "description": "The UI should display an auction item with its details, current bid, and a bidding form. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionItemCard/><div class=\"flex flex-wrap justify-between mb-4\"><AuctionDetails/><CurrentBid/></div><BiddingForm><BidInput/><PlaceBidButton/></BiddingForm></div>",
      "components": [
        {
          "name": "AuctionItemCard",
          "is_standalone": true,
          "description": "(standalone): displays the auction item with its details",
          "html": "<div class=\"bg-white border border-gray-200 rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{item_name}</h2><p class=\"text-gray-600\">{item_description}</p></div>"
        },
        {
          "name": "AuctionDetails",
          "is_standalone": true,
          "description": "(standalone): displays the auction item details",
          "html": "<div class=\"text-gray-600\"><p>Ends: {auction_end_date}</p><p>Category: {category}</p></div>"
        },
        {
          "name": "CurrentBid",
          "is_standalone": true,
          "description": "(standalone): displays the current bid",
          "html": "<div class=\"text-lg font-bold\">{current_bid_amount} {currency}</div>"
        },
        {
          "name": "BiddingForm",
          "is_standalone": false,
          "description": "(takes children): allows users to place a bid",
          "html": "<form class=\"flex flex-wrap\">{children}</form>"
        },
        {
          "name": "BidInput",
          "is_standalone": true,
          "description": "(standalone): a input field for the bid amount",
          "html": "<input type=\"number\" class=\"w-full p-2 border border-gray-200\" value={bid_amount}/>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "(standalone): a button to submit the bid",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        }
      ]
    },
    {
      "description": "The UI should display an auction item with its details, current bid, and a bidding form. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionItemCard/><div class=\"flex flex-wrap justify-between mb-4\"><AuctionDetails/><CurrentBid/></div><BiddingForm><BidInput/><PlaceBidButton/></BiddingForm></div>",
      "components": [
        {
          "name": "AuctionItemCard",
          "is_standalone": true,
          "description": "(standalone): displays the auction item with its details",
          "html": "<div class=\"bg-white border border-gray-200 rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{item_name}</h2><p class=\"text-gray-600\">{item_description}</p></div>"
        },
        {
          "name": "AuctionDetails",
          "is_standalone": true,
          "description": "(standalone): displays the auction item details",
          "html": "<div class=\"text-gray-600\"><p>Ends: {auction_end_date}</p><p>Category: {category}</p></div>"
        },
        {
          "name": "CurrentBid",
          "is_standalone": true,
          "description": "(standalone): displays the current bid",
          "html": "<div class=\"text-lg font-bold\">{current_bid_amount} {currency}</div>"
        },
        {
          "name": "BiddingForm",
          "is_standalone": false,
          "description": "(takes children): allows users to place a bid",
          "html": "<form class=\"flex flex-wrap\">{children}</form>"
        },
        {
          "name": "BidInput",
          "is_standalone": true,
          "description": "(standalone): a input field for the bid amount",
          "html": "<input type=\"number\" class=\"w-full p-2 border border-gray-200\" value={bid_amount}/>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "(standalone): a button to submit the bid",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        }
      ]
    },
    {
      "description": "The UI should display an auction item with its details, current bid, and a bidding form. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionItemCard/><div class=\"flex flex-wrap justify-between mb-4\"><AuctionDetails/><CurrentBid/></div><BiddingForm><BidInput/><PlaceBidButton/></BiddingForm></div>",
      "components": [
        {
          "name": "AuctionItemCard",
          "is_standalone": true,
          "description": "(standalone): displays the auction item with its details",
          "html": "<div class=\"bg-white border border-gray-200 rounded p-4 mb-4\"><h2 class=\"text-lg font-bold\">{item_name}</h2><p class=\"text-gray-600\">{item_description}</p></div>"
        },
        {
          "name": "AuctionDetails",
          "is_standalone": true,
          "description": "(standalone): displays the auction item details",
          "html": "<div class=\"text-gray-600\"><p>Ends: {auction_end_date}</p><p>Category: {category}</p></div>"
        },
        {
          "name": "CurrentBid",
          "is_standalone": true,
          "description": "(standalone): displays the current bid",
          "html": "<div class=\"text-lg font-bold\">{current_bid_amount} {currency}</div>"
        },
        {
          "name": "BiddingForm",
          "is_standalone": false,
          "description": "(takes children): allows users to place a bid",
          "html": "<form class=\"flex flex-wrap\">{children}</form>"
        },
        {
          "name": "BidInput",
          "is_standalone": true,
          "description": "(standalone): a input field for the bid amount",
          "html": "<input type=\"number\" class=\"w-full p-2 border border-gray-200\" value={bid_amount}/>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "(standalone): a button to submit the bid",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        }
      ]
    },
    {
      "description": "The UI should display a list of auctions, with each auction showing its title, current price, bidding information, and a \"Place Bid\" button. The bidding information should include the current highest bidder and the number of bids. The UI should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AuctionList><AuctionCard/><AuctionCard/><!-- Add more auction cards here --></AuctionList></div>",
      "components": [
        {
          "name": "AuctionCard",
          "is_standalone": true,
          "description": "A standalone component representing a single auction.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded\"><h2 class=\"text-lg font-bold\">{auction_title}</h2><p class=\"text-gray-600\">{auction_description}</p><BidInfo/><PlaceBidButton/></div>"
        },
        {
          "name": "BidInfo",
          "is_standalone": true,
          "description": "A standalone component displaying the current highest bidder and number of bids.",
          "html": "<p class=\"text-sm text-gray-600 mb-2\">Current bid: {current_bid} by {highest_bidder_name} ({num_bids} bids)</p>"
        },
        {
          "name": "PlaceBidButton",
          "is_standalone": true,
          "description": "A standalone component for the \"Place Bid\" button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Place Bid</button>"
        },
        {
          "name": "AuctionList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of auctions.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "User profile page with video history": [
    {
      "description": "The UI should display a user profile page with a header, profile information, and a video history section that lists the user's watched videos.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><UserProfileHeader/><ProfileInfo/><h2 class=\"text-lg font-bold mb-2\">Video History</h2><VideoHistory><VideoHistoryItem/><VideoHistoryItem/><!-- more VideoHistoryItem components here --></VideoHistory></div>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture and name",
          "html": "<div class=\"flex justify-center mb-4\"><img src={profile_picture} class=\"w-24 h-24 rounded-full\"/><h1 class=\"text-2xl font-bold\">{username}</h1></div>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": true,
          "description": "standalone, displays the user's bio and profile information",
          "html": "<div class=\"mb-4\"><p>{bio}</p><!-- other profile information here --></div>"
        },
        {
          "name": "VideoHistory",
          "is_standalone": false,
          "description": "takes children, lists the user's video history",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "VideoHistoryItem",
          "is_standalone": true,
          "description": "standalone, displays a single video in the video history",
          "html": "<li class=\"py-2 border-b border-gray-200\"><img src={video_thumbnail} class=\"w-12 h-12 rounded\"/><div class=\"ml-2\"><h3>{video_title}</h3><p>{video_description}</p></div></li>"
        }
      ]
    }
  ],
  "Time Pickers/Clock Icons": [
    {
      "description": "The UI should display a clock icon with a dropdown list of time options. When a time option is selected, the clock icon should display the selected time.",
      "html": "<div class=\"flex items-center\"><ClockIcon/><select class=\"ml-2\"><TimeOption>12:00 AM</TimeOption><TimeOption>12:30 AM</TimeOption><!-- more time options here --></select></div>",
      "components": [
        {
          "name": "ClockIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a clock icon.",
          "html": "<i class=\"fas fa-clock text-gray-500 text-lg\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "TimeOption",
          "is_standalone": false,
          "description": "A component that takes children (the time option text) and is used to render each time option in the dropdown list.",
          "html": "<option>{children}</option>"
        }
      ]
    }
  ],
  "Alert Notification Icon Color": [
    {
      "description": "The UI should be a notification icon with a colored alert indicator, indicating a notification or update. The icon should be responsive and accessible.",
      "html": "<div class=\"flex justify-center\"><NotificationIcon/></div>",
      "components": [
        {
          "name": "NotificationIcon",
          "is_standalone": true,
          "description": "- Standalone component that displays an icon with an optional alert indicator.",
          "html": "<!-- Notification icon with an optional alert indicator --><span class=\"inline-block relative\"><i class=\"fas fa-bell text-lg text-gray-600\" aria-hidden=\"true\"></i>{has_alert && <span class=\"absolute top-0 right-0 inline-block w-2 h-2 bg-{alert_color}-500 rounded-full\"></span>}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a notification icon with a colored alert indicator, indicating a notification or update. The icon should be responsive and accessible.",
      "html": "<div class=\"flex justify-center\"><NotificationIcon/></div>",
      "components": [
        {
          "name": "NotificationIcon",
          "is_standalone": true,
          "description": "- Standalone component that displays an icon with an optional alert indicator.",
          "html": "<!-- Notification icon with an optional alert indicator --><span class=\"inline-block relative\"><i class=\"fas fa-bell text-lg text-gray-600\" aria-hidden=\"true\"></i>{has_alert && <span class=\"absolute top-0 right-0 inline-block w-2 h-2 bg-{alert_color}-500 rounded-full\"></span>}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a notification icon with a colored alert indicator, indicating a notification or update. The icon should be responsive and accessible.",
      "html": "<div class=\"flex justify-center\"><NotificationIcon/></div>",
      "components": [
        {
          "name": "NotificationIcon",
          "is_standalone": true,
          "description": "- Standalone component that displays an icon with an optional alert indicator.",
          "html": "<!-- Notification icon with an optional alert indicator --><span class=\"inline-block relative\"><i class=\"fas fa-bell text-lg text-gray-600\" aria-hidden=\"true\"></i>{has_alert && <span class=\"absolute top-0 right-0 inline-block w-2 h-2 bg-{alert_color}-500 rounded-full\"></span>}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a notification icon with a colored alert indicator, indicating a notification or update. The icon should be responsive and accessible.",
      "html": "<div class=\"flex justify-center\"><NotificationIcon/></div>",
      "components": [
        {
          "name": "NotificationIcon",
          "is_standalone": true,
          "description": "- Standalone component that displays an icon with an optional alert indicator.",
          "html": "<!-- Notification icon with an optional alert indicator --><span class=\"inline-block relative\"><i class=\"fas fa-bell text-lg text-gray-600\" aria-hidden=\"true\"></i>{has_alert && <span class=\"absolute top-0 right-0 inline-block w-2 h-2 bg-{alert_color}-500 rounded-full\"></span>}</span>"
        }
      ]
    }
  ],
  "Product Rating Stars": [
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    },
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    },
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    },
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    },
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    },
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    },
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    },
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    },
    {
      "description": "The UI should be a compact, accessible, and responsive product rating stars component, displaying a rating out of 5 stars, with the option to be hovered and clicked. The component should be mobile-first, with a clean and simple design.",
      "html": "<div class=\"flex items-center\"><RatingStarsContainer/><p class=\"ml-2 text-sm\">{rating_text}</p></div>",
      "components": [
        {
          "name": "RatingStarsContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the rating stars.",
          "html": "<div class=\"flex\"><RatingStar/><RatingStar/><RatingStar/><RatingStar/><RatingStar/></div>"
        },
        {
          "name": "RatingStar",
          "is_standalone": true,
          "description": "(standalone): An individual star element within the rating stars container.",
          "html": "<span class=\"inline-block w-4 h-4 text-yellow-500\"><!-- star icon -->&#9733;</span>"
        }
      ]
    }
  ],
  "Lesson/List View of Content": [
    {
      "description": "A responsive, mobile-first list view of lessons/content, with each item displaying a title, description, and call-to-action (CTA) button.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-2xl font-bold mb-4\">Lessons</h1><LessonList><LessonCard/><LessonCard/><!-- Add more LessonCard components here --></LessonList></div>",
      "components": [
        {
          "name": "LessonCard",
          "is_standalone": true,
          "description": "(standalone): A individual lesson/content item in the list.",
          "html": "<div class=\"mb-4 md:mb-6 lg:mb-8\"><h2 class=\"text-lg font-bold\">{lesson_title}</h2><p class=\"text-gray-600\">{lesson_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{lesson_cta_text} </button></div>"
        },
        {
          "name": "LessonList",
          "is_standalone": false,
          "description": "(takes children): The container for the list of lessons/content.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Thread/List View of Topics": [
    {
      "description": "The UI should be a scrollable list of topics, with each topic displaying its title, description, and some metadata (e.g., author, date created). The list should be ordered by most recent topic first. On smaller screens, the list should be single-column, and on larger screens, it should be a multi-column layout.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-3xl font-bold\">Topics</h1><TopicList><!-- List of TopicCard components will be rendered here --></TopicList></div>",
      "components": [
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "(takes children): a container component that renders a list of `TopicCard` components.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of topics in a thread/list view, with each topic showing its title, description, and metadata such as the number of replies and views. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Topic List</h1><TopicList><TopicCard/><TopicCard/><!-- more topic cards here --></TopicList></div>",
      "components": [
        {
          "name": "TopicCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single topic.",
          "html": "<div class=\"flex flex-col p-4 mb-4 bg-white shadow-md rounded\"><h2 class=\"text-lg font-bold\">{topic_title}</h2><p class=\"text-gray-600\">{topic_description}</p><div class=\"text-gray-500 text-sm\"><span>{replies_count} replies</span><span class=\"mx-2\">|</span><span>{views_count} views</span></div></div>"
        },
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "A component that takes children (topic cards) and displays them in a list.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a scrollable list of topics, with each topic displaying its title, description, and some metadata (e.g., author, date created). The list should be ordered by most recent topic first. On smaller screens, the list should be single-column, and on larger screens, it should be a multi-column layout.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-3xl font-bold\">Topics</h1><TopicList><!-- List of TopicCard components will be rendered here --></TopicList></div>",
      "components": [
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "(takes children): a container component that renders a list of `TopicCard` components.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of topics in a thread/list view, with each topic showing its title, description, and metadata such as the number of replies and views. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Topic List</h1><TopicList><TopicCard/><TopicCard/><!-- more topic cards here --></TopicList></div>",
      "components": [
        {
          "name": "TopicCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single topic.",
          "html": "<div class=\"flex flex-col p-4 mb-4 bg-white shadow-md rounded\"><h2 class=\"text-lg font-bold\">{topic_title}</h2><p class=\"text-gray-600\">{topic_description}</p><div class=\"text-gray-500 text-sm\"><span>{replies_count} replies</span><span class=\"mx-2\">|</span><span>{views_count} views</span></div></div>"
        },
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "A component that takes children (topic cards) and displays them in a list.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list view of topics, with each topic displaying a title, description, and metadata such as author and timestamp. The list should be responsive, with a card-like design on larger screens and a condensed list on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TopicList><TopicCard/><TopicCard/><!-- repeat for each topic --></TopicList></div>",
      "components": [
        {
          "name": "TopicCard",
          "is_standalone": true,
          "description": "Standalone component that displays a single topic.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-2 mb-4\"><h2 class=\"text-lg\">{topicTitle}</h2><p class=\"text-gray-600\">{topicDescription}</p><p class=\"text-sm text-gray-500\">By {authorName} on {timestamp}</p></div>"
        },
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "Component that takes children (multiple `TopicCard`s) and displays them in a list.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of topics in a threaded view, with each topic showing the topic title, author, and timestamp. The list should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><h1>Topic List</h1><ul class=\"list-none mb-4\"><TopicThread/><!-- more TopicThread components will be rendered here --></ul></div>",
      "components": [
        {
          "name": "TopicThread",
          "is_standalone": true,
          "description": "standalone component to display a single topic thread",
          "html": "<li class=\"mb-4\"><Topic/><TopicReplies/></li>"
        },
        {
          "name": "Topic",
          "is_standalone": true,
          "description": "standalone component to display a single topic",
          "html": "<div class=\"flex justify-between mb-2\"><TopicTitle/><TopicMeta/></div>"
        },
        {
          "name": "TopicTitle",
          "is_standalone": true,
          "description": "standalone component to display the topic title",
          "html": "<h2 class=\"text-lg\">{topic_title}</h2>"
        },
        {
          "name": "TopicMeta",
          "is_standalone": true,
          "description": "standalone component to display the topic author and timestamp",
          "html": "<p class=\"text-gray-600\">{author_name} | {timestamp}</p>"
        },
        {
          "name": "TopicReplies",
          "is_standalone": true,
          "description": "standalone component to display the replies to a topic",
          "html": "<ul class=\"list-none pl-4\"><Reply/><!-- more Reply components will be rendered here --></ul>"
        },
        {
          "name": "Reply",
          "is_standalone": true,
          "description": "standalone component to display a single reply",
          "html": "<li class=\"mb-2\"><TopicTitle/><TopicMeta/></li>"
        }
      ]
    },
    {
      "description": "The UI should be a scrollable list of topics, with each topic displaying its title, description, and some metadata (e.g., author, date created). The list should be ordered by most recent topic first. On smaller screens, the list should be single-column, and on larger screens, it should be a multi-column layout.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-3xl font-bold\">Topics</h1><TopicList><!-- List of TopicCard components will be rendered here --></TopicList></div>",
      "components": [
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "(takes children): a container component that renders a list of `TopicCard` components.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of topics in a thread/list view, with each topic showing its title, description, and metadata such as the number of replies and views. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Topic List</h1><TopicList><TopicCard/><TopicCard/><!-- more topic cards here --></TopicList></div>",
      "components": [
        {
          "name": "TopicCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single topic.",
          "html": "<div class=\"flex flex-col p-4 mb-4 bg-white shadow-md rounded\"><h2 class=\"text-lg font-bold\">{topic_title}</h2><p class=\"text-gray-600\">{topic_description}</p><div class=\"text-gray-500 text-sm\"><span>{replies_count} replies</span><span class=\"mx-2\">|</span><span>{views_count} views</span></div></div>"
        },
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "A component that takes children (topic cards) and displays them in a list.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a scrollable list of topics, with each topic displaying its title, description, and some metadata (e.g., author, date created). The list should be ordered by most recent topic first. On smaller screens, the list should be single-column, and on larger screens, it should be a multi-column layout.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-3xl font-bold\">Topics</h1><TopicList><!-- List of TopicCard components will be rendered here --></TopicList></div>",
      "components": [
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "(takes children): a container component that renders a list of `TopicCard` components.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of topics in a thread/list view, with each topic showing its title, description, and metadata such as the number of replies and views. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Topic List</h1><TopicList><TopicCard/><TopicCard/><!-- more topic cards here --></TopicList></div>",
      "components": [
        {
          "name": "TopicCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single topic.",
          "html": "<div class=\"flex flex-col p-4 mb-4 bg-white shadow-md rounded\"><h2 class=\"text-lg font-bold\">{topic_title}</h2><p class=\"text-gray-600\">{topic_description}</p><div class=\"text-gray-500 text-sm\"><span>{replies_count} replies</span><span class=\"mx-2\">|</span><span>{views_count} views</span></div></div>"
        },
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "A component that takes children (topic cards) and displays them in a list.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a scrollable list of topics, with each topic displaying its title, description, and some metadata (e.g., author, date created). The list should be ordered by most recent topic first. On smaller screens, the list should be single-column, and on larger screens, it should be a multi-column layout.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-3xl font-bold\">Topics</h1><TopicList><!-- List of TopicCard components will be rendered here --></TopicList></div>",
      "components": [
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "(takes children): a container component that renders a list of `TopicCard` components.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a scrollable list of topics, with each topic displaying its title, description, and some metadata (e.g., author, date created). The list should be ordered by most recent topic first. On smaller screens, the list should be single-column, and on larger screens, it should be a multi-column layout.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><h1 class=\"text-3xl font-bold\">Topics</h1><TopicList><!-- List of TopicCard components will be rendered here --></TopicList></div>",
      "components": [
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "(takes children): a container component that renders a list of `TopicCard` components.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of topics in a thread/list view, with each topic showing its title, description, and metadata such as the number of replies and views. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Topic List</h1><TopicList><TopicCard/><TopicCard/><!-- more topic cards here --></TopicList></div>",
      "components": [
        {
          "name": "TopicCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single topic.",
          "html": "<div class=\"flex flex-col p-4 mb-4 bg-white shadow-md rounded\"><h2 class=\"text-lg font-bold\">{topic_title}</h2><p class=\"text-gray-600\">{topic_description}</p><div class=\"text-gray-500 text-sm\"><span>{replies_count} replies</span><span class=\"mx-2\">|</span><span>{views_count} views</span></div></div>"
        },
        {
          "name": "TopicList",
          "is_standalone": false,
          "description": "A component that takes children (topic cards) and displays them in a list.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    }
  ],
  "Footer Contact Info": [
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    },
    {
      "description": "The UI should display the website's contact information, including address, phone number, and email, in a responsive and accessible layout.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4 md:p-6 lg:p-8\"><FooterContactInfo/></footer>",
      "components": [
        {
          "name": "FooterContactInfo",
          "is_standalone": true,
          "description": "standalone component that contains contact information.",
          "html": "<div class=\"flex flex-col md:flex-row justify-between\"><Address/><PhoneNumber/><Email/></div>"
        },
        {
          "name": "Address",
          "is_standalone": true,
          "description": "standalone component that displays the website's address.",
          "html": "<address class=\"not-italic\"><p>{street_address}</p><p>{city_state_zip}</p></address>"
        },
        {
          "name": "PhoneNumber",
          "is_standalone": true,
          "description": "standalone component that displays the website's phone number.",
          "html": "<p class=\"text-lg\">{phone_number}</p>"
        },
        {
          "name": "Email",
          "is_standalone": true,
          "description": "standalone component that displays the website's email.",
          "html": "<p><a href={`mailto:${email_address}`}>{email_address}</a></p>"
        }
      ]
    }
  ],
  "Avatar display for user profile picture": [
    {
      "description": "The UI should be a circular avatar container with a user profile picture, responsive and mobile-first, with a maximum size of 120px.",
      "html": "<div class=\"flex justify-center mb-4\"><Avatar/></div>",
      "components": [
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<img src={avatarUrl} alt=\"User Profile Picture\" class=\"w-24 h-24 rounded-full object-cover\"/>"
        }
      ]
    },
    {
      "description": "The UI should be a circular avatar container with a user profile picture, responsive and mobile-first, with a maximum size of 120px.",
      "html": "<div class=\"flex justify-center mb-4\"><Avatar/></div>",
      "components": [
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<img src={avatarUrl} alt=\"User Profile Picture\" class=\"w-24 h-24 rounded-full object-cover\"/>"
        }
      ]
    },
    {
      "description": "The UI should be a circular avatar container with a user profile picture, responsive and mobile-first, with a maximum size of 120px.",
      "html": "<div class=\"flex justify-center mb-4\"><Avatar/></div>",
      "components": [
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<img src={avatarUrl} alt=\"User Profile Picture\" class=\"w-24 h-24 rounded-full object-cover\"/>"
        }
      ]
    }
  ],
  "Alert Notification Sound": [
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact alert notification sound component that indicates an audible alert to the user. It should be visually appealing, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><AlertSoundIndicator/></div>",
      "components": [
        {
          "name": "AlertSoundIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays a visual representation of an alert notification sound.",
          "html": "<div class=\"bg-orange-500 p-2 rounded-full\"><span class=\"material-icons text-white\">volume_up</span></div>"
        }
      ]
    }
  ],
  "Post/Tweet Embeds": [
    {
      "description": "The UI should display a post or tweet embed with the author's name, profile picture, post content, and other relevant details. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md p-4 mx-auto\"><PostEmbed><PostHeader/><PostContent/><PostMetadata/></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone component to display the author's name and profile picture.",
          "html": "<div class=\"flex items-center mb-2\"><img src={profile_picture_url} class=\"h-10 w-10 rounded-full mr-2\" alt={author_name}/><span class=\"text-sm\">{author_name}</span></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone component to display the post content.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "standalone component to display additional metadata such as the post date and EngagementButton.",
          "html": "<div class=\"flex justify-between mt-2\"><span class=\"text-sm\">{post_date}</span><EngagementButton/></div>"
        },
        {
          "name": "EngagementButton",
          "is_standalone": true,
          "description": "standalone component to display the engagement options (e.g., like, retweet, reply).",
          "html": "<button class=\"text-sm text-blue-500 hover:text-blue-800\">{engagement_text} <!-- e.g., \"Like\", \"Retweet\", \"Reply\" --></button>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "takes children to wrap the entire post embed.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a post or tweet embed with the author's name, profile picture, post content, and other relevant details. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md p-4 mx-auto\"><PostEmbed><PostHeader/><PostContent/><PostMetadata/></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone component to display the author's name and profile picture.",
          "html": "<div class=\"flex items-center mb-2\"><img src={profile_picture_url} class=\"h-10 w-10 rounded-full mr-2\" alt={author_name}/><span class=\"text-sm\">{author_name}</span></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone component to display the post content.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "standalone component to display additional metadata such as the post date and EngagementButton.",
          "html": "<div class=\"flex justify-between mt-2\"><span class=\"text-sm\">{post_date}</span><EngagementButton/></div>"
        },
        {
          "name": "EngagementButton",
          "is_standalone": true,
          "description": "standalone component to display the engagement options (e.g., like, retweet, reply).",
          "html": "<button class=\"text-sm text-blue-500 hover:text-blue-800\">{engagement_text} <!-- e.g., \"Like\", \"Retweet\", \"Reply\" --></button>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "takes children to wrap the entire post embed.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "A post/tweet embed component that displays a user's profile picture, username, tweet/post text, and any media (e.g. image, video) associated with the post.",
      "html": "<div class=\"flex bg-white p-4 border-b border-gray-200\"><UserProfilePicture/><div class=\"ml-4\"><Username/><PostText/><PostMedia/></div></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays a user's profile picture.",
          "html": "<img src={profile_picture_url} class=\"rounded-full h-10 w-10\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "standalone component that displays a user's username.",
          "html": "<p class=\"font-bold\">{username}</p>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone component that displays the text of the post/tweet.",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostMedia",
          "is_standalone": true,
          "description": "standalone component that displays the media associated with the post (e.g. image, video).",
          "html": "<img src={media_url} class=\"max-w-full h-56\"/>"
        }
      ]
    },
    {
      "description": "The UI should display a post or tweet embed with the author's name, profile picture, post content, and other relevant details. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md p-4 mx-auto\"><PostEmbed><PostHeader/><PostContent/><PostMetadata/></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone component to display the author's name and profile picture.",
          "html": "<div class=\"flex items-center mb-2\"><img src={profile_picture_url} class=\"h-10 w-10 rounded-full mr-2\" alt={author_name}/><span class=\"text-sm\">{author_name}</span></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone component to display the post content.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "standalone component to display additional metadata such as the post date and EngagementButton.",
          "html": "<div class=\"flex justify-between mt-2\"><span class=\"text-sm\">{post_date}</span><EngagementButton/></div>"
        },
        {
          "name": "EngagementButton",
          "is_standalone": true,
          "description": "standalone component to display the engagement options (e.g., like, retweet, reply).",
          "html": "<button class=\"text-sm text-blue-500 hover:text-blue-800\">{engagement_text} <!-- e.g., \"Like\", \"Retweet\", \"Reply\" --></button>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "takes children to wrap the entire post embed.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a post or tweet embed with the author's name, profile picture, post content, and other relevant details. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md p-4 mx-auto\"><PostEmbed><PostHeader/><PostContent/><PostMetadata/></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone component to display the author's name and profile picture.",
          "html": "<div class=\"flex items-center mb-2\"><img src={profile_picture_url} class=\"h-10 w-10 rounded-full mr-2\" alt={author_name}/><span class=\"text-sm\">{author_name}</span></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone component to display the post content.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "standalone component to display additional metadata such as the post date and EngagementButton.",
          "html": "<div class=\"flex justify-between mt-2\"><span class=\"text-sm\">{post_date}</span><EngagementButton/></div>"
        },
        {
          "name": "EngagementButton",
          "is_standalone": true,
          "description": "standalone component to display the engagement options (e.g., like, retweet, reply).",
          "html": "<button class=\"text-sm text-blue-500 hover:text-blue-800\">{engagement_text} <!-- e.g., \"Like\", \"Retweet\", \"Reply\" --></button>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "takes children to wrap the entire post embed.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a post or tweet embed with the author's name, profile picture, post content, and other relevant details. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md p-4 mx-auto\"><PostEmbed><PostHeader/><PostContent/><PostMetadata/></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone component to display the author's name and profile picture.",
          "html": "<div class=\"flex items-center mb-2\"><img src={profile_picture_url} class=\"h-10 w-10 rounded-full mr-2\" alt={author_name}/><span class=\"text-sm\">{author_name}</span></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone component to display the post content.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "standalone component to display additional metadata such as the post date and EngagementButton.",
          "html": "<div class=\"flex justify-between mt-2\"><span class=\"text-sm\">{post_date}</span><EngagementButton/></div>"
        },
        {
          "name": "EngagementButton",
          "is_standalone": true,
          "description": "standalone component to display the engagement options (e.g., like, retweet, reply).",
          "html": "<button class=\"text-sm text-blue-500 hover:text-blue-800\">{engagement_text} <!-- e.g., \"Like\", \"Retweet\", \"Reply\" --></button>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "takes children to wrap the entire post embed.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a post or tweet embed with the author's name, profile picture, post content, and other relevant details. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md p-4 mx-auto\"><PostEmbed><PostHeader/><PostContent/><PostMetadata/></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone component to display the author's name and profile picture.",
          "html": "<div class=\"flex items-center mb-2\"><img src={profile_picture_url} class=\"h-10 w-10 rounded-full mr-2\" alt={author_name}/><span class=\"text-sm\">{author_name}</span></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "standalone component to display the post content.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostMetadata",
          "is_standalone": true,
          "description": "standalone component to display additional metadata such as the post date and EngagementButton.",
          "html": "<div class=\"flex justify-between mt-2\"><span class=\"text-sm\">{post_date}</span><EngagementButton/></div>"
        },
        {
          "name": "EngagementButton",
          "is_standalone": true,
          "description": "standalone component to display the engagement options (e.g., like, retweet, reply).",
          "html": "<button class=\"text-sm text-blue-500 hover:text-blue-800\">{engagement_text} <!-- e.g., \"Like\", \"Retweet\", \"Reply\" --></button>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "takes children to wrap the entire post embed.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single post or tweet embed with a username, avatar, timestamp, and content. The embed should be responsive, displaying well on both desktop and mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostEmbed><PostHeader/><PostMeta/><PostContent><!-- Post content goes here --></PostContent></PostEmbed></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the username and avatar.",
          "html": "<div class=\"flex items-center mb-2\"><img src={avatarUrl} alt={username} class=\"w-10 h-10 rounded-full mr-2\"/><p class=\"font-bold\">{username}</p></div>"
        },
        {
          "name": "PostMeta",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp.",
          "html": "<p class=\"text-gray-500 text-sm\">{timestamp}</p>"
        },
        {
          "name": "PostContent",
          "is_standalone": false,
          "description": "Takes children, displaying the content of the post.",
          "html": "<div class=\"prose\">{children}</div>"
        },
        {
          "name": "PostEmbed",
          "is_standalone": false,
          "description": "Takes children, wrapping the entire post embed.",
          "html": "<div class=\" bg-white p-4 rounded shadow-md\">{children}</div>"
        }
      ]
    }
  ],
  "Social Media Feed Footer": [
    {
      "description": "The Social Media Feed Footer should be a responsive footer section that displays social media links and a copyright notice. On larger screens, the social media links should be aligned to the right, while on smaller screens, they should stack vertically.",
      "html": "<footer class=\"flex flex-wrap justify-center md:justify-end py-4\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single social media link.",
          "html": "<a class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\" href=\"{social_media_url}\">{social_media_icon} {social_media_name}</a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "A standalone component that displays a copyright notice.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "A component that takes children and displays the social media links and copyright notice.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row md:justify-end\">{children}</div>"
        }
      ]
    },
    {
      "description": "The social media feed footer should be a responsive, mobile-first footer that displays social media links, a copyright notice, and an optional newsletter signup form. On mobile, the links and copyright notice should be stacked vertically, while on larger screens, they should be arranged horizontally.",
      "html": "<footer class=\"max-w-md mx-auto p-4 lg:p-6 bg-gray-200\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/><NewsletterSignup/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "standalone component that takes a social media platform name and URL as props.",
          "html": "<a href=\"{href}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{iconUrl}\" alt=\"{platformName} icon\" class=\"h-6 w-6 mx-auto lg:mx-0\"><span class=\"sr-only\">{platformName}</span></a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "standalone component that takes a copyright year and owner as props.",
          "html": "<p class=\"text-sm text-gray-600\">{copyrightYear} {ownerName}. All rights reserved.</p>"
        },
        {
          "name": "NewsletterSignup",
          "is_standalone": true,
          "description": "standalone component that takes a form action URL and optional label text as props.",
          "html": "<form action=\"{formActionUrl}\" method=\"post\"><label for=\"email\" class=\"sr-only\">Email address</label><input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email address\" class=\"w-full lg:w-auto\"><button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button></form>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "container component that takes children (e.g., `SocialMediaLink`, `CopyrightNotice`, and `NewsletterSignup`).",
          "html": "<div class=\"flex flex-wrap justify-center lg:justify-between\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Footer should be a responsive footer section that displays social media links and a copyright notice. On larger screens, the social media links should be aligned to the right, while on smaller screens, they should stack vertically.",
      "html": "<footer class=\"flex flex-wrap justify-center md:justify-end py-4\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single social media link.",
          "html": "<a class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\" href=\"{social_media_url}\">{social_media_icon} {social_media_name}</a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "A standalone component that displays a copyright notice.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "A component that takes children and displays the social media links and copyright notice.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row md:justify-end\">{children}</div>"
        }
      ]
    },
    {
      "description": "The social media feed footer should be a responsive, mobile-first footer that displays social media links, a copyright notice, and an optional newsletter signup form. On mobile, the links and copyright notice should be stacked vertically, while on larger screens, they should be arranged horizontally.",
      "html": "<footer class=\"max-w-md mx-auto p-4 lg:p-6 bg-gray-200\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/><NewsletterSignup/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "standalone component that takes a social media platform name and URL as props.",
          "html": "<a href=\"{href}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{iconUrl}\" alt=\"{platformName} icon\" class=\"h-6 w-6 mx-auto lg:mx-0\"><span class=\"sr-only\">{platformName}</span></a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "standalone component that takes a copyright year and owner as props.",
          "html": "<p class=\"text-sm text-gray-600\">{copyrightYear} {ownerName}. All rights reserved.</p>"
        },
        {
          "name": "NewsletterSignup",
          "is_standalone": true,
          "description": "standalone component that takes a form action URL and optional label text as props.",
          "html": "<form action=\"{formActionUrl}\" method=\"post\"><label for=\"email\" class=\"sr-only\">Email address</label><input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email address\" class=\"w-full lg:w-auto\"><button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button></form>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "container component that takes children (e.g., `SocialMediaLink`, `CopyrightNotice`, and `NewsletterSignup`).",
          "html": "<div class=\"flex flex-wrap justify-center lg:justify-between\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Footer should be a responsive footer section that displays social media links and a copyright notice. On larger screens, the social media links should be aligned to the right, while on smaller screens, they should stack vertically.",
      "html": "<footer class=\"flex flex-wrap justify-center md:justify-end py-4\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single social media link.",
          "html": "<a class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\" href=\"{social_media_url}\">{social_media_icon} {social_media_name}</a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "A standalone component that displays a copyright notice.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "A component that takes children and displays the social media links and copyright notice.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row md:justify-end\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Footer should be a responsive footer section that displays social media links and a copyright notice. On larger screens, the social media links should be aligned to the right, while on smaller screens, they should stack vertically.",
      "html": "<footer class=\"flex flex-wrap justify-center md:justify-end py-4\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single social media link.",
          "html": "<a class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\" href=\"{social_media_url}\">{social_media_icon} {social_media_name}</a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "A standalone component that displays a copyright notice.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "A component that takes children and displays the social media links and copyright notice.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row md:justify-end\">{children}</div>"
        }
      ]
    },
    {
      "description": "The social media feed footer should be a responsive, mobile-first footer that displays social media links, a copyright notice, and an optional newsletter signup form. On mobile, the links and copyright notice should be stacked vertically, while on larger screens, they should be arranged horizontally.",
      "html": "<footer class=\"max-w-md mx-auto p-4 lg:p-6 bg-gray-200\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/><NewsletterSignup/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "standalone component that takes a social media platform name and URL as props.",
          "html": "<a href=\"{href}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{iconUrl}\" alt=\"{platformName} icon\" class=\"h-6 w-6 mx-auto lg:mx-0\"><span class=\"sr-only\">{platformName}</span></a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "standalone component that takes a copyright year and owner as props.",
          "html": "<p class=\"text-sm text-gray-600\">{copyrightYear} {ownerName}. All rights reserved.</p>"
        },
        {
          "name": "NewsletterSignup",
          "is_standalone": true,
          "description": "standalone component that takes a form action URL and optional label text as props.",
          "html": "<form action=\"{formActionUrl}\" method=\"post\"><label for=\"email\" class=\"sr-only\">Email address</label><input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email address\" class=\"w-full lg:w-auto\"><button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button></form>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "container component that takes children (e.g., `SocialMediaLink`, `CopyrightNotice`, and `NewsletterSignup`).",
          "html": "<div class=\"flex flex-wrap justify-center lg:justify-between\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Footer should be a responsive footer section that displays social media links and a copyright notice. On larger screens, the social media links should be aligned to the right, while on smaller screens, they should stack vertically.",
      "html": "<footer class=\"flex flex-wrap justify-center md:justify-end py-4\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single social media link.",
          "html": "<a class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\" href=\"{social_media_url}\">{social_media_icon} {social_media_name}</a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "A standalone component that displays a copyright notice.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "A component that takes children and displays the social media links and copyright notice.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row md:justify-end\">{children}</div>"
        }
      ]
    },
    {
      "description": "The social media feed footer should be a responsive, mobile-first footer that displays social media links, a copyright notice, and an optional newsletter signup form. On mobile, the links and copyright notice should be stacked vertically, while on larger screens, they should be arranged horizontally.",
      "html": "<footer class=\"max-w-md mx-auto p-4 lg:p-6 bg-gray-200\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/><NewsletterSignup/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "standalone component that takes a social media platform name and URL as props.",
          "html": "<a href=\"{href}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{iconUrl}\" alt=\"{platformName} icon\" class=\"h-6 w-6 mx-auto lg:mx-0\"><span class=\"sr-only\">{platformName}</span></a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "standalone component that takes a copyright year and owner as props.",
          "html": "<p class=\"text-sm text-gray-600\">{copyrightYear} {ownerName}. All rights reserved.</p>"
        },
        {
          "name": "NewsletterSignup",
          "is_standalone": true,
          "description": "standalone component that takes a form action URL and optional label text as props.",
          "html": "<form action=\"{formActionUrl}\" method=\"post\"><label for=\"email\" class=\"sr-only\">Email address</label><input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email address\" class=\"w-full lg:w-auto\"><button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button></form>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "container component that takes children (e.g., `SocialMediaLink`, `CopyrightNotice`, and `NewsletterSignup`).",
          "html": "<div class=\"flex flex-wrap justify-center lg:justify-between\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Footer should be a responsive footer section that displays social media links and a copyright notice. On larger screens, the social media links should be aligned to the right, while on smaller screens, they should stack vertically.",
      "html": "<footer class=\"flex flex-wrap justify-center md:justify-end py-4\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single social media link.",
          "html": "<a class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\" href=\"{social_media_url}\">{social_media_icon} {social_media_name}</a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "A standalone component that displays a copyright notice.",
          "html": "<p class=\"text-sm text-gray-600\">&copy; {year} {company_name}. All rights reserved.</p>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "A component that takes children and displays the social media links and copyright notice.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row md:justify-end\">{children}</div>"
        }
      ]
    },
    {
      "description": "The social media feed footer should be a responsive, mobile-first footer that displays social media links, a copyright notice, and an optional newsletter signup form. On mobile, the links and copyright notice should be stacked vertically, while on larger screens, they should be arranged horizontally.",
      "html": "<footer class=\"max-w-md mx-auto p-4 lg:p-6 bg-gray-200\"><SocialMediaFeedFooter><SocialMediaLink/><SocialMediaLink/><CopyrightNotice/><NewsletterSignup/></SocialMediaFeedFooter></footer>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "standalone component that takes a social media platform name and URL as props.",
          "html": "<a href=\"{href}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{iconUrl}\" alt=\"{platformName} icon\" class=\"h-6 w-6 mx-auto lg:mx-0\"><span class=\"sr-only\">{platformName}</span></a>"
        },
        {
          "name": "CopyrightNotice",
          "is_standalone": true,
          "description": "standalone component that takes a copyright year and owner as props.",
          "html": "<p class=\"text-sm text-gray-600\">{copyrightYear} {ownerName}. All rights reserved.</p>"
        },
        {
          "name": "NewsletterSignup",
          "is_standalone": true,
          "description": "standalone component that takes a form action URL and optional label text as props.",
          "html": "<form action=\"{formActionUrl}\" method=\"post\"><label for=\"email\" class=\"sr-only\">Email address</label><input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email address\" class=\"w-full lg:w-auto\"><button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button></form>"
        },
        {
          "name": "SocialMediaFeedFooter",
          "is_standalone": false,
          "description": "container component that takes children (e.g., `SocialMediaLink`, `CopyrightNotice`, and `NewsletterSignup`).",
          "html": "<div class=\"flex flex-wrap justify-center lg:justify-between\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Product Price Tag": [
    {
      "description": "The UI should display a featured product price tag with a discounted price, original price, and a percentage discount. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap items-center mb-4\"><FeaturedPriceTag/></div>",
      "components": [
        {
          "name": "FeaturedPriceTag",
          "is_standalone": true,
          "description": "(standalone): Display the featured product price tag.",
          "html": "<div class=\"bg-gray-100 p-2 rounded\"><p class=\"text-lg font-bold\">{newPrice}</p><p class=\"text-gray-500 line-through\">{originalPrice}</p><DiscountBadge/></div>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "(standalone): Display the percentage discount badge.",
          "html": "<span class=\"bg-orange-200 text-orange-600 px-2 py-1 rounded\">{discountPercentage}% off</span>"
        }
      ]
    },
    {
      "description": "The UI should display a featured product price tag with a discounted price, original price, and a percentage discount. The design should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap items-center mb-4\"><FeaturedPriceTag/></div>",
      "components": [
        {
          "name": "FeaturedPriceTag",
          "is_standalone": true,
          "description": "(standalone): Display the featured product price tag.",
          "html": "<div class=\"bg-gray-100 p-2 rounded\"><p class=\"text-lg font-bold\">{newPrice}</p><p class=\"text-gray-500 line-through\">{originalPrice}</p><DiscountBadge/></div>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "(standalone): Display the percentage discount badge.",
          "html": "<span class=\"bg-orange-200 text-orange-600 px-2 py-1 rounded\">{discountPercentage}% off</span>"
        }
      ]
    }
  ],
  "Callout Box Border Radius": [
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    },
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    },
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    },
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    },
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    },
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    },
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    },
    {
      "description": "A callout box with a border radius, typically used to highlight important information or provide additional context.",
      "html": "<div class=\"w-full max-w-md p-4 bg-white shadow-md rounded-lg\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains a title and a description.",
          "html": "<div class=\"p-4 border-l-4 border-green-500\"><CalloutBoxTitle/><CalloutBoxDescription/></div>"
        },
        {
          "name": "CalloutBoxTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the callout box.",
          "html": "<p class=\"text-lg font-bold\">{title}</p>"
        },
        {
          "name": "CalloutBoxDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the description of the callout box.",
          "html": "<p class=\"text-sm\">{description}</p>"
        }
      ]
    }
  ],
  "Post Card: A single post with user info and actions": [
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card that displays a single post with user information and actions. It should be responsive, mobile-first, accessible, and SEO-friendly. The card should have a clear hierarchy of information, with the user's profile picture, name, and timestamp at the top, followed by the post content, and then the actions (e.g., like, comment, share) at the bottom.",
      "html": "<div class=\"max-w-md bg-white rounded-lg shadow-md p-4\"><PostCard><UserProfile/><PostContent/><PostActions/></PostCard></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone): Displays the user's profile picture and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={user_profile_picture} class=\"w-10 h-10 rounded-full\"/><div class=\"ml-2\"><p class=\"text-lg font-bold\">{user_name}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "(standalone): Displays the content of the post.",
          "html": "<p class=\"text-lg\">{post_content}</p>"
        },
        {
          "name": "PostActions",
          "is_standalone": true,
          "description": "(standalone): Displays the actions (e.g., like, comment, share) for the post.",
          "html": "<div class=\"flex justify-between mt-4\"><button class=\"text-gray-600 hover:text-gray-900\">Like</button><button class=\"text-gray-600 hover:text-gray-900\">Comment</button><button class=\"text-gray-600 hover:text-gray-900\">Share</button></div>"
        },
        {
          "name": "PostCard",
          "is_standalone": false,
          "description": "(takes children): The container component that wraps around the user profile, post content, and post actions.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Testimonial Quote Style": [
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a quote from a customer or user, along with their name and title. The quote should be displayed prominently, with the name and title in smaller text below.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded shadow-md\"><Testimonial><TestimonialQuote/><TestimonialAuthor/></Testimonial></div>",
      "components": [
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "Standalone component that displays a quote.",
          "html": "<blockquote class=\"text-lg italic\">{quote_text}</blockquote>"
        },
        {
          "name": "TestimonialAuthor",
          "is_standalone": true,
          "description": "Standalone component that displays the author's name and title.",
          "html": "<p class=\"text-base\">{author_name}, <span class=\"text-sm\">{author_title}</span></p>"
        },
        {
          "name": "Testimonial",
          "is_standalone": false,
          "description": "Parent component that contains the quote and author information. Takes children.",
          "html": "<div class=\"flex flex-col\">{children}</div>"
        }
      ]
    }
  ],
  "Pinned messages with timestamp and author display": [
    {
      "description": "A list of pinned messages, each with a timestamp and author display.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Pinned Messages</h2><PinnedMessageList><!-- list of pinned messages will be rendered here --></PinnedMessageList></div>",
      "components": [
        {
          "name": "PinnedMessageList",
          "is_standalone": false,
          "description": "component that takes children (a list of `PinnedMessage` components)",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of pinned messages, each with a timestamp and author information. The messages should be displayed in a clean and readable format, with the timestamp and author information clearly visible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Pinned Messages</h2><PinnedMessageList><PinnedMessage/><PinnedMessage/><!-- additional pinned messages here --></PinnedMessageList></div>",
      "components": [
        {
          "name": "PinnedMessage",
          "is_standalone": true,
          "description": "A standalone component that displays a single pinned message, including the message text, timestamp, and author information.",
          "html": "<div class=\"flex items-center mb-2\"><span class=\"text-gray-600\">{author_name}</span><span class=\"text-gray-400 text-sm ml-2\">{timestamp}</span><p class=\"ml-4\">{message_text}</p></div>"
        },
        {
          "name": "PinnedMessageList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `PinnedMessage` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Callout Box Background Image": [
    {
      "description": "The UI should be a callout box with a background image, having a heading, description, and a call-to-action button. The background image should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that wraps the entire callout box.",
          "html": "<div class=\"relative bg-cover bg-center h-full\" style={{ backgroundImage: `url(${background_image_url})` }}><div class=\"absolute inset-0 bg-gray-900 bg-opacity-50\"></div><CalloutHeader/><CalloutButton/></div>"
        },
        {
          "name": "CalloutHeader",
          "is_standalone": true,
          "description": "A standalone component that contains the heading and description.",
          "html": "<div class=\"absolute bottom-0 left-0 p-4 mb-4\"><h2 class=\"text-2xl font-bold\">{heading}</h2><p class=\"text-lg\">{description}</p></div>"
        },
        {
          "name": "CalloutButton",
          "is_standalone": true,
          "description": "A standalone component that contains the call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a background image, having a heading, description, and a call-to-action button. The background image should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that wraps the entire callout box.",
          "html": "<div class=\"relative bg-cover bg-center h-full\" style={{ backgroundImage: `url(${background_image_url})` }}><div class=\"absolute inset-0 bg-gray-900 bg-opacity-50\"></div><CalloutHeader/><CalloutButton/></div>"
        },
        {
          "name": "CalloutHeader",
          "is_standalone": true,
          "description": "A standalone component that contains the heading and description.",
          "html": "<div class=\"absolute bottom-0 left-0 p-4 mb-4\"><h2 class=\"text-2xl font-bold\">{heading}</h2><p class=\"text-lg\">{description}</p></div>"
        },
        {
          "name": "CalloutButton",
          "is_standalone": true,
          "description": "A standalone component that contains the call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a callout box with a background image, having a heading, description, and a call-to-action button. The background image should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that wraps the entire callout box.",
          "html": "<div class=\"relative bg-cover bg-center h-full\" style={{ backgroundImage: `url(${background_image_url})` }}><div class=\"absolute inset-0 bg-gray-900 bg-opacity-50\"></div><CalloutHeader/><CalloutButton/></div>"
        },
        {
          "name": "CalloutHeader",
          "is_standalone": true,
          "description": "A standalone component that contains the heading and description.",
          "html": "<div class=\"absolute bottom-0 left-0 p-4 mb-4\"><h2 class=\"text-2xl font-bold\">{heading}</h2><p class=\"text-lg\">{description}</p></div>"
        },
        {
          "name": "CalloutButton",
          "is_standalone": true,
          "description": "A standalone component that contains the call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    }
  ],
  "Dropdown Menu Item Icon Color": [
    {
      "description": "The UI should be a dropdown menu item with an icon, where the icon's color can be customized.",
      "html": "<nav class=\"flex justify-center\"><ul class=\"flex flex-col\"><li><DropdownMenuItem><DropdownMenuItemIcon/><span>Menu Item 1</span></DropdownMenuItem></li></ul></nav>",
      "components": [
        {
          "name": "DropdownMenuItemIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon with a customizable color.",
          "html": "<i class=\"w-4 h-4 {icon_color}\" aria-hidden=\"true\">{icon_name}</i>"
        },
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "A component that takes children, wraps the `DropdownMenuItemIcon` component, and displays a dropdown menu item with text.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\">{children}</li>"
        }
      ]
    },
    {
      "description": "The UI should be a dropdown menu item with an icon, where the icon's color can be customized.",
      "html": "<nav class=\"flex justify-center\"><ul class=\"flex flex-col\"><li><DropdownMenuItem><DropdownMenuItemIcon/><span>Menu Item 1</span></DropdownMenuItem></li></ul></nav>",
      "components": [
        {
          "name": "DropdownMenuItemIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon with a customizable color.",
          "html": "<i class=\"w-4 h-4 {icon_color}\" aria-hidden=\"true\">{icon_name}</i>"
        },
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "A component that takes children, wraps the `DropdownMenuItemIcon` component, and displays a dropdown menu item with text.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\">{children}</li>"
        }
      ]
    },
    {
      "description": "The UI should be a dropdown menu item with an icon, where the icon's color can be customized.",
      "html": "<nav class=\"flex justify-center\"><ul class=\"flex flex-col\"><li><DropdownMenuItem><DropdownMenuItemIcon/><span>Menu Item 1</span></DropdownMenuItem></li></ul></nav>",
      "components": [
        {
          "name": "DropdownMenuItemIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon with a customizable color.",
          "html": "<i class=\"w-4 h-4 {icon_color}\" aria-hidden=\"true\">{icon_name}</i>"
        },
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "A component that takes children, wraps the `DropdownMenuItemIcon` component, and displays a dropdown menu item with text.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\">{children}</li>"
        }
      ]
    }
  ],
  "Footer Copyright Text": [
    {
      "description": "The UI should be a simple footer with a copyright text, displayed at the bottom of the page. The text should be centered and have a smaller font size.",
      "html": "<footer><FooterCopyright/></footer>",
      "components": [
        {
          "name": "FooterCopyright",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-center text-sm text-gray-500\">&copy; {current_year} {copyright_holder}. All rights reserved.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer with a copyright text, displayed at the bottom of the page. The text should be centered and have a smaller font size.",
      "html": "<footer><FooterCopyright/></footer>",
      "components": [
        {
          "name": "FooterCopyright",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-center text-sm text-gray-500\">&copy; {current_year} {copyright_holder}. All rights reserved.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer with a copyright text, displayed at the bottom of the page. The text should be centered and have a smaller font size.",
      "html": "<footer><FooterCopyright/></footer>",
      "components": [
        {
          "name": "FooterCopyright",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p class=\"text-center text-sm text-gray-500\">&copy; {current_year} {copyright_holder}. All rights reserved.</p>"
        }
      ]
    }
  ],
  "Cover Photo Upload: Input field for uploading a cover photo": [
    {
      "description": "The UI should be a simple input field with a label and a button to upload a cover photo. The input field should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><label for=\"cover-photo\" class=\"block mb-2\">Cover Photo</label><CoverPhotoUploadField/></div>",
      "components": [
        {
          "name": "CoverPhotoUploadField",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and upload button.",
          "html": "<div class=\"flex items-center\"><input type=\"file\" id=\"cover-photo\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\"/><UploadButton/></div>"
        },
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "A standalone component that is the upload button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4\">Upload</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a label and a button to upload a cover photo. The input field should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><label for=\"cover-photo\" class=\"block mb-2\">Cover Photo</label><CoverPhotoUploadField/></div>",
      "components": [
        {
          "name": "CoverPhotoUploadField",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and upload button.",
          "html": "<div class=\"flex items-center\"><input type=\"file\" id=\"cover-photo\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\"/><UploadButton/></div>"
        },
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "A standalone component that is the upload button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4\">Upload</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a label and a button to upload a cover photo. The input field should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><label for=\"cover-photo\" class=\"block mb-2\">Cover Photo</label><CoverPhotoUploadField/></div>",
      "components": [
        {
          "name": "CoverPhotoUploadField",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and upload button.",
          "html": "<div class=\"flex items-center\"><input type=\"file\" id=\"cover-photo\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\"/><UploadButton/></div>"
        },
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "A standalone component that is the upload button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4\">Upload</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a label and a button to upload a cover photo. The input field should be responsive and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><label for=\"cover-photo\" class=\"block mb-2\">Cover Photo</label><CoverPhotoUploadField/></div>",
      "components": [
        {
          "name": "CoverPhotoUploadField",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and upload button.",
          "html": "<div class=\"flex items-center\"><input type=\"file\" id=\"cover-photo\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\"/><UploadButton/></div>"
        },
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "A standalone component that is the upload button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4\">Upload</button>"
        }
      ]
    }
  ],
  "Projects showcase with thumbnails and descriptions": [
    {
      "description": "The UI should be a responsive grid of project showcases, with each project displaying a thumbnail, a title, and a brief description. The grid should be mobile-first, with a single column on small screens and multiple columns on larger screens.",
      "html": "<section class=\"container max-w-7xl mx-auto p-4 lg:p-6\"><h1 class=\"text-3xl font-bold mb-4\">Projects</h1><ProjectsGrid><ProjectShowcase/><ProjectShowcase/><ProjectShowcase/><!-- add more ProjectShowcase components as needed --></ProjectsGrid></section>",
      "components": [
        {
          "name": "ProjectShowcase",
          "is_standalone": true,
          "description": "a standalone component displaying a single project's information",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><img src=\"{project_thumbnail_url}\" alt=\"{project_name} thumbnail\" class=\"w-full mb-2\"/><h2 class=\"text-lg font-bold\">{project_name}</h2><p class=\"text-gray-600\">{project_description}</p></div>"
        },
        {
          "name": "ProjectsGrid",
          "is_standalone": false,
          "description": "a component taking children, rendering a grid of project showcases",
          "html": "<div class=\"grid gap-4 lg:grid-cols-2 xl:grid-cols-3\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive grid of project showcases, with each project displaying a thumbnail, a title, and a brief description. The grid should be mobile-first, with a single column on small screens and multiple columns on larger screens.",
      "html": "<section class=\"container max-w-7xl mx-auto p-4 lg:p-6\"><h1 class=\"text-3xl font-bold mb-4\">Projects</h1><ProjectsGrid><ProjectShowcase/><ProjectShowcase/><ProjectShowcase/><!-- add more ProjectShowcase components as needed --></ProjectsGrid></section>",
      "components": [
        {
          "name": "ProjectShowcase",
          "is_standalone": true,
          "description": "a standalone component displaying a single project's information",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><img src=\"{project_thumbnail_url}\" alt=\"{project_name} thumbnail\" class=\"w-full mb-2\"/><h2 class=\"text-lg font-bold\">{project_name}</h2><p class=\"text-gray-600\">{project_description}</p></div>"
        },
        {
          "name": "ProjectsGrid",
          "is_standalone": false,
          "description": "a component taking children, rendering a grid of project showcases",
          "html": "<div class=\"grid gap-4 lg:grid-cols-2 xl:grid-cols-3\">{children}</div>"
        }
      ]
    },
    {
      "description": "A projects showcase with a grid of thumbnails, each with a description and a link to view more.",
      "html": "<div class=\"container mx-auto p-4 pt-6 lg:p-6\"><h1 class=\"text-3xl font-bold mb-4\">Projects Showcase</h1><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProjectShowcase><ProjectCard><ProjectThumbnail/></ProjectCard><ProjectCard><ProjectThumbnail/></ProjectCard><ProjectCard><ProjectThumbnail/></ProjectCard><!-- and so on... --></ProjectShowcase></div></div>",
      "components": [
        {
          "name": "ProjectThumbnail",
          "is_standalone": true,
          "description": "standalone component that displays a single project thumbnail.",
          "html": "<a href=\"{project_url}\" class=\"block mb-4\"><img src=\"{thumbnail_url}\" alt=\"{project_name}\" class=\"h-48 w-full object-cover rounded-md\"/></a>"
        },
        {
          "name": "ProjectCard",
          "is_standalone": false,
          "description": "takes children, a container component that displays a project thumbnail and description.",
          "html": "<div class=\"p-4 md:p-6 bg-white rounded-md shadow-md\">{children} <h2 class=\"text-lg font-bold\">{project_name}</h2><p>{project_description}</p></div>"
        },
        {
          "name": "ProjectShowcase",
          "is_standalone": false,
          "description": "takes children, the main component that displays a grid of project cards.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Author and Date Metadata": [
    {
      "description": "The UI should display the author's name and the date of publication in a clean and simple format, with the author's name on top and the date below, aligned to the left.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the author's name",
          "html": "<p class=\"text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the date of publication",
          "html": "<p class=\"text-xs text-gray-500\">{publication_date}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name and the date of publication in a clean and simple format, with the author's name on top and the date below, aligned to the left.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the author's name",
          "html": "<p class=\"text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the date of publication",
          "html": "<p class=\"text-xs text-gray-500\">{publication_date}</p>"
        }
      ]
    },
    {
      "description": "A simple metadata section displaying the author's name and the date of publication, aligned to the left and styled for readability.",
      "html": "<div class=\"flex flex-wrap justify-start mb-4\"><MetadataContainer><AuthorMetadata/><DateMetadata/></MetadataContainer></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "standalone component displaying the author's name.",
          "html": "<p class=\"text-gray-600 text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "standalone component displaying the date of publication.",
          "html": "<p class=\"text-gray-600 text-sm\">{publication_date}</p>"
        },
        {
          "name": "MetadataContainer",
          "is_standalone": false,
          "description": "container component taking two children: AuthorMetadata and DateMetadata.",
          "html": "<div class=\"flex flex-wrap items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name and the date of publication, with the author's name in a slightly larger font size than the date.",
      "html": "<div class=\"flex justify-between mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "standalone component that displays the author's name.",
          "html": "<p class=\"text-lg\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "standalone component that displays the date of publication.",
          "html": "<p class=\"text-sm text-gray-600\">{publication_date}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name and the date of publication in a clean and simple format, with the author's name on top and the date below, aligned to the left.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the author's name",
          "html": "<p class=\"text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the date of publication",
          "html": "<p class=\"text-xs text-gray-500\">{publication_date}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name and the date of publication in a clean and simple format, with the author's name on top and the date below, aligned to the left.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the author's name",
          "html": "<p class=\"text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the date of publication",
          "html": "<p class=\"text-xs text-gray-500\">{publication_date}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name and the date of publication in a clean and simple format, with the author's name on top and the date below, aligned to the left.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the author's name",
          "html": "<p class=\"text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the date of publication",
          "html": "<p class=\"text-xs text-gray-500\">{publication_date}</p>"
        }
      ]
    },
    {
      "description": "The UI should display the author's name and the date of publication in a clean and simple format, with the author's name on top and the date below, aligned to the left.",
      "html": "<div class=\"flex flex-col md:flex-row md:items-center mb-4\"><AuthorMetadata/><DateMetadata/></div>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the author's name",
          "html": "<p class=\"text-sm\">{author_name}</p>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "(standalone): displays the date of publication",
          "html": "<p class=\"text-xs text-gray-500\">{publication_date}</p>"
        }
      ]
    },
    {
      "description": "The UI should display author and date metadata in a compact and readable format, typically used in blog posts, articles, or news websites. The author's name and publication date should be displayed side by side, with the author's name in a slightly larger font size.",
      "html": "<footer class=\"flex justify-between mb-4\"><MetadataContainer><AuthorMetadata/><DateMetadata/></MetadataContainer></footer>",
      "components": [
        {
          "name": "AuthorMetadata",
          "is_standalone": true,
          "description": "A standalone component displaying the author's name.",
          "html": "<span class=\"text-lg\">{author_name}</span>"
        },
        {
          "name": "DateMetadata",
          "is_standalone": true,
          "description": "A standalone component displaying the publication date.",
          "html": "<span class=\"text-gray-600\">{publication_date}</span>"
        },
        {
          "name": "MetadataContainer",
          "is_standalone": false,
          "description": "A container component that takes children, wrapping the author and date metadata components.",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    }
  ],
  "User Profiles and Achievements": [
    {
      "description": "The UI should display a user's profile information and achievements in a clean and modern layout. The profile section should show the user's name, profile picture, and bio. The achievements section should display a list of badges or icons representing the user's accomplishments.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><UserProfileCard/><h2 class=\"text-lg font-bold mb-2\">Achievements</h2><AchievementList><AchievementBadge/><AchievementBadge/><!-- more AchievementBadge components here --></AchievementList></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile information.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><img src={profile_picture_url} class=\"w-16 h-16 rounded-full\" alt=\"Profile Picture\"/><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{bio}</p></div>"
        },
        {
          "name": "AchievementBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a single achievement badge.",
          "html": "<div class=\"bg-yellow-100 rounded p-2\"><img src={badge_icon_url} class=\"w-8 h-8\" alt=\"Achievement Badge\"/><span class=\"text-sm\">{badge_name}</span></div>"
        },
        {
          "name": "AchievementList",
          "is_standalone": false,
          "description": "A component that takes children (a list of `AchievementBadge` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Shipping and delivery options": [
    {
      "description": "The UI should display shipping and delivery options in a clear and organized manner. It should be responsive, easy to read, and accessible on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionsList><DeliveryOptionCard/><DeliveryOptionCard/><!-- Add more DeliveryOptionCard components as needed --></ShippingOptionsList></section>",
      "components": [
        {
          "name": "DeliveryOptionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single delivery option.",
          "html": "<article class=\"border p-4 mb-4\"><h3 class=\"text-lg font-bold\">{option_name}</h3><p>{description}</p><p>Estimated delivery time: {delivery_time}</p><p>Cost: {cost}</p><!-- Add more details as needed --></article>"
        },
        {
          "name": "ShippingOptionsList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of delivery options.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display shipping and delivery options in a clear and organized manner. It should be responsive, easy to read, and accessible on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionsList><DeliveryOptionCard/><DeliveryOptionCard/><!-- Add more DeliveryOptionCard components as needed --></ShippingOptionsList></section>",
      "components": [
        {
          "name": "DeliveryOptionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single delivery option.",
          "html": "<article class=\"border p-4 mb-4\"><h3 class=\"text-lg font-bold\">{option_name}</h3><p>{description}</p><p>Estimated delivery time: {delivery_time}</p><p>Cost: {cost}</p><!-- Add more details as needed --></article>"
        },
        {
          "name": "ShippingOptionsList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of delivery options.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display shipping and delivery options in a clear and organized manner. It should be responsive, easy to read, and accessible on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionsList><DeliveryOptionCard/><DeliveryOptionCard/><!-- Add more DeliveryOptionCard components as needed --></ShippingOptionsList></section>",
      "components": [
        {
          "name": "DeliveryOptionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single delivery option.",
          "html": "<article class=\"border p-4 mb-4\"><h3 class=\"text-lg font-bold\">{option_name}</h3><p>{description}</p><p>Estimated delivery time: {delivery_time}</p><p>Cost: {cost}</p><!-- Add more details as needed --></article>"
        },
        {
          "name": "ShippingOptionsList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of delivery options.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display shipping and delivery options in a clear and organized manner. It should be responsive, easy to read, and accessible on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionsList><DeliveryOptionCard/><DeliveryOptionCard/><!-- Add more DeliveryOptionCard components as needed --></ShippingOptionsList></section>",
      "components": [
        {
          "name": "DeliveryOptionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single delivery option.",
          "html": "<article class=\"border p-4 mb-4\"><h3 class=\"text-lg font-bold\">{option_name}</h3><p>{description}</p><p>Estimated delivery time: {delivery_time}</p><p>Cost: {cost}</p><!-- Add more details as needed --></article>"
        },
        {
          "name": "ShippingOptionsList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of delivery options.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display shipping and delivery options in a clear and organized manner. It should be responsive, easy to read, and accessible on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionsList><DeliveryOptionCard/><DeliveryOptionCard/><!-- Add more DeliveryOptionCard components as needed --></ShippingOptionsList></section>",
      "components": [
        {
          "name": "DeliveryOptionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single delivery option.",
          "html": "<article class=\"border p-4 mb-4\"><h3 class=\"text-lg font-bold\">{option_name}</h3><p>{description}</p><p>Estimated delivery time: {delivery_time}</p><p>Cost: {cost}</p><!-- Add more details as needed --></article>"
        },
        {
          "name": "ShippingOptionsList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of delivery options.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display shipping and delivery options in a clear and organized manner. It should be responsive, easy to read, and accessible on various devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionsList><DeliveryOptionCard/><DeliveryOptionCard/><!-- Add more DeliveryOptionCard components as needed --></ShippingOptionsList></section>",
      "components": [
        {
          "name": "DeliveryOptionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single delivery option.",
          "html": "<article class=\"border p-4 mb-4\"><h3 class=\"text-lg font-bold\">{option_name}</h3><p>{description}</p><p>Estimated delivery time: {delivery_time}</p><p>Cost: {cost}</p><!-- Add more details as needed --></article>"
        },
        {
          "name": "ShippingOptionsList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of delivery options.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of shipping and delivery options with their respective details, such as names, prices, and estimated delivery times. The UI should be responsive, with a mobile-first design that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h2 class=\"text-2xl font-bold mb-4\">Shipping and Delivery Options</h2><ShippingOptionList><!-- shipping options will be rendered here --></ShippingOptionList></div>",
      "components": [
        {
          "name": "ShippingOptionList",
          "is_standalone": false,
          "description": "a component that takes children, which is a list of `ShippingOptionCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Integrations Hub: Connect third-party apps": [
    {
      "description": "The UI should be a card-based layout that displays a list of integrations. Each card should have a logo of the third-party app, a brief description, and a Connect button. The layout should be responsive, with the cards stacking vertically on mobile devices and displaying in a grid on larger screens.",
      "html": "<section class=\"container mx-auto p-4 pt-6 pb-10\"><h1 class=\"text-3xl font-bold mb-4\">Integrations Hub</h1><IntegrationsList><IntegrationCard/><IntegrationCard/><!-- Repeat IntegrationCard components for each integration --></IntegrationsList></section>",
      "components": [
        {
          "name": "IntegrationCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single integration.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4 hover:shadow-lg\"><div class=\"flex items-center mb-2\"><img src=\"{integration_logo_url}\" alt=\"{integration_name}\" class=\"w-8 h-8 mr-2\"/><h2 class=\"text-lg font-bold\">{integration_name}</h2></div><p class=\"text-gray-600\">{integration_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Connect</button></div>"
        },
        {
          "name": "IntegrationsList",
          "is_standalone": false,
          "description": "A component that takes children (IntegrationCard components) and displays them in a responsive grid.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a card-based layout that displays a list of integrations. Each card should have a logo of the third-party app, a brief description, and a Connect button. The layout should be responsive, with the cards stacking vertically on mobile devices and displaying in a grid on larger screens.",
      "html": "<section class=\"container mx-auto p-4 pt-6 pb-10\"><h1 class=\"text-3xl font-bold mb-4\">Integrations Hub</h1><IntegrationsList><IntegrationCard/><IntegrationCard/><!-- Repeat IntegrationCard components for each integration --></IntegrationsList></section>",
      "components": [
        {
          "name": "IntegrationCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single integration.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4 hover:shadow-lg\"><div class=\"flex items-center mb-2\"><img src=\"{integration_logo_url}\" alt=\"{integration_name}\" class=\"w-8 h-8 mr-2\"/><h2 class=\"text-lg font-bold\">{integration_name}</h2></div><p class=\"text-gray-600\">{integration_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Connect</button></div>"
        },
        {
          "name": "IntegrationsList",
          "is_standalone": false,
          "description": "A component that takes children (IntegrationCard components) and displays them in a responsive grid.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Suggested products carousel": [
    {
      "description": "A horizontal carousel displaying multiple products with images, names, and prices. The carousel should be responsive and have navigation arrows on both sides.",
      "html": "<div class=\"flex justify-center\"><CarouselNavigation/><Carousel><ProductCard/><ProductCard/><ProductCard/><!-- Add more ProductCard components here --></Carousel><CarouselNavigation/></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single product with image, name, and price.",
          "html": "<div class=\"bg-white shadow-md rounded\"><img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/><div class=\"p-4\"><h5 class=\"text-lg\">{product_name}</h5><p class=\"text-gray-600\">{price}</p></div></div>"
        },
        {
          "name": "CarouselNavigation",
          "is_standalone": true,
          "description": "(standalone): Displays navigation arrows for the carousel.",
          "html": "<button class=\"bg-white border-none text-lg hover:text-gray-600 transition duration-300\">{navigation_arrow}</button>"
        },
        {
          "name": "Carousel",
          "is_standalone": false,
          "description": "(takes children): Container for the carousel, holds multiple **ProductCard** components.",
          "html": "<div class=\"flex overflow-x-hidden\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Product Title": [
    {
      "description": "The UI should display a prominent title highlighting a featured product. It should be visually appealing, responsive, and accessible.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturedProductTitle/></section>",
      "components": [
        {
          "name": "FeaturedProductTitle",
          "is_standalone": true,
          "description": "Standalone component that displays a highlighted title.",
          "html": "<h2 class=\"text-3xl font-bold mb-4 text-primary\">{product_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent title highlighting a featured product. It should be visually appealing, responsive, and accessible.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturedProductTitle/></section>",
      "components": [
        {
          "name": "FeaturedProductTitle",
          "is_standalone": true,
          "description": "Standalone component that displays a highlighted title.",
          "html": "<h2 class=\"text-3xl font-bold mb-4 text-primary\">{product_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent title highlighting a featured product. It should be visually appealing, responsive, and accessible.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturedProductTitle/></section>",
      "components": [
        {
          "name": "FeaturedProductTitle",
          "is_standalone": true,
          "description": "Standalone component that displays a highlighted title.",
          "html": "<h2 class=\"text-3xl font-bold mb-4 text-primary\">{product_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent title highlighting a featured product. It should be visually appealing, responsive, and accessible.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturedProductTitle/></section>",
      "components": [
        {
          "name": "FeaturedProductTitle",
          "is_standalone": true,
          "description": "Standalone component that displays a highlighted title.",
          "html": "<h2 class=\"text-3xl font-bold mb-4 text-primary\">{product_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent title highlighting a featured product. It should be visually appealing, responsive, and accessible.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturedProductTitle/></section>",
      "components": [
        {
          "name": "FeaturedProductTitle",
          "is_standalone": true,
          "description": "Standalone component that displays a highlighted title.",
          "html": "<h2 class=\"text-3xl font-bold mb-4 text-primary\">{product_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent title highlighting a featured product. It should be visually appealing, responsive, and accessible.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturedProductTitle/></section>",
      "components": [
        {
          "name": "FeaturedProductTitle",
          "is_standalone": true,
          "description": "Standalone component that displays a highlighted title.",
          "html": "<h2 class=\"text-3xl font-bold mb-4 text-primary\">{product_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent title highlighting a featured product. It should be visually appealing, responsive, and accessible.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturedProductTitle/></section>",
      "components": [
        {
          "name": "FeaturedProductTitle",
          "is_standalone": true,
          "description": "Standalone component that displays a highlighted title.",
          "html": "<h2 class=\"text-3xl font-bold mb-4 text-primary\">{product_title}</h2>"
        }
      ]
    }
  ],
  "Thumbnail generator for video previews": [
    {
      "description": "A responsive grid of video thumbnails with a preview image, video title, and duration. Each thumbnail should have a hover effect and be accessible.",
      "html": "<div class=\"container mx-auto p-4\"><ThumbnailGrid><VideoThumbnail/><VideoThumbnail/><VideoThumbnail/><!-- Add more VideoThumbnail components as needed --></ThumbnailGrid></div>",
      "components": [
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "A standalone component representing a single video thumbnail.",
          "html": "<div class=\"bg-gray-200 hover:bg-gray-300 rounded-md overflow-hidden shadow-md transition duration-300 ease-in-out\"><img src={thumbnail_url} alt={video_title} class=\"w-full h-40 object-cover\"/><div class=\"p-2\"><h5 class=\"text-lg font-bold\">{video_title}</h5><p class=\"text-sm text-gray-600\">{duration}</p></div></div>"
        },
        {
          "name": "ThumbnailGrid",
          "is_standalone": false,
          "description": "A container component that takes children, which are `VideoThumbnail` components.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive grid of video thumbnails with a preview image, video title, and duration. Each thumbnail should have a hover effect and be accessible.",
      "html": "<div class=\"container mx-auto p-4\"><ThumbnailGrid><VideoThumbnail/><VideoThumbnail/><VideoThumbnail/><!-- Add more VideoThumbnail components as needed --></ThumbnailGrid></div>",
      "components": [
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "A standalone component representing a single video thumbnail.",
          "html": "<div class=\"bg-gray-200 hover:bg-gray-300 rounded-md overflow-hidden shadow-md transition duration-300 ease-in-out\"><img src={thumbnail_url} alt={video_title} class=\"w-full h-40 object-cover\"/><div class=\"p-2\"><h5 class=\"text-lg font-bold\">{video_title}</h5><p class=\"text-sm text-gray-600\">{duration}</p></div></div>"
        },
        {
          "name": "ThumbnailGrid",
          "is_standalone": false,
          "description": "A container component that takes children, which are `VideoThumbnail` components.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A grid of thumbnail previews for video clips, with each thumbnail displaying a screenshot of the video and text overlay showing the video title and duration.",
      "html": "<div class=\"container mx-auto p-4\"><ThumbnailGrid><VideoThumbnail/><VideoThumbnail/><VideoThumbnail/><!-- Add more VideoThumbnail components here --></ThumbnailGrid></div>",
      "components": [
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "a standalone component displaying a single video thumbnail",
          "html": "<div class=\"bg-gray-200 h-32 w-48 relative overflow-hidden\"><img src=\"{thumbnail_url}\" alt=\"{video_title}\" class=\"object-cover h-full w-full\"/><div class=\"absolute bottom-0 left-0 p-2 text-sm text-white\"><p>{video_title}</p><p>{duration} seconds</p></div></div>"
        },
        {
          "name": "ThumbnailGrid",
          "is_standalone": false,
          "description": "a container component that renders a grid of `VideoThumbnail` components and takes children",
          "html": "<div class=\"grid grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive grid of video thumbnails with a preview image, video title, and duration. Each thumbnail should have a hover effect and be accessible.",
      "html": "<div class=\"container mx-auto p-4\"><ThumbnailGrid><VideoThumbnail/><VideoThumbnail/><VideoThumbnail/><!-- Add more VideoThumbnail components as needed --></ThumbnailGrid></div>",
      "components": [
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "A standalone component representing a single video thumbnail.",
          "html": "<div class=\"bg-gray-200 hover:bg-gray-300 rounded-md overflow-hidden shadow-md transition duration-300 ease-in-out\"><img src={thumbnail_url} alt={video_title} class=\"w-full h-40 object-cover\"/><div class=\"p-2\"><h5 class=\"text-lg font-bold\">{video_title}</h5><p class=\"text-sm text-gray-600\">{duration}</p></div></div>"
        },
        {
          "name": "ThumbnailGrid",
          "is_standalone": false,
          "description": "A container component that takes children, which are `VideoThumbnail` components.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive grid of video thumbnails with a preview image, video title, and duration. Each thumbnail should have a hover effect and be accessible.",
      "html": "<div class=\"container mx-auto p-4\"><ThumbnailGrid><VideoThumbnail/><VideoThumbnail/><VideoThumbnail/><!-- Add more VideoThumbnail components as needed --></ThumbnailGrid></div>",
      "components": [
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "A standalone component representing a single video thumbnail.",
          "html": "<div class=\"bg-gray-200 hover:bg-gray-300 rounded-md overflow-hidden shadow-md transition duration-300 ease-in-out\"><img src={thumbnail_url} alt={video_title} class=\"w-full h-40 object-cover\"/><div class=\"p-2\"><h5 class=\"text-lg font-bold\">{video_title}</h5><p class=\"text-sm text-gray-600\">{duration}</p></div></div>"
        },
        {
          "name": "ThumbnailGrid",
          "is_standalone": false,
          "description": "A container component that takes children, which are `VideoThumbnail` components.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Video Play Icon": [
    {
      "description": "The UI should display a play icon overlaid on a featured video thumbnail. The play icon should be a white triangle with a rounded rectangle background. The icon should be responsive, accessible, and mobile-first.",
      "html": "<div class=\"w-full h-full relative\"><img src=\"{thumbnail_url}\" alt=\"Featured Video Thumbnail\" class=\"w-full h-full object-cover rounded-lg\"/><FeaturedVideoPlayIcon/></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayIcon",
          "is_standalone": true,
          "description": "(standalone): displays the play icon overlaid on a featured video thumbnail.",
          "html": "<div class=\"absolute inset-0 flex justify-center items-center bg-gray-800 rounded-lg p-4\"><div class=\"w-10 h-10 bg-white rounded-full flex justify-center items-center\"><span class=\"text-gray-800 text-3xl\">{<!-- play icon -->}</span></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a play icon overlaid on a featured video thumbnail. The play icon should be a white triangle with a rounded rectangle background. The icon should be responsive, accessible, and mobile-first.",
      "html": "<div class=\"w-full h-full relative\"><img src=\"{thumbnail_url}\" alt=\"Featured Video Thumbnail\" class=\"w-full h-full object-cover rounded-lg\"/><FeaturedVideoPlayIcon/></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayIcon",
          "is_standalone": true,
          "description": "(standalone): displays the play icon overlaid on a featured video thumbnail.",
          "html": "<div class=\"absolute inset-0 flex justify-center items-center bg-gray-800 rounded-lg p-4\"><div class=\"w-10 h-10 bg-white rounded-full flex justify-center items-center\"><span class=\"text-gray-800 text-3xl\">{<!-- play icon -->}</span></div></div>"
        }
      ]
    }
  ],
  "Toast/Notification Messages": [
    {
      "description": "The UI should display a notification message that appears at the top of the screen, with a background color indicating the type of message (e.g. success, error, warning). The message should be easily readable and have a close button to dismiss it.",
      "html": "<div class=\"fixed top-0 left-0 w-full p-4\"><NotificationMessage/></div>",
      "components": [
        {
          "name": "NotificationMessage",
          "is_standalone": true,
          "description": "standalone component that displays a single notification message.",
          "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-4\" role=\"alert\"><p>{message}</p><NotificationCloseButton/></div>"
        },
        {
          "name": "NotificationCloseButton",
          "is_standalone": true,
          "description": "standalone component that renders a close button for the notification message.",
          "html": "<button aria-label=\"Close notification\" class=\"text-orange-500 hover:text-orange-700 transition duration-300\">×</button>"
        }
      ]
    },
    {
      "description": "The UI should display a notification message that appears at the top of the screen, with a background color indicating the type of message (e.g. success, error, warning). The message should be easily readable and have a close button to dismiss it.",
      "html": "<div class=\"fixed top-0 left-0 w-full p-4\"><NotificationMessage/></div>",
      "components": [
        {
          "name": "NotificationMessage",
          "is_standalone": true,
          "description": "standalone component that displays a single notification message.",
          "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-4\" role=\"alert\"><p>{message}</p><NotificationCloseButton/></div>"
        },
        {
          "name": "NotificationCloseButton",
          "is_standalone": true,
          "description": "standalone component that renders a close button for the notification message.",
          "html": "<button aria-label=\"Close notification\" class=\"text-orange-500 hover:text-orange-700 transition duration-300\">×</button>"
        }
      ]
    },
    {
      "description": "A toast/notification message is a small, non-obtrusive message that appears at the top or bottom of the screen, informing the user of a particular event or action. It usually disappears after a few seconds.",
      "html": "<div class=\"fixed bottom-0 left-0 p-4\"><NotificationToast/></div>",
      "components": [
        {
          "name": "NotificationToast",
          "is_standalone": true,
          "description": "a standalone component that displays a single notification message.",
          "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 p-4\"><p class=\"uppercase text-orange-500\">{notificationType}</p><p>{notificationMessage}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a notification message that appears at the top of the screen, with a background color indicating the type of message (e.g. success, error, warning). The message should be easily readable and have a close button to dismiss it.",
      "html": "<div class=\"fixed top-0 left-0 w-full p-4\"><NotificationMessage/></div>",
      "components": [
        {
          "name": "NotificationMessage",
          "is_standalone": true,
          "description": "standalone component that displays a single notification message.",
          "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-4\" role=\"alert\"><p>{message}</p><NotificationCloseButton/></div>"
        },
        {
          "name": "NotificationCloseButton",
          "is_standalone": true,
          "description": "standalone component that renders a close button for the notification message.",
          "html": "<button aria-label=\"Close notification\" class=\"text-orange-500 hover:text-orange-700 transition duration-300\">×</button>"
        }
      ]
    },
    {
      "description": "The UI should display a notification message that appears at the top of the screen, with a background color indicating the type of message (e.g. success, error, warning). The message should be easily readable and have a close button to dismiss it.",
      "html": "<div class=\"fixed top-0 left-0 w-full p-4\"><NotificationMessage/></div>",
      "components": [
        {
          "name": "NotificationMessage",
          "is_standalone": true,
          "description": "standalone component that displays a single notification message.",
          "html": "<div class=\"bg-orange-100 border-l-4 border-orange-500 text-orange-700 p-4\" role=\"alert\"><p>{message}</p><NotificationCloseButton/></div>"
        },
        {
          "name": "NotificationCloseButton",
          "is_standalone": true,
          "description": "standalone component that renders a close button for the notification message.",
          "html": "<button aria-label=\"Close notification\" class=\"text-orange-500 hover:text-orange-700 transition duration-300\">×</button>"
        }
      ]
    }
  ],
  "Price and availability information": [
    {
      "description": "The UI should display price and availability information in a clean and easy-to-read format. The price should be prominent, and the availability information should be displayed below it.",
      "html": "<div class=\"flex flex-col gap-2\"><PriceInfo/><AvailabilityInfo/></div>",
      "components": [
        {
          "name": "PriceInfo",
          "is_standalone": true,
          "description": "Standalone component to display the price information.",
          "html": "<p class=\"text-lg font-bold\">{price_amount} {currency}</p>"
        },
        {
          "name": "AvailabilityInfo",
          "is_standalone": true,
          "description": "Standalone component to display the availability information.",
          "html": "<p>Availability: {availability_status}</p><!-- availability_status can be \"In Stock\", \"Out of Stock\", etc. --><p>Ships in {shipping_time} from {warehouse_location}</p>"
        }
      ]
    }
  ],
  "API Explorer: Discover APIs and endpoints": [
    {
      "description": "The UI should display a sidebar with a list of APIs, and a main content area that shows the details of the selected API, including its endpoints.",
      "html": "<div class=\"flex h-screen\"><ApiSidebar/><div class=\"flex-1 p-4\"><ApiDetails><h1>{api_name}</h1><p>{api_description}</p><ul><!-- list of endpoints --><ApiEndpoint/><ApiEndpoint/><!-- ... --></ul></ApiDetails></div></div>",
      "components": [
        {
          "name": "ApiSidebar",
          "is_standalone": true,
          "description": "a standalone component that displays a list of APIs",
          "html": "<nav class=\"w-64 p-4 bg-gray-100\"><h2>APIs</h2><ul><!-- list of APIs --><li><a href=\"#\" class=\"block p-2\">{api_name}</a></li><!-- ... --></ul></nav>"
        },
        {
          "name": "ApiDetails",
          "is_standalone": false,
          "description": "a component that takes children, displaying details about a selected API",
          "html": "<div>{children}</div>"
        },
        {
          "name": "ApiEndpoint",
          "is_standalone": true,
          "description": "a standalone component that displays a single API endpoint",
          "html": "<li class=\"p-2 border-b border-gray-200\"><h3>{endpoint_method} {endpoint_path}</h3><p>{endpoint_description}</p></li>"
        }
      ]
    }
  ],
  "Video sharing buttons for social media": [
    {
      "description": "The UI should display a row of social media buttons that allow users to share a video. The buttons should be responsive, mobile-friendly, and easily accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaButtonGroup><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more buttons as needed --></SocialMediaButtonGroup></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): A single button for a specific social media platform.",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"bg-{brand_color} hover:bg-{brand_hover_color} text-white font-bold py-2 px-4 rounded\"><img src=\"{icon_url}\" alt=\"{platform_name} icon\" class=\"w-4 h-4 mr-2\">{platform_name}</a>"
        },
        {
          "name": "SocialMediaButtonGroup",
          "is_standalone": false,
          "description": "(takes children): A container that holds multiple `SocialMediaButton` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a row of social media buttons that allow users to share a video. The buttons should be responsive, mobile-friendly, and easily accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaButtonGroup><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more buttons as needed --></SocialMediaButtonGroup></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): A single button for a specific social media platform.",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"bg-{brand_color} hover:bg-{brand_hover_color} text-white font-bold py-2 px-4 rounded\"><img src=\"{icon_url}\" alt=\"{platform_name} icon\" class=\"w-4 h-4 mr-2\">{platform_name}</a>"
        },
        {
          "name": "SocialMediaButtonGroup",
          "is_standalone": false,
          "description": "(takes children): A container that holds multiple `SocialMediaButton` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "A horizontal row of social media buttons to share a video, with each button displaying the logo of the respective platform (e.g. Facebook, Twitter, LinkedIn, etc.).",
      "html": "<div class=\"flex justify-center mb-4\"><VideoShareButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/></VideoShareButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone) - a single button for a specific social media platform",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{platform_logo_url}\" alt=\"{platform_name} logo\" class=\"w-8 h-8 rounded-full hover:opacity-75\"/></a>"
        },
        {
          "name": "VideoShareButtons",
          "is_standalone": false,
          "description": "(takes children) - a container for the social media buttons",
          "html": "<div class=\"flex space-x-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a row of social media buttons that allow users to share a video. The buttons should be responsive, mobile-friendly, and easily accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaButtonGroup><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more buttons as needed --></SocialMediaButtonGroup></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): A single button for a specific social media platform.",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"bg-{brand_color} hover:bg-{brand_hover_color} text-white font-bold py-2 px-4 rounded\"><img src=\"{icon_url}\" alt=\"{platform_name} icon\" class=\"w-4 h-4 mr-2\">{platform_name}</a>"
        },
        {
          "name": "SocialMediaButtonGroup",
          "is_standalone": false,
          "description": "(takes children): A container that holds multiple `SocialMediaButton` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a row of social media buttons that allow users to share a video. The buttons should be responsive, mobile-friendly, and easily accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaButtonGroup><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more buttons as needed --></SocialMediaButtonGroup></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): A single button for a specific social media platform.",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"bg-{brand_color} hover:bg-{brand_hover_color} text-white font-bold py-2 px-4 rounded\"><img src=\"{icon_url}\" alt=\"{platform_name} icon\" class=\"w-4 h-4 mr-2\">{platform_name}</a>"
        },
        {
          "name": "SocialMediaButtonGroup",
          "is_standalone": false,
          "description": "(takes children): A container that holds multiple `SocialMediaButton` components.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a horizontal row of social media sharing buttons for a video, with each button representing a different platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><SocialMediaShareBar><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- add more social media buttons here --></SocialMediaShareBar></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "a standalone component representing a single social media platform's sharing button.",
          "html": "<a href=\"{share_url}\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"{icon_url}\" alt=\"{platform_name}\" class=\"w-8 h-8 mr-2\"><span class=\"text-sm\">{platform_name}</span></a>"
        },
        {
          "name": "SocialMediaShareBar",
          "is_standalone": false,
          "description": "a component that takes children, which is the container for all social media buttons.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Real-time Comment and Discussion Forum": [
    {
      "description": "The UI should be a responsive, mobile-first comment and discussion forum that displays a list of comments and allows users to post new comments. The forum should have a clean and simple design, with clear typography and sufficient whitespace to improve readability.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ForumHeader/><ForumContainer><CommentList><CommentItem/><CommentItem/><!-- Add more CommentItem components here --></CommentList><CommentForm/></ForumContainer></div>",
      "components": [
        {
          "name": "CommentItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single comment.",
          "html": "<div class=\"flex gap-2 py-2 border-b border-gray-200\"><img src=\"{avatar_url}\" alt=\"Avatar\" class=\"w-8 h-8 rounded-full\"/><div class=\"flex-1\"><p class=\"text-sm\">{username}</p><p class=\"text-gray-600\">{comment_text}</p></div></div>"
        },
        {
          "name": "CommentForm",
          "is_standalone": true,
          "description": "A standalone component that allows users to post a new comment.",
          "html": "<form class=\"flex flex-col gap-2\"><input type=\"text\" placeholder=\"Write a comment...\" class=\"w-full p-2\"/><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Post Comment </button></form>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CommentItem` components) and displays them in a list.",
          "html": "<ul class=\"list-none p-0\">{children}</ul>"
        },
        {
          "name": "ForumHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the forum.",
          "html": "<h1 class=\"text-2xl font-bold\">{forum_title}</h1>"
        },
        {
          "name": "ForumContainer",
          "is_standalone": false,
          "description": "A component that takes children (multiple components) and wraps them in a container with a max-width for responsive design.",
          "html": "<div class=\"max-w-md mx-auto p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first comment and discussion forum that displays a list of comments and allows users to post new comments. The forum should have a clean and simple design, with clear typography and sufficient whitespace to improve readability.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ForumHeader/><ForumContainer><CommentList><CommentItem/><CommentItem/><!-- Add more CommentItem components here --></CommentList><CommentForm/></ForumContainer></div>",
      "components": [
        {
          "name": "CommentItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single comment.",
          "html": "<div class=\"flex gap-2 py-2 border-b border-gray-200\"><img src=\"{avatar_url}\" alt=\"Avatar\" class=\"w-8 h-8 rounded-full\"/><div class=\"flex-1\"><p class=\"text-sm\">{username}</p><p class=\"text-gray-600\">{comment_text}</p></div></div>"
        },
        {
          "name": "CommentForm",
          "is_standalone": true,
          "description": "A standalone component that allows users to post a new comment.",
          "html": "<form class=\"flex flex-col gap-2\"><input type=\"text\" placeholder=\"Write a comment...\" class=\"w-full p-2\"/><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Post Comment </button></form>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CommentItem` components) and displays them in a list.",
          "html": "<ul class=\"list-none p-0\">{children}</ul>"
        },
        {
          "name": "ForumHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the forum.",
          "html": "<h1 class=\"text-2xl font-bold\">{forum_title}</h1>"
        },
        {
          "name": "ForumContainer",
          "is_standalone": false,
          "description": "A component that takes children (multiple components) and wraps them in a container with a max-width for responsive design.",
          "html": "<div class=\"max-w-md mx-auto p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first comment and discussion forum that displays a list of comments and allows users to post new comments. The forum should have a clean and simple design, with clear typography and sufficient whitespace to improve readability.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ForumHeader/><ForumContainer><CommentList><CommentItem/><CommentItem/><!-- Add more CommentItem components here --></CommentList><CommentForm/></ForumContainer></div>",
      "components": [
        {
          "name": "CommentItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single comment.",
          "html": "<div class=\"flex gap-2 py-2 border-b border-gray-200\"><img src=\"{avatar_url}\" alt=\"Avatar\" class=\"w-8 h-8 rounded-full\"/><div class=\"flex-1\"><p class=\"text-sm\">{username}</p><p class=\"text-gray-600\">{comment_text}</p></div></div>"
        },
        {
          "name": "CommentForm",
          "is_standalone": true,
          "description": "A standalone component that allows users to post a new comment.",
          "html": "<form class=\"flex flex-col gap-2\"><input type=\"text\" placeholder=\"Write a comment...\" class=\"w-full p-2\"/><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Post Comment </button></form>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CommentItem` components) and displays them in a list.",
          "html": "<ul class=\"list-none p-0\">{children}</ul>"
        },
        {
          "name": "ForumHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the forum.",
          "html": "<h1 class=\"text-2xl font-bold\">{forum_title}</h1>"
        },
        {
          "name": "ForumContainer",
          "is_standalone": false,
          "description": "A component that takes children (multiple components) and wraps them in a container with a max-width for responsive design.",
          "html": "<div class=\"max-w-md mx-auto p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Image Caption": [
    {
      "description": "The UI should display a featured image with a caption below it. The image should be responsive and take up the full width of its container. The caption should be centered and displayed in a readable font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FeaturedImage/><ImageCaption/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image.",
          "html": "<img src={image_url} alt={image_alt_text} class=\"w-full h-64 object-cover rounded-lg\"/>"
        },
        {
          "name": "ImageCaption",
          "is_standalone": false,
          "description": "A component that displays a caption, takes a string as a child.",
          "html": "<p class=\"text-center text-lg\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a featured image with a caption below it. The image should be responsive and take up the full width of its container. The caption should be centered and displayed in a readable font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FeaturedImage/><ImageCaption/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image.",
          "html": "<img src={image_url} alt={image_alt_text} class=\"w-full h-64 object-cover rounded-lg\"/>"
        },
        {
          "name": "ImageCaption",
          "is_standalone": false,
          "description": "A component that displays a caption, takes a string as a child.",
          "html": "<p class=\"text-center text-lg\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a featured image with a caption below it. The image should be responsive and take up the full width of its container. The caption should be centered and displayed in a readable font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FeaturedImage/><ImageCaption/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image.",
          "html": "<img src={image_url} alt={image_alt_text} class=\"w-full h-64 object-cover rounded-lg\"/>"
        },
        {
          "name": "ImageCaption",
          "is_standalone": false,
          "description": "A component that displays a caption, takes a string as a child.",
          "html": "<p class=\"text-center text-lg\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a featured image with a caption below it. The image should be responsive and take up the full width of its container. The caption should be centered and displayed in a readable font size.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FeaturedImage/><ImageCaption/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image.",
          "html": "<img src={image_url} alt={image_alt_text} class=\"w-full h-64 object-cover rounded-lg\"/>"
        },
        {
          "name": "ImageCaption",
          "is_standalone": false,
          "description": "A component that displays a caption, takes a string as a child.",
          "html": "<p class=\"text-center text-lg\">{children}</p>"
        }
      ]
    }
  ],
  "Tweet input field for user input": [
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field for users to enter their tweets, with a character count indicator next to it.",
      "html": "<div class=\"flex w-full max-w-md p-4 mx-auto mt-4\"><TweetInputField/><CharacterCountIndicator/></div>",
      "components": [
        {
          "name": "TweetInputField",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"What's on your mind?\" aria-label=\"Tweet input field\"/>"
        },
        {
          "name": "CharacterCountIndicator",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-gray-500\">{characterCount}/ 280</span>"
        }
      ]
    }
  ],
  "Product Price Tag": [
    {
      "description": "The UI should display a product price tag with the product name, price, and a \"Sale\" badge if the product is on sale.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceTag/></div>",
      "components": [
        {
          "name": "ProductPriceTag",
          "is_standalone": true,
          "description": "(standalone): Displays the product price tag information.",
          "html": "<div class=\"bg-gray-100 p-2 rounded\"><ProductName/><ProductPrice/>{is_on_sale ? <SaleBadge/>: null}</div>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name.",
          "html": "<p class=\"text-lg font-bold\">{product_name}</p>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "(standalone): Displays the product price.",
          "html": "<p class=\"text-lg font-bold text-gray-600\">{price}${price_amount}</p>"
        },
        {
          "name": "SaleBadge",
          "is_standalone": true,
          "description": "(standalone): Displays a \"Sale\" badge if the product is on sale.",
          "html": "<span class=\"bg-red-500 text-white px-2 py-1 rounded text-sm\">Sale</span>"
        }
      ]
    },
    {
      "description": "The UI should display a product price tag with the product name, price, and a \"Sale\" badge if the product is on sale.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceTag/></div>",
      "components": [
        {
          "name": "ProductPriceTag",
          "is_standalone": true,
          "description": "(standalone): Displays the product price tag information.",
          "html": "<div class=\"bg-gray-100 p-2 rounded\"><ProductName/><ProductPrice/>{is_on_sale ? <SaleBadge/>: null}</div>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name.",
          "html": "<p class=\"text-lg font-bold\">{product_name}</p>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "(standalone): Displays the product price.",
          "html": "<p class=\"text-lg font-bold text-gray-600\">{price}${price_amount}</p>"
        },
        {
          "name": "SaleBadge",
          "is_standalone": true,
          "description": "(standalone): Displays a \"Sale\" badge if the product is on sale.",
          "html": "<span class=\"bg-red-500 text-white px-2 py-1 rounded text-sm\">Sale</span>"
        }
      ]
    },
    {
      "description": "The UI should display a product price tag with the product name, price, and a \"Sale\" badge if the product is on sale.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceTag/></div>",
      "components": [
        {
          "name": "ProductPriceTag",
          "is_standalone": true,
          "description": "(standalone): Displays the product price tag information.",
          "html": "<div class=\"bg-gray-100 p-2 rounded\"><ProductName/><ProductPrice/>{is_on_sale ? <SaleBadge/>: null}</div>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name.",
          "html": "<p class=\"text-lg font-bold\">{product_name}</p>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "(standalone): Displays the product price.",
          "html": "<p class=\"text-lg font-bold text-gray-600\">{price}${price_amount}</p>"
        },
        {
          "name": "SaleBadge",
          "is_standalone": true,
          "description": "(standalone): Displays a \"Sale\" badge if the product is on sale.",
          "html": "<span class=\"bg-red-500 text-white px-2 py-1 rounded text-sm\">Sale</span>"
        }
      ]
    },
    {
      "description": "The UI should display a product price tag with the product name, price, and a \"Sale\" badge if the product is on sale.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceTag/></div>",
      "components": [
        {
          "name": "ProductPriceTag",
          "is_standalone": true,
          "description": "(standalone): Displays the product price tag information.",
          "html": "<div class=\"bg-gray-100 p-2 rounded\"><ProductName/><ProductPrice/>{is_on_sale ? <SaleBadge/>: null}</div>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name.",
          "html": "<p class=\"text-lg font-bold\">{product_name}</p>"
        },
        {
          "name": "ProductPrice",
          "is_standalone": true,
          "description": "(standalone): Displays the product price.",
          "html": "<p class=\"text-lg font-bold text-gray-600\">{price}${price_amount}</p>"
        },
        {
          "name": "SaleBadge",
          "is_standalone": true,
          "description": "(standalone): Displays a \"Sale\" badge if the product is on sale.",
          "html": "<span class=\"bg-red-500 text-white px-2 py-1 rounded text-sm\">Sale</span>"
        }
      ]
    }
  ],
  "Error Message: Displays error message with details": [
    {
      "description": "The UI should display an error message with details, such as an error title, error message, and possibly other details.",
      "html": "<div class=\"bg-red-100 border border-red-500 text-red-700 px-4 py-3 rounded relative\"><ErrorMessage/></div>",
      "components": [
        {
          "name": "ErrorMessage",
          "is_standalone": true,
          "description": "A standalone component that displays an error message with details.",
          "html": "<h5 class=\"text-lg\">{error_title}</h5><p>{error_message}</p><p>{error_details}</p>"
        }
      ]
    }
  ],
  "Trip Itinerary and Booking Summary": [
    {
      "description": "The UI should display a summary of a trip itinerary and booking details in a clear and organized manner. It should include essential trip information, such as destination, travel dates, accommodation, and transportation details. The UI should be easy to read and understand, with sufficient whitespace to avoid clutter.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TripSummary/><div class=\"mt-4\"><h2 class=\"text-lg font-bold\">Itinerary</h2><ItinerarySection><ItineraryItem/><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection><ItinerarySection><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection></div><BookingDetails/></div>",
      "components": [
        {
          "name": "TripSummary",
          "is_standalone": true,
          "description": "a standalone component that displays a brief summary of the trip.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">{trip_destination}</h2><p>Travel dates: {travel_dates}</p></div>"
        },
        {
          "name": "ItinerarySection",
          "is_standalone": false,
          "description": "a component that takes children, which displays a section of the itinerary (e.g., accommodations, transportation, etc.).",
          "html": "<div class=\"mt-4\"><h3 class=\"text-lg font-bold\">{section_title}</h3>{children}</div>"
        },
        {
          "name": "ItineraryItem",
          "is_standalone": true,
          "description": "a standalone component that displays a single item in the itinerary (e.g., a flight, hotel stay, etc.).",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h4 class=\"text-lg font-bold\">{item_title}</h4><p>{item_description}</p><p>Duration: {item_duration}</p></div>"
        },
        {
          "name": "BookingDetails",
          "is_standalone": true,
          "description": "a standalone component that displays the booking details, such as booking number and status.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">Booking Details</h2><p>Booking number: {booking_number}</p><p>Status: {booking_status}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a summary of a trip itinerary and booking details in a clear and organized manner. It should include essential trip information, such as destination, travel dates, accommodation, and transportation details. The UI should be easy to read and understand, with sufficient whitespace to avoid clutter.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TripSummary/><div class=\"mt-4\"><h2 class=\"text-lg font-bold\">Itinerary</h2><ItinerarySection><ItineraryItem/><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection><ItinerarySection><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection></div><BookingDetails/></div>",
      "components": [
        {
          "name": "TripSummary",
          "is_standalone": true,
          "description": "a standalone component that displays a brief summary of the trip.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">{trip_destination}</h2><p>Travel dates: {travel_dates}</p></div>"
        },
        {
          "name": "ItinerarySection",
          "is_standalone": false,
          "description": "a component that takes children, which displays a section of the itinerary (e.g., accommodations, transportation, etc.).",
          "html": "<div class=\"mt-4\"><h3 class=\"text-lg font-bold\">{section_title}</h3>{children}</div>"
        },
        {
          "name": "ItineraryItem",
          "is_standalone": true,
          "description": "a standalone component that displays a single item in the itinerary (e.g., a flight, hotel stay, etc.).",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h4 class=\"text-lg font-bold\">{item_title}</h4><p>{item_description}</p><p>Duration: {item_duration}</p></div>"
        },
        {
          "name": "BookingDetails",
          "is_standalone": true,
          "description": "a standalone component that displays the booking details, such as booking number and status.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">Booking Details</h2><p>Booking number: {booking_number}</p><p>Status: {booking_status}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a trip itinerary and booking summary, showing the trip details, booking information, and a summary of the booking.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SectionCard><TripItinerarySummary/></SectionCard><SectionCard><BookingInfo/></SectionCard><SectionCard><BookingSummary/></SectionCard></div>",
      "components": [
        {
          "name": "TripItinerarySummary",
          "is_standalone": true,
          "description": "standalone, displays trip details",
          "html": "<div class=\"px-4 py-2\"><h2 class=\"text-lg font-bold mb-2\">Trip Itinerary</h2><p>Departure: {departure_date}</p><p>Destination: {destination}</p><p>Duration: {duration} days</p></div>"
        },
        {
          "name": "BookingInfo",
          "is_standalone": true,
          "description": "standalone, displays booking information",
          "html": "<div class=\"px-4 py-2\"><h2 class=\"text-lg font-bold mb-2\">Booking Information</h2><p>Booking ID: {booking_id}</p><p>Booking Date: {booking_date}</p><p>Payment Method: {payment_method}</p></div>"
        },
        {
          "name": "BookingSummary",
          "is_standalone": true,
          "description": "standalone, displays a summary of the booking",
          "html": "<div class=\"px-4 py-2\"><h2 class=\"text-lg font-bold mb-2\">Booking Summary</h2><p>Total Cost: ${total_cost}</p><p>Number of Travelers: {num_travelers}</p></div>"
        },
        {
          "name": "SectionCard",
          "is_standalone": false,
          "description": "takes children, a card layout for displaying information",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-2 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a summary of a trip itinerary and booking details in a clear and organized manner. It should include essential trip information, such as destination, travel dates, accommodation, and transportation details. The UI should be easy to read and understand, with sufficient whitespace to avoid clutter.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TripSummary/><div class=\"mt-4\"><h2 class=\"text-lg font-bold\">Itinerary</h2><ItinerarySection><ItineraryItem/><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection><ItinerarySection><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection></div><BookingDetails/></div>",
      "components": [
        {
          "name": "TripSummary",
          "is_standalone": true,
          "description": "a standalone component that displays a brief summary of the trip.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">{trip_destination}</h2><p>Travel dates: {travel_dates}</p></div>"
        },
        {
          "name": "ItinerarySection",
          "is_standalone": false,
          "description": "a component that takes children, which displays a section of the itinerary (e.g., accommodations, transportation, etc.).",
          "html": "<div class=\"mt-4\"><h3 class=\"text-lg font-bold\">{section_title}</h3>{children}</div>"
        },
        {
          "name": "ItineraryItem",
          "is_standalone": true,
          "description": "a standalone component that displays a single item in the itinerary (e.g., a flight, hotel stay, etc.).",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h4 class=\"text-lg font-bold\">{item_title}</h4><p>{item_description}</p><p>Duration: {item_duration}</p></div>"
        },
        {
          "name": "BookingDetails",
          "is_standalone": true,
          "description": "a standalone component that displays the booking details, such as booking number and status.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">Booking Details</h2><p>Booking number: {booking_number}</p><p>Status: {booking_status}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a summary of a trip itinerary and booking details in a clear and organized manner. It should include essential trip information, such as destination, travel dates, accommodation, and transportation details. The UI should be easy to read and understand, with sufficient whitespace to avoid clutter.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TripSummary/><div class=\"mt-4\"><h2 class=\"text-lg font-bold\">Itinerary</h2><ItinerarySection><ItineraryItem/><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection><ItinerarySection><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection></div><BookingDetails/></div>",
      "components": [
        {
          "name": "TripSummary",
          "is_standalone": true,
          "description": "a standalone component that displays a brief summary of the trip.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">{trip_destination}</h2><p>Travel dates: {travel_dates}</p></div>"
        },
        {
          "name": "ItinerarySection",
          "is_standalone": false,
          "description": "a component that takes children, which displays a section of the itinerary (e.g., accommodations, transportation, etc.).",
          "html": "<div class=\"mt-4\"><h3 class=\"text-lg font-bold\">{section_title}</h3>{children}</div>"
        },
        {
          "name": "ItineraryItem",
          "is_standalone": true,
          "description": "a standalone component that displays a single item in the itinerary (e.g., a flight, hotel stay, etc.).",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h4 class=\"text-lg font-bold\">{item_title}</h4><p>{item_description}</p><p>Duration: {item_duration}</p></div>"
        },
        {
          "name": "BookingDetails",
          "is_standalone": true,
          "description": "a standalone component that displays the booking details, such as booking number and status.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">Booking Details</h2><p>Booking number: {booking_number}</p><p>Status: {booking_status}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a summary of a trip itinerary and booking details in a clear and organized manner. It should include essential trip information, such as destination, travel dates, accommodation, and transportation details. The UI should be easy to read and understand, with sufficient whitespace to avoid clutter.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TripSummary/><div class=\"mt-4\"><h2 class=\"text-lg font-bold\">Itinerary</h2><ItinerarySection><ItineraryItem/><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection><ItinerarySection><ItineraryItem/><!-- Add more ItineraryItem components as needed --></ItinerarySection></div><BookingDetails/></div>",
      "components": [
        {
          "name": "TripSummary",
          "is_standalone": true,
          "description": "a standalone component that displays a brief summary of the trip.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">{trip_destination}</h2><p>Travel dates: {travel_dates}</p></div>"
        },
        {
          "name": "ItinerarySection",
          "is_standalone": false,
          "description": "a component that takes children, which displays a section of the itinerary (e.g., accommodations, transportation, etc.).",
          "html": "<div class=\"mt-4\"><h3 class=\"text-lg font-bold\">{section_title}</h3>{children}</div>"
        },
        {
          "name": "ItineraryItem",
          "is_standalone": true,
          "description": "a standalone component that displays a single item in the itinerary (e.g., a flight, hotel stay, etc.).",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h4 class=\"text-lg font-bold\">{item_title}</h4><p>{item_description}</p><p>Duration: {item_duration}</p></div>"
        },
        {
          "name": "BookingDetails",
          "is_standalone": true,
          "description": "a standalone component that displays the booking details, such as booking number and status.",
          "html": "<div class=\"bg-white shadow-md p-4\"><h2 class=\"text-lg font-bold\">Booking Details</h2><p>Booking number: {booking_number}</p><p>Status: {booking_status}</p></div>"
        }
      ]
    }
  ],
  "Background Images/Patterns": [
    {
      "description": "The UI should display a container with a background image or pattern. The image or pattern should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"h-screen w-full\"><BackgroundImageContainer/></div>",
      "components": [
        {
          "name": "BackgroundImageContainer",
          "is_standalone": true,
          "description": "(standalone) - a container element that holds the background image or pattern.",
          "html": "<div class=\"h-full w-full bg-cover bg-center\tbg-{background_image_or_pattern}\" style={`background-image: url('{background_image_or_pattern}');`}><!-- Background image or pattern will be displayed here --></div>"
        }
      ]
    },
    {
      "description": "The UI should display a container with a background image or pattern. The image or pattern should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"h-screen w-full\"><BackgroundImageContainer/></div>",
      "components": [
        {
          "name": "BackgroundImageContainer",
          "is_standalone": true,
          "description": "(standalone) - a container element that holds the background image or pattern.",
          "html": "<div class=\"h-full w-full bg-cover bg-center\tbg-{background_image_or_pattern}\" style={`background-image: url('{background_image_or_pattern}');`}><!-- Background image or pattern will be displayed here --></div>"
        }
      ]
    },
    {
      "description": "The UI should display a container with a background image or pattern. The image or pattern should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"h-screen w-full\"><BackgroundImageContainer/></div>",
      "components": [
        {
          "name": "BackgroundImageContainer",
          "is_standalone": true,
          "description": "(standalone) - a container element that holds the background image or pattern.",
          "html": "<div class=\"h-full w-full bg-cover bg-center\tbg-{background_image_or_pattern}\" style={`background-image: url('{background_image_or_pattern}');`}><!-- Background image or pattern will be displayed here --></div>"
        }
      ]
    },
    {
      "description": "The UI should display a container with a background image or pattern. The image or pattern should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"h-screen w-full\"><BackgroundImageContainer/></div>",
      "components": [
        {
          "name": "BackgroundImageContainer",
          "is_standalone": true,
          "description": "(standalone) - a container element that holds the background image or pattern.",
          "html": "<div class=\"h-full w-full bg-cover bg-center\tbg-{background_image_or_pattern}\" style={`background-image: url('{background_image_or_pattern}');`}><!-- Background image or pattern will be displayed here --></div>"
        }
      ]
    },
    {
      "description": "The UI should display a container with a background image or pattern. The image or pattern should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"h-screen w-full\"><BackgroundImageContainer/></div>",
      "components": [
        {
          "name": "BackgroundImageContainer",
          "is_standalone": true,
          "description": "(standalone) - a container element that holds the background image or pattern.",
          "html": "<div class=\"h-full w-full bg-cover bg-center\tbg-{background_image_or_pattern}\" style={`background-image: url('{background_image_or_pattern}');`}><!-- Background image or pattern will be displayed here --></div>"
        }
      ]
    }
  ],
  "Hero Overlay Background": [
    {
      "description": "The UI should be a hero overlay background with a subtle gradient effect, overlaying a background image. The background image should be blurred to create a sense of depth, and the gradient overlay should have a subtle animation effect to make it stand out.",
      "html": "<div class=\"min-h-screen relative\"><HeroBackground/><HeroGradientOverlay/></div>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "A standalone component that displays the background image and gradient overlay.",
          "html": "<div class=\"absolute inset-0 bg-cover bg-center\" style={`background-image: url(${background_image})`}><div class=\"absolute inset-0 bg-gray-900 opacity-50\"></div></div>"
        },
        {
          "name": "HeroGradientOverlay",
          "is_standalone": true,
          "description": "A standalone component that displays the gradient overlay with animation effect.",
          "html": "<div class=\"absolute inset-0\"><div class=\"absolute inset-0 bg-gradient-to-r from-purple-500 to-pink-500 opacity-75 animate-pulse\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero overlay background with a subtle gradient effect, overlaying a background image. The background image should be blurred to create a sense of depth, and the gradient overlay should have a subtle animation effect to make it stand out.",
      "html": "<div class=\"min-h-screen relative\"><HeroBackground/><HeroGradientOverlay/></div>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "A standalone component that displays the background image and gradient overlay.",
          "html": "<div class=\"absolute inset-0 bg-cover bg-center\" style={`background-image: url(${background_image})`}><div class=\"absolute inset-0 bg-gray-900 opacity-50\"></div></div>"
        },
        {
          "name": "HeroGradientOverlay",
          "is_standalone": true,
          "description": "A standalone component that displays the gradient overlay with animation effect.",
          "html": "<div class=\"absolute inset-0\"><div class=\"absolute inset-0 bg-gradient-to-r from-purple-500 to-pink-500 opacity-75 animate-pulse\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero overlay background with a subtle gradient effect, overlaying a background image. The background image should be blurred to create a sense of depth, and the gradient overlay should have a subtle animation effect to make it stand out.",
      "html": "<div class=\"min-h-screen relative\"><HeroBackground/><HeroGradientOverlay/></div>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "A standalone component that displays the background image and gradient overlay.",
          "html": "<div class=\"absolute inset-0 bg-cover bg-center\" style={`background-image: url(${background_image})`}><div class=\"absolute inset-0 bg-gray-900 opacity-50\"></div></div>"
        },
        {
          "name": "HeroGradientOverlay",
          "is_standalone": true,
          "description": "A standalone component that displays the gradient overlay with animation effect.",
          "html": "<div class=\"absolute inset-0\"><div class=\"absolute inset-0 bg-gradient-to-r from-purple-500 to-pink-500 opacity-75 animate-pulse\"></div></div>"
        }
      ]
    }
  ],
  "Social media links with icons and tooltips": [
    {
      "description": "The UI should display a row of social media links with their respective icons and tooltips when hovered.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></div>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that represents a single social media link with an icon and tooltip.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-gray-600 hover:text-gray-900 transition duration-300\"><i class=\"{social_media_icon} w-6 h-6 text-2xl transition duration-300\"/><span class=\"sr-only\">{social_media_name}</span><span class=\"tooltip tooltip-simple\">{social_media_name}</span></a>"
        }
      ]
    },
    {
      "description": "The UI should display a row of social media links with their respective icons and tooltips when hovered.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialMediaLink/><SocialMediaLink/><SocialMediaLink/></div>",
      "components": [
        {
          "name": "SocialMediaLink",
          "is_standalone": true,
          "description": "A standalone component that represents a single social media link with an icon and tooltip.",
          "html": "<a href=\"{social_media_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"text-gray-600 hover:text-gray-900 transition duration-300\"><i class=\"{social_media_icon} w-6 h-6 text-2xl transition duration-300\"/><span class=\"sr-only\">{social_media_name}</span><span class=\"tooltip tooltip-simple\">{social_media_name}</span></a>"
        }
      ]
    }
  ],
  "Responsive Article Layout": [
    {
      "description": "The UI should display a responsive article layout with a header, image, and content sections. The layout should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><ArticleImage/><ArticleContent><!-- Article content goes here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the article title and metadata.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{author_name} - {published_date}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that displays the article image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full mb-4 md:mb-6 lg:mb-12\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children, which represents the article content.",
          "html": "<div class=\"prose lg:prose-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive article layout with a header, image, and content sections. The layout should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><ArticleImage/><ArticleContent><!-- Article content goes here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the article title and metadata.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{author_name} - {published_date}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that displays the article image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full mb-4 md:mb-6 lg:mb-12\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children, which represents the article content.",
          "html": "<div class=\"prose lg:prose-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive article layout with a header, image, and content area that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><div class=\"flex justify-center mb-4 md:mb-6 lg:mb-12\"><ArticleImage/></div><ArticleContent><!-- article content will be rendered here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that renders the article title and meta information.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{article_meta}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that renders the article image.",
          "html": "<img src={image_src} alt={image_alt} class=\"w-full md:w-1/2 lg:w-2/3\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children to render the article content.",
          "html": "<div class=\"prose lg:prose-lg xl:prose-xl\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive article layout with a header, image, and content sections. The layout should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><ArticleImage/><ArticleContent><!-- Article content goes here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the article title and metadata.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{author_name} - {published_date}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that displays the article image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full mb-4 md:mb-6 lg:mb-12\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children, which represents the article content.",
          "html": "<div class=\"prose lg:prose-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive article layout with a header, image, and content sections. The layout should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><ArticleImage/><ArticleContent><!-- Article content goes here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the article title and metadata.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{author_name} - {published_date}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that displays the article image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full mb-4 md:mb-6 lg:mb-12\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children, which represents the article content.",
          "html": "<div class=\"prose lg:prose-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive article layout with a header, image, and content sections. The layout should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><ArticleImage/><ArticleContent><!-- Article content goes here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the article title and metadata.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{author_name} - {published_date}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that displays the article image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full mb-4 md:mb-6 lg:mb-12\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children, which represents the article content.",
          "html": "<div class=\"prose lg:prose-lg\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive article layout with a header, image, and content sections. The layout should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><ArticleHeader/><ArticleImage/><ArticleContent><!-- Article content goes here --></ArticleContent></div>",
      "components": [
        {
          "name": "ArticleHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the article title and metadata.",
          "html": "<header class=\"mb-4 md:mb-6 lg:mb-12\"><h1 class=\"text-2xl md:text-3xl lg:text-4xl\">{article_title}</h1><p class=\"text-sm md:text-base lg:text-lg\">{author_name} - {published_date}</p></header>"
        },
        {
          "name": "ArticleImage",
          "is_standalone": true,
          "description": "Standalone component that displays the article image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full mb-4 md:mb-6 lg:mb-12\"/>"
        },
        {
          "name": "ArticleContent",
          "is_standalone": false,
          "description": "Component that takes children, which represents the article content.",
          "html": "<div class=\"prose lg:prose-lg\">{children}</div>"
        }
      ]
    }
  ],
  "Editable Tables": [
    {
      "description": "A table that can be edited, with input fields for each cell, and a \"Save\" button at the bottom.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><EditableTable><EditableTableRow><EditableTableCell><input type=\"text\"/></EditableTableCell><EditableTableCell><input type=\"text\"/></EditableTableCell><EditableTableCell><input type=\"text\"/></EditableTableCell></EditableTableRow><EditableTableRow><EditableTableCell><input type=\"text\"/></EditableTableCell><EditableTableCell><input type=\"text\"/></EditableTableCell><EditableTableCell><input type=\"text\"/></EditableTableCell></EditableTableRow><!-- ... more rows ... --></EditableTable><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Save</button></div>",
      "components": [
        {
          "name": "EditableTableCell",
          "is_standalone": false,
          "description": "(takes children): a single table cell with an input field",
          "html": "<td class=\"border p-2\">{children}</td>"
        },
        {
          "name": "EditableTableRow",
          "is_standalone": false,
          "description": "(takes children): a table row with editable cells",
          "html": "<tr class=\"bg-white\">{children}</tr>"
        },
        {
          "name": "EditableTable",
          "is_standalone": false,
          "description": "(takes children): the entire editable table with multiple rows",
          "html": "<table class=\"table-auto border-collapse w-full\"><tbody>{children}</tbody></table>"
        }
      ]
    }
  ],
  "Video Players/Embeds": [
    {
      "description": "The UI should display a responsive video player/embed that adapts to different screen sizes. The video player should have a maximum width and be centered horizontally on the page. The video title and video description should be displayed below the video player.",
      "html": "<div class=\"max-w-md mx-auto\"><VideoPlayer/><VideoTitle/><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "A standalone component that wraps the video player/embed.",
          "html": "<div class=\"video-player aspect-w-16 aspect-h-9\"><iframe src=\"{video_url}\" frameborder=\"0\" allowfullscreen></iframe></div>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the video title.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the video description.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video player/embed that adapts to different screen sizes. The video player should have a maximum width and be centered horizontally on the page. The video title and video description should be displayed below the video player.",
      "html": "<div class=\"max-w-md mx-auto\"><VideoPlayer/><VideoTitle/><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "A standalone component that wraps the video player/embed.",
          "html": "<div class=\"video-player aspect-w-16 aspect-h-9\"><iframe src=\"{video_url}\" frameborder=\"0\" allowfullscreen></iframe></div>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the video title.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the video description.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video player/embed that adapts to different screen sizes. The video player should have a maximum width and be centered horizontally on the page. The video title and video description should be displayed below the video player.",
      "html": "<div class=\"max-w-md mx-auto\"><VideoPlayer/><VideoTitle/><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "A standalone component that wraps the video player/embed.",
          "html": "<div class=\"video-player aspect-w-16 aspect-h-9\"><iframe src=\"{video_url}\" frameborder=\"0\" allowfullscreen></iframe></div>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the video title.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the video description.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video player/embed that adapts to different screen sizes. The video player should have a maximum width and be centered horizontally on the page. The video title and video description should be displayed below the video player.",
      "html": "<div class=\"max-w-md mx-auto\"><VideoPlayer/><VideoTitle/><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "A standalone component that wraps the video player/embed.",
          "html": "<div class=\"video-player aspect-w-16 aspect-h-9\"><iframe src=\"{video_url}\" frameborder=\"0\" allowfullscreen></iframe></div>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the video title.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the video description.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        }
      ]
    }
  ],
  "Direct message conversation list with online status": [
    {
      "description": "The UI should be a list of direct message conversations, each displaying the conversation title, the last message, and the online status of the other user. The list should be responsive, with a maximum width and scrollable on smaller screens.",
      "html": "<div class=\"max-w-md overflow-y-auto mx-auto p-4\"><!-- Conversation list --><ul><ConversationItem/><ConversationItem/><!-- ... --></ul></div>",
      "components": [
        {
          "name": "ConversationItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single conversation item in the list.",
          "html": "<li class=\"py-4 border-b border-gray-200\"><div class=\"flex items-center\"><img src={user_avatar_url} alt=\"User avatar\" class=\"w-10 h-10 rounded-full mr-3\"/><div class=\"flex-1\"><h5 class=\"text-lg\">{conversation_title}</h5><p class=\"text-gray-600\">{last_message_preview}</p></div><OnlineStatusIndicator/></div></li>"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "(standalone): Indicates whether the other user is online or offline.",
          "html": "<span class={online ? 'text-green-500' : 'text-gray-400'}>{online ? 'Online' : 'Offline'}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a list of direct message conversations, each displaying the conversation title, the last message, and the online status of the other user. The list should be responsive, with a maximum width and scrollable on smaller screens.",
      "html": "<div class=\"max-w-md overflow-y-auto mx-auto p-4\"><!-- Conversation list --><ul><ConversationItem/><ConversationItem/><!-- ... --></ul></div>",
      "components": [
        {
          "name": "ConversationItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single conversation item in the list.",
          "html": "<li class=\"py-4 border-b border-gray-200\"><div class=\"flex items-center\"><img src={user_avatar_url} alt=\"User avatar\" class=\"w-10 h-10 rounded-full mr-3\"/><div class=\"flex-1\"><h5 class=\"text-lg\">{conversation_title}</h5><p class=\"text-gray-600\">{last_message_preview}</p></div><OnlineStatusIndicator/></div></li>"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "(standalone): Indicates whether the other user is online or offline.",
          "html": "<span class={online ? 'text-green-500' : 'text-gray-400'}>{online ? 'Online' : 'Offline'}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a list of direct message conversations, each displaying the conversation title, the last message, and the online status of the other user. The list should be responsive, with a maximum width and scrollable on smaller screens.",
      "html": "<div class=\"max-w-md overflow-y-auto mx-auto p-4\"><!-- Conversation list --><ul><ConversationItem/><ConversationItem/><!-- ... --></ul></div>",
      "components": [
        {
          "name": "ConversationItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single conversation item in the list.",
          "html": "<li class=\"py-4 border-b border-gray-200\"><div class=\"flex items-center\"><img src={user_avatar_url} alt=\"User avatar\" class=\"w-10 h-10 rounded-full mr-3\"/><div class=\"flex-1\"><h5 class=\"text-lg\">{conversation_title}</h5><p class=\"text-gray-600\">{last_message_preview}</p></div><OnlineStatusIndicator/></div></li>"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "(standalone): Indicates whether the other user is online or offline.",
          "html": "<span class={online ? 'text-green-500' : 'text-gray-400'}>{online ? 'Online' : 'Offline'}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a list of direct message conversations, each displaying the conversation title, the last message, and the online status of the other user. The list should be responsive, with a maximum width and scrollable on smaller screens.",
      "html": "<div class=\"max-w-md overflow-y-auto mx-auto p-4\"><!-- Conversation list --><ul><ConversationItem/><ConversationItem/><!-- ... --></ul></div>",
      "components": [
        {
          "name": "ConversationItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single conversation item in the list.",
          "html": "<li class=\"py-4 border-b border-gray-200\"><div class=\"flex items-center\"><img src={user_avatar_url} alt=\"User avatar\" class=\"w-10 h-10 rounded-full mr-3\"/><div class=\"flex-1\"><h5 class=\"text-lg\">{conversation_title}</h5><p class=\"text-gray-600\">{last_message_preview}</p></div><OnlineStatusIndicator/></div></li>"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "(standalone): Indicates whether the other user is online or offline.",
          "html": "<span class={online ? 'text-green-500' : 'text-gray-400'}>{online ? 'Online' : 'Offline'}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a list of direct message conversations, each displaying the conversation title, the last message, and the online status of the other user. The list should be responsive, with a maximum width and scrollable on smaller screens.",
      "html": "<div class=\"max-w-md overflow-y-auto mx-auto p-4\"><!-- Conversation list --><ul><ConversationItem/><ConversationItem/><!-- ... --></ul></div>",
      "components": [
        {
          "name": "ConversationItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single conversation item in the list.",
          "html": "<li class=\"py-4 border-b border-gray-200\"><div class=\"flex items-center\"><img src={user_avatar_url} alt=\"User avatar\" class=\"w-10 h-10 rounded-full mr-3\"/><div class=\"flex-1\"><h5 class=\"text-lg\">{conversation_title}</h5><p class=\"text-gray-600\">{last_message_preview}</p></div><OnlineStatusIndicator/></div></li>"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "(standalone): Indicates whether the other user is online or offline.",
          "html": "<span class={online ? 'text-green-500' : 'text-gray-400'}>{online ? 'Online' : 'Offline'}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a list of direct message conversations, each displaying the conversation title, the last message, and the online status of the other user. The list should be responsive, with a maximum width and scrollable on smaller screens.",
      "html": "<div class=\"max-w-md overflow-y-auto mx-auto p-4\"><!-- Conversation list --><ul><ConversationItem/><ConversationItem/><!-- ... --></ul></div>",
      "components": [
        {
          "name": "ConversationItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single conversation item in the list.",
          "html": "<li class=\"py-4 border-b border-gray-200\"><div class=\"flex items-center\"><img src={user_avatar_url} alt=\"User avatar\" class=\"w-10 h-10 rounded-full mr-3\"/><div class=\"flex-1\"><h5 class=\"text-lg\">{conversation_title}</h5><p class=\"text-gray-600\">{last_message_preview}</p></div><OnlineStatusIndicator/></div></li>"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "(standalone): Indicates whether the other user is online or offline.",
          "html": "<span class={online ? 'text-green-500' : 'text-gray-400'}>{online ? 'Online' : 'Offline'}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a list of direct message conversations, each displaying the conversation title, the last message, and the online status of the other user. The list should be responsive, with a maximum width and scrollable on smaller screens.",
      "html": "<div class=\"max-w-md overflow-y-auto mx-auto p-4\"><!-- Conversation list --><ul><ConversationItem/><ConversationItem/><!-- ... --></ul></div>",
      "components": [
        {
          "name": "ConversationItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single conversation item in the list.",
          "html": "<li class=\"py-4 border-b border-gray-200\"><div class=\"flex items-center\"><img src={user_avatar_url} alt=\"User avatar\" class=\"w-10 h-10 rounded-full mr-3\"/><div class=\"flex-1\"><h5 class=\"text-lg\">{conversation_title}</h5><p class=\"text-gray-600\">{last_message_preview}</p></div><OnlineStatusIndicator/></div></li>"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "(standalone): Indicates whether the other user is online or offline.",
          "html": "<span class={online ? 'text-green-500' : 'text-gray-400'}>{online ? 'Online' : 'Offline'}</span>"
        }
      ]
    }
  ],
  "Character counter for tweet length": [
    {
      "description": "A simple text input with a character count display below it, indicating the number of characters remaining for a tweet (out of 280 characters).",
      "html": "<div class=\"flex flex-col w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><TextAreaInput/><CharacterCountDisplay/></div>",
      "components": [
        {
          "name": "TextAreaInput",
          "is_standalone": true,
          "description": "a standalone component for the text input field",
          "html": "<textarea class=\"w-full p-2 text-lg\" placeholder=\"What's on your mind?\"/>"
        },
        {
          "name": "CharacterCountDisplay",
          "is_standalone": true,
          "description": "a standalone component for displaying the character count",
          "html": "<p class=\"text-sm text-gray-600\">{remaining_characters} characters remaining</p>"
        }
      ]
    },
    {
      "description": "A simple text input with a character count display below it, indicating the number of characters remaining for a tweet (out of 280 characters).",
      "html": "<div class=\"flex flex-col w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><TextAreaInput/><CharacterCountDisplay/></div>",
      "components": [
        {
          "name": "TextAreaInput",
          "is_standalone": true,
          "description": "a standalone component for the text input field",
          "html": "<textarea class=\"w-full p-2 text-lg\" placeholder=\"What's on your mind?\"/>"
        },
        {
          "name": "CharacterCountDisplay",
          "is_standalone": true,
          "description": "a standalone component for displaying the character count",
          "html": "<p class=\"text-sm text-gray-600\">{remaining_characters} characters remaining</p>"
        }
      ]
    },
    {
      "description": "The UI should be a text input field with a character counter that displays the remaining characters available for a tweet. The counter should turn red when the character limit is exceeded.",
      "html": "<div class=\"flex flex-col\"><TweetInput/><CharacterCounter/></div>",
      "components": [
        {
          "name": "TweetInput",
          "is_standalone": true,
          "description": "A standalone component that represents the text input field.",
          "html": "<input type=\"text\" class=\"w-full p-2 border border-gray-200 rounded\"/>"
        },
        {
          "name": "CharacterCounter",
          "is_standalone": true,
          "description": "A standalone component that displays the remaining characters available for a tweet.",
          "html": "<p class={ remaining_characters <= 0 ? \"text-red-500\" : \"\" }>Characters remaining: {remaining_characters}</p>"
        }
      ]
    },
    {
      "description": "A simple text input with a character count display below it, indicating the number of characters remaining for a tweet (out of 280 characters).",
      "html": "<div class=\"flex flex-col w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><TextAreaInput/><CharacterCountDisplay/></div>",
      "components": [
        {
          "name": "TextAreaInput",
          "is_standalone": true,
          "description": "a standalone component for the text input field",
          "html": "<textarea class=\"w-full p-2 text-lg\" placeholder=\"What's on your mind?\"/>"
        },
        {
          "name": "CharacterCountDisplay",
          "is_standalone": true,
          "description": "a standalone component for displaying the character count",
          "html": "<p class=\"text-sm text-gray-600\">{remaining_characters} characters remaining</p>"
        }
      ]
    },
    {
      "description": "The UI should display a text input field where the user can type their tweet. Below the input field, a counter should display the number of characters remaining, indicating how many more characters the user can type before reaching the tweet limit (280 characters).",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><TweetInput/><CharacterCounter/></div>",
      "components": [
        {
          "name": "TweetInput",
          "is_standalone": true,
          "description": "a standalone component that takes a text input.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Type your tweet...\"/>"
        },
        {
          "name": "CharacterCounter",
          "is_standalone": true,
          "description": "a standalone component that displays the remaining character count.",
          "html": "<p class=\"text-sm text-gray-500\">{remaining_characters} characters remaining</p>"
        }
      ]
    }
  ],
  "Skeleton Screens/Loading": [
    {
      "description": "A loading UI with a loading animation and a set of skeleton screens for a list of items. The loading animation is a simple rotating wheel and the skeleton screens display a set of rectangles with a slight animation.",
      "html": "<div class=\"flex justify-center mt-20\"><LoadingIndicator/><SkeletonList><SkeletonScreen/><SkeletonScreen/><SkeletonScreen/></SkeletonList></div>",
      "components": [
        {
          "name": "LoadingIndicator",
          "is_standalone": true,
          "description": "a standalone component that displays a rotating wheel",
          "html": "<div class=\"inline-block\"><div class=\"animate-spin h-8 w-8 border-2 border-gray-50 rounded-full border-t-2 border-t-gray-200\"><!-- rotating wheel animation --></div></div>"
        },
        {
          "name": "SkeletonScreen",
          "is_standalone": true,
          "description": "a standalone component that displays a rectangle that animates to simulate loading",
          "html": "<div class=\"bg-gray-100 animate-pulse h-12 w-64 rounded-lg mt-2\"><!-- animated rectangle --></div>"
        },
        {
          "name": "SkeletonList",
          "is_standalone": false,
          "description": "a component that takes children, which are a set of `SkeletonScreen` components",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Sidebar Widget Title": [
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, standalone title component that can be used in a sidebar. It should have a large font size, be bold, and have a light gray text color on a white background.",
      "html": "<div class=\"w-full px-4 py-2 bg-white\"><SidebarWidgetTitle/></div>",
      "components": [
        {
          "name": "SidebarWidgetTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold text-gray-300\">{title}</h2>"
        }
      ]
    }
  ],
  "Navigation Menu Toggle": [
    {
      "description": "The UI should be a responsive navigation menu toggle button that can be used to expand or collapse a navigation menu. On mobile devices, it should be a hamburger icon, and on larger screens, it should be a text label indicating whether the menu is open or closed.",
      "html": "<nav><NavigationToggle/><NavigationMenu><!-- navigation menu items here --></NavigationMenu></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that renders a toggle button for the navigation menu.",
          "html": "<button class=\"lg:hidden w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md flex justify-center items-center\" aria-label=\"Toggle navigation menu\"><!-- hamburger icon --><span class=\"sr-only\">Menu</span><span class=\"block lg:hidden\" aria-hidden=\"true\"><span class=\"sr-only\">Open</span>❌ </span><span class=\"hidden lg:block\" aria-hidden=\"true\"><span class=\"sr-only\">Close</span>Menu </span></button>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "Component that takes children, renders the navigation menu and handles the toggle state.",
          "html": "<div class=\"lg:flex lg:flex-wrap lg:justify-center lg:pb-4 lg:w-full lg:bg-white lg:shadow-md lg:rounded-md\" aria-labelledby=\"navigation-menu\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle button that can be used to expand or collapse a navigation menu. On mobile devices, it should be a hamburger icon, and on larger screens, it should be a text label indicating whether the menu is open or closed.",
      "html": "<nav><NavigationToggle/><NavigationMenu><!-- navigation menu items here --></NavigationMenu></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that renders a toggle button for the navigation menu.",
          "html": "<button class=\"lg:hidden w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md flex justify-center items-center\" aria-label=\"Toggle navigation menu\"><!-- hamburger icon --><span class=\"sr-only\">Menu</span><span class=\"block lg:hidden\" aria-hidden=\"true\"><span class=\"sr-only\">Open</span>❌ </span><span class=\"hidden lg:block\" aria-hidden=\"true\"><span class=\"sr-only\">Close</span>Menu </span></button>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "Component that takes children, renders the navigation menu and handles the toggle state.",
          "html": "<div class=\"lg:flex lg:flex-wrap lg:justify-center lg:pb-4 lg:w-full lg:bg-white lg:shadow-md lg:rounded-md\" aria-labelledby=\"navigation-menu\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle button that can be used to expand or collapse a navigation menu. On mobile devices, it should be a hamburger icon, and on larger screens, it should be a text label indicating whether the menu is open or closed.",
      "html": "<nav><NavigationToggle/><NavigationMenu><!-- navigation menu items here --></NavigationMenu></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that renders a toggle button for the navigation menu.",
          "html": "<button class=\"lg:hidden w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md flex justify-center items-center\" aria-label=\"Toggle navigation menu\"><!-- hamburger icon --><span class=\"sr-only\">Menu</span><span class=\"block lg:hidden\" aria-hidden=\"true\"><span class=\"sr-only\">Open</span>❌ </span><span class=\"hidden lg:block\" aria-hidden=\"true\"><span class=\"sr-only\">Close</span>Menu </span></button>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "Component that takes children, renders the navigation menu and handles the toggle state.",
          "html": "<div class=\"lg:flex lg:flex-wrap lg:justify-center lg:pb-4 lg:w-full lg:bg-white lg:shadow-md lg:rounded-md\" aria-labelledby=\"navigation-menu\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle button that can be used to expand or collapse a navigation menu. On mobile devices, it should be a hamburger icon, and on larger screens, it should be a text label indicating whether the menu is open or closed.",
      "html": "<nav><NavigationToggle/><NavigationMenu><!-- navigation menu items here --></NavigationMenu></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that renders a toggle button for the navigation menu.",
          "html": "<button class=\"lg:hidden w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md flex justify-center items-center\" aria-label=\"Toggle navigation menu\"><!-- hamburger icon --><span class=\"sr-only\">Menu</span><span class=\"block lg:hidden\" aria-hidden=\"true\"><span class=\"sr-only\">Open</span>❌ </span><span class=\"hidden lg:block\" aria-hidden=\"true\"><span class=\"sr-only\">Close</span>Menu </span></button>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "Component that takes children, renders the navigation menu and handles the toggle state.",
          "html": "<div class=\"lg:flex lg:flex-wrap lg:justify-center lg:pb-4 lg:w-full lg:bg-white lg:shadow-md lg:rounded-md\" aria-labelledby=\"navigation-menu\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle button that can be used to expand or collapse a navigation menu. On mobile devices, it should be a hamburger icon, and on larger screens, it should be a text label indicating whether the menu is open or closed.",
      "html": "<nav><NavigationToggle/><NavigationMenu><!-- navigation menu items here --></NavigationMenu></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that renders a toggle button for the navigation menu.",
          "html": "<button class=\"lg:hidden w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md flex justify-center items-center\" aria-label=\"Toggle navigation menu\"><!-- hamburger icon --><span class=\"sr-only\">Menu</span><span class=\"block lg:hidden\" aria-hidden=\"true\"><span class=\"sr-only\">Open</span>❌ </span><span class=\"hidden lg:block\" aria-hidden=\"true\"><span class=\"sr-only\">Close</span>Menu </span></button>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "Component that takes children, renders the navigation menu and handles the toggle state.",
          "html": "<div class=\"lg:flex lg:flex-wrap lg:justify-center lg:pb-4 lg:w-full lg:bg-white lg:shadow-md lg:rounded-md\" aria-labelledby=\"navigation-menu\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle button that can be used to expand or collapse a navigation menu. On mobile devices, it should be a hamburger icon, and on larger screens, it should be a text label indicating whether the menu is open or closed.",
      "html": "<nav><NavigationToggle/><NavigationMenu><!-- navigation menu items here --></NavigationMenu></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that renders a toggle button for the navigation menu.",
          "html": "<button class=\"lg:hidden w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md flex justify-center items-center\" aria-label=\"Toggle navigation menu\"><!-- hamburger icon --><span class=\"sr-only\">Menu</span><span class=\"block lg:hidden\" aria-hidden=\"true\"><span class=\"sr-only\">Open</span>❌ </span><span class=\"hidden lg:block\" aria-hidden=\"true\"><span class=\"sr-only\">Close</span>Menu </span></button>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "Component that takes children, renders the navigation menu and handles the toggle state.",
          "html": "<div class=\"lg:flex lg:flex-wrap lg:justify-center lg:pb-4 lg:w-full lg:bg-white lg:shadow-md lg:rounded-md\" aria-labelledby=\"navigation-menu\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle button that can be used to expand or collapse a navigation menu. On mobile devices, it should be a hamburger icon, and on larger screens, it should be a text label indicating whether the menu is open or closed.",
      "html": "<nav><NavigationToggle/><NavigationMenu><!-- navigation menu items here --></NavigationMenu></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that renders a toggle button for the navigation menu.",
          "html": "<button class=\"lg:hidden w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md flex justify-center items-center\" aria-label=\"Toggle navigation menu\"><!-- hamburger icon --><span class=\"sr-only\">Menu</span><span class=\"block lg:hidden\" aria-hidden=\"true\"><span class=\"sr-only\">Open</span>❌ </span><span class=\"hidden lg:block\" aria-hidden=\"true\"><span class=\"sr-only\">Close</span>Menu </span></button>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "Component that takes children, renders the navigation menu and handles the toggle state.",
          "html": "<div class=\"lg:flex lg:flex-wrap lg:justify-center lg:pb-4 lg:w-full lg:bg-white lg:shadow-md lg:rounded-md\" aria-labelledby=\"navigation-menu\">{children}</div>"
        }
      ]
    }
  ],
  "Blog Post Comment Count": [
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    },
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    },
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    },
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    },
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    },
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    },
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    },
    {
      "description": "The UI should display the number of comments on a blog post, with a responsive design that adapts to different screen sizes. The comment count should be displayed in a subtle, yet readable font size, with sufficient padding to make it easily readable on both light and dark backgrounds.",
      "html": "<div class=\"flex justify-end mb-2\"><CommentCount/></div>",
      "components": [
        {
          "name": "CommentCount",
          "is_standalone": true,
          "description": "A standalone component that displays the number of comments on a blog post.",
          "html": "<span class=\"text-sm text-gray-600\">{comment_count} comments</span>"
        }
      ]
    }
  ],
  "Company Address Map": [
    {
      "description": "The UI should display a map with a marker indicating the company's address. The map should be responsive and adapt to different screen sizes. Below the map, the company's address should be displayed in a readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><CompanyAddressMap/><AddressDisplay><h2>Company Address</h2><p>{company_street}</p><p>{company_city}, {company_state} {company_zip}</p></AddressDisplay></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "A standalone component that displays a map with a marker indicating the company's address.",
          "html": "<div class=\"w-full mb-4\"><iframe src={`https://maps.google.com/maps?q={company_latitude},{company_longitude}&z=15&output=embed`} frameborder=\"0\" width=\"100%\" height=\"300\"></iframe></div>"
        },
        {
          "name": "AddressDisplay",
          "is_standalone": false,
          "description": "A component that takes children to display the company's address in a readable format.",
          "html": "<div class=\"text-lg leading-relaxed\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a marker indicating the company's address. The map should be responsive and adapt to different screen sizes. Below the map, the company's address should be displayed in a readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><CompanyAddressMap/><AddressDisplay><h2>Company Address</h2><p>{company_street}</p><p>{company_city}, {company_state} {company_zip}</p></AddressDisplay></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "A standalone component that displays a map with a marker indicating the company's address.",
          "html": "<div class=\"w-full mb-4\"><iframe src={`https://maps.google.com/maps?q={company_latitude},{company_longitude}&z=15&output=embed`} frameborder=\"0\" width=\"100%\" height=\"300\"></iframe></div>"
        },
        {
          "name": "AddressDisplay",
          "is_standalone": false,
          "description": "A component that takes children to display the company's address in a readable format.",
          "html": "<div class=\"text-lg leading-relaxed\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a pin indicating the company's location, along with the company's address and contact information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CompanyAddressMap/></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "a standalone component that displays the map and company information.",
          "html": "<div class=\"flex flex-col md:flex-row\"><MapPin/><AddressInfo/></div>"
        },
        {
          "name": "MapPin",
          "is_standalone": true,
          "description": "a standalone component that displays the pin on the map.",
          "html": "<div class=\"w-12 h-12 bg-red-500 rounded-full flex justify-center items-center\"><i class=\"fas fa-map-pin text-white text-2xl\"></i></div>"
        },
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the company's address and contact information.",
          "html": "<div class=\"pl-4 md:pl-0\"><h2 class=\"text-lg\">{company_name}</h2><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a company address along with a map to help users locate the company. The address should be clearly visible, and the map should be interactive, allowing users to zoom in and out.",
      "html": "<div class=\"mx-auto p-4 max-w-md\"><CompanyAddressMap><CompanyAddress/><Map/></CompanyAddressMap></div>",
      "components": [
        {
          "name": "CompanyAddress",
          "is_standalone": true,
          "description": "(standalone): Displays the company address.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg font-bold\">{company_name}</h5><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        },
        {
          "name": "Map",
          "is_standalone": true,
          "description": "(standalone): Displays an interactive map.",
          "html": "<div class=\"h-64 w-full rounded-md overflow-hidden\"><!-- map will be rendered here --></div>"
        },
        {
          "name": "CompanyAddressMap",
          "is_standalone": false,
          "description": "(takes children): A container component that holds the company address and map components.",
          "html": "<div class=\"flex flex-col md:flex-row\"><div class=\"md:w-1/2 md:pr-4\">{children} </div><div class=\"md:w-1/2 md:pl-4\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a map showing the company's address, along with the address written out in text. The map should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AddressMap/><AddressText/></div>",
      "components": [
        {
          "name": "AddressMap",
          "is_standalone": true,
          "description": "Standalone component that displays a map with a marker at the company's address.",
          "html": "<div class=\"w-full h-64 mb-4\"><iframe src={`https://maps.google.com/maps?q={company_address}&t=&z=13&ie=UTF8&iwloc=&output=embed`} class=\"w-full h-full\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe></div>"
        },
        {
          "name": "AddressText",
          "is_standalone": true,
          "description": "Standalone component that displays the company's address in text.",
          "html": "<div class=\"text-lg mb-2\">{company_street}, {company_city}, {company_state} {company_zip}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a marker indicating the company's address. The map should be responsive and adapt to different screen sizes. Below the map, the company's address should be displayed in a readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><CompanyAddressMap/><AddressDisplay><h2>Company Address</h2><p>{company_street}</p><p>{company_city}, {company_state} {company_zip}</p></AddressDisplay></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "A standalone component that displays a map with a marker indicating the company's address.",
          "html": "<div class=\"w-full mb-4\"><iframe src={`https://maps.google.com/maps?q={company_latitude},{company_longitude}&z=15&output=embed`} frameborder=\"0\" width=\"100%\" height=\"300\"></iframe></div>"
        },
        {
          "name": "AddressDisplay",
          "is_standalone": false,
          "description": "A component that takes children to display the company's address in a readable format.",
          "html": "<div class=\"text-lg leading-relaxed\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a pin indicating the company's location, along with the company's address and contact information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CompanyAddressMap/></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "a standalone component that displays the map and company information.",
          "html": "<div class=\"flex flex-col md:flex-row\"><MapPin/><AddressInfo/></div>"
        },
        {
          "name": "MapPin",
          "is_standalone": true,
          "description": "a standalone component that displays the pin on the map.",
          "html": "<div class=\"w-12 h-12 bg-red-500 rounded-full flex justify-center items-center\"><i class=\"fas fa-map-pin text-white text-2xl\"></i></div>"
        },
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the company's address and contact information.",
          "html": "<div class=\"pl-4 md:pl-0\"><h2 class=\"text-lg\">{company_name}</h2><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a company address along with a map to help users locate the company. The address should be clearly visible, and the map should be interactive, allowing users to zoom in and out.",
      "html": "<div class=\"mx-auto p-4 max-w-md\"><CompanyAddressMap><CompanyAddress/><Map/></CompanyAddressMap></div>",
      "components": [
        {
          "name": "CompanyAddress",
          "is_standalone": true,
          "description": "(standalone): Displays the company address.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg font-bold\">{company_name}</h5><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        },
        {
          "name": "Map",
          "is_standalone": true,
          "description": "(standalone): Displays an interactive map.",
          "html": "<div class=\"h-64 w-full rounded-md overflow-hidden\"><!-- map will be rendered here --></div>"
        },
        {
          "name": "CompanyAddressMap",
          "is_standalone": false,
          "description": "(takes children): A container component that holds the company address and map components.",
          "html": "<div class=\"flex flex-col md:flex-row\"><div class=\"md:w-1/2 md:pr-4\">{children} </div><div class=\"md:w-1/2 md:pl-4\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a map showing the company's address, along with the address written out in text. The map should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AddressMap/><AddressText/></div>",
      "components": [
        {
          "name": "AddressMap",
          "is_standalone": true,
          "description": "Standalone component that displays a map with a marker at the company's address.",
          "html": "<div class=\"w-full h-64 mb-4\"><iframe src={`https://maps.google.com/maps?q={company_address}&t=&z=13&ie=UTF8&iwloc=&output=embed`} class=\"w-full h-full\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe></div>"
        },
        {
          "name": "AddressText",
          "is_standalone": true,
          "description": "Standalone component that displays the company's address in text.",
          "html": "<div class=\"text-lg mb-2\">{company_street}, {company_city}, {company_state} {company_zip}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a marker indicating the company's address. The map should be responsive and adapt to different screen sizes. Below the map, the company's address should be displayed in a readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><CompanyAddressMap/><AddressDisplay><h2>Company Address</h2><p>{company_street}</p><p>{company_city}, {company_state} {company_zip}</p></AddressDisplay></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "A standalone component that displays a map with a marker indicating the company's address.",
          "html": "<div class=\"w-full mb-4\"><iframe src={`https://maps.google.com/maps?q={company_latitude},{company_longitude}&z=15&output=embed`} frameborder=\"0\" width=\"100%\" height=\"300\"></iframe></div>"
        },
        {
          "name": "AddressDisplay",
          "is_standalone": false,
          "description": "A component that takes children to display the company's address in a readable format.",
          "html": "<div class=\"text-lg leading-relaxed\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a pin indicating the company's location, along with the company's address and contact information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CompanyAddressMap/></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "a standalone component that displays the map and company information.",
          "html": "<div class=\"flex flex-col md:flex-row\"><MapPin/><AddressInfo/></div>"
        },
        {
          "name": "MapPin",
          "is_standalone": true,
          "description": "a standalone component that displays the pin on the map.",
          "html": "<div class=\"w-12 h-12 bg-red-500 rounded-full flex justify-center items-center\"><i class=\"fas fa-map-pin text-white text-2xl\"></i></div>"
        },
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the company's address and contact information.",
          "html": "<div class=\"pl-4 md:pl-0\"><h2 class=\"text-lg\">{company_name}</h2><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a marker indicating the company's address. The map should be responsive and adapt to different screen sizes. Below the map, the company's address should be displayed in a readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><CompanyAddressMap/><AddressDisplay><h2>Company Address</h2><p>{company_street}</p><p>{company_city}, {company_state} {company_zip}</p></AddressDisplay></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "A standalone component that displays a map with a marker indicating the company's address.",
          "html": "<div class=\"w-full mb-4\"><iframe src={`https://maps.google.com/maps?q={company_latitude},{company_longitude}&z=15&output=embed`} frameborder=\"0\" width=\"100%\" height=\"300\"></iframe></div>"
        },
        {
          "name": "AddressDisplay",
          "is_standalone": false,
          "description": "A component that takes children to display the company's address in a readable format.",
          "html": "<div class=\"text-lg leading-relaxed\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a pin indicating the company's location, along with the company's address and contact information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CompanyAddressMap/></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "a standalone component that displays the map and company information.",
          "html": "<div class=\"flex flex-col md:flex-row\"><MapPin/><AddressInfo/></div>"
        },
        {
          "name": "MapPin",
          "is_standalone": true,
          "description": "a standalone component that displays the pin on the map.",
          "html": "<div class=\"w-12 h-12 bg-red-500 rounded-full flex justify-center items-center\"><i class=\"fas fa-map-pin text-white text-2xl\"></i></div>"
        },
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the company's address and contact information.",
          "html": "<div class=\"pl-4 md:pl-0\"><h2 class=\"text-lg\">{company_name}</h2><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a company address along with a map to help users locate the company. The address should be clearly visible, and the map should be interactive, allowing users to zoom in and out.",
      "html": "<div class=\"mx-auto p-4 max-w-md\"><CompanyAddressMap><CompanyAddress/><Map/></CompanyAddressMap></div>",
      "components": [
        {
          "name": "CompanyAddress",
          "is_standalone": true,
          "description": "(standalone): Displays the company address.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg font-bold\">{company_name}</h5><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        },
        {
          "name": "Map",
          "is_standalone": true,
          "description": "(standalone): Displays an interactive map.",
          "html": "<div class=\"h-64 w-full rounded-md overflow-hidden\"><!-- map will be rendered here --></div>"
        },
        {
          "name": "CompanyAddressMap",
          "is_standalone": false,
          "description": "(takes children): A container component that holds the company address and map components.",
          "html": "<div class=\"flex flex-col md:flex-row\"><div class=\"md:w-1/2 md:pr-4\">{children} </div><div class=\"md:w-1/2 md:pl-4\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a map showing the company's address, along with the address written out in text. The map should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AddressMap/><AddressText/></div>",
      "components": [
        {
          "name": "AddressMap",
          "is_standalone": true,
          "description": "Standalone component that displays a map with a marker at the company's address.",
          "html": "<div class=\"w-full h-64 mb-4\"><iframe src={`https://maps.google.com/maps?q={company_address}&t=&z=13&ie=UTF8&iwloc=&output=embed`} class=\"w-full h-full\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe></div>"
        },
        {
          "name": "AddressText",
          "is_standalone": true,
          "description": "Standalone component that displays the company's address in text.",
          "html": "<div class=\"text-lg mb-2\">{company_street}, {company_city}, {company_state} {company_zip}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a marker indicating the company's address. The map should be responsive and adapt to different screen sizes. Below the map, the company's address should be displayed in a readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><CompanyAddressMap/><AddressDisplay><h2>Company Address</h2><p>{company_street}</p><p>{company_city}, {company_state} {company_zip}</p></AddressDisplay></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "A standalone component that displays a map with a marker indicating the company's address.",
          "html": "<div class=\"w-full mb-4\"><iframe src={`https://maps.google.com/maps?q={company_latitude},{company_longitude}&z=15&output=embed`} frameborder=\"0\" width=\"100%\" height=\"300\"></iframe></div>"
        },
        {
          "name": "AddressDisplay",
          "is_standalone": false,
          "description": "A component that takes children to display the company's address in a readable format.",
          "html": "<div class=\"text-lg leading-relaxed\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a pin indicating the company's location, along with the company's address and contact information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CompanyAddressMap/></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "a standalone component that displays the map and company information.",
          "html": "<div class=\"flex flex-col md:flex-row\"><MapPin/><AddressInfo/></div>"
        },
        {
          "name": "MapPin",
          "is_standalone": true,
          "description": "a standalone component that displays the pin on the map.",
          "html": "<div class=\"w-12 h-12 bg-red-500 rounded-full flex justify-center items-center\"><i class=\"fas fa-map-pin text-white text-2xl\"></i></div>"
        },
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the company's address and contact information.",
          "html": "<div class=\"pl-4 md:pl-0\"><h2 class=\"text-lg\">{company_name}</h2><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a company address along with a map to help users locate the company. The address should be clearly visible, and the map should be interactive, allowing users to zoom in and out.",
      "html": "<div class=\"mx-auto p-4 max-w-md\"><CompanyAddressMap><CompanyAddress/><Map/></CompanyAddressMap></div>",
      "components": [
        {
          "name": "CompanyAddress",
          "is_standalone": true,
          "description": "(standalone): Displays the company address.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg font-bold\">{company_name}</h5><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        },
        {
          "name": "Map",
          "is_standalone": true,
          "description": "(standalone): Displays an interactive map.",
          "html": "<div class=\"h-64 w-full rounded-md overflow-hidden\"><!-- map will be rendered here --></div>"
        },
        {
          "name": "CompanyAddressMap",
          "is_standalone": false,
          "description": "(takes children): A container component that holds the company address and map components.",
          "html": "<div class=\"flex flex-col md:flex-row\"><div class=\"md:w-1/2 md:pr-4\">{children} </div><div class=\"md:w-1/2 md:pl-4\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a map showing the company's address, along with the address written out in text. The map should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AddressMap/><AddressText/></div>",
      "components": [
        {
          "name": "AddressMap",
          "is_standalone": true,
          "description": "Standalone component that displays a map with a marker at the company's address.",
          "html": "<div class=\"w-full h-64 mb-4\"><iframe src={`https://maps.google.com/maps?q={company_address}&t=&z=13&ie=UTF8&iwloc=&output=embed`} class=\"w-full h-full\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe></div>"
        },
        {
          "name": "AddressText",
          "is_standalone": true,
          "description": "Standalone component that displays the company's address in text.",
          "html": "<div class=\"text-lg mb-2\">{company_street}, {company_city}, {company_state} {company_zip}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a marker indicating the company's address. The map should be responsive and adapt to different screen sizes. Below the map, the company's address should be displayed in a readable format.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><CompanyAddressMap/><AddressDisplay><h2>Company Address</h2><p>{company_street}</p><p>{company_city}, {company_state} {company_zip}</p></AddressDisplay></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "A standalone component that displays a map with a marker indicating the company's address.",
          "html": "<div class=\"w-full mb-4\"><iframe src={`https://maps.google.com/maps?q={company_latitude},{company_longitude}&z=15&output=embed`} frameborder=\"0\" width=\"100%\" height=\"300\"></iframe></div>"
        },
        {
          "name": "AddressDisplay",
          "is_standalone": false,
          "description": "A component that takes children to display the company's address in a readable format.",
          "html": "<div class=\"text-lg leading-relaxed\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a map with a pin indicating the company's location, along with the company's address and contact information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CompanyAddressMap/></div>",
      "components": [
        {
          "name": "CompanyAddressMap",
          "is_standalone": true,
          "description": "a standalone component that displays the map and company information.",
          "html": "<div class=\"flex flex-col md:flex-row\"><MapPin/><AddressInfo/></div>"
        },
        {
          "name": "MapPin",
          "is_standalone": true,
          "description": "a standalone component that displays the pin on the map.",
          "html": "<div class=\"w-12 h-12 bg-red-500 rounded-full flex justify-center items-center\"><i class=\"fas fa-map-pin text-white text-2xl\"></i></div>"
        },
        {
          "name": "AddressInfo",
          "is_standalone": true,
          "description": "a standalone component that displays the company's address and contact information.",
          "html": "<div class=\"pl-4 md:pl-0\"><h2 class=\"text-lg\">{company_name}</h2><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a company address along with a map to help users locate the company. The address should be clearly visible, and the map should be interactive, allowing users to zoom in and out.",
      "html": "<div class=\"mx-auto p-4 max-w-md\"><CompanyAddressMap><CompanyAddress/><Map/></CompanyAddressMap></div>",
      "components": [
        {
          "name": "CompanyAddress",
          "is_standalone": true,
          "description": "(standalone): Displays the company address.",
          "html": "<div class=\"mb-4\"><h5 class=\"text-lg font-bold\">{company_name}</h5><p>{street_address}</p><p>{city}, {state} {zip_code}</p><p>Phone: {phone_number}</p><p>Email: {email_address}</p></div>"
        },
        {
          "name": "Map",
          "is_standalone": true,
          "description": "(standalone): Displays an interactive map.",
          "html": "<div class=\"h-64 w-full rounded-md overflow-hidden\"><!-- map will be rendered here --></div>"
        },
        {
          "name": "CompanyAddressMap",
          "is_standalone": false,
          "description": "(takes children): A container component that holds the company address and map components.",
          "html": "<div class=\"flex flex-col md:flex-row\"><div class=\"md:w-1/2 md:pr-4\">{children} </div><div class=\"md:w-1/2 md:pl-4\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a map showing the company's address, along with the address written out in text. The map should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AddressMap/><AddressText/></div>",
      "components": [
        {
          "name": "AddressMap",
          "is_standalone": true,
          "description": "Standalone component that displays a map with a marker at the company's address.",
          "html": "<div class=\"w-full h-64 mb-4\"><iframe src={`https://maps.google.com/maps?q={company_address}&t=&z=13&ie=UTF8&iwloc=&output=embed`} class=\"w-full h-full\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe></div>"
        },
        {
          "name": "AddressText",
          "is_standalone": true,
          "description": "Standalone component that displays the company's address in text.",
          "html": "<div class=\"text-lg mb-2\">{company_street}, {company_city}, {company_state} {company_zip}</div>"
        }
      ]
    }
  ],
  "Testimonial Author Name": [
    {
      "description": "The UI should display a testimonial author's name in a readable font size, with a slight emphasis on the text to distinguish it from the testimonial content.",
      "html": "<div class=\"flex flex-wrap mb-4\"><p class=\"text-lg text-gray-600\"><TestimonialAuthorName/></p></div>",
      "components": [
        {
          "name": "TestimonialAuthorName",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"font-bold\">{authorName}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial author's name in a readable font size, with a slight emphasis on the text to distinguish it from the testimonial content.",
      "html": "<div class=\"flex flex-wrap mb-4\"><p class=\"text-lg text-gray-600\"><TestimonialAuthorName/></p></div>",
      "components": [
        {
          "name": "TestimonialAuthorName",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"font-bold\">{authorName}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial author's name in a readable font size, with a slight emphasis on the text to distinguish it from the testimonial content.",
      "html": "<div class=\"flex flex-wrap mb-4\"><p class=\"text-lg text-gray-600\"><TestimonialAuthorName/></p></div>",
      "components": [
        {
          "name": "TestimonialAuthorName",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"font-bold\">{authorName}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial author's name in a readable font size, with a slight emphasis on the text to distinguish it from the testimonial content.",
      "html": "<div class=\"flex flex-wrap mb-4\"><p class=\"text-lg text-gray-600\"><TestimonialAuthorName/></p></div>",
      "components": [
        {
          "name": "TestimonialAuthorName",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"font-bold\">{authorName}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial author's name in a readable font size, with a slight emphasis on the text to distinguish it from the testimonial content.",
      "html": "<div class=\"flex flex-wrap mb-4\"><p class=\"text-lg text-gray-600\"><TestimonialAuthorName/></p></div>",
      "components": [
        {
          "name": "TestimonialAuthorName",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"font-bold\">{authorName}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial author's name in a readable font size, with a slight emphasis on the text to distinguish it from the testimonial content.",
      "html": "<div class=\"flex flex-wrap mb-4\"><p class=\"text-lg text-gray-600\"><TestimonialAuthorName/></p></div>",
      "components": [
        {
          "name": "TestimonialAuthorName",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"font-bold\">{authorName}</span>"
        }
      ]
    }
  ],
  "GloballyUniqueIdentifiableElements": [
    {
      "description": "The UI should display a list of unique elements, each with a unique identifier, name, and description.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-2xl font-bold mb-4\">Globally Unique Identifiable Elements</h1><UniqueIdList><UniqueIdCard/><UniqueIdCard/><UniqueIdCard/><!-- Add more UniqueIdCard components here --></UniqueIdList></div>",
      "components": [
        {
          "name": "UniqueIdCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single unique element's details.",
          "html": "<div class=\"bg-white shadow-md p-4 rounded mb-4\"><h2 class=\"text-lg font-bold\">{element_name}</h2><p class=\"text-gray-600\">{element_description}</p><p class=\"text-sm text-gray-500\">Unique ID: {unique_id}</p></div>"
        },
        {
          "name": "UniqueIdList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple **UniqueIdCard** components.",
          "html": "<ul class=\"divide-y divide-gray-200\">{children}</ul>"
        }
      ]
    }
  ],
  "Header Navigation Toggle": [
    {
      "description": "The UI should be a responsive header navigation toggle, which is a common design pattern for mobile-first navigation. The toggle should be accessible and SEO-friendly.",
      "html": "<header class=\"bg-gray-200 py-4 lg:py-8\"><div class=\"container mx-auto px-4 lg:px-8\"><Header/><NavToggle/><Nav><!-- navigation items will be inserted here --></Nav></div></header>",
      "components": [
        {
          "name": "Header",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-2xl font-bold\">{site_title}</h1>"
        },
        {
          "name": "NavToggle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"lg:hidden\" aria-label=\"Navigation toggle\"><span class=\"sr-only\">Toggle navigation</span><i class=\"fas fa-bars text-lg\"></i></button>"
        },
        {
          "name": "Nav",
          "is_standalone": false,
          "description": "takes children",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header navigation toggle, which is a common design pattern for mobile-first navigation. The toggle should be accessible and SEO-friendly.",
      "html": "<header class=\"bg-gray-200 py-4 lg:py-8\"><div class=\"container mx-auto px-4 lg:px-8\"><Header/><NavToggle/><Nav><!-- navigation items will be inserted here --></Nav></div></header>",
      "components": [
        {
          "name": "Header",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-2xl font-bold\">{site_title}</h1>"
        },
        {
          "name": "NavToggle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"lg:hidden\" aria-label=\"Navigation toggle\"><span class=\"sr-only\">Toggle navigation</span><i class=\"fas fa-bars text-lg\"></i></button>"
        },
        {
          "name": "Nav",
          "is_standalone": false,
          "description": "takes children",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header navigation toggle, which is a common design pattern for mobile-first navigation. The toggle should be accessible and SEO-friendly.",
      "html": "<header class=\"bg-gray-200 py-4 lg:py-8\"><div class=\"container mx-auto px-4 lg:px-8\"><Header/><NavToggle/><Nav><!-- navigation items will be inserted here --></Nav></div></header>",
      "components": [
        {
          "name": "Header",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-2xl font-bold\">{site_title}</h1>"
        },
        {
          "name": "NavToggle",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"lg:hidden\" aria-label=\"Navigation toggle\"><span class=\"sr-only\">Toggle navigation</span><i class=\"fas fa-bars text-lg\"></i></button>"
        },
        {
          "name": "Nav",
          "is_standalone": false,
          "description": "takes children",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-end\">{children}</nav>"
        }
      ]
    }
  ],
  "Product Description List Item": [
    {
      "description": "The UI should display a list item that contains a product description, which includes a product title, a product rating, and a short product description. The component should be responsive, mobile-first, and accessible.",
      "html": "<ul class=\"flex flex-col gap-4 md:flex-row md:flex-wrap\"><ProductDescriptionListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<li class=\"flex flex-col gap-2\"><ProductTitle/><ProductRating/><ProductDescription/></li>"
        },
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "standalone component, displays the title of the product",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "ProductRating",
          "is_standalone": true,
          "description": "standalone component, displays the rating of the product",
          "html": "<div class=\"flex gap-1\">{rating} <span class=\"text-sm\">/ 5</span></div>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "standalone component, displays a short description of the product",
          "html": "<p>{productDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a list item that contains a product description, which includes a product title, a product rating, and a short product description. The component should be responsive, mobile-first, and accessible.",
      "html": "<ul class=\"flex flex-col gap-4 md:flex-row md:flex-wrap\"><ProductDescriptionListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<li class=\"flex flex-col gap-2\"><ProductTitle/><ProductRating/><ProductDescription/></li>"
        },
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "standalone component, displays the title of the product",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "ProductRating",
          "is_standalone": true,
          "description": "standalone component, displays the rating of the product",
          "html": "<div class=\"flex gap-1\">{rating} <span class=\"text-sm\">/ 5</span></div>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "standalone component, displays a short description of the product",
          "html": "<p>{productDescription}</p>"
        }
      ]
    }
  ],
  "Shopping Cart Icon": [
    {
      "description": "The UI should be a shopping cart icon with a badge indicating the number of items in the cart.",
      "html": "<div class=\"absolute top-2 right-2\"><ShoppingCartIcon/><Badge/></div>",
      "components": [
        {
          "name": "ShoppingCartIcon",
          "is_standalone": true,
          "description": "Standalone component representing the shopping cart icon.",
          "html": "<i class=\"fas fa-shopping-cart text-lg text-gray-500 hover:text-gray-800 cursor-pointer\"></i>"
        },
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "Standalone component representing the badge displaying the number of items in the cart.",
          "html": "<span class=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">{item_count}</span>"
        }
      ]
    }
  ],
  "Rich media embed with video playback and playback controls": [
    {
      "description": "The UI should be a rich media embed with a video player that has playback controls, including play/pause, volume control, and a progress bar. The video player should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><RichMediaEmbed/></div>",
      "components": [
        {
          "name": "RichMediaEmbed",
          "is_standalone": true,
          "description": "standalone component that contains the video player and playback controls.",
          "html": "<div class=\"flex flex-col h-full\"><VideoPlayer/></div>"
        },
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "standalone component that contains the video element and playback controls.",
          "html": "<div class=\"flex-grow\"><video src=\"{videoSrc}\" class=\"w-full h-full object-cover\"></video><PlaybackControls/></div>"
        },
        {
          "name": "PlaybackControls",
          "is_standalone": true,
          "description": "standalone component that contains the play/pause button, volume control, and progress bar.",
          "html": "<div class=\"flex justify-between py-2\"><button class=\"text-gray-500 hover:text-gray-700\" aria-label=\"Play/Pause\">{playPauseButtonIcon} </button><ProgressBar/><VolumeControl/></div>"
        },
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "standalone component that displays the video progress.",
          "html": "<div class=\"flex-grow w-full h-2 bg-gray-200 rounded\"><div class=\"bg-orange-500 h-2\" style={{ width: `${progressPercentage}%` }}></div></div>"
        },
        {
          "name": "VolumeControl",
          "is_standalone": true,
          "description": "standalone component that allows the user to adjust the volume.",
          "html": "<div class=\"flex items-center\"><button class=\"text-gray-500 hover:text-gray-700\" aria-label=\"Mute/Unmute\">{muteButtonIcon} </button><div class=\"h-2 w-16 bg-gray-200 rounded\"><div class=\"bg-orange-500 h-2\" style={{ width: `${volumePercentage}%` }}></div></div></div>"
        }
      ]
    }
  ],
  "Customer review and rating summaries": [
    {
      "description": "The UI should display a summary of customer reviews, including the average rating and total number of reviews. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto py-4\"><CustomerReviewSummary/><div class=\"flex justify-between mb-4\"><RatingSummary/><ReviewCount/></div></div>",
      "components": [
        {
          "name": "CustomerReviewSummary",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"text-lg font-bold\">{average_rating} out of 5 stars</div>"
        },
        {
          "name": "RatingSummary",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"flex items-center\"><span class=\"text-yellow-500\">{rating_icon}</span><span class=\"ml-2\">{average_rating}</span></div>"
        },
        {
          "name": "ReviewCount",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<p>{review_count} reviews</p>"
        }
      ]
    }
  ],
  "Service section with icons and brief descriptions": [
    {
      "description": "The UI should be a responsive service section with a grid of services, each consisting of an icon, a brief description, and a title. The icons should be large and prominent, with the description and title below. The service section should be accessible, responsive, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><Service/><Service/><Service/><!-- Add more Service components as needed --></div></div>",
      "components": [
        {
          "name": "Service",
          "is_standalone": true,
          "description": "A standalone component representing a single service, consisting of an icon, title, and description.",
          "html": "<div class=\"flex flex-col items-center\"><ServiceIcon/><ServiceInfo/></div>"
        },
        {
          "name": "ServiceIcon",
          "is_standalone": true,
          "description": "A standalone component representing the icon of a service.",
          "html": "<i class=\"text-5xl {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "ServiceInfo",
          "is_standalone": true,
          "description": "A standalone component representing the title and description of a service.",
          "html": "<div class=\"text-center\"><h3 class=\"text-lg\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive service section with a grid of services, each consisting of an icon, a brief description, and a title. The icons should be large and prominent, with the description and title below. The service section should be accessible, responsive, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><Service/><Service/><Service/><!-- Add more Service components as needed --></div></div>",
      "components": [
        {
          "name": "Service",
          "is_standalone": true,
          "description": "A standalone component representing a single service, consisting of an icon, title, and description.",
          "html": "<div class=\"flex flex-col items-center\"><ServiceIcon/><ServiceInfo/></div>"
        },
        {
          "name": "ServiceIcon",
          "is_standalone": true,
          "description": "A standalone component representing the icon of a service.",
          "html": "<i class=\"text-5xl {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "ServiceInfo",
          "is_standalone": true,
          "description": "A standalone component representing the title and description of a service.",
          "html": "<div class=\"text-center\"><h3 class=\"text-lg\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive service section with a grid of services, each consisting of an icon, a brief description, and a title. The icons should be large and prominent, with the description and title below. The service section should be accessible, responsive, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><Service/><Service/><Service/><!-- Add more Service components as needed --></div></div>",
      "components": [
        {
          "name": "Service",
          "is_standalone": true,
          "description": "A standalone component representing a single service, consisting of an icon, title, and description.",
          "html": "<div class=\"flex flex-col items-center\"><ServiceIcon/><ServiceInfo/></div>"
        },
        {
          "name": "ServiceIcon",
          "is_standalone": true,
          "description": "A standalone component representing the icon of a service.",
          "html": "<i class=\"text-5xl {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "ServiceInfo",
          "is_standalone": true,
          "description": "A standalone component representing the title and description of a service.",
          "html": "<div class=\"text-center\"><h3 class=\"text-lg\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive service section with a grid of services, each consisting of an icon, a brief description, and a title. The icons should be large and prominent, with the description and title below. The service section should be accessible, responsive, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><Service/><Service/><Service/><!-- Add more Service components as needed --></div></div>",
      "components": [
        {
          "name": "Service",
          "is_standalone": true,
          "description": "A standalone component representing a single service, consisting of an icon, title, and description.",
          "html": "<div class=\"flex flex-col items-center\"><ServiceIcon/><ServiceInfo/></div>"
        },
        {
          "name": "ServiceIcon",
          "is_standalone": true,
          "description": "A standalone component representing the icon of a service.",
          "html": "<i class=\"text-5xl {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "ServiceInfo",
          "is_standalone": true,
          "description": "A standalone component representing the title and description of a service.",
          "html": "<div class=\"text-center\"><h3 class=\"text-lg\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive service section with a grid of services, each consisting of an icon, a brief description, and a title. The icons should be large and prominent, with the description and title below. The service section should be accessible, responsive, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><Service/><Service/><Service/><!-- Add more Service components as needed --></div></div>",
      "components": [
        {
          "name": "Service",
          "is_standalone": true,
          "description": "A standalone component representing a single service, consisting of an icon, title, and description.",
          "html": "<div class=\"flex flex-col items-center\"><ServiceIcon/><ServiceInfo/></div>"
        },
        {
          "name": "ServiceIcon",
          "is_standalone": true,
          "description": "A standalone component representing the icon of a service.",
          "html": "<i class=\"text-5xl {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "ServiceInfo",
          "is_standalone": true,
          "description": "A standalone component representing the title and description of a service.",
          "html": "<div class=\"text-center\"><h3 class=\"text-lg\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive service section with a grid of services, each consisting of an icon, a brief description, and a title. The icons should be large and prominent, with the description and title below. The service section should be accessible, responsive, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><Service/><Service/><Service/><!-- Add more Service components as needed --></div></div>",
      "components": [
        {
          "name": "Service",
          "is_standalone": true,
          "description": "A standalone component representing a single service, consisting of an icon, title, and description.",
          "html": "<div class=\"flex flex-col items-center\"><ServiceIcon/><ServiceInfo/></div>"
        },
        {
          "name": "ServiceIcon",
          "is_standalone": true,
          "description": "A standalone component representing the icon of a service.",
          "html": "<i class=\"text-5xl {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "ServiceInfo",
          "is_standalone": true,
          "description": "A standalone component representing the title and description of a service.",
          "html": "<div class=\"text-center\"><h3 class=\"text-lg\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive service section with a grid of services, each consisting of an icon, a brief description, and a title. The icons should be large and prominent, with the description and title below. The service section should be accessible, responsive, and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><Service/><Service/><Service/><!-- Add more Service components as needed --></div></div>",
      "components": [
        {
          "name": "Service",
          "is_standalone": true,
          "description": "A standalone component representing a single service, consisting of an icon, title, and description.",
          "html": "<div class=\"flex flex-col items-center\"><ServiceIcon/><ServiceInfo/></div>"
        },
        {
          "name": "ServiceIcon",
          "is_standalone": true,
          "description": "A standalone component representing the icon of a service.",
          "html": "<i class=\"text-5xl {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "ServiceInfo",
          "is_standalone": true,
          "description": "A standalone component representing the title and description of a service.",
          "html": "<div class=\"text-center\"><h3 class=\"text-lg\">{title}</h3><p class=\"text-gray-600\">{description}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a service section with three columns, each containing an icon, a brief description, and a title. The section should be responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<section class=\"max-w-md mx-auto pt-12 pb-6\"><h2 class=\"text-3xl font-bold mb-4\">Our Services</h2><div class=\"flex flex-wrap justify-center\"><ServiceCard/><ServiceCard/><ServiceCard/></div></section>",
      "components": [
        {
          "name": "ServiceCard",
          "is_standalone": true,
          "description": "standalone component that renders an icon, title, and description.",
          "html": "<div class=\"w-full md:w-1/3 xl:w-1/3 p-6\"><i class=\"fas fa-{icon_name} text-3xl text-gray-600 mb-4\"></i><h3 class=\"text-lg font-bold mb-2\">{service_title}</h3><p class=\"text-gray-600\">{service_description}</p></div>"
        }
      ]
    }
  ],
  "Social Media Profile": [
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's social media profile information, including their profile picture, name, bio, and follower count. The profile picture should be circular and have a white border. The name and bio should be displayed below the profile picture, and the follower count should be displayed alongside the bio.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProfilePicture/><ProfileInfo><h2 class=\"text-lg font-bold\">{username}</h2><p>{bio}</p><p class=\"text-sm text-gray-600\">{follower_count} followers</p></ProfileInfo></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "A standalone component that displays a circular profile picture with a white border.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full border-2 border-white\"/>"
        },
        {
          "name": "ProfileInfo",
          "is_standalone": false,
          "description": "A component that takes children, displaying the user's name, bio, and follower count.",
          "html": "<div class=\"flex flex-col py-4\">{children}</div>"
        }
      ]
    }
  ],
  "Username display for other users": [
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    },
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    },
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    },
    {
      "description": "The UI should display a user's username, profile picture, and a badge indicating their online status.",
      "html": "<div class=\"flex items-center\"><UserProfileDisplay/><OnlineBadge/></div>",
      "components": [
        {
          "name": "UserProfileDisplay",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture and username.",
          "html": "<div class=\"flex items-center\"><img src={profile_picture_url} class=\"w-8 h-8 rounded-full\"/><p class=\"ml-2\">{username}</p></div>"
        },
        {
          "name": "OnlineBadge",
          "is_standalone": true,
          "description": "standalone component that displays the online status badge.",
          "html": "<div class={`w-3 h-3 rounded-full ${is_online ? 'bg-green-500' : 'bg-gray-500'}`}></div>"
        }
      ]
    },
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    },
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    },
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    },
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    },
    {
      "description": "The UI should display a username in a compact format, with optional online status indicator. It should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex items-center\"><UsernameDisplay/></div>",
      "components": [
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component that displays a username with optional online status indicator.",
          "html": "<span class=\"text-sm\">{username}</span><!-- Optional online status indicator -->{online ? <OnlineStatusIndicator/>: ''}"
        },
        {
          "name": "OnlineStatusIndicator",
          "is_standalone": true,
          "description": "Standalone component that displays an online status indicator (e.g. a green dot).",
          "html": "<span class=\"inline-block w-2 h-2 rounded-full bg-green-500\"></span>"
        }
      ]
    }
  ],
  "Testimonial Quote Mark": [
    {
      "description": "A beautifully designed testimonial quote mark, usually a large quotation mark that surrounds a quote or review. It adds a touch of elegance and sophistication to the overall design.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><TestimonialQuoteMark/><p class=\"text-lg font-bold\">{quote_text}</p><p class=\"text-gray-600\">{author_name}</p></div>",
      "components": [
        {
          "name": "TestimonialQuoteMark",
          "is_standalone": true,
          "description": "Standalone component that renders a large quotation mark surrounding a quote or review.",
          "html": "<span class=\"text-6xl font-bold text-gray-400\">&ldquo;</span>"
        }
      ]
    },
    {
      "description": "A beautifully designed testimonial quote mark, usually a large quotation mark that surrounds a quote or review. It adds a touch of elegance and sophistication to the overall design.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><TestimonialQuoteMark/><p class=\"text-lg font-bold\">{quote_text}</p><p class=\"text-gray-600\">{author_name}</p></div>",
      "components": [
        {
          "name": "TestimonialQuoteMark",
          "is_standalone": true,
          "description": "Standalone component that renders a large quotation mark surrounding a quote or review.",
          "html": "<span class=\"text-6xl font-bold text-gray-400\">&ldquo;</span>"
        }
      ]
    },
    {
      "description": "A beautifully designed testimonial quote mark, usually a large quotation mark that surrounds a quote or review. It adds a touch of elegance and sophistication to the overall design.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><TestimonialQuoteMark/><p class=\"text-lg font-bold\">{quote_text}</p><p class=\"text-gray-600\">{author_name}</p></div>",
      "components": [
        {
          "name": "TestimonialQuoteMark",
          "is_standalone": true,
          "description": "Standalone component that renders a large quotation mark surrounding a quote or review.",
          "html": "<span class=\"text-6xl font-bold text-gray-400\">&ldquo;</span>"
        }
      ]
    },
    {
      "description": "A beautifully designed testimonial quote mark, usually a large quotation mark that surrounds a quote or review. It adds a touch of elegance and sophistication to the overall design.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><TestimonialQuoteMark/><p class=\"text-lg font-bold\">{quote_text}</p><p class=\"text-gray-600\">{author_name}</p></div>",
      "components": [
        {
          "name": "TestimonialQuoteMark",
          "is_standalone": true,
          "description": "Standalone component that renders a large quotation mark surrounding a quote or review.",
          "html": "<span class=\"text-6xl font-bold text-gray-400\">&ldquo;</span>"
        }
      ]
    },
    {
      "description": "A beautifully designed testimonial quote mark, usually a large quotation mark that surrounds a quote or review. It adds a touch of elegance and sophistication to the overall design.",
      "html": "<div class=\"flex items-center justify-center mb-4\"><TestimonialQuoteMark/><p class=\"text-lg font-bold\">{quote_text}</p><p class=\"text-gray-600\">{author_name}</p></div>",
      "components": [
        {
          "name": "TestimonialQuoteMark",
          "is_standalone": true,
          "description": "Standalone component that renders a large quotation mark surrounding a quote or review.",
          "html": "<span class=\"text-6xl font-bold text-gray-400\">&ldquo;</span>"
        }
      ]
    }
  ],
  "Single post with text, image, and comments": [
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A single post UI should display a header with a post title, a container for the post text, an image, and a section for comments. The UI should be responsive, with the image and comments section stacked on mobile and side-by-side on larger screens.",
      "html": "<article class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><PostHeader/><PostText/><PostImage/><CommentSection><!-- comment list will be rendered here --></CommentSection></article>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the post title",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold\">{postTitle}</h1></header>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "(standalone) - Displays the post text",
          "html": "<p class=\"text-lg\">{postText}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "(standalone) - Displays the post image",
          "html": "<img src={imageUrl} alt={imageAlt} class=\"w-full mb-4\"/>"
        },
        {
          "name": "CommentSection",
          "is_standalone": false,
          "description": "(takes children) - Displays a list of comments",
          "html": "<section class=\"mb-4\"><h2 class=\"text-2xl font-bold\">Comments</h2><ul class=\"list-none mb-4\">{children} <!-- comment list will be rendered here --></ul></section>"
        }
      ]
    },
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A single post UI should display a header with a post title, a container for the post text, an image, and a section for comments. The UI should be responsive, with the image and comments section stacked on mobile and side-by-side on larger screens.",
      "html": "<article class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><PostHeader/><PostText/><PostImage/><CommentSection><!-- comment list will be rendered here --></CommentSection></article>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the post title",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold\">{postTitle}</h1></header>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "(standalone) - Displays the post text",
          "html": "<p class=\"text-lg\">{postText}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "(standalone) - Displays the post image",
          "html": "<img src={imageUrl} alt={imageAlt} class=\"w-full mb-4\"/>"
        },
        {
          "name": "CommentSection",
          "is_standalone": false,
          "description": "(takes children) - Displays a list of comments",
          "html": "<section class=\"mb-4\"><h2 class=\"text-2xl font-bold\">Comments</h2><ul class=\"list-none mb-4\">{children} <!-- comment list will be rendered here --></ul></section>"
        }
      ]
    },
    {
      "description": "A single post displayed on a webpage. The post consists of a text description, an image, and a list of comments. The text description is displayed above the image, and the comments are listed below the image.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostHeader/><PostImage/><CommentList><Comment/><!-- additional Comment components... --></CommentList></div>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "a standalone component that displays the post's text description.",
          "html": "<h2 class=\"text-lg font-bold\">{post_text}</h2>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "a standalone component that displays the post's image.",
          "html": "<img src={image_url} alt=\"Post image\" class=\"w-full mb-4\"/>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "a component that takes children (Comment components).",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "Comment",
          "is_standalone": true,
          "description": "a standalone component that displays a single comment.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><p class=\"text-sm\">{comment_text}</p><p class=\"text-xs text-gray-500\">{comment_username}</p></li>"
        }
      ]
    },
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A single post UI should display a header with a post title, a container for the post text, an image, and a section for comments. The UI should be responsive, with the image and comments section stacked on mobile and side-by-side on larger screens.",
      "html": "<article class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><PostHeader/><PostText/><PostImage/><CommentSection><!-- comment list will be rendered here --></CommentSection></article>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the post title",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold\">{postTitle}</h1></header>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "(standalone) - Displays the post text",
          "html": "<p class=\"text-lg\">{postText}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "(standalone) - Displays the post image",
          "html": "<img src={imageUrl} alt={imageAlt} class=\"w-full mb-4\"/>"
        },
        {
          "name": "CommentSection",
          "is_standalone": false,
          "description": "(takes children) - Displays a list of comments",
          "html": "<section class=\"mb-4\"><h2 class=\"text-2xl font-bold\">Comments</h2><ul class=\"list-none mb-4\">{children} <!-- comment list will be rendered here --></ul></section>"
        }
      ]
    },
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A single post UI should display a header with a post title, a container for the post text, an image, and a section for comments. The UI should be responsive, with the image and comments section stacked on mobile and side-by-side on larger screens.",
      "html": "<article class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><PostHeader/><PostText/><PostImage/><CommentSection><!-- comment list will be rendered here --></CommentSection></article>",
      "components": [
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "(standalone) - Displays the post title",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold\">{postTitle}</h1></header>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "(standalone) - Displays the post text",
          "html": "<p class=\"text-lg\">{postText}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "(standalone) - Displays the post image",
          "html": "<img src={imageUrl} alt={imageAlt} class=\"w-full mb-4\"/>"
        },
        {
          "name": "CommentSection",
          "is_standalone": false,
          "description": "(takes children) - Displays a list of comments",
          "html": "<section class=\"mb-4\"><h2 class=\"text-2xl font-bold\">Comments</h2><ul class=\"list-none mb-4\">{children} <!-- comment list will be rendered here --></ul></section>"
        }
      ]
    },
    {
      "description": "The UI should display a single post with a text, an image, and comments below. The post text should be in a readable font size, and the image should be responsive. The comments section should be divided into individual comment blocks with the commentator's name and comment text.",
      "html": "<!-- Post Container --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><PostContent/><CommentsSection><!-- Comment blocks will be inserted here --></CommentsSection></div>",
      "components": [
        {
          "name": "PostContent",
          "is_standalone": true,
          "description": "A standalone component that renders the post text and image.",
          "html": "<!-- Post Content Container --><div class=\"mb-4\"><p class=\"text-lg\">{post_text}</p><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-auto mb-4\"/></div>"
        },
        {
          "name": "CommentsSection",
          "is_standalone": false,
          "description": "A component that takes children (`CommentBlock` components) and renders them.",
          "html": "<!-- Comments Section Container --><div class=\"mt-4\">{children}</div>"
        }
      ]
    }
  ],
  "Hero Section with Text": [
    {
      "description": "The UI should be a hero section with a background image and a section of text overlay on top of it. The background image should be full-width and take up the entire screen height on desktop. On mobile, the image should be smaller and the text should be more prominent.",
      "html": "<section class=\"h-screen w-full relative\"><HeroSection/><HeroText><!-- hero text content goes here --></HeroText></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone) - the main hero section component",
          "html": "<div class=\"h-screen w-full absolute top-0 left-0 bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}/>"
        },
        {
          "name": "HeroText",
          "is_standalone": false,
          "description": "(takes children) - the text overlay component",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-lg md:text-3xl text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a background image and a section of text overlay on top of it. The background image should be full-width and take up the entire screen height on desktop. On mobile, the image should be smaller and the text should be more prominent.",
      "html": "<section class=\"h-screen w-full relative\"><HeroSection/><HeroText><!-- hero text content goes here --></HeroText></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone) - the main hero section component",
          "html": "<div class=\"h-screen w-full absolute top-0 left-0 bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}/>"
        },
        {
          "name": "HeroText",
          "is_standalone": false,
          "description": "(takes children) - the text overlay component",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-lg md:text-3xl text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a background image and a section of text overlay on top of it. The background image should be full-width and take up the entire screen height on desktop. On mobile, the image should be smaller and the text should be more prominent.",
      "html": "<section class=\"h-screen w-full relative\"><HeroSection/><HeroText><!-- hero text content goes here --></HeroText></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone) - the main hero section component",
          "html": "<div class=\"h-screen w-full absolute top-0 left-0 bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}/>"
        },
        {
          "name": "HeroText",
          "is_standalone": false,
          "description": "(takes children) - the text overlay component",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-lg md:text-3xl text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a background image and a section of text overlay on top of it. The background image should be full-width and take up the entire screen height on desktop. On mobile, the image should be smaller and the text should be more prominent.",
      "html": "<section class=\"h-screen w-full relative\"><HeroSection/><HeroText><!-- hero text content goes here --></HeroText></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone) - the main hero section component",
          "html": "<div class=\"h-screen w-full absolute top-0 left-0 bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}/>"
        },
        {
          "name": "HeroText",
          "is_standalone": false,
          "description": "(takes children) - the text overlay component",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-lg md:text-3xl text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a background image and a section of text overlay on top of it. The background image should be full-width and take up the entire screen height on desktop. On mobile, the image should be smaller and the text should be more prominent.",
      "html": "<section class=\"h-screen w-full relative\"><HeroSection/><HeroText><!-- hero text content goes here --></HeroText></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone) - the main hero section component",
          "html": "<div class=\"h-screen w-full absolute top-0 left-0 bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}/>"
        },
        {
          "name": "HeroText",
          "is_standalone": false,
          "description": "(takes children) - the text overlay component",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-lg md:text-3xl text-white\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a hero section with a background image and a section of text overlay on top of it. The background image should be full-width and take up the entire screen height on desktop. On mobile, the image should be smaller and the text should be more prominent.",
      "html": "<section class=\"h-screen w-full relative\"><HeroSection/><HeroText><!-- hero text content goes here --></HeroText></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone) - the main hero section component",
          "html": "<div class=\"h-screen w-full absolute top-0 left-0 bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}/>"
        },
        {
          "name": "HeroText",
          "is_standalone": false,
          "description": "(takes children) - the text overlay component",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 text-lg md:text-3xl text-white\">{children}</div>"
        }
      ]
    }
  ],
  "Alert Close Button Style": [
    {
      "description": "The UI should be a small, clickable button that allows users to close an alert message. The button should be a small \"X\" or \"Close\" text, and should be styled to stand out from the rest of the alert message.",
      "html": "<div class=\"alert-message\"><!-- alert message content goes here --><AlertCloseButton/></div>",
      "components": [
        {
          "name": "AlertCloseButton",
          "is_standalone": true,
          "description": "a standalone component that renders a small clickable button to close an alert message.",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\"><span aria-label=\"Close\" class=\"sr-only\">{close_button_text}</span><span aria-hidden=\"true\">×{/* or \"Close\" text */}</span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a small, clickable button that allows users to close an alert message. The button should be a small \"X\" or \"Close\" text, and should be styled to stand out from the rest of the alert message.",
      "html": "<div class=\"alert-message\"><!-- alert message content goes here --><AlertCloseButton/></div>",
      "components": [
        {
          "name": "AlertCloseButton",
          "is_standalone": true,
          "description": "a standalone component that renders a small clickable button to close an alert message.",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\"><span aria-label=\"Close\" class=\"sr-only\">{close_button_text}</span><span aria-hidden=\"true\">×{/* or \"Close\" text */}</span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a small, clickable button that allows users to close an alert message. The button should be a small \"X\" or \"Close\" text, and should be styled to stand out from the rest of the alert message.",
      "html": "<div class=\"alert-message\"><!-- alert message content goes here --><AlertCloseButton/></div>",
      "components": [
        {
          "name": "AlertCloseButton",
          "is_standalone": true,
          "description": "a standalone component that renders a small clickable button to close an alert message.",
          "html": "<button class=\"text-gray-600 hover:text-gray-900 transition duration-300 ease-in-out\"><span aria-label=\"Close\" class=\"sr-only\">{close_button_text}</span><span aria-hidden=\"true\">×{/* or \"Close\" text */}</span></button>"
        }
      ]
    }
  ],
  "Testimonial Slider: Showcase social proof from happy customers": [
    {
      "description": "The Testimonial Slider should display quotes from happy customers with their names and photos, enclosed in a container that can be navigated using previous and next buttons. The slider should be responsive, adapting to different screen sizes and devices.",
      "html": "<div class=\"container mx-auto p-4 lg:p-8\"><TestimonialSlider><TestimonialItem/><TestimonialItem/><!-- Add more TestimonialItem components as needed --></TestimonialSlider><SliderNavigation/></div>",
      "components": [
        {
          "name": "TestimonialSlider",
          "is_standalone": false,
          "description": "A container component that wraps the entire slider, including navigation buttons and testimonial items. (Takes children: TestimonialItem)",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><div class=\"flex-1\">{children}</div><SliderNavigation/></div>"
        },
        {
          "name": "TestimonialItem",
          "is_standalone": true,
          "description": "A single testimonial item that displays a customer's quote, name, and photo. (Standalone)",
          "html": "<div class=\"flex flex-col mb-4\"><img src=\"{photo_url}\" alt=\"{customer_name}\" class=\"rounded-full w-16 h-16 mb-2\"/><p class=\"text-lg\">{quote}</p><p class=\"text-sm\">{customer_name}</p></div>"
        },
        {
          "name": "SliderNavigation",
          "is_standalone": true,
          "description": "A component that contains previous and next buttons for navigating the slider. (Standalone)",
          "html": "<div class=\"flex justify-between mb-4\"><button class=\"bg-gray-200 hover:bg-gray-300 py-2 px-4 rounded\">Previous</button><button class=\"bg-gray-200 hover:bg-gray-300 py-2 px-4 rounded\">Next</button></div>"
        }
      ]
    }
  ],
  "Product Price Discount": [
    {
      "description": "The UI should display the original price of a product, a discounted price, and a discount percentage. The discounted price should be prominent, and the original price should be struck through. The discount percentage should be displayed clearly.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceDiscountContainer/></div>",
      "components": [
        {
          "name": "ProductPriceDiscountContainer",
          "is_standalone": true,
          "description": "(standalone): A container component that holds the product price discount information.",
          "html": "<div class=\"flex items-center\"><OriginalPrice/>{' '}<s>{original_price}</s><DiscountPrice/>{discount_price} <DiscountPercentage/>({discount_percentage}% off)</div>"
        },
        {
          "name": "OriginalPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the original price of the product.",
          "html": "<span class=\"text-gray-500 text-sm\">{original_price}</span>"
        },
        {
          "name": "DiscountPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discounted price of the product.",
          "html": "<span class=\"text-lg font-bold text-red-600\">{discount_price}</span>"
        },
        {
          "name": "DiscountPercentage",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discount percentage.",
          "html": "<span class=\"text-sm text-gray-600\">{discount_percentage}%</span>"
        }
      ]
    },
    {
      "description": "The UI should display the original price of a product, a discounted price, and a discount percentage. The discounted price should be prominent, and the original price should be struck through. The discount percentage should be displayed clearly.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceDiscountContainer/></div>",
      "components": [
        {
          "name": "ProductPriceDiscountContainer",
          "is_standalone": true,
          "description": "(standalone): A container component that holds the product price discount information.",
          "html": "<div class=\"flex items-center\"><OriginalPrice/>{' '}<s>{original_price}</s><DiscountPrice/>{discount_price} <DiscountPercentage/>({discount_percentage}% off)</div>"
        },
        {
          "name": "OriginalPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the original price of the product.",
          "html": "<span class=\"text-gray-500 text-sm\">{original_price}</span>"
        },
        {
          "name": "DiscountPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discounted price of the product.",
          "html": "<span class=\"text-lg font-bold text-red-600\">{discount_price}</span>"
        },
        {
          "name": "DiscountPercentage",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discount percentage.",
          "html": "<span class=\"text-sm text-gray-600\">{discount_percentage}%</span>"
        }
      ]
    },
    {
      "description": "The UI should display the original price of a product, a discounted price, and a discount percentage. The discounted price should be prominent, and the original price should be struck through. The discount percentage should be displayed clearly.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceDiscountContainer/></div>",
      "components": [
        {
          "name": "ProductPriceDiscountContainer",
          "is_standalone": true,
          "description": "(standalone): A container component that holds the product price discount information.",
          "html": "<div class=\"flex items-center\"><OriginalPrice/>{' '}<s>{original_price}</s><DiscountPrice/>{discount_price} <DiscountPercentage/>({discount_percentage}% off)</div>"
        },
        {
          "name": "OriginalPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the original price of the product.",
          "html": "<span class=\"text-gray-500 text-sm\">{original_price}</span>"
        },
        {
          "name": "DiscountPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discounted price of the product.",
          "html": "<span class=\"text-lg font-bold text-red-600\">{discount_price}</span>"
        },
        {
          "name": "DiscountPercentage",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discount percentage.",
          "html": "<span class=\"text-sm text-gray-600\">{discount_percentage}%</span>"
        }
      ]
    },
    {
      "description": "The UI should display the original price of a product, a discounted price, and a discount percentage. The discounted price should be prominent, and the original price should be struck through. The discount percentage should be displayed clearly.",
      "html": "<div class=\"flex items-center mb-4\"><ProductPriceDiscountContainer/></div>",
      "components": [
        {
          "name": "ProductPriceDiscountContainer",
          "is_standalone": true,
          "description": "(standalone): A container component that holds the product price discount information.",
          "html": "<div class=\"flex items-center\"><OriginalPrice/>{' '}<s>{original_price}</s><DiscountPrice/>{discount_price} <DiscountPercentage/>({discount_percentage}% off)</div>"
        },
        {
          "name": "OriginalPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the original price of the product.",
          "html": "<span class=\"text-gray-500 text-sm\">{original_price}</span>"
        },
        {
          "name": "DiscountPrice",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discounted price of the product.",
          "html": "<span class=\"text-lg font-bold text-red-600\">{discount_price}</span>"
        },
        {
          "name": "DiscountPercentage",
          "is_standalone": true,
          "description": "(standalone): A component that displays the discount percentage.",
          "html": "<span class=\"text-sm text-gray-600\">{discount_percentage}%</span>"
        }
      ]
    }
  ],
  "Tags and Categories": [
    {
      "description": "The UI should be a responsive, mobile-first layout that displays a list of tags and categories. The tags and categories should be displayed as clickable links, with the number of associated items displayed in parentheses.",
      "html": "<div class=\"container mx-auto p-4\"><h2>Tags</h2><TagList><TagLink/><TagLink/><!-- Add more TagLink components here --></TagList><h2>Categories</h2><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></div>",
      "components": [
        {
          "name": "TagLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single tag as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={tag_url}>{tag_name} ({tag_count})</a>"
        },
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single category as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={category_url}>{category_name} ({category_count})</a>"
        },
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of tags.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first layout that displays a list of tags and categories. The tags and categories should be displayed as clickable links, with the number of associated items displayed in parentheses.",
      "html": "<div class=\"container mx-auto p-4\"><h2>Tags</h2><TagList><TagLink/><TagLink/><!-- Add more TagLink components here --></TagList><h2>Categories</h2><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></div>",
      "components": [
        {
          "name": "TagLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single tag as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={tag_url}>{tag_name} ({tag_count})</a>"
        },
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single category as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={category_url}>{category_name} ({category_count})</a>"
        },
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of tags.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of tags and categories with a header and a horizontal divider separating the two. Each tag and category should be displayed as a badge with a background color and text.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TagsAndCategoriesHeader/><TagsAndCategoriesDivider/><TagsAndCategoriesList><!-- tags --><TagBadge>{tag_name}</TagBadge><TagBadge>{tag_name}</TagBadge><!-- ... --></TagsAndCategoriesList><TagsAndCategoriesDivider/><TagsAndCategoriesList><!-- categories --><TagBadge>{category_name}</TagBadge><TagBadge>{category_name}</TagBadge><!-- ... --></TagsAndCategoriesList></div>",
      "components": [
        {
          "name": "TagsAndCategoriesHeader",
          "is_standalone": true,
          "description": "standalone, displays the header text",
          "html": "<h2 class=\"text-lg font-bold mb-2\">Tags and Categories</h2>"
        },
        {
          "name": "TagsAndCategoriesDivider",
          "is_standalone": true,
          "description": "standalone, displays a horizontal divider",
          "html": "<hr class=\"border-b border-gray-200\"/>"
        },
        {
          "name": "TagBadge",
          "is_standalone": false,
          "description": "takes children, displays a single tag or category as a badge",
          "html": "<span class=\"bg-gray-200 text-gray-800 px-2 py-1 rounded\">{children}</span>"
        },
        {
          "name": "TagsAndCategoriesList",
          "is_standalone": false,
          "description": "takes children, displays a list of tags or categories",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first layout that displays a list of tags and categories. The tags and categories should be displayed as clickable links, with the number of associated items displayed in parentheses.",
      "html": "<div class=\"container mx-auto p-4\"><h2>Tags</h2><TagList><TagLink/><TagLink/><!-- Add more TagLink components here --></TagList><h2>Categories</h2><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></div>",
      "components": [
        {
          "name": "TagLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single tag as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={tag_url}>{tag_name} ({tag_count})</a>"
        },
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single category as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={category_url}>{category_name} ({category_count})</a>"
        },
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of tags.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first layout that displays a list of tags and categories. The tags and categories should be displayed as clickable links, with the number of associated items displayed in parentheses.",
      "html": "<div class=\"container mx-auto p-4\"><h2>Tags</h2><TagList><TagLink/><TagLink/><!-- Add more TagLink components here --></TagList><h2>Categories</h2><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></div>",
      "components": [
        {
          "name": "TagLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single tag as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={tag_url}>{tag_name} ({tag_count})</a>"
        },
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single category as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={category_url}>{category_name} ({category_count})</a>"
        },
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of tags.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first layout that displays a list of tags and categories. The tags and categories should be displayed as clickable links, with the number of associated items displayed in parentheses.",
      "html": "<div class=\"container mx-auto p-4\"><h2>Tags</h2><TagList><TagLink/><TagLink/><!-- Add more TagLink components here --></TagList><h2>Categories</h2><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></div>",
      "components": [
        {
          "name": "TagLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single tag as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={tag_url}>{tag_name} ({tag_count})</a>"
        },
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single category as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={category_url}>{category_name} ({category_count})</a>"
        },
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of tags.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first layout that displays a list of tags and categories. The tags and categories should be displayed as clickable links, with the number of associated items displayed in parentheses.",
      "html": "<div class=\"container mx-auto p-4\"><h2>Tags</h2><TagList><TagLink/><TagLink/><!-- Add more TagLink components here --></TagList><h2>Categories</h2><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></div>",
      "components": [
        {
          "name": "TagLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single tag as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={tag_url}>{tag_name} ({tag_count})</a>"
        },
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component that displays a single category as a clickable link.",
          "html": "<a class=\"text-blue-600 hover:text-blue-900 transition duration-300 ease-in-out\" href={category_url}>{category_name} ({category_count})</a>"
        },
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of tags.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of tags and categories in a responsive, mobile-first design. The list should be accessible and SEO-friendly.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Tags and Categories</h1><section class=\"mb-6\"><h2 class=\"text-lg font-bold mb-2\">Tags</h2><TagList><!-- Tags will be rendered here --></TagList></section><section class=\"mb-6\"><h2 class=\"text-lg font-bold mb-2\">Categories</h2><CategoryList><!-- Categories will be rendered here --></CategoryList></section></main>",
      "components": [
        {
          "name": "TagList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of tags.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of categories.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Featured Image Grid": [
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive image grid that showcases featured images. The grid should be mobile-first, with images stacked on top of each other on small screens and arranged in a grid on larger screens. Each image should have a subtle shadow and rounded corners.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><ImageGrid><ImageCard/><ImageCard/><ImageCard/><!-- Add more ImageCard components as needed --></ImageGrid></div>",
      "components": [
        {
          "name": "ImageGrid",
          "is_standalone": false,
          "description": "A container component that takes children. Represents the entire image grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": true,
          "description": "A standalone component that represents an individual image card.",
          "html": "<div class=\"bg-white rounded-md shadow-md\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><h2 class=\"text-lg font-bold\">{image_title}</h2><p class=\"text-gray-600\">{image_description}</p></div></div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive image grid that showcases featured images. The grid should be mobile-first, with images stacked on top of each other on small screens and arranged in a grid on larger screens. Each image should have a subtle shadow and rounded corners.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><ImageGrid><ImageCard/><ImageCard/><ImageCard/><!-- Add more ImageCard components as needed --></ImageGrid></div>",
      "components": [
        {
          "name": "ImageGrid",
          "is_standalone": false,
          "description": "A container component that takes children. Represents the entire image grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": true,
          "description": "A standalone component that represents an individual image card.",
          "html": "<div class=\"bg-white rounded-md shadow-md\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><h2 class=\"text-lg font-bold\">{image_title}</h2><p class=\"text-gray-600\">{image_description}</p></div></div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive image grid that showcases featured images. The grid should be mobile-first, with images stacked on top of each other on small screens and arranged in a grid on larger screens. Each image should have a subtle shadow and rounded corners.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><ImageGrid><ImageCard/><ImageCard/><ImageCard/><!-- Add more ImageCard components as needed --></ImageGrid></div>",
      "components": [
        {
          "name": "ImageGrid",
          "is_standalone": false,
          "description": "A container component that takes children. Represents the entire image grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": true,
          "description": "A standalone component that represents an individual image card.",
          "html": "<div class=\"bg-white rounded-md shadow-md\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><h2 class=\"text-lg font-bold\">{image_title}</h2><p class=\"text-gray-600\">{image_description}</p></div></div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive image grid that showcases featured images. The grid should be mobile-first, with images stacked on top of each other on small screens and arranged in a grid on larger screens. Each image should have a subtle shadow and rounded corners.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><ImageGrid><ImageCard/><ImageCard/><ImageCard/><!-- Add more ImageCard components as needed --></ImageGrid></div>",
      "components": [
        {
          "name": "ImageGrid",
          "is_standalone": false,
          "description": "A container component that takes children. Represents the entire image grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": true,
          "description": "A standalone component that represents an individual image card.",
          "html": "<div class=\"bg-white rounded-md shadow-md\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><h2 class=\"text-lg font-bold\">{image_title}</h2><p class=\"text-gray-600\">{image_description}</p></div></div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible image grid that showcases featured images in a 2x2 layout on larger screens and stacks vertically on smaller screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><FeaturedImageGrid/></div>",
      "components": [
        {
          "name": "FeaturedImageGrid",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6\"><ImageCard><img src={image1_url} alt={image1_alt}/>{image1_caption}</ImageCard><ImageCard><img src={image2_url} alt={image2_alt}/>{image2_caption}</ImageCard><ImageCard><img src={image3_url} alt={image3_alt}/>{image3_caption}</ImageCard><ImageCard><img src={image4_url} alt={image4_alt}/>{image4_caption}</ImageCard></div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"bg-white shadow-md rounded p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive image grid that showcases featured images. The grid should be mobile-first, with images stacked on top of each other on small screens and arranged in a grid on larger screens. Each image should have a subtle shadow and rounded corners.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><ImageGrid><ImageCard/><ImageCard/><ImageCard/><!-- Add more ImageCard components as needed --></ImageGrid></div>",
      "components": [
        {
          "name": "ImageGrid",
          "is_standalone": false,
          "description": "A container component that takes children. Represents the entire image grid.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        },
        {
          "name": "ImageCard",
          "is_standalone": true,
          "description": "A standalone component that represents an individual image card.",
          "html": "<div class=\"bg-white rounded-md shadow-md\"><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><h2 class=\"text-lg font-bold\">{image_title}</h2><p class=\"text-gray-600\">{image_description}</p></div></div>"
        }
      ]
    }
  ],
  "Navigation Dropdown Icon": [
    {
      "description": "The UI should be a navigation dropdown icon that expands when clicked, displaying a list of navigation links. The icon should be a responsive, mobile-first, accessible, and SEO-friendly dropdown menu.",
      "html": "<nav><DropdownToggle/><DropdownMenu><ul><li><DropdownLink/></li><li><DropdownLink/></li><!-- more links here --></ul></DropdownMenu></nav>",
      "components": [
        {
          "name": "DropdownToggle",
          "is_standalone": true,
          "description": "(standalone) - the clickable icon that expands the dropdown menu",
          "html": "<button class=\"w-8 h-8 flex justify-center items-center bg-gray-200 hover:bg-gray-300 rounded-full\"><!-- icon here, e.g. <span>▼</span>-->{toggle_icon}</button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children) - the container for the navigation links",
          "html": "<div class=\"absolute bg-white py-2 rounded-md shadow-md\">{children}</div>"
        },
        {
          "name": "DropdownLink",
          "is_standalone": true,
          "description": "(standalone) - an individual navigation link within the dropdown menu",
          "html": "<a href={link_href} class=\"block px-4 py-2 text-gray-600 hover:text-gray-900\">{link_text}</a>"
        }
      ]
    },
    {
      "description": "The UI should be a navigation dropdown icon that expands when clicked, displaying a list of navigation links. The icon should be a responsive, mobile-first, accessible, and SEO-friendly dropdown menu.",
      "html": "<nav><DropdownToggle/><DropdownMenu><ul><li><DropdownLink/></li><li><DropdownLink/></li><!-- more links here --></ul></DropdownMenu></nav>",
      "components": [
        {
          "name": "DropdownToggle",
          "is_standalone": true,
          "description": "(standalone) - the clickable icon that expands the dropdown menu",
          "html": "<button class=\"w-8 h-8 flex justify-center items-center bg-gray-200 hover:bg-gray-300 rounded-full\"><!-- icon here, e.g. <span>▼</span>-->{toggle_icon}</button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children) - the container for the navigation links",
          "html": "<div class=\"absolute bg-white py-2 rounded-md shadow-md\">{children}</div>"
        },
        {
          "name": "DropdownLink",
          "is_standalone": true,
          "description": "(standalone) - an individual navigation link within the dropdown menu",
          "html": "<a href={link_href} class=\"block px-4 py-2 text-gray-600 hover:text-gray-900\">{link_text}</a>"
        }
      ]
    },
    {
      "description": "The UI should be a navigation dropdown icon that expands when clicked, displaying a list of navigation links. The icon should be a responsive, mobile-first, accessible, and SEO-friendly dropdown menu.",
      "html": "<nav><DropdownToggle/><DropdownMenu><ul><li><DropdownLink/></li><li><DropdownLink/></li><!-- more links here --></ul></DropdownMenu></nav>",
      "components": [
        {
          "name": "DropdownToggle",
          "is_standalone": true,
          "description": "(standalone) - the clickable icon that expands the dropdown menu",
          "html": "<button class=\"w-8 h-8 flex justify-center items-center bg-gray-200 hover:bg-gray-300 rounded-full\"><!-- icon here, e.g. <span>▼</span>-->{toggle_icon}</button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children) - the container for the navigation links",
          "html": "<div class=\"absolute bg-white py-2 rounded-md shadow-md\">{children}</div>"
        },
        {
          "name": "DropdownLink",
          "is_standalone": true,
          "description": "(standalone) - an individual navigation link within the dropdown menu",
          "html": "<a href={link_href} class=\"block px-4 py-2 text-gray-600 hover:text-gray-900\">{link_text}</a>"
        }
      ]
    }
  ],
  "Hashtag display for topic tracking": [
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A hashtag display component that shows a list of trending topics, each represented by a clickable hashtag with the topic name and the number of posts associated with it. The component should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><HashtagList/></div>",
      "components": [
        {
          "name": "HashtagItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single hashtag with its topic name and post count.",
          "html": "<a href=\"#\" class=\"inline-block mr-4 mb-2\"><span class=\"text-gray-600 text-sm\">{topic_name}</span><span class=\"bg-gray-200 px-2 py-1 text-gray-600 text-xs rounded\">{post_count} posts</span></a>"
        },
        {
          "name": "HashtagList",
          "is_standalone": false,
          "description": "(takes children): A container that renders a list of **HashtagItem** components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Profile Picture and Header Image": [
    {
      "description": "The UI should have a profile picture and a header image that takes up the full width of the screen. On mobile, the profile picture should be circular and centered, with the header image below it. On larger screens, the profile picture should be circular and aligned to the left, with the header image taking up the rest of the width.",
      "html": "<div class=\"flex flex-col md:flex-row\"><UserProfilePicture/><HeaderImage/></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone): A circular profile picture.",
          "html": "<img class=\"w-32 h-32 rounded-full mx-auto md:mx-0 md:mr-4\" src={profile_picture_url} alt={profile_picture_alt_text}/>"
        },
        {
          "name": "HeaderImage",
          "is_standalone": true,
          "description": "(standalone): A header image that takes up the full width of the screen.",
          "html": "<img class=\"w-full h-64 object-cover\" src={header_image_url} alt={header_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should have a profile picture and a header image that takes up the full width of the screen. On mobile, the profile picture should be circular and centered, with the header image below it. On larger screens, the profile picture should be circular and aligned to the left, with the header image taking up the rest of the width.",
      "html": "<div class=\"flex flex-col md:flex-row\"><UserProfilePicture/><HeaderImage/></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone): A circular profile picture.",
          "html": "<img class=\"w-32 h-32 rounded-full mx-auto md:mx-0 md:mr-4\" src={profile_picture_url} alt={profile_picture_alt_text}/>"
        },
        {
          "name": "HeaderImage",
          "is_standalone": true,
          "description": "(standalone): A header image that takes up the full width of the screen.",
          "html": "<img class=\"w-full h-64 object-cover\" src={header_image_url} alt={header_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should display a profile picture and a header image, responsive and accessible on various devices.",
      "html": "<UserProfileHeader><ProfilePictureComponent/><HeaderImageComponent/></UserProfileHeader>",
      "components": [
        {
          "name": "ProfilePictureComponent",
          "is_standalone": true,
          "description": "Standalone, displays a profile picture.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-24 h-24 rounded-full object-cover\"/>"
        },
        {
          "name": "HeaderImageComponent",
          "is_standalone": true,
          "description": "Standalone, displays a header image.",
          "html": "<img src={header_image_url} alt=\"Header Image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "UserProfileHeader",
          "is_standalone": false,
          "description": "Takes children, contains the profile picture and header image.",
          "html": "<header class=\"flex flex-col items-center py-4\">{children}</header>"
        }
      ]
    },
    {
      "description": "A profile page with a profile picture and a header image.",
      "html": "<div class=\"flex flex-col w-full h-screen\"><UserProfileHeader><h1>{username}</h1><p>{bio}</p></UserProfileHeader><UserProfilePicture/><!-- rest of the profile page content --></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component, displays a circular image.",
          "html": "<img src={profile_picture_url} alt=\"Profile Picture\" class=\"w-48 h-48 rounded-full\"/>"
        },
        {
          "name": "UserProfileHeader",
          "is_standalone": false,
          "description": "Takes children, displays a header image with overlaid text.",
          "html": "<div class=\"h-64 bg-cover bg-center\" style={{ backgroundImage: `url(${header_image_url})` }}><div class=\"flex flex-col items-center justify-center h-full\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should have a profile picture and a header image that takes up the full width of the screen. On mobile, the profile picture should be circular and centered, with the header image below it. On larger screens, the profile picture should be circular and aligned to the left, with the header image taking up the rest of the width.",
      "html": "<div class=\"flex flex-col md:flex-row\"><UserProfilePicture/><HeaderImage/></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone): A circular profile picture.",
          "html": "<img class=\"w-32 h-32 rounded-full mx-auto md:mx-0 md:mr-4\" src={profile_picture_url} alt={profile_picture_alt_text}/>"
        },
        {
          "name": "HeaderImage",
          "is_standalone": true,
          "description": "(standalone): A header image that takes up the full width of the screen.",
          "html": "<img class=\"w-full h-64 object-cover\" src={header_image_url} alt={header_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should have a profile picture and a header image that takes up the full width of the screen. On mobile, the profile picture should be circular and centered, with the header image below it. On larger screens, the profile picture should be circular and aligned to the left, with the header image taking up the rest of the width.",
      "html": "<div class=\"flex flex-col md:flex-row\"><UserProfilePicture/><HeaderImage/></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone): A circular profile picture.",
          "html": "<img class=\"w-32 h-32 rounded-full mx-auto md:mx-0 md:mr-4\" src={profile_picture_url} alt={profile_picture_alt_text}/>"
        },
        {
          "name": "HeaderImage",
          "is_standalone": true,
          "description": "(standalone): A header image that takes up the full width of the screen.",
          "html": "<img class=\"w-full h-64 object-cover\" src={header_image_url} alt={header_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should have a profile picture and a header image that takes up the full width of the screen. On mobile, the profile picture should be circular and centered, with the header image below it. On larger screens, the profile picture should be circular and aligned to the left, with the header image taking up the rest of the width.",
      "html": "<div class=\"flex flex-col md:flex-row\"><UserProfilePicture/><HeaderImage/></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone): A circular profile picture.",
          "html": "<img class=\"w-32 h-32 rounded-full mx-auto md:mx-0 md:mr-4\" src={profile_picture_url} alt={profile_picture_alt_text}/>"
        },
        {
          "name": "HeaderImage",
          "is_standalone": true,
          "description": "(standalone): A header image that takes up the full width of the screen.",
          "html": "<img class=\"w-full h-64 object-cover\" src={header_image_url} alt={header_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should have a profile picture and a header image that takes up the full width of the screen. On mobile, the profile picture should be circular and centered, with the header image below it. On larger screens, the profile picture should be circular and aligned to the left, with the header image taking up the rest of the width.",
      "html": "<div class=\"flex flex-col md:flex-row\"><UserProfilePicture/><HeaderImage/></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone): A circular profile picture.",
          "html": "<img class=\"w-32 h-32 rounded-full mx-auto md:mx-0 md:mr-4\" src={profile_picture_url} alt={profile_picture_alt_text}/>"
        },
        {
          "name": "HeaderImage",
          "is_standalone": true,
          "description": "(standalone): A header image that takes up the full width of the screen.",
          "html": "<img class=\"w-full h-64 object-cover\" src={header_image_url} alt={header_image_alt_text}/>"
        }
      ]
    }
  ],
  "Responsive Image Breakpoints": [
    {
      "description": "The UI should display a responsive image that adapts to different screen sizes and breakpoints.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><ResponsiveImage/></div>",
      "components": [
        {
          "name": "ResponsiveImage",
          "is_standalone": true,
          "description": "(standalone component)",
          "html": "<img src=\"{image_url}\" class=\"w-full h-auto rounded-lg mx-auto md:w-3/4 md:h-64 lg:w-1/2 lg:h-80 xl:w-1/3 xl:h-96\" alt=\"{image_alt_text}\"/>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive image that adapts to different screen sizes and breakpoints.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><ResponsiveImage/></div>",
      "components": [
        {
          "name": "ResponsiveImage",
          "is_standalone": true,
          "description": "(standalone component)",
          "html": "<img src=\"{image_url}\" class=\"w-full h-auto rounded-lg mx-auto md:w-3/4 md:h-64 lg:w-1/2 lg:h-80 xl:w-1/3 xl:h-96\" alt=\"{image_alt_text}\"/>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive image that adapts to different screen sizes and breakpoints.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><ResponsiveImage/></div>",
      "components": [
        {
          "name": "ResponsiveImage",
          "is_standalone": true,
          "description": "(standalone component)",
          "html": "<img src=\"{image_url}\" class=\"w-full h-auto rounded-lg mx-auto md:w-3/4 md:h-64 lg:w-1/2 lg:h-80 xl:w-1/3 xl:h-96\" alt=\"{image_alt_text}\"/>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive image that adapts to different screen sizes and breakpoints.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><ResponsiveImage/></div>",
      "components": [
        {
          "name": "ResponsiveImage",
          "is_standalone": true,
          "description": "(standalone component)",
          "html": "<img src=\"{image_url}\" class=\"w-full h-auto rounded-lg mx-auto md:w-3/4 md:h-64 lg:w-1/2 lg:h-80 xl:w-1/3 xl:h-96\" alt=\"{image_alt_text}\"/>"
        }
      ]
    }
  ],
  "Comment Input: Input field for writing a new comment": [
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "A simple input field with a placeholder text \"Write a comment...\" and a submit button.",
      "html": "<div class=\"flex justify-center mb-4\"><CommentInput/><CommentSubmit/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "(standalone) - The input field component.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentSubmit",
          "is_standalone": true,
          "description": "(standalone) - The submit button component.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple input field with a placeholder text \"Write a comment...\" and a submit button \"Post\" next to it. The input field should be responsive and adaptive to different screen sizes.",
      "html": "<div class=\"flex flex-wrap gap-2\"><CommentInput/></div>",
      "components": [
        {
          "name": "CommentInput",
          "is_standalone": true,
          "description": "standalone component that contains an input field and a submit button.",
          "html": "<div class=\"flex items-center\"><CommentTextArea/><CommentButton/></div>"
        },
        {
          "name": "CommentTextArea",
          "is_standalone": true,
          "description": "standalone component that is the input field itself.",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Write a comment...\"/>"
        },
        {
          "name": "CommentButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post</button>"
        }
      ]
    }
  ],
  "Blog Post Category List": [
    {
      "description": "The UI should be a list of categories with a title, possibly with an icon, and a count of posts in each category. The list should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Categories</h2><ul class=\"flex flex-wrap justify-center mb-4\"><CategoryList><!-- category cards will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "a component that wraps the list of categories, and takes children (a list of `CategoryCard` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of categories with a title, possibly with an icon, and a count of posts in each category. The list should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Categories</h2><ul class=\"flex flex-wrap justify-center mb-4\"><CategoryList><!-- category cards will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "a component that wraps the list of categories, and takes children (a list of `CategoryCard` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of blog post categories, with each category displaying its name and the number of posts it contains. The list should be responsive, mobile-first, and easily accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Blog Post Categories</h2><BlogPostCategoryList><!-- list of categories will be rendered here --></BlogPostCategoryList></div>",
      "components": [
        {
          "name": "BlogPostCategoryList",
          "is_standalone": false,
          "description": "(takes children): Represents the list of blog post categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of categories with a title, possibly with an icon, and a count of posts in each category. The list should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Categories</h2><ul class=\"flex flex-wrap justify-center mb-4\"><CategoryList><!-- category cards will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "a component that wraps the list of categories, and takes children (a list of `CategoryCard` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of categories with a title, possibly with an icon, and a count of posts in each category. The list should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Categories</h2><ul class=\"flex flex-wrap justify-center mb-4\"><CategoryList><!-- category cards will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "a component that wraps the list of categories, and takes children (a list of `CategoryCard` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of categories with a title, possibly with an icon, and a count of posts in each category. The list should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Categories</h2><ul class=\"flex flex-wrap justify-center mb-4\"><CategoryList><!-- category cards will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "a component that wraps the list of categories, and takes children (a list of `CategoryCard` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of blog post categories, with each category displaying its name and the number of posts it contains. The list should be responsive, mobile-first, and easily accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Blog Post Categories</h2><BlogPostCategoryList><!-- list of categories will be rendered here --></BlogPostCategoryList></div>",
      "components": [
        {
          "name": "BlogPostCategoryList",
          "is_standalone": false,
          "description": "(takes children): Represents the list of blog post categories.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of blog post categories in a responsive and accessible manner. The categories should be displayed in a vertical list with each category displaying its name and the number of posts in that category.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-3xl font-bold mb-4\">Categories</h2><CategoryList/></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": true,
          "description": "a standalone component that displays a list of categories",
          "html": "<ul class=\"list-none mb-0\">{categories.map(category =>( <li key={category.id} class=\"mb-4\"><CategoryItem>{category.name} ({category.postCount})</CategoryItem></li>))}</ul>"
        },
        {
          "name": "CategoryItem",
          "is_standalone": false,
          "description": "a component that takes children (the category name and post count) to display a single category",
          "html": "<a href={categoryUrl} class=\"text-gray-900 hover:text-gray-600 transition duration-300\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of blog post categories, with each category displayed as a separate item in a vertical list. The list should be accessible, mobile-first, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Blog Categories</h2><CategoryList><!-- Category list items will be rendered here --><CategoryListItem/><CategoryListItem/><!-- ... --></CategoryList></div>",
      "components": [
        {
          "name": "CategoryListItem",
          "is_standalone": true,
          "description": "A standalone component representing a single category item in the list.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><a href=\"{category_url}\" class=\"text-gray-900 hover:text-gray-600 transition duration-300\"><span class=\"text-lg\">{category_name}</span><span class=\"text-sm text-gray-600\">{category_description}</span></a></li>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the list of category items.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of categories with a title, possibly with an icon, and a count of posts in each category. The list should be responsive, with a layout that adapts to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Categories</h2><ul class=\"flex flex-wrap justify-center mb-4\"><CategoryList><!-- category cards will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "a component that wraps the list of categories, and takes children (a list of `CategoryCard` components).",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Attachment upload button with file browser": [
    {
      "description": "The UI should have a clickable button with a label \"Upload File\" and a file browser input field that appears when the button is clicked.",
      "html": "<div class=\"flex justify-center mb-4\"><AttachmentUploadButton/></div>",
      "components": [
        {
          "name": "AttachmentUploadButton",
          "is_standalone": true,
          "description": "standalone component that contains a button with a label \"Upload File\" and a hidden file input field.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Upload File <FileInput/></button>"
        },
        {
          "name": "FileInput",
          "is_standalone": true,
          "description": "standalone component that represents the file input field.",
          "html": "<input type=\"file\" id=\"{fileInputId}\" class=\"sr-only\"/>"
        }
      ]
    },
    {
      "description": "The UI should have a clickable button with a label \"Upload File\" and a file browser input field that appears when the button is clicked.",
      "html": "<div class=\"flex justify-center mb-4\"><AttachmentUploadButton/></div>",
      "components": [
        {
          "name": "AttachmentUploadButton",
          "is_standalone": true,
          "description": "standalone component that contains a button with a label \"Upload File\" and a hidden file input field.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Upload File <FileInput/></button>"
        },
        {
          "name": "FileInput",
          "is_standalone": true,
          "description": "standalone component that represents the file input field.",
          "html": "<input type=\"file\" id=\"{fileInputId}\" class=\"sr-only\"/>"
        }
      ]
    },
    {
      "description": "A simple attachment upload button with a file browser dialog that opens when clicked.",
      "html": "<div class=\"flex justify-center mb-4\"><AttachmentUploadButton/><FileBrowserDialog><!-- file browser dialog content will be inserted here --></FileBrowserDialog></div>",
      "components": [
        {
          "name": "AttachmentUploadButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Attach File <input type=\"file\" class=\"hidden\" id=\"{input_id}\"/><label for=\"{input_id}\" class=\"cursor-pointer\">Browse</label></button>"
        },
        {
          "name": "FileBrowserDialog",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-gray-800 bg-opacity-50 flex justify-center\"><div class=\"bg-white p-4 rounded\"><h2 class=\"text-lg font-bold\">Select a file</h2>{children} </div></div>"
        }
      ]
    },
    {
      "description": "The UI should have a clickable button with a label \"Upload File\" and a file browser input field that appears when the button is clicked.",
      "html": "<div class=\"flex justify-center mb-4\"><AttachmentUploadButton/></div>",
      "components": [
        {
          "name": "AttachmentUploadButton",
          "is_standalone": true,
          "description": "standalone component that contains a button with a label \"Upload File\" and a hidden file input field.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Upload File <FileInput/></button>"
        },
        {
          "name": "FileInput",
          "is_standalone": true,
          "description": "standalone component that represents the file input field.",
          "html": "<input type=\"file\" id=\"{fileInputId}\" class=\"sr-only\"/>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive button that allows users to upload a file. The button should be styled with a background color, border, and hover effect. When clicked, it should open a file browser for the user to select a file.",
      "html": "<div class=\"flex justify-center\"><UploadButton/></div>",
      "components": [
        {
          "name": "UploadButton",
          "is_standalone": true,
          "description": "Standalone component that renders a button with a label and a file input.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><FileInputLabel/><input type=\"file\" class=\"hidden\"/></button>"
        },
        {
          "name": "FileInputLabel",
          "is_standalone": true,
          "description": "Standalone component that renders a label for the file input.",
          "html": "<span>Choose a file...</span>"
        }
      ]
    }
  ],
  "Designer/Studio Profiles": [
    {
      "description": "The UI should display a list of designer/studio profiles, each containing a profile picture, name, specialty, and a call-to-action (CTA) button. The design should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Designer Profiles</h1><DesignerProfileList><DesignerProfileCard/><DesignerProfileCard/><!-- Add more DesignerProfileCard components here --></DesignerProfileList></main>",
      "components": [
        {
          "name": "DesignerProfileCard",
          "is_standalone": true,
          "description": "(standalone): A single designer/studio profile card.",
          "html": "<article class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={profile_picture_url} alt={name} class=\"w-24 h-24 rounded-full mb-2\"/><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-gray-600\">{specialty}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Portfolio</button></article>"
        },
        {
          "name": "DesignerProfileList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of designer/studio profiles.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of designer/studio profiles, each containing a profile picture, name, specialty, and a call-to-action (CTA) button. The design should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Designer Profiles</h1><DesignerProfileList><DesignerProfileCard/><DesignerProfileCard/><!-- Add more DesignerProfileCard components here --></DesignerProfileList></main>",
      "components": [
        {
          "name": "DesignerProfileCard",
          "is_standalone": true,
          "description": "(standalone): A single designer/studio profile card.",
          "html": "<article class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={profile_picture_url} alt={name} class=\"w-24 h-24 rounded-full mb-2\"/><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-gray-600\">{specialty}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Portfolio</button></article>"
        },
        {
          "name": "DesignerProfileList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of designer/studio profiles.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a profile section for designers/studios, showcasing their information, projects, and skills. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><DesignerProfileHeader/><DesignerProfileSection><h2 class=\"text-lg font-bold mb-4\">Projects</h2><ul class=\"flex flex-wrap justify-center mb-4\"><ProjectCard/><ProjectCard/><!-- Add more ProjectCard components here --></ul><h2 class=\"text-lg font-bold mb-4\">Skills</h2><ul class=\"flex flex-wrap justify-center\"><SkillBadge/><SkillBadge/><!-- Add more SkillBadge components here --></ul></DesignerProfileSection></section>",
      "components": [
        {
          "name": "DesignerProfileHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the designer's/studio's name, profile picture, and tagline.",
          "html": "<header class=\"flex justify-center mb-4\"><img src=\"{profile_picture_url}\" alt=\"{designer_name}\" class=\"w-24 h-24 rounded-full\"/><div class=\"ml-4\"><h1 class=\"text-2xl font-bold\">{designer_name}</h1><p class=\"text-sm\">{tagline}</p></div></header>"
        },
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "A standalone component that displays a project's information, including title, description, and image.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><img src=\"{project_image_url}\" alt=\"{project_title}\" class=\"w-full h-48 object-cover rounded\"/><h3 class=\"text-lg font-bold\">{project_title}</h3><p class=\"text-sm\">{project_description}</p></li>"
        },
        {
          "name": "SkillBadge",
          "is_standalone": true,
          "description": "A standalone component that displays a skill with a title and icon.",
          "html": "<li class=\"mr-4 mb-4\"><span class=\"bg-orange-100 text-orange-800 py-1 px-2 rounded\">{skill_title}</span><!-- Add icon here --><i class=\"fas fa-{skill_icon}\"></i></li>"
        },
        {
          "name": "DesignerProfileSection",
          "is_standalone": false,
          "description": "A component that takes children to display the designer's/studio's projects and skills.",
          "html": "<!-- This component should render its children --><div class=\"px-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of designer/studio profiles, each containing a profile picture, name, specialty, and a call-to-action (CTA) button. The design should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Designer Profiles</h1><DesignerProfileList><DesignerProfileCard/><DesignerProfileCard/><!-- Add more DesignerProfileCard components here --></DesignerProfileList></main>",
      "components": [
        {
          "name": "DesignerProfileCard",
          "is_standalone": true,
          "description": "(standalone): A single designer/studio profile card.",
          "html": "<article class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={profile_picture_url} alt={name} class=\"w-24 h-24 rounded-full mb-2\"/><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-gray-600\">{specialty}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Portfolio</button></article>"
        },
        {
          "name": "DesignerProfileList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of designer/studio profiles.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of designer/studio profiles, each containing a profile picture, name, specialty, and a call-to-action (CTA) button. The design should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Designer Profiles</h1><DesignerProfileList><DesignerProfileCard/><DesignerProfileCard/><!-- Add more DesignerProfileCard components here --></DesignerProfileList></main>",
      "components": [
        {
          "name": "DesignerProfileCard",
          "is_standalone": true,
          "description": "(standalone): A single designer/studio profile card.",
          "html": "<article class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={profile_picture_url} alt={name} class=\"w-24 h-24 rounded-full mb-2\"/><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-gray-600\">{specialty}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Portfolio</button></article>"
        },
        {
          "name": "DesignerProfileList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of designer/studio profiles.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of designer/studio profiles, each containing a profile picture, name, specialty, and a call-to-action (CTA) button. The design should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h1 class=\"text-3xl font-bold mb-4\">Designer Profiles</h1><DesignerProfileList><DesignerProfileCard/><DesignerProfileCard/><!-- Add more DesignerProfileCard components here --></DesignerProfileList></main>",
      "components": [
        {
          "name": "DesignerProfileCard",
          "is_standalone": true,
          "description": "(standalone): A single designer/studio profile card.",
          "html": "<article class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={profile_picture_url} alt={name} class=\"w-24 h-24 rounded-full mb-2\"/><h2 class=\"text-lg font-bold\">{name}</h2><p class=\"text-gray-600\">{specialty}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Portfolio</button></article>"
        },
        {
          "name": "DesignerProfileList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of designer/studio profiles.",
          "html": "<ul class=\"flex flex-wrap -mx-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Header Search Button": [
    {
      "description": "A navigation header with a search button that is responsive, mobile-first, and accessible.",
      "html": "<header class=\"flex justify-between p-4\"><nav class=\"w-full md:w-1/2\"><Navbar/></nav><SearchButton/></header>",
      "components": [
        {
          "name": "Navbar",
          "is_standalone": true,
          "description": "(standalone) - the main navigation header",
          "html": "<nav class=\"flex justify-between\"><ul class=\"flex justify-between mb-0 list-none\"><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_1}</a></li><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_2}</a></li><!-- Add more list items as needed --></ul></nav>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone) - a button to trigger search functionality",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "A navigation header with a search button that is responsive, mobile-first, and accessible.",
      "html": "<header class=\"flex justify-between p-4\"><nav class=\"w-full md:w-1/2\"><Navbar/></nav><SearchButton/></header>",
      "components": [
        {
          "name": "Navbar",
          "is_standalone": true,
          "description": "(standalone) - the main navigation header",
          "html": "<nav class=\"flex justify-between\"><ul class=\"flex justify-between mb-0 list-none\"><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_1}</a></li><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_2}</a></li><!-- Add more list items as needed --></ul></nav>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone) - a button to trigger search functionality",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "A navigation header with a search button that is responsive, mobile-first, and accessible.",
      "html": "<header class=\"flex justify-between p-4\"><nav class=\"w-full md:w-1/2\"><Navbar/></nav><SearchButton/></header>",
      "components": [
        {
          "name": "Navbar",
          "is_standalone": true,
          "description": "(standalone) - the main navigation header",
          "html": "<nav class=\"flex justify-between\"><ul class=\"flex justify-between mb-0 list-none\"><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_1}</a></li><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_2}</a></li><!-- Add more list items as needed --></ul></nav>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone) - a button to trigger search functionality",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "A navigation header with a search button that is responsive, mobile-first, and accessible.",
      "html": "<header class=\"flex justify-between p-4\"><nav class=\"w-full md:w-1/2\"><Navbar/></nav><SearchButton/></header>",
      "components": [
        {
          "name": "Navbar",
          "is_standalone": true,
          "description": "(standalone) - the main navigation header",
          "html": "<nav class=\"flex justify-between\"><ul class=\"flex justify-between mb-0 list-none\"><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_1}</a></li><li class=\"mr-4\"><a href=\"#\" class=\"text-blue-600\">{nav_item_2}</a></li><!-- Add more list items as needed --></ul></nav>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone) - a button to trigger search functionality",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><span class=\"sr-only\">Search</span><i class=\"fas fa-search\" aria-hidden=\"true\"></i></button>"
        }
      ]
    }
  ],
  "Dropdown Menu Divider": [
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    },
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    },
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    },
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    },
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    },
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    },
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    },
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    },
    {
      "description": "A horizontal divider line within a dropdown menu, separating menu items into logical groups.",
      "html": "<div class=\"dropdown-menu\"><!-- Menu items above the divider --><DropdownMenuDivider/><!-- Menu items below the divider --></div>",
      "components": [
        {
          "name": "DropdownMenuDivider",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<hr class=\"mx-4 my-2 border-t border-gray-200\"/>"
        }
      ]
    }
  ],
  "Dropdown Menu Item": [
    {
      "description": "The UI should be a dropdown menu item that displays a label and an optional icon. When clicked, it should reveal a dropdown menu.",
      "html": "<nav class=\"flex flex-wrap justify-center\"><DropdownMenuItem><DropdownMenuIcon/><span>{menuItemLabel}</span></DropdownMenuItem></nav>",
      "components": [
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "Takes children. A single item in a dropdown menu.",
          "html": "<li class=\"dropdown-menu-item\">{children}</li>"
        },
        {
          "name": "DropdownMenuIcon",
          "is_standalone": true,
          "description": "Standalone. An icon displayed next to the label in a dropdown menu item.",
          "html": "<i class=\"fas {iconClass} mr-2\"></i>"
        }
      ]
    },
    {
      "description": "The UI should be a dropdown menu item that displays a label and an optional icon. When clicked, it should reveal a dropdown menu.",
      "html": "<nav class=\"flex flex-wrap justify-center\"><DropdownMenuItem><DropdownMenuIcon/><span>{menuItemLabel}</span></DropdownMenuItem></nav>",
      "components": [
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "Takes children. A single item in a dropdown menu.",
          "html": "<li class=\"dropdown-menu-item\">{children}</li>"
        },
        {
          "name": "DropdownMenuIcon",
          "is_standalone": true,
          "description": "Standalone. An icon displayed next to the label in a dropdown menu item.",
          "html": "<i class=\"fas {iconClass} mr-2\"></i>"
        }
      ]
    },
    {
      "description": "The UI should be a dropdown menu item that displays a label and an optional icon. When clicked, it should reveal a dropdown menu.",
      "html": "<nav class=\"flex flex-wrap justify-center\"><DropdownMenuItem><DropdownMenuIcon/><span>{menuItemLabel}</span></DropdownMenuItem></nav>",
      "components": [
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "Takes children. A single item in a dropdown menu.",
          "html": "<li class=\"dropdown-menu-item\">{children}</li>"
        },
        {
          "name": "DropdownMenuIcon",
          "is_standalone": true,
          "description": "Standalone. An icon displayed next to the label in a dropdown menu item.",
          "html": "<i class=\"fas {iconClass} mr-2\"></i>"
        }
      ]
    },
    {
      "description": "The UI should be a dropdown menu item that displays a label and an optional icon. When clicked, it should reveal a dropdown menu.",
      "html": "<nav class=\"flex flex-wrap justify-center\"><DropdownMenuItem><DropdownMenuIcon/><span>{menuItemLabel}</span></DropdownMenuItem></nav>",
      "components": [
        {
          "name": "DropdownMenuItem",
          "is_standalone": false,
          "description": "Takes children. A single item in a dropdown menu.",
          "html": "<li class=\"dropdown-menu-item\">{children}</li>"
        },
        {
          "name": "DropdownMenuIcon",
          "is_standalone": true,
          "description": "Standalone. An icon displayed next to the label in a dropdown menu item.",
          "html": "<i class=\"fas {iconClass} mr-2\"></i>"
        }
      ]
    }
  ],
  "Search Input Field": [
    {
      "description": "A simple search input field with a placeholder text and a submit button.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><SearchInput/><SearchButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders a search input field.",
          "html": "<input type=\"search\" class=\"w-full px-4 py-2 text-lg text-gray-700 placeholder-gray-600\" placeholder=\"Search...\" aria-label=\"Search input field\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Search</button>"
        }
      ]
    },
    {
      "description": "A simple search input field with a placeholder text and a submit button.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><SearchInput/><SearchButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders a search input field.",
          "html": "<input type=\"search\" class=\"w-full px-4 py-2 text-lg text-gray-700 placeholder-gray-600\" placeholder=\"Search...\" aria-label=\"Search input field\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Search</button>"
        }
      ]
    },
    {
      "description": "A simple search input field with a placeholder text and a submit button.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><SearchInput/><SearchButton/></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that renders a search input field.",
          "html": "<input type=\"search\" class=\"w-full px-4 py-2 text-lg text-gray-700 placeholder-gray-600\" placeholder=\"Search...\" aria-label=\"Search input field\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that renders a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Search</button>"
        }
      ]
    }
  ],
  "Secure payment information input": [
    {
      "description": "The UI should be a secure payment information input section with input fields for card number, expiration date, security code, and a button to submit the payment information.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><PaymentInfoForm><CardNumberInput/><ExpirationDateInput/><SecurityCodeInput/><SubmitButton/></PaymentInfoForm></div>",
      "components": [
        {
          "name": "CardNumberInput",
          "is_standalone": true,
          "description": "A standalone component for inputting the card number.",
          "html": "<div class=\"mb-4\"><label htmlFor=\"card-number\" class=\"block mb-2\">Card Number</label><input type=\"text\" id=\"card-number\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "ExpirationDateInput",
          "is_standalone": true,
          "description": "A standalone component for inputting the expiration date.",
          "html": "<div class=\"mb-4\"><label htmlFor=\"expiration-date\" class=\"block mb-2\">Expiration Date</label><input type=\"text\" id=\"expiration-date\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "SecurityCodeInput",
          "is_standalone": true,
          "description": "A standalone component for inputting the security code.",
          "html": "<div class=\"mb-4\"><label htmlFor=\"security-code\" class=\"block mb-2\">Security Code</label><input type=\"text\" id=\"security-code\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "A standalone component for submitting the payment information.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button>"
        },
        {
          "name": "PaymentInfoForm",
          "is_standalone": false,
          "description": "A component that takes children to wrap all the input fields and the submit button.",
          "html": "<form>{children}</form>"
        }
      ]
    },
    {
      "description": "The UI should be a secure payment information input form, responsive and accessible, with clear labels and placeholders, and enough space for the user to input their payment details.",
      "html": "<form class=\"max-w-md mx-auto p-4 mt-4 mb-4 bg-white rounded shadow-md\"><h2 class=\"text-xl font-bold mb-4\">Secure Payment Information</h2><PaymentForm><CardNumberInput/><ExpirationDateInput/><CvcInput/></PaymentForm><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button></form>",
      "components": [
        {
          "name": "CardNumberInput",
          "is_standalone": true,
          "description": "(standalone): a text input for the card number",
          "html": "<input class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" id=\"cardNumber\" placeholder=\"Card Number\" required/>"
        },
        {
          "name": "ExpirationDateInput",
          "is_standalone": true,
          "description": "(standalone): a text input for the expiration date",
          "html": "<input class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" id=\"expirationDate\" placeholder=\"MM/YY\" required/>"
        },
        {
          "name": "CvcInput",
          "is_standalone": true,
          "description": "(standalone): a text input for the CVC code",
          "html": "<input class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" id=\"cvc\" placeholder=\"CVC\" required/>"
        },
        {
          "name": "PaymentForm",
          "is_standalone": false,
          "description": "(takes children): a container for the payment input fields",
          "html": "<div class=\"flex flex-wrap -mx-3 mb-6\">{children}</div>"
        }
      ]
    }
  ],
  "Post Reply and Editing Tools": [
    {
      "description": "The UI should display a post reply section with editing tools. The editing tools should include a text area for typing a response, a submit button to post the reply, and editing tools such as bold, italic, and link. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostReply/><EditingTools/><ReplySubmitButton/></div>",
      "components": [
        {
          "name": "PostReply",
          "is_standalone": true,
          "description": "standalone, includes a text area and a submit button",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"reply\" name=\"reply\" placeholder=\"Type your reply...\"></textarea>"
        },
        {
          "name": "EditingTools",
          "is_standalone": true,
          "description": "standalone, includes buttons for bold, italic, and link",
          "html": "<div class=\"flex justify-between p-2\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Bold </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Italic </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Link </button></div>"
        },
        {
          "name": "ReplySubmitButton",
          "is_standalone": true,
          "description": "standalone, a submit button to post the reply",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post Reply</button>"
        }
      ]
    },
    {
      "description": "The UI should display a post reply section with editing tools. The editing tools should include a text area for typing a response, a submit button to post the reply, and editing tools such as bold, italic, and link. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostReply/><EditingTools/><ReplySubmitButton/></div>",
      "components": [
        {
          "name": "PostReply",
          "is_standalone": true,
          "description": "standalone, includes a text area and a submit button",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"reply\" name=\"reply\" placeholder=\"Type your reply...\"></textarea>"
        },
        {
          "name": "EditingTools",
          "is_standalone": true,
          "description": "standalone, includes buttons for bold, italic, and link",
          "html": "<div class=\"flex justify-between p-2\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Bold </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Italic </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Link </button></div>"
        },
        {
          "name": "ReplySubmitButton",
          "is_standalone": true,
          "description": "standalone, a submit button to post the reply",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post Reply</button>"
        }
      ]
    },
    {
      "description": "The UI should display a post reply input field with editing tools. The editing tools include a bold button, an italic button, and a link button. The UI should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"flex flex-col\"><PostReplyInput/><EditingTools/></div>",
      "components": [
        {
          "name": "PostReplyInput",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Type your reply...\"></textarea>"
        },
        {
          "name": "EditingTools",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"flex justify-between mb-2\"><BoldButton/><ItalicButton/><LinkButton/></div>"
        },
        {
          "name": "BoldButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 py-1 px-2 rounded\"><i class=\"fas fa-bold\">{bold_icon}</i></button>"
        },
        {
          "name": "ItalicButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 py-1 px-2 rounded\"><i class=\"fas fa-italic\">{italic_icon}</i></button>"
        },
        {
          "name": "LinkButton",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 py-1 px-2 rounded\"><i class=\"fas fa-link\">{link_icon}</i></button>"
        }
      ]
    },
    {
      "description": "The UI should display a post reply section with editing tools. The editing tools should include a text area for typing a response, a submit button to post the reply, and editing tools such as bold, italic, and link. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostReply/><EditingTools/><ReplySubmitButton/></div>",
      "components": [
        {
          "name": "PostReply",
          "is_standalone": true,
          "description": "standalone, includes a text area and a submit button",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"reply\" name=\"reply\" placeholder=\"Type your reply...\"></textarea>"
        },
        {
          "name": "EditingTools",
          "is_standalone": true,
          "description": "standalone, includes buttons for bold, italic, and link",
          "html": "<div class=\"flex justify-between p-2\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Bold </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Italic </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Link </button></div>"
        },
        {
          "name": "ReplySubmitButton",
          "is_standalone": true,
          "description": "standalone, a submit button to post the reply",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post Reply</button>"
        }
      ]
    },
    {
      "description": "The UI should display a post reply section with editing tools. The editing tools should include a text area for typing a response, a submit button to post the reply, and editing tools such as bold, italic, and link. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostReply/><EditingTools/><ReplySubmitButton/></div>",
      "components": [
        {
          "name": "PostReply",
          "is_standalone": true,
          "description": "standalone, includes a text area and a submit button",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"reply\" name=\"reply\" placeholder=\"Type your reply...\"></textarea>"
        },
        {
          "name": "EditingTools",
          "is_standalone": true,
          "description": "standalone, includes buttons for bold, italic, and link",
          "html": "<div class=\"flex justify-between p-2\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Bold </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Italic </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Link </button></div>"
        },
        {
          "name": "ReplySubmitButton",
          "is_standalone": true,
          "description": "standalone, a submit button to post the reply",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post Reply</button>"
        }
      ]
    },
    {
      "description": "The UI should display a post reply section with editing tools. The editing tools should include a text area for typing a response, a submit button to post the reply, and editing tools such as bold, italic, and link. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PostReply/><EditingTools/><ReplySubmitButton/></div>",
      "components": [
        {
          "name": "PostReply",
          "is_standalone": true,
          "description": "standalone, includes a text area and a submit button",
          "html": "<textarea class=\"w-full p-2 pl-10 text-sm text-gray-700\" id=\"reply\" name=\"reply\" placeholder=\"Type your reply...\"></textarea>"
        },
        {
          "name": "EditingTools",
          "is_standalone": true,
          "description": "standalone, includes buttons for bold, italic, and link",
          "html": "<div class=\"flex justify-between p-2\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Bold </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Italic </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Link </button></div>"
        },
        {
          "name": "ReplySubmitButton",
          "is_standalone": true,
          "description": "standalone, a submit button to post the reply",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Post Reply</button>"
        }
      ]
    }
  ],
  "Testimonial Author Image": [
    {
      "description": "A circular image of the testimonial author, displayed to the left of their quote, with a subtle border and shading to give it a slight 3D effect.",
      "html": "<div class=\"flex items-center mb-4\"><TestimonialAuthorImage/><blockquote class=\"ml-4\">{testimonial_quote}</blockquote></div>",
      "components": [
        {
          "name": "TestimonialAuthorImage",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<img src={author_image_url} alt={author_name} class=\"w-12 h-12 rounded-full border-2 border-gray-200 shadow-md\"/>"
        }
      ]
    },
    {
      "description": "A circular image of the testimonial author, displayed to the left of their quote, with a subtle border and shading to give it a slight 3D effect.",
      "html": "<div class=\"flex items-center mb-4\"><TestimonialAuthorImage/><blockquote class=\"ml-4\">{testimonial_quote}</blockquote></div>",
      "components": [
        {
          "name": "TestimonialAuthorImage",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<img src={author_image_url} alt={author_name} class=\"w-12 h-12 rounded-full border-2 border-gray-200 shadow-md\"/>"
        }
      ]
    },
    {
      "description": "A circular image of the testimonial author, displayed to the left of their quote, with a subtle border and shading to give it a slight 3D effect.",
      "html": "<div class=\"flex items-center mb-4\"><TestimonialAuthorImage/><blockquote class=\"ml-4\">{testimonial_quote}</blockquote></div>",
      "components": [
        {
          "name": "TestimonialAuthorImage",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<img src={author_image_url} alt={author_name} class=\"w-12 h-12 rounded-full border-2 border-gray-200 shadow-md\"/>"
        }
      ]
    },
    {
      "description": "A circular image of the testimonial author, displayed to the left of their quote, with a subtle border and shading to give it a slight 3D effect.",
      "html": "<div class=\"flex items-center mb-4\"><TestimonialAuthorImage/><blockquote class=\"ml-4\">{testimonial_quote}</blockquote></div>",
      "components": [
        {
          "name": "TestimonialAuthorImage",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<img src={author_image_url} alt={author_name} class=\"w-12 h-12 rounded-full border-2 border-gray-200 shadow-md\"/>"
        }
      ]
    }
  ],
  "Quiz and Assessment Tools": [
    {
      "description": "The UI should display a list of quiz and assessment tools with their names, descriptions, and ratings. The UI should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Quiz and Assessment Tools</h1><QuizList><QuizCard/><QuizCard/><!-- Add more QuizCard components here --></QuizList></main>",
      "components": [
        {
          "name": "QuizCard",
          "is_standalone": true,
          "description": "(standalone): A single quiz or assessment tool card with name, description, and rating.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4 rounded\"><h2 class=\"text-lg font-bold\">{quiz_name}</h2><p class=\"text-gray-600\">{quiz_description}</p><p class=\"text-sm\">Rating: {rating}/5</p></div>"
        },
        {
          "name": "QuizList",
          "is_standalone": false,
          "description": "(takes children): A list of `QuizCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of quiz and assessment tools with their names, descriptions, and ratings. The UI should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Quiz and Assessment Tools</h1><QuizList><QuizCard/><QuizCard/><!-- Add more QuizCard components here --></QuizList></main>",
      "components": [
        {
          "name": "QuizCard",
          "is_standalone": true,
          "description": "(standalone): A single quiz or assessment tool card with name, description, and rating.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4 rounded\"><h2 class=\"text-lg font-bold\">{quiz_name}</h2><p class=\"text-gray-600\">{quiz_description}</p><p class=\"text-sm\">Rating: {rating}/5</p></div>"
        },
        {
          "name": "QuizList",
          "is_standalone": false,
          "description": "(takes children): A list of `QuizCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of quiz and assessment tools with their names, descriptions, and ratings. The UI should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Quiz and Assessment Tools</h1><QuizList><QuizCard/><QuizCard/><!-- Add more QuizCard components here --></QuizList></main>",
      "components": [
        {
          "name": "QuizCard",
          "is_standalone": true,
          "description": "(standalone): A single quiz or assessment tool card with name, description, and rating.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4 rounded\"><h2 class=\"text-lg font-bold\">{quiz_name}</h2><p class=\"text-gray-600\">{quiz_description}</p><p class=\"text-sm\">Rating: {rating}/5</p></div>"
        },
        {
          "name": "QuizList",
          "is_standalone": false,
          "description": "(takes children): A list of `QuizCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of quiz and assessment tools with their names, descriptions, and ratings. The UI should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Quiz and Assessment Tools</h1><QuizList><QuizCard/><QuizCard/><!-- Add more QuizCard components here --></QuizList></main>",
      "components": [
        {
          "name": "QuizCard",
          "is_standalone": true,
          "description": "(standalone): A single quiz or assessment tool card with name, description, and rating.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4 rounded\"><h2 class=\"text-lg font-bold\">{quiz_name}</h2><p class=\"text-gray-600\">{quiz_description}</p><p class=\"text-sm\">Rating: {rating}/5</p></div>"
        },
        {
          "name": "QuizList",
          "is_standalone": false,
          "description": "(takes children): A list of `QuizCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of quiz and assessment tools with their names, descriptions, and ratings. The UI should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Quiz and Assessment Tools</h1><QuizList><QuizCard/><QuizCard/><!-- Add more QuizCard components here --></QuizList></main>",
      "components": [
        {
          "name": "QuizCard",
          "is_standalone": true,
          "description": "(standalone): A single quiz or assessment tool card with name, description, and rating.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4 rounded\"><h2 class=\"text-lg font-bold\">{quiz_name}</h2><p class=\"text-gray-600\">{quiz_description}</p><p class=\"text-sm\">Rating: {rating}/5</p></div>"
        },
        {
          "name": "QuizList",
          "is_standalone": false,
          "description": "(takes children): A list of `QuizCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of quiz and assessment tools with their names, descriptions, and ratings. The UI should be responsive, mobile-first, and accessible.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Quiz and Assessment Tools</h1><QuizList><QuizCard/><QuizCard/><!-- Add more QuizCard components here --></QuizList></main>",
      "components": [
        {
          "name": "QuizCard",
          "is_standalone": true,
          "description": "(standalone): A single quiz or assessment tool card with name, description, and rating.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4 rounded\"><h2 class=\"text-lg font-bold\">{quiz_name}</h2><p class=\"text-gray-600\">{quiz_description}</p><p class=\"text-sm\">Rating: {rating}/5</p></div>"
        },
        {
          "name": "QuizList",
          "is_standalone": false,
          "description": "(takes children): A list of `QuizCard` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Contact list with avatar and online status": [
    {
      "description": "A list of contacts with their avatars and online status indicators. The list should be responsive, with each contact item taking up the full width on mobile devices and arranging horizontally on larger screens.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Contacts</h2><ul class=\"flex flex-wrap justify-center\"><ContactItem/><ContactItem/><ContactItem/></ul></main>",
      "components": [
        {
          "name": "ContactItem",
          "is_standalone": true,
          "description": "A standalone component representing a single contact.",
          "html": "<li class=\"flex items-center mb-4\"><Avatar/><div class=\"ml-2\"><p class=\"text-lg\">{contact_name}</p><OnlineStatus/></div></li>"
        },
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "A standalone component representing the avatar image of a contact.",
          "html": "<img src={avatar_url} alt=\"{contact_name}'s avatar\" class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "OnlineStatus",
          "is_standalone": true,
          "description": "A standalone component indicating the online status of a contact.",
          "html": "<span class={`text-${online_status === 'online' ? 'green-500' : 'gray-500'}`}>{online_status === 'online' ? 'Online' : 'Offline'}</span>"
        }
      ]
    },
    {
      "description": "A list of contacts with their avatars and online status indicators. The list should be responsive, with each contact item taking up the full width on mobile devices and arranging horizontally on larger screens.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Contacts</h2><ul class=\"flex flex-wrap justify-center\"><ContactItem/><ContactItem/><ContactItem/></ul></main>",
      "components": [
        {
          "name": "ContactItem",
          "is_standalone": true,
          "description": "A standalone component representing a single contact.",
          "html": "<li class=\"flex items-center mb-4\"><Avatar/><div class=\"ml-2\"><p class=\"text-lg\">{contact_name}</p><OnlineStatus/></div></li>"
        },
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "A standalone component representing the avatar image of a contact.",
          "html": "<img src={avatar_url} alt=\"{contact_name}'s avatar\" class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "OnlineStatus",
          "is_standalone": true,
          "description": "A standalone component indicating the online status of a contact.",
          "html": "<span class={`text-${online_status === 'online' ? 'green-500' : 'gray-500'}`}>{online_status === 'online' ? 'Online' : 'Offline'}</span>"
        }
      ]
    },
    {
      "description": "A list of contacts with their avatars and online status indicators. The list should be responsive, with each contact item taking up the full width on mobile devices and arranging horizontally on larger screens.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Contacts</h2><ul class=\"flex flex-wrap justify-center\"><ContactItem/><ContactItem/><ContactItem/></ul></main>",
      "components": [
        {
          "name": "ContactItem",
          "is_standalone": true,
          "description": "A standalone component representing a single contact.",
          "html": "<li class=\"flex items-center mb-4\"><Avatar/><div class=\"ml-2\"><p class=\"text-lg\">{contact_name}</p><OnlineStatus/></div></li>"
        },
        {
          "name": "Avatar",
          "is_standalone": true,
          "description": "A standalone component representing the avatar image of a contact.",
          "html": "<img src={avatar_url} alt=\"{contact_name}'s avatar\" class=\"w-12 h-12 rounded-full\"/>"
        },
        {
          "name": "OnlineStatus",
          "is_standalone": true,
          "description": "A standalone component indicating the online status of a contact.",
          "html": "<span class={`text-${online_status === 'online' ? 'green-500' : 'gray-500'}`}>{online_status === 'online' ? 'Online' : 'Offline'}</span>"
        }
      ]
    }
  ],
  "Call-to-Action Buttons (CTAs)": [
    {
      "description": "The UI should display a prominent call-to-action button that encourages users to take a specific action. The button should be visually appealing, easy to click, and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PrimaryButton/></div>",
      "components": [
        {
          "name": "PrimaryButton",
          "is_standalone": true,
          "description": "A standalone component that renders a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"button\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent call-to-action button that encourages users to take a specific action. The button should be visually appealing, easy to click, and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PrimaryButton/></div>",
      "components": [
        {
          "name": "PrimaryButton",
          "is_standalone": true,
          "description": "A standalone component that renders a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"button\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a prominently styled Call-to-Action (CTA) button that stands out on the page, with clear and concise text encouraging the user to take action.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12 bg-white rounded-md shadow-md\"><PrimaryCtaButton/></div>",
      "components": [
        {
          "name": "PrimaryCtaButton",
          "is_standalone": true,
          "description": "A standalone component representing a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\">{cta_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent call-to-action button that encourages users to take a specific action. The button should be visually appealing, easy to click, and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PrimaryButton/></div>",
      "components": [
        {
          "name": "PrimaryButton",
          "is_standalone": true,
          "description": "A standalone component that renders a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"button\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent call-to-action button that encourages users to take a specific action. The button should be visually appealing, easy to click, and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PrimaryButton/></div>",
      "components": [
        {
          "name": "PrimaryButton",
          "is_standalone": true,
          "description": "A standalone component that renders a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"button\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent call-to-action button that encourages users to take a specific action. The button should be visually appealing, easy to click, and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PrimaryButton/></div>",
      "components": [
        {
          "name": "PrimaryButton",
          "is_standalone": true,
          "description": "A standalone component that renders a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"button\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent call-to-action button that encourages users to take a specific action. The button should be visually appealing, easy to click, and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><PrimaryButton/></div>",
      "components": [
        {
          "name": "PrimaryButton",
          "is_standalone": true,
          "description": "A standalone component that renders a primary call-to-action button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" type=\"button\">{button_text}</button>"
        }
      ]
    }
  ],
  "Notification bell with unread count badge": [
    {
      "description": "The UI should display a notification bell icon with a small badge displaying the number of unread notifications. The badge should be positioned top-right of the bell icon.",
      "html": "<div class=\"flex items-center\"><NotificationBell/><UnreadCountBadge/></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component representing the notification bell icon.",
          "html": "<i class=\"fa fa-bell text-lg text-gray-600\"></i>"
        },
        {
          "name": "UnreadCountBadge",
          "is_standalone": true,
          "description": "standalone component displaying the number of unread notifications.",
          "html": "<div class=\"bg-red-500 text-white rounded-full text-xs p-1\">{unread_count}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a notification bell icon with a small badge displaying the number of unread notifications. The badge should be positioned top-right of the bell icon.",
      "html": "<div class=\"flex items-center\"><NotificationBell/><UnreadCountBadge/></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component representing the notification bell icon.",
          "html": "<i class=\"fa fa-bell text-lg text-gray-600\"></i>"
        },
        {
          "name": "UnreadCountBadge",
          "is_standalone": true,
          "description": "standalone component displaying the number of unread notifications.",
          "html": "<div class=\"bg-red-500 text-white rounded-full text-xs p-1\">{unread_count}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a notification bell icon with a small badge displaying the number of unread notifications. The badge should be positioned top-right of the bell icon.",
      "html": "<div class=\"flex items-center\"><NotificationBell/><UnreadCountBadge/></div>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "standalone component representing the notification bell icon.",
          "html": "<i class=\"fa fa-bell text-lg text-gray-600\"></i>"
        },
        {
          "name": "UnreadCountBadge",
          "is_standalone": true,
          "description": "standalone component displaying the number of unread notifications.",
          "html": "<div class=\"bg-red-500 text-white rounded-full text-xs p-1\">{unread_count}</div>"
        }
      ]
    },
    {
      "description": "A notification bell icon with a small badge displaying the number of unread notifications. The bell should be clickable, and the badge should be highlighted if there are unread notifications.",
      "html": "<NotificationBell/>",
      "components": [
        {
          "name": "NotificationBell",
          "is_standalone": true,
          "description": "A standalone component that wraps a clickable bell icon and an unread count badge.",
          "html": "<a href=\"{notification_href}\" class=\"flex items-center hover:bg-gray-100 rounded-md p-2\"><i class=\"fas fa-bell\"></i><Badge>{unread_count}</Badge></a>"
        },
        {
          "name": "Badge",
          "is_standalone": false,
          "description": "A component that takes children (the unread count) and displays it in a highlighted circle.",
          "html": "<span class=\"bg-orange-500 rounded-full text-white py-1 px-2 text-xs\">{children}</span>"
        }
      ]
    }
  ],
  "Dependancy Graph Visualization Component": [
    {
      "description": "The Dependency Graph Visualization Component should display a graph showing the relationships between different dependencies. The graph should be responsive, accessible, and mobile-friendly. The nodes in the graph should be clickable, and when clicked, the node should be highlighted and the related dependencies should be visually emphasized.",
      "html": "<div class=\"max-w-md mx-auto pt-4\"><DependencyGraphComponent><!-- graph content here --></DependencyGraphComponent></div>",
      "components": [
        {
          "name": "DependencyGraphComponent",
          "is_standalone": false,
          "description": "(takes children) - contains the graph and handles node relationships",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "TooltipComponent",
          "is_standalone": false,
          "description": "(takes children) - displays additional information when a node is hovered or clicked",
          "html": "<div class=\"absolute bg-gray-100 p-2 rounded-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Dependency Graph Visualization Component should display a graph showing the relationships between different dependencies. The graph should be responsive, accessible, and mobile-friendly. The nodes in the graph should be clickable, and when clicked, the node should be highlighted and the related dependencies should be visually emphasized.",
      "html": "<div class=\"max-w-md mx-auto pt-4\"><DependencyGraphComponent><!-- graph content here --></DependencyGraphComponent></div>",
      "components": [
        {
          "name": "DependencyGraphComponent",
          "is_standalone": false,
          "description": "(takes children) - contains the graph and handles node relationships",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "TooltipComponent",
          "is_standalone": false,
          "description": "(takes children) - displays additional information when a node is hovered or clicked",
          "html": "<div class=\"absolute bg-gray-100 p-2 rounded-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Dependency Graph Visualization Component should display a graph showing the relationships between different dependencies. The graph should be responsive, accessible, and mobile-friendly. The nodes in the graph should be clickable, and when clicked, the node should be highlighted and the related dependencies should be visually emphasized.",
      "html": "<div class=\"max-w-md mx-auto pt-4\"><DependencyGraphComponent><!-- graph content here --></DependencyGraphComponent></div>",
      "components": [
        {
          "name": "DependencyGraphComponent",
          "is_standalone": false,
          "description": "(takes children) - contains the graph and handles node relationships",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "TooltipComponent",
          "is_standalone": false,
          "description": "(takes children) - displays additional information when a node is hovered or clicked",
          "html": "<div class=\"absolute bg-gray-100 p-2 rounded-md\">{children}</div>"
        }
      ]
    }
  ],
  "Price and Discount Badges": [
    {
      "description": "The UI should display a price badge with an optional discount badge next to it. The price badge should show the original price, and the discount badge should show the discount percentage and the new price.",
      "html": "<div class=\"flex items-center\"><PriceBadge/><DiscountBadge/></div>",
      "components": [
        {
          "name": "PriceBadge",
          "is_standalone": true,
          "description": "A standalone component that displays the original price.",
          "html": "<span class=\"bg-gray-200 px-2 py-1 text-sm rounded\">{original_price}</span>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "A standalone component that displays the discount percentage and the new price.",
          "html": "<span class=\"bg-orange-200 px-2 py-1 text-sm rounded\">{discount_percentage}% OFF <span class=\"text-gray-600\">{new_price}</span></span>"
        }
      ]
    },
    {
      "description": "The UI should display two badges, one for price and one for discount, with different background colors and text colors. The price badge should have a light blue background and white text, and the discount badge should have a green background and white text.",
      "html": "<div class=\"flex gap-2\"><PriceBadge/><DiscountBadge/></div>",
      "components": [
        {
          "name": "PriceBadge",
          "is_standalone": true,
          "description": "Standalone component, displays the price of an item.",
          "html": "<span class=\"bg-gray-200 text-white rounded py-1 px-2\">{price}</span>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "Standalone component, displays the discount of an item.",
          "html": "<span class=\"bg-green-400 text-white rounded py-1 px-2\">{discount}% off</span>"
        }
      ]
    },
    {
      "description": "The UI should display two types of badges: a price badge and a discount badge. The price badge shows the original price, and the discount badge shows the discount percentage. The badges should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PriceBadge/><DiscountBadge/></div>",
      "components": [
        {
          "name": "PriceBadge",
          "is_standalone": true,
          "description": "a standalone component that displays the original price.",
          "html": "<span class=\"bg-gray-200 px-2 py-1 rounded-full text-sm\"><p>{original_price}</p></span>"
        },
        {
          "name": "DiscountBadge",
          "is_standalone": true,
          "description": "a standalone component that displays the discount percentage.",
          "html": "<span class=\"bg-orange-200 px-2 py-1 rounded-full text-sm\"><p>{discount_percentage}% Off</p></span>"
        }
      ]
    }
  ],
  "Notification Alerts/Badges": [
    {
      "description": "The UI should have a notification badge/alert that displays a small circle or rectangle with a number or a message inside, usually indicating the number of notifications, messages, or updates.",
      "html": "<nav class=\"flex items-center justify-between py-4\"><ul class=\"flex items-center\"><li class=\"mr-4\"><a href=\"#\" class=\"text-gray-600 hover:text-gray-900 transition duration-300\"><NotificationBadge/><!-- notification badge --></a></li></ul><NotificationAlert/><!-- notification alert --></nav>",
      "components": [
        {
          "name": "NotificationBadge",
          "is_standalone": true,
          "description": "(standalone) - a small circle or rectangle displaying a number or message",
          "html": "<span class=\"bg-red-500 text-white rounded-full px-2 py-1 text-xs\">{notification_count}</span>"
        },
        {
          "name": "NotificationAlert",
          "is_standalone": true,
          "description": "(standalone) - a small notification message with an icon and text",
          "html": "<div class=\"bg-orange-200 p-2 rounded border-l-4 border-orange-500\"><i class=\"fas fa-bell mr-2 text-orange-500\"></i><span>{notification_message}</span></div>"
        }
      ]
    }
  ],
  "Top/Bottom Navigation": [
    {
      "description": "The UI should consist of a top navigation bar and a bottom navigation bar. The top navigation bar should have a logo on the left and some navigation links on the right. The bottom navigation bar should have some navigation links.",
      "html": "<div class=\"h-screen flex flex-col\"><TopNavigationBar/><!-- main content here --><BottomNavigationBar/></div>",
      "components": [
        {
          "name": "TopNavigationBar",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<nav class=\"bg-gray-900 py-4\"><Logo/><ul class=\"flex justify-end\"><li><Link>Link 1</Link></li><li><Link>Link 2</Link></li><li><Link>Link 3</Link></li></ul></nav>"
        },
        {
          "name": "BottomNavigationBar",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<nav class=\"bg-gray-900 py-4\"><ul class=\"flex justify-between\"><li><Link>Link 4</Link></li><li><Link>Link 5</Link></li><li><Link>Link 6</Link></li></ul></nav>"
        },
        {
          "name": "Logo",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<img src={logo_url} alt=\"Logo\" class=\"h-8 w-8\"/>"
        },
        {
          "name": "Link",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<a href={href} class=\"text-white hover:text-gray-200\">{children}</a>"
        }
      ]
    }
  ],
  "Header User Profile": [
    {
      "description": "The UI should display a header with a user profile section on the right side, containing the user's profile picture, name, and a dropdown menu.",
      "html": "<header class=\"flex justify-between p-4\"><nav>...</nav><UserProfileHeader/></header>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "standalone component that contains the user profile information and dropdown menu.",
          "html": "<div class=\"flex items-center\"><UserProfilePicture/><div class=\"ml-2\"><UserName/><DropdownMenu/></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture.",
          "html": "<img src={user_profile_picture_url} alt={user_name} class=\"w-8 h-8 rounded-full object-cover\"/>"
        },
        {
          "name": "UserName",
          "is_standalone": true,
          "description": "standalone component that displays the user's name.",
          "html": "<p class=\"text-sm\">{user_name}</p>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": true,
          "description": "standalone component that displays a dropdown menu with user options.",
          "html": "<div class=\"relative\"><button class=\"text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\"><span class=\"caret\"></span></button><ul class=\"absolute right-0 w-48 bg-white shadow-md py-2\"><li><a href=\"#\" class=\"block py-2 px-4\">My Profile</a></li><li><a href=\"#\" class=\"block py-2 px-4\">Logout</a></li></ul></div>"
        }
      ]
    },
    {
      "description": "The UI should display a header with a user profile section on the right side, containing the user's profile picture, name, and a dropdown menu.",
      "html": "<header class=\"flex justify-between p-4\"><nav>...</nav><UserProfileHeader/></header>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "standalone component that contains the user profile information and dropdown menu.",
          "html": "<div class=\"flex items-center\"><UserProfilePicture/><div class=\"ml-2\"><UserName/><DropdownMenu/></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture.",
          "html": "<img src={user_profile_picture_url} alt={user_name} class=\"w-8 h-8 rounded-full object-cover\"/>"
        },
        {
          "name": "UserName",
          "is_standalone": true,
          "description": "standalone component that displays the user's name.",
          "html": "<p class=\"text-sm\">{user_name}</p>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": true,
          "description": "standalone component that displays a dropdown menu with user options.",
          "html": "<div class=\"relative\"><button class=\"text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\"><span class=\"caret\"></span></button><ul class=\"absolute right-0 w-48 bg-white shadow-md py-2\"><li><a href=\"#\" class=\"block py-2 px-4\">My Profile</a></li><li><a href=\"#\" class=\"block py-2 px-4\">Logout</a></li></ul></div>"
        }
      ]
    },
    {
      "description": "The UI should display a header with a user profile section on the right side, containing the user's profile picture, name, and a dropdown menu.",
      "html": "<header class=\"flex justify-between p-4\"><nav>...</nav><UserProfileHeader/></header>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "standalone component that contains the user profile information and dropdown menu.",
          "html": "<div class=\"flex items-center\"><UserProfilePicture/><div class=\"ml-2\"><UserName/><DropdownMenu/></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture.",
          "html": "<img src={user_profile_picture_url} alt={user_name} class=\"w-8 h-8 rounded-full object-cover\"/>"
        },
        {
          "name": "UserName",
          "is_standalone": true,
          "description": "standalone component that displays the user's name.",
          "html": "<p class=\"text-sm\">{user_name}</p>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": true,
          "description": "standalone component that displays a dropdown menu with user options.",
          "html": "<div class=\"relative\"><button class=\"text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\"><span class=\"caret\"></span></button><ul class=\"absolute right-0 w-48 bg-white shadow-md py-2\"><li><a href=\"#\" class=\"block py-2 px-4\">My Profile</a></li><li><a href=\"#\" class=\"block py-2 px-4\">Logout</a></li></ul></div>"
        }
      ]
    },
    {
      "description": "The UI should display a header with a user profile section on the right side, containing the user's profile picture, name, and a dropdown menu.",
      "html": "<header class=\"flex justify-between p-4\"><nav>...</nav><UserProfileHeader/></header>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "standalone component that contains the user profile information and dropdown menu.",
          "html": "<div class=\"flex items-center\"><UserProfilePicture/><div class=\"ml-2\"><UserName/><DropdownMenu/></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture.",
          "html": "<img src={user_profile_picture_url} alt={user_name} class=\"w-8 h-8 rounded-full object-cover\"/>"
        },
        {
          "name": "UserName",
          "is_standalone": true,
          "description": "standalone component that displays the user's name.",
          "html": "<p class=\"text-sm\">{user_name}</p>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": true,
          "description": "standalone component that displays a dropdown menu with user options.",
          "html": "<div class=\"relative\"><button class=\"text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\"><span class=\"caret\"></span></button><ul class=\"absolute right-0 w-48 bg-white shadow-md py-2\"><li><a href=\"#\" class=\"block py-2 px-4\">My Profile</a></li><li><a href=\"#\" class=\"block py-2 px-4\">Logout</a></li></ul></div>"
        }
      ]
    }
  ],
  "Breadcrumb Separator Icon": [
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    },
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    },
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    },
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    },
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    },
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    },
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    },
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    },
    {
      "description": "The UI should display a breadcrumb separator icon, which is a right arrow (>), connecting a series of breadcrumbs. The separator should be vertically centered with the surrounding breadcrumbs.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li class=\"breadcrumb-item\">Home</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">category</li><BreadcrumbSeparatorIcon/><li class=\"breadcrumb-item\">subcategory</li></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbSeparatorIcon",
          "is_standalone": true,
          "description": "Standalone",
          "html": "<span class=\"text-neutral-500\" aria-hidden=\"true\">&gt;</span>"
        }
      ]
    }
  ],
  "Responsive Filtering and Sorting": [
    {
      "description": "A responsive filtering and sorting UI that adapts to different screen sizes, with a search bar, a filtering section, a sorting section, and a list of items.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><SearchBar/><div class=\"flex flex-wrap -mx-4\"><FilterSection><FilterOption/><FilterOption/></FilterSection><SortingSection><SortingOption/><SortingOption/></SortingSection></div><ItemList><Item/><Item/></ItemList></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone) - a search bar component",
          "html": "<input type=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Search...\"/>"
        },
        {
          "name": "FilterSection",
          "is_standalone": false,
          "description": "(takes children) - a filtering section component that takes filter options as children",
          "html": "<div class=\"w-full lg:w-1/2 xl:w-1/3 p-4 lg:pr-6\">{children}</div>"
        },
        {
          "name": "FilterOption",
          "is_standalone": true,
          "description": "(standalone) - a single filter option component",
          "html": "<label class=\"block text-gray-600\"><input type=\"checkbox\" class=\"mr-2\"/>{filter_name}</label>"
        },
        {
          "name": "SortingSection",
          "is_standalone": false,
          "description": "(takes children) - a sorting section component that takes sorting options as children",
          "html": "<div class=\"w-full lg:w-1/2 xl:w-1/3 p-4 lg:pl-6\">{children}</div>"
        },
        {
          "name": "SortingOption",
          "is_standalone": true,
          "description": "(standalone) - a single sorting option component",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-600 py-2 px-4 border border-gray-300 rounded\">{sorting_option_name}</button>"
        },
        {
          "name": "ItemList",
          "is_standalone": false,
          "description": "(takes children) - a list of items component that takes individual items as children",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "Item",
          "is_standalone": true,
          "description": "(standalone) - a single item component",
          "html": "<li class=\"py-4 px-4 border-b border-gray-200\"><h2 class=\"text-lg\">{item_name}</h2><p>{item_description}</p></li>"
        }
      ]
    }
  ],
  "Product Description List": [
    {
      "description": "The UI should be a list of product descriptions, each containing a title, a short description, and optional additional details. The list should be responsive and adapt to different screen sizes. Each list item should have a clean and minimal design, with sufficient spacing between items.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Descriptions</h2><ProductDescriptionList><ProductDescriptionListItem/><ProductDescriptionListItem/><!-- Add more list items here --></ProductDescriptionList></section>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "(standalone): A single list item containing a title, description, and optional additional details.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-sm font-bold\">{title}</h3><p class=\"text-sm text-gray-600\">{description}</p>{additionalDetails && ( <ul class=\"list-disc pl-4\"><li>{additionalDetails}</li></ul>)}</div>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps the list of product descriptions.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, each containing a title, a short description, and optional additional details. The list should be responsive and adapt to different screen sizes. Each list item should have a clean and minimal design, with sufficient spacing between items.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Descriptions</h2><ProductDescriptionList><ProductDescriptionListItem/><ProductDescriptionListItem/><!-- Add more list items here --></ProductDescriptionList></section>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "(standalone): A single list item containing a title, description, and optional additional details.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-sm font-bold\">{title}</h3><p class=\"text-sm text-gray-600\">{description}</p>{additionalDetails && ( <ul class=\"list-disc pl-4\"><li>{additionalDetails}</li></ul>)}</div>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps the list of product descriptions.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, with each item displaying a product image, name, rating, price, and a brief description. The list should be responsive, with a maximum of 3 columns on large screens, 2 columns on medium screens, and 1 column on small screens.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Product Descriptions</h2><ul class=\"flex flex-wrap justify-center\"><ProductDescriptionList><!-- Repeat for each product description --><ProductDescriptionCard/></ProductDescriptionList></ul></div>",
      "components": [
        {
          "name": "ProductDescriptionCard",
          "is_standalone": true,
          "description": "A standalone component representing a single product description.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 p-4\"><img src=\"{product_image}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover mb-2\"/><h3 class=\"text-lg font-bold\">{product_name}</h3><p class=\"text-sm\">{product_rating}/ 5</p><p class=\"text-lg\">{product_price}</p><p class=\"text-sm\">{product_description}</p></li>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "A component that takes children, representing the list of product descriptions.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, each containing a title, a short description, and optional additional details. The list should be responsive and adapt to different screen sizes. Each list item should have a clean and minimal design, with sufficient spacing between items.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Descriptions</h2><ProductDescriptionList><ProductDescriptionListItem/><ProductDescriptionListItem/><!-- Add more list items here --></ProductDescriptionList></section>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "(standalone): A single list item containing a title, description, and optional additional details.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-sm font-bold\">{title}</h3><p class=\"text-sm text-gray-600\">{description}</p>{additionalDetails && ( <ul class=\"list-disc pl-4\"><li>{additionalDetails}</li></ul>)}</div>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps the list of product descriptions.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, with each item displaying a product image, name, rating, price, and a brief description. The list should be responsive, with a maximum of 3 columns on large screens, 2 columns on medium screens, and 1 column on small screens.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Product Descriptions</h2><ul class=\"flex flex-wrap justify-center\"><ProductDescriptionList><!-- Repeat for each product description --><ProductDescriptionCard/></ProductDescriptionList></ul></div>",
      "components": [
        {
          "name": "ProductDescriptionCard",
          "is_standalone": true,
          "description": "A standalone component representing a single product description.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 p-4\"><img src=\"{product_image}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover mb-2\"/><h3 class=\"text-lg font-bold\">{product_name}</h3><p class=\"text-sm\">{product_rating}/ 5</p><p class=\"text-lg\">{product_price}</p><p class=\"text-sm\">{product_description}</p></li>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "A component that takes children, representing the list of product descriptions.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, each containing a title, a short description, and optional additional details. The list should be responsive and adapt to different screen sizes. Each list item should have a clean and minimal design, with sufficient spacing between items.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Descriptions</h2><ProductDescriptionList><ProductDescriptionListItem/><ProductDescriptionListItem/><!-- Add more list items here --></ProductDescriptionList></section>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "(standalone): A single list item containing a title, description, and optional additional details.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-sm font-bold\">{title}</h3><p class=\"text-sm text-gray-600\">{description}</p>{additionalDetails && ( <ul class=\"list-disc pl-4\"><li>{additionalDetails}</li></ul>)}</div>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps the list of product descriptions.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, each containing a title, a short description, and optional additional details. The list should be responsive and adapt to different screen sizes. Each list item should have a clean and minimal design, with sufficient spacing between items.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Descriptions</h2><ProductDescriptionList><ProductDescriptionListItem/><ProductDescriptionListItem/><!-- Add more list items here --></ProductDescriptionList></section>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "(standalone): A single list item containing a title, description, and optional additional details.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-sm font-bold\">{title}</h3><p class=\"text-sm text-gray-600\">{description}</p>{additionalDetails && ( <ul class=\"list-disc pl-4\"><li>{additionalDetails}</li></ul>)}</div>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps the list of product descriptions.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, each containing a title, a short description, and optional additional details. The list should be responsive and adapt to different screen sizes. Each list item should have a clean and minimal design, with sufficient spacing between items.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Descriptions</h2><ProductDescriptionList><ProductDescriptionListItem/><ProductDescriptionListItem/><!-- Add more list items here --></ProductDescriptionList></section>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "(standalone): A single list item containing a title, description, and optional additional details.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-sm font-bold\">{title}</h3><p class=\"text-sm text-gray-600\">{description}</p>{additionalDetails && ( <ul class=\"list-disc pl-4\"><li>{additionalDetails}</li></ul>)}</div>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps the list of product descriptions.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, with each item displaying a product image, name, rating, price, and a brief description. The list should be responsive, with a maximum of 3 columns on large screens, 2 columns on medium screens, and 1 column on small screens.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">Product Descriptions</h2><ul class=\"flex flex-wrap justify-center\"><ProductDescriptionList><!-- Repeat for each product description --><ProductDescriptionCard/></ProductDescriptionList></ul></div>",
      "components": [
        {
          "name": "ProductDescriptionCard",
          "is_standalone": true,
          "description": "A standalone component representing a single product description.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 p-4\"><img src=\"{product_image}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover mb-2\"/><h3 class=\"text-lg font-bold\">{product_name}</h3><p class=\"text-sm\">{product_rating}/ 5</p><p class=\"text-lg\">{product_price}</p><p class=\"text-sm\">{product_description}</p></li>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "A component that takes children, representing the list of product descriptions.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product descriptions, each containing a title, a short description, and optional additional details. The list should be responsive and adapt to different screen sizes. Each list item should have a clean and minimal design, with sufficient spacing between items.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Descriptions</h2><ProductDescriptionList><ProductDescriptionListItem/><ProductDescriptionListItem/><!-- Add more list items here --></ProductDescriptionList></section>",
      "components": [
        {
          "name": "ProductDescriptionListItem",
          "is_standalone": true,
          "description": "(standalone): A single list item containing a title, description, and optional additional details.",
          "html": "<div class=\"p-4 mb-4 border-b border-gray-200\"><h3 class=\"text-sm font-bold\">{title}</h3><p class=\"text-sm text-gray-600\">{description}</p>{additionalDetails && ( <ul class=\"list-disc pl-4\"><li>{additionalDetails}</li></ul>)}</div>"
        },
        {
          "name": "ProductDescriptionList",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps the list of product descriptions.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Profile picture with dropdown menu options": [
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A profile picture with a dropdown menu that appears when the profile picture is clicked. The dropdown menu should contain several options.",
      "html": "<div class=\"flex justify-end\"><ProfilePicture/><DropdownMenu><MenuItem/><MenuItem/><MenuItem/></DropdownMenu></div>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<img src={profile_picture_url} class=\"w-8 h-8 rounded-full cursor-pointer\"/>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"absolute right-0 mt-2 w-48 bg-white rounded-md overflow-hidden shadow-md\">{children}</div>"
        },
        {
          "name": "MenuItem",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href={menu_item_url} class=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\">{menu_item_text}</a>"
        }
      ]
    },
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A circular profile picture with a dropdown menu that appears when clicking on the profile picture. The dropdown menu should display a few options.",
      "html": "<div class=\"lg:flex justify-end mb-4\"><UserProfilePicture/><DropdownMenu><!-- dropdown menu options will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"h-12 w-12 rounded-full overflow-hidden\"><img src=\"{profile_picture_url}\" alt=\"{username}'s profile picture\" class=\"h-full w-full object-cover\"/></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"hidden lg:block absolute top-full right-0 w-40 bg-white rounded shadow-md\">{children}</div>"
        }
      ]
    }
  ],
  "Product title and rating display": [
    {
      "description": "The UI should display a product title and its corresponding rating. The product title should be prominent and easy to read, while the rating should be displayed succinctly alongside the title.",
      "html": "<div class=\"flex flex-wrap justify-between\"><ProductTitle/><RatingIndicator/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the product title.",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the product rating.",
          "html": "<div class=\"flex items-center\"><span class=\"text-sm\">{ratingValue}/ 5</span><span class=\"rating-icon\">{/* rating icon */}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating, with the title in a larger font size and the rating displayed as a fraction of 5.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductTitle/><ProductRating/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "standalone component that displays the product title",
          "html": "<h2 class=\"text-3xl font-bold\">{productName}</h2>"
        },
        {
          "name": "ProductRating",
          "is_standalone": true,
          "description": "standalone component that displays the product rating",
          "html": "<p class=\"text-lg\">{rating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating. The product title should be prominent and easy to read, while the rating should be displayed succinctly alongside the title.",
      "html": "<div class=\"flex flex-wrap justify-between\"><ProductTitle/><RatingIndicator/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the product title.",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the product rating.",
          "html": "<div class=\"flex items-center\"><span class=\"text-sm\">{ratingValue}/ 5</span><span class=\"rating-icon\">{/* rating icon */}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating, with the title in a larger font size and the rating displayed as a fraction of 5.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductTitle/><ProductRating/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "standalone component that displays the product title",
          "html": "<h2 class=\"text-3xl font-bold\">{productName}</h2>"
        },
        {
          "name": "ProductRating",
          "is_standalone": true,
          "description": "standalone component that displays the product rating",
          "html": "<p class=\"text-lg\">{rating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating. The product title should be prominent and easy to read, while the rating should be displayed succinctly alongside the title.",
      "html": "<div class=\"flex flex-wrap justify-between\"><ProductTitle/><RatingIndicator/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the product title.",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the product rating.",
          "html": "<div class=\"flex items-center\"><span class=\"text-sm\">{ratingValue}/ 5</span><span class=\"rating-icon\">{/* rating icon */}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating. The product title should be prominent and easy to read, while the rating should be displayed succinctly alongside the title.",
      "html": "<div class=\"flex flex-wrap justify-between\"><ProductTitle/><RatingIndicator/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the product title.",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the product rating.",
          "html": "<div class=\"flex items-center\"><span class=\"text-sm\">{ratingValue}/ 5</span><span class=\"rating-icon\">{/* rating icon */}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating. The product title should be prominent and easy to read, while the rating should be displayed succinctly alongside the title.",
      "html": "<div class=\"flex flex-wrap justify-between\"><ProductTitle/><RatingIndicator/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the product title.",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the product rating.",
          "html": "<div class=\"flex items-center\"><span class=\"text-sm\">{ratingValue}/ 5</span><span class=\"rating-icon\">{/* rating icon */}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating. The product title should be prominent and easy to read, while the rating should be displayed succinctly alongside the title.",
      "html": "<div class=\"flex flex-wrap justify-between\"><ProductTitle/><RatingIndicator/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the product title.",
          "html": "<h2 class=\"text-lg font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the product rating.",
          "html": "<div class=\"flex items-center\"><span class=\"text-sm\">{ratingValue}/ 5</span><span class=\"rating-icon\">{/* rating icon */}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should display a product title and its corresponding rating. The rating should be displayed as a series of stars, with the number of filled stars indicating the rating. The product title should be prominent and easy to read.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><ProductTitle/><RatingDisplay/></div>",
      "components": [
        {
          "name": "ProductTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the product title.",
          "html": "<h2 class=\"text-2xl font-bold\">{productName}</h2>"
        },
        {
          "name": "RatingDisplay",
          "is_standalone": true,
          "description": "a standalone component that displays the rating as a series of stars.",
          "html": "<div class=\"flex\">{rating}/5 <div class=\"flex\">{[...Array(5).keys()].map((_, i) =>( <i key={i} class={`text-yellow-400 ${i < rating ? 'fas fa-star' : 'far fa-star'}`}></i>))} </div></div>"
        }
      ]
    }
  ],
  "Responsive Video Embeds": [
    {
      "description": "The UI should display a responsive video embed that adapts to different screen sizes and devices. The video should be centered and have a max width of 100% to ensure it doesn't exceed the parent container's width.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><ResponsiveVideoEmbed/></div>",
      "components": [
        {
          "name": "ResponsiveVideoEmbed",
          "is_standalone": true,
          "description": "A standalone component that wraps the video iframe.",
          "html": "<div class=\"aspect-w-16 aspect-h-9\"><VideoIFrame/></div>"
        },
        {
          "name": "VideoIFrame",
          "is_standalone": true,
          "description": "A standalone component that renders the video iframe.",
          "html": "<iframe class=\"w-full h-full\" src={`https://www.youtube.com/embed/${video_id}`} frameBorder=\"0\" allowFullScreen/>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video embed that adapts to different screen sizes and devices. The video should be centered and have a max width of 100% to ensure it doesn't exceed the parent container's width.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><ResponsiveVideoEmbed/></div>",
      "components": [
        {
          "name": "ResponsiveVideoEmbed",
          "is_standalone": true,
          "description": "A standalone component that wraps the video iframe.",
          "html": "<div class=\"aspect-w-16 aspect-h-9\"><VideoIFrame/></div>"
        },
        {
          "name": "VideoIFrame",
          "is_standalone": true,
          "description": "A standalone component that renders the video iframe.",
          "html": "<iframe class=\"w-full h-full\" src={`https://www.youtube.com/embed/${video_id}`} frameBorder=\"0\" allowFullScreen/>"
        }
      ]
    },
    {
      "description": "A responsive video embed that adjusts to different screen sizes, with a maximum width of 800px and a height that scales accordingly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><VideoEmbed/></div>",
      "components": [
        {
          "name": "VideoEmbed",
          "is_standalone": true,
          "description": "standalone component, contains the video iframe and styling.",
          "html": "<!-- wrapper div for video iframe --><div class=\"aspect-w-16 aspect-h-9\"><!-- iframe with video content --><iframe src=\"{video_url}\" frameborder=\"0\" allowfullscreen></iframe></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video embed that adapts to different screen sizes and devices. The video should be centered and have a max width of 100% to ensure it doesn't exceed the parent container's width.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><ResponsiveVideoEmbed/></div>",
      "components": [
        {
          "name": "ResponsiveVideoEmbed",
          "is_standalone": true,
          "description": "A standalone component that wraps the video iframe.",
          "html": "<div class=\"aspect-w-16 aspect-h-9\"><VideoIFrame/></div>"
        },
        {
          "name": "VideoIFrame",
          "is_standalone": true,
          "description": "A standalone component that renders the video iframe.",
          "html": "<iframe class=\"w-full h-full\" src={`https://www.youtube.com/embed/${video_id}`} frameBorder=\"0\" allowFullScreen/>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video embed that adapts to different screen sizes and devices. The video should be centered and have a max width of 100% to ensure it doesn't exceed the parent container's width.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><ResponsiveVideoEmbed/></div>",
      "components": [
        {
          "name": "ResponsiveVideoEmbed",
          "is_standalone": true,
          "description": "A standalone component that wraps the video iframe.",
          "html": "<div class=\"aspect-w-16 aspect-h-9\"><VideoIFrame/></div>"
        },
        {
          "name": "VideoIFrame",
          "is_standalone": true,
          "description": "A standalone component that renders the video iframe.",
          "html": "<iframe class=\"w-full h-full\" src={`https://www.youtube.com/embed/${video_id}`} frameBorder=\"0\" allowFullScreen/>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video embed that adapts to different screen sizes and devices. The video should be centered and have a max width of 100% to ensure it doesn't exceed the parent container's width.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><ResponsiveVideoEmbed/></div>",
      "components": [
        {
          "name": "ResponsiveVideoEmbed",
          "is_standalone": true,
          "description": "A standalone component that wraps the video iframe.",
          "html": "<div class=\"aspect-w-16 aspect-h-9\"><VideoIFrame/></div>"
        },
        {
          "name": "VideoIFrame",
          "is_standalone": true,
          "description": "A standalone component that renders the video iframe.",
          "html": "<iframe class=\"w-full h-full\" src={`https://www.youtube.com/embed/${video_id}`} frameBorder=\"0\" allowFullScreen/>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive video embed that adapts to different screen sizes and devices. The video should be centered and have a max width of 100% to ensure it doesn't exceed the parent container's width.",
      "html": "<div class=\"container max-w-md mx-auto p-4\"><ResponsiveVideoEmbed/></div>",
      "components": [
        {
          "name": "ResponsiveVideoEmbed",
          "is_standalone": true,
          "description": "A standalone component that wraps the video iframe.",
          "html": "<div class=\"aspect-w-16 aspect-h-9\"><VideoIFrame/></div>"
        },
        {
          "name": "VideoIFrame",
          "is_standalone": true,
          "description": "A standalone component that renders the video iframe.",
          "html": "<iframe class=\"w-full h-full\" src={`https://www.youtube.com/embed/${video_id}`} frameBorder=\"0\" allowFullScreen/>"
        }
      ]
    }
  ],
  "Game Reviews and Ratings": [
    {
      "description": "The UI should display a list of game reviews with their corresponding ratings, allowing users to easily scan and compare games. The design should be clean, modern, and responsive, with clear typography and adequate white space. The ratings should be visually prominent, and the overall layout should prioritize readability.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Game Reviews and Ratings</h1><GameRatingsList><!-- List of GameReviewCard components will be rendered here --></GameRatingsList></main>",
      "components": [
        {
          "name": "GameRatingsList",
          "is_standalone": false,
          "description": "(Takes children): A container component that holds a list of `GameReviewCard` components.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of game reviews with their corresponding ratings, allowing users to easily scan and compare games. The design should be clean, modern, and responsive, with clear typography and adequate white space. The ratings should be visually prominent, and the overall layout should prioritize readability.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Game Reviews and Ratings</h1><GameRatingsList><!-- List of GameReviewCard components will be rendered here --></GameRatingsList></main>",
      "components": [
        {
          "name": "GameRatingsList",
          "is_standalone": false,
          "description": "(Takes children): A container component that holds a list of `GameReviewCard` components.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first design that displays a list of game reviews with their corresponding ratings. Each review should include the game title, rating, and a brief review text. The UI should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Game Reviews and Ratings</h1><GameReviewsList><!-- list of GameReviewCard components will be inserted here --></GameReviewsList></div>",
      "components": [
        {
          "name": "GameReviewsList",
          "is_standalone": false,
          "description": "(takes children): A list of game reviews that wraps the `GameReviewCard` components.",
          "html": "<ul class=\"list-none mb-0\"><!-- {children} will be inserted here --></ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of game reviews with their corresponding ratings, along with the game title, reviewer's name, and the review text.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-2xl mb-4\">Game Reviews</h2><GameReviewList/></div>",
      "components": [
        {
          "name": "GameReviewCard",
          "is_standalone": true,
          "description": "standalone component that displays a single game review.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{gameTitle}</h3><p>By {reviewerName}</p><p class=\"text-gray-600\">{reviewText}</p><p>Rating: {rating}/5</p></div>"
        },
        {
          "name": "GameReviewList",
          "is_standalone": false,
          "description": "takes children (a list of `GameReviewCard` components).",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of game reviews with their corresponding ratings, allowing users to easily scan and compare games. The design should be clean, modern, and responsive, with clear typography and adequate white space. The ratings should be visually prominent, and the overall layout should prioritize readability.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Game Reviews and Ratings</h1><GameRatingsList><!-- List of GameReviewCard components will be rendered here --></GameRatingsList></main>",
      "components": [
        {
          "name": "GameRatingsList",
          "is_standalone": false,
          "description": "(Takes children): A container component that holds a list of `GameReviewCard` components.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of game reviews with their corresponding ratings, allowing users to easily scan and compare games. The design should be clean, modern, and responsive, with clear typography and adequate white space. The ratings should be visually prominent, and the overall layout should prioritize readability.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Game Reviews and Ratings</h1><GameRatingsList><!-- List of GameReviewCard components will be rendered here --></GameRatingsList></main>",
      "components": [
        {
          "name": "GameRatingsList",
          "is_standalone": false,
          "description": "(Takes children): A container component that holds a list of `GameReviewCard` components.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of game reviews with their corresponding ratings, allowing users to easily scan and compare games. The design should be clean, modern, and responsive, with clear typography and adequate white space. The ratings should be visually prominent, and the overall layout should prioritize readability.",
      "html": "<main class=\"max-w-md mx-auto p-4\"><h1 class=\"text-3xl font-bold mb-4\">Game Reviews and Ratings</h1><GameRatingsList><!-- List of GameReviewCard components will be rendered here --></GameRatingsList></main>",
      "components": [
        {
          "name": "GameRatingsList",
          "is_standalone": false,
          "description": "(Takes children): A container component that holds a list of `GameReviewCard` components.",
          "html": "<ul class=\"list-none\">{children}</ul>"
        }
      ]
    }
  ],
  "Friends List: List of friends with profile links": [
    {
      "description": "The Friends List UI should display a list of friends with their profile links. The list should be responsive, mobile-first, and accessible. Each friend's profile link should be displayed with their name and a profile picture.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Friends List</h2><ul class=\"flex flex-wrap justify-center mb-4\"><FriendItem/><FriendItem/><FriendItem/></ul></div>",
      "components": [
        {
          "name": "FriendItem",
          "is_standalone": true,
          "description": "A standalone component representing a single friend's profile link.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><a href=\"{profileLink}\" class=\"block\"><img src=\"{profilePicture}\" alt=\"{friendName}\" class=\"w-12 h-12 rounded-full mb-2\"><span class=\"text-lg\">{friendName}</span></a></li>"
        },
        {
          "name": "FriendsList",
          "is_standalone": false,
          "description": "A component that takes children ( FriendItems ) and renders them in an unordered list.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The Friends List UI should display a list of friends with their profile links. The list should be responsive, mobile-first, and accessible. Each friend's profile link should be displayed with their name and a profile picture.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Friends List</h2><ul class=\"flex flex-wrap justify-center mb-4\"><FriendItem/><FriendItem/><FriendItem/></ul></div>",
      "components": [
        {
          "name": "FriendItem",
          "is_standalone": true,
          "description": "A standalone component representing a single friend's profile link.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><a href=\"{profileLink}\" class=\"block\"><img src=\"{profilePicture}\" alt=\"{friendName}\" class=\"w-12 h-12 rounded-full mb-2\"><span class=\"text-lg\">{friendName}</span></a></li>"
        },
        {
          "name": "FriendsList",
          "is_standalone": false,
          "description": "A component that takes children ( FriendItems ) and renders them in an unordered list.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The Friends List UI should display a list of friends with their profile links. The list should be responsive, mobile-first, and accessible. Each friend's profile link should be displayed with their name and a profile picture.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Friends List</h2><ul class=\"flex flex-wrap justify-center mb-4\"><FriendItem/><FriendItem/><FriendItem/></ul></div>",
      "components": [
        {
          "name": "FriendItem",
          "is_standalone": true,
          "description": "A standalone component representing a single friend's profile link.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><a href=\"{profileLink}\" class=\"block\"><img src=\"{profilePicture}\" alt=\"{friendName}\" class=\"w-12 h-12 rounded-full mb-2\"><span class=\"text-lg\">{friendName}</span></a></li>"
        },
        {
          "name": "FriendsList",
          "is_standalone": false,
          "description": "A component that takes children ( FriendItems ) and renders them in an unordered list.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The Friends List UI should display a list of friends with their profile links. The list should be responsive, mobile-first, and accessible. Each friend's profile link should be displayed with their name and a profile picture.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Friends List</h2><ul class=\"flex flex-wrap justify-center mb-4\"><FriendItem/><FriendItem/><FriendItem/></ul></div>",
      "components": [
        {
          "name": "FriendItem",
          "is_standalone": true,
          "description": "A standalone component representing a single friend's profile link.",
          "html": "<li class=\"w-full md:w-1/2 lg:w-1/3 xl:w-1/4 p-4\"><a href=\"{profileLink}\" class=\"block\"><img src=\"{profilePicture}\" alt=\"{friendName}\" class=\"w-12 h-12 rounded-full mb-2\"><span class=\"text-lg\">{friendName}</span></a></li>"
        },
        {
          "name": "FriendsList",
          "is_standalone": false,
          "description": "A component that takes children ( FriendItems ) and renders them in an unordered list.",
          "html": "<ul class=\"flex flex-wrap justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of friends with profile links. The list should be displayed in a grid on larger screens and a vertical list on smaller screens. Each friend's name should be a link to their profile.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Friends</h2><FriendsList><!-- friend cards will be inserted here --><FriendCard/><FriendCard/><!-- ... --></FriendsList></div>",
      "components": [
        {
          "name": "FriendCard",
          "is_standalone": true,
          "description": "(standalone): a single friend's information with a profile link",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_image_url} alt=\"Profile image\" class=\"w-12 h-12 rounded-full mr-4\"/><a href={profile_url} class=\"text-blue-600 hover:text-blue-900\">{friend_name}</a></div>"
        },
        {
          "name": "FriendsList",
          "is_standalone": false,
          "description": "(takes children): a container for the list of friends",
          "html": "<ul class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Add to cart and wishlist buttons": [
    {
      "description": "The UI should be a simple container with two buttons, one for adding to cart and one for adding to wishlist. The buttons should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ButtonContainer><AddToCartButton/><AddToWishlistButton/></ButtonContainer></div>",
      "components": [
        {
          "name": "AddToCartButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "AddToWishlistButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Add to Wishlist</button>"
        },
        {
          "name": "ButtonContainer",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple container with two buttons, one for adding to cart and one for adding to wishlist. The buttons should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ButtonContainer><AddToCartButton/><AddToWishlistButton/></ButtonContainer></div>",
      "components": [
        {
          "name": "AddToCartButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "AddToWishlistButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Add to Wishlist</button>"
        },
        {
          "name": "ButtonContainer",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple container with two buttons, one for adding to cart and one for adding to wishlist. The buttons should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ButtonContainer><AddToCartButton/><AddToWishlistButton/></ButtonContainer></div>",
      "components": [
        {
          "name": "AddToCartButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "AddToWishlistButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Add to Wishlist</button>"
        },
        {
          "name": "ButtonContainer",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple container with two buttons, one for adding to cart and one for adding to wishlist. The buttons should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ButtonContainer><AddToCartButton/><AddToWishlistButton/></ButtonContainer></div>",
      "components": [
        {
          "name": "AddToCartButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "AddToWishlistButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Add to Wishlist</button>"
        },
        {
          "name": "ButtonContainer",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple container with two buttons, one for adding to cart and one for adding to wishlist. The buttons should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ButtonContainer><AddToCartButton/><AddToWishlistButton/></ButtonContainer></div>",
      "components": [
        {
          "name": "AddToCartButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "AddToWishlistButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Add to Wishlist</button>"
        },
        {
          "name": "ButtonContainer",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple container with two buttons, one for adding to cart and one for adding to wishlist. The buttons should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ButtonContainer><AddToCartButton/><AddToWishlistButton/></ButtonContainer></div>",
      "components": [
        {
          "name": "AddToCartButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button>"
        },
        {
          "name": "AddToWishlistButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded\">Add to Wishlist</button>"
        },
        {
          "name": "ButtonContainer",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Post list with title, score, and comments": [
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    },
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    },
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    },
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    },
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    },
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    },
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    },
    {
      "description": "A list of posts with each item displaying the title, score, and number of comments. The list should be responsive, with a maximum of 3 items per row on larger screens and 1 item per row on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h1 class=\"text-2xl font-bold mb-4\">Post List</h1><PostList><!-- list of post items --></PostList></div>",
      "components": [
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the list of post items.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A post list with a title, score, and comments. The list should be responsive and accessible. On mobile, the score and comments should be stacked vertically, and on larger screens, they should be side by side.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PostListItem/><PostListItem/><!-- Add more PostListItem components here --></div>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single post item in the list.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><PostTitle/><div class=\"flex justify-between mb-2\"><PostScore/><PostComments/></div><hr class=\"mb-4\"/></div>"
        },
        {
          "name": "PostTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the post.",
          "html": "<h2 class=\"text-lg font-bold\">{post_title}</h2>"
        },
        {
          "name": "PostScore",
          "is_standalone": true,
          "description": "A standalone component that displays the score of the post.",
          "html": "<p class=\"text-sm\">{score} points</p>"
        },
        {
          "name": "PostComments",
          "is_standalone": true,
          "description": "A standalone component that displays the comments of the post.",
          "html": "<p class=\"text-sm\">{comment_count} comments</p>"
        }
      ]
    }
  ],
  "Hashtag and @Mention Links": [
    {
      "description": "The UI should display a list of hashtag and @mention links. The links should be styled with a subtle background color and underline on hover. The text should be black with a decent font size. The list should be responsive and stack vertically on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone): A single hashtag link component.",
          "html": "<a href={hashtag_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone): A single @mention link component.",
          "html": "<a href={mention_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{mention_username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children): A container component that holds a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links. The links should be styled with a subtle background color and underline on hover. The text should be black with a decent font size. The list should be responsive and stack vertically on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone): A single hashtag link component.",
          "html": "<a href={hashtag_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone): A single @mention link component.",
          "html": "<a href={mention_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{mention_username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children): A container component that holds a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links, with each link displaying a unique identifier (e.g., #hashtag or @username). The links should be styled differently to distinguish between hashtags and @mentions.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><h2 class=\"text-lg font-bold\">Links</h2><LinkList><HashtagLink/><!-- displays a hashtag link --><MentionLink/><!-- displays an @mention link --><!-- add more links as needed --></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "a standalone component displaying a hashtag link.",
          "html": "<a href `{hashtag_url}` class=\"text-blue-600 hover:text-blue-900\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "a standalone component displaying an @mention link.",
          "html": "<a href `{mention_url}` class=\"text-orange-600 hover:text-orange-900\">@{username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "a component that takes children, displaying a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag links and @mention links. Each link should have a distinct style to differentiate between the two types of links.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><HashtagLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone) - represents a single hashtag link",
          "html": "<a href={`/${hashtag_value}`} class=\"text-blue-500 hover:text-blue-700 transition duration-300\">#{hashtag_value}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone) - represents a single @mention link",
          "html": "<a href={`/@${username}`} class=\"text-green-500 hover:text-green-700 transition duration-300\">@{username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children) - a container for a list of links",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links. The links should be styled with a subtle background color and underline on hover. The text should be black with a decent font size. The list should be responsive and stack vertically on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone): A single hashtag link component.",
          "html": "<a href={hashtag_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone): A single @mention link component.",
          "html": "<a href={mention_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{mention_username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children): A container component that holds a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links. The links should be styled with a subtle background color and underline on hover. The text should be black with a decent font size. The list should be responsive and stack vertically on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone): A single hashtag link component.",
          "html": "<a href={hashtag_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone): A single @mention link component.",
          "html": "<a href={mention_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{mention_username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children): A container component that holds a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links. The links should be styled with a subtle background color and underline on hover. The text should be black with a decent font size. The list should be responsive and stack vertically on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone): A single hashtag link component.",
          "html": "<a href={hashtag_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone): A single @mention link component.",
          "html": "<a href={mention_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{mention_username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children): A container component that holds a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links. The links should be styled with a subtle background color and underline on hover. The text should be black with a decent font size. The list should be responsive and stack vertically on smaller screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><LinkList><HashtagLink/><HashtagLink/><MentionLink/><MentionLink/></LinkList></div>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "(standalone): A single hashtag link component.",
          "html": "<a href={hashtag_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "(standalone): A single @mention link component.",
          "html": "<a href={mention_url} class=\"text-black hover:underline hover:bg-gray-100 transition duration-300 ease-in-out\">{mention_username}</a>"
        },
        {
          "name": "LinkList",
          "is_standalone": false,
          "description": "(takes children): A container component that holds a list of hashtag and @mention links.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of hashtag and @mention links, each link is clickable and can be styled differently.",
      "html": "<ul class=\"flex flex-wrap gap-2\"><li><HashtagLink/></li><li><MentionLink/></li><!-- more links here --></ul>",
      "components": [
        {
          "name": "HashtagLink",
          "is_standalone": true,
          "description": "standalone, represents a single hashtag link.",
          "html": "<a href={hashtag_link} class=\"text-blue-600 hover:text-blue-900 transition duration-300\">{hashtag_text}</a>"
        },
        {
          "name": "MentionLink",
          "is_standalone": true,
          "description": "standalone, represents a single @mention link.",
          "html": "<a href={mention_link} class=\"text-blue-600 hover:text-blue-900 transition duration-300\">@{mention_text}</a>"
        }
      ]
    }
  ],
  "Like Button: Button for liking a post": [
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    },
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    },
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    },
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    },
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    },
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    },
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    },
    {
      "description": "The Like Button should be a small, clickable icon with a heart symbol. When the user clicks the button, the heart symbol should turn red to indicate that the post has been liked. The button should also display the number of likes next to the heart symbol.",
      "html": "<div class=\"flex gap-2\"><LikeButton/><LikeCounter/></div>",
      "components": [
        {
          "name": "LikeButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"p-2 rounded hover:bg-gray-200 active:bg-gray-300\">{liked ? <span class=\"text-red-600\">♥</span>: <span>♥</span>}</button>"
        },
        {
          "name": "LikeCounter",
          "is_standalone": true,
          "description": "standalone",
          "html": "<p class=\"text-sm text-gray-600\">{like_count} likes</p>"
        }
      ]
    }
  ],
  "Unobtrusive JavaScript": [
    {
      "description": "A simple webpage with a heading, a paragraph of text, and a button that changes the text when clicked.",
      "html": "<div class=\"h-screen flex flex-col justify-center items-center\"><PageHeader/><PageContent><p id=\"text\">{initial_text}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Click me!</button></PageContent></div>",
      "components": [
        {
          "name": "PageHeader",
          "is_standalone": true,
          "description": "standalone",
          "html": "<header class=\"mb-4\"><h1 class=\"text-3xl font-bold\">Unobtrusive JavaScript</h1></header>"
        },
        {
          "name": "PageContent",
          "is_standalone": false,
          "description": "takes children",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Order summary and subtotal display": [
    {
      "description": "The UI should be a compact display of the order summary and subtotal, with clear labels and values. It should be responsive and adaptable to small screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><OrderSummary/><OrderSubtotal/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone, displays the order summary",
          "html": "<div class=\"text-lg\">{order_summary_text}</div>"
        },
        {
          "name": "OrderSubtotal",
          "is_standalone": true,
          "description": "standalone, displays the subtotal",
          "html": "<div class=\"text-lg font-bold\">Subtotal: {subtotal_amount}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact display of the order summary and subtotal, with clear labels and values. It should be responsive and adaptable to small screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><OrderSummary/><OrderSubtotal/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone, displays the order summary",
          "html": "<div class=\"text-lg\">{order_summary_text}</div>"
        },
        {
          "name": "OrderSubtotal",
          "is_standalone": true,
          "description": "standalone, displays the subtotal",
          "html": "<div class=\"text-lg font-bold\">Subtotal: {subtotal_amount}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a summary of the order, including the subtotal, in a clean and simple format.",
      "html": "<div class=\"p-4 bg-white rounded shadow-md\"><OrderSummary/><SubtotalDisplay/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone component that displays the order summary.",
          "html": "<p class=\"text-lg font-bold\">Order Summary:</p><ul><li class=\"py-2\">Items: {item_count}</li><li class=\"py-2\">Total weight: {total_weight} kg</li><li class=\"py-2\">Shipping: {shipping_method}</li></ul>"
        },
        {
          "name": "SubtotalDisplay",
          "is_standalone": true,
          "description": "standalone component that displays the subtotal.",
          "html": "<p class=\"text-lg font-bold\">Subtotal: <span class=\"text-orange-600\">{subtotal_amount}</span></p>"
        }
      ]
    },
    {
      "description": "The UI should be a compact display of the order summary and subtotal, with clear labels and values. It should be responsive and adaptable to small screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><OrderSummary/><OrderSubtotal/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone, displays the order summary",
          "html": "<div class=\"text-lg\">{order_summary_text}</div>"
        },
        {
          "name": "OrderSubtotal",
          "is_standalone": true,
          "description": "standalone, displays the subtotal",
          "html": "<div class=\"text-lg font-bold\">Subtotal: {subtotal_amount}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact display of the order summary and subtotal, with clear labels and values. It should be responsive and adaptable to small screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><OrderSummary/><OrderSubtotal/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone, displays the order summary",
          "html": "<div class=\"text-lg\">{order_summary_text}</div>"
        },
        {
          "name": "OrderSubtotal",
          "is_standalone": true,
          "description": "standalone, displays the subtotal",
          "html": "<div class=\"text-lg font-bold\">Subtotal: {subtotal_amount}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact display of the order summary and subtotal, with clear labels and values. It should be responsive and adaptable to small screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><OrderSummary/><OrderSubtotal/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone, displays the order summary",
          "html": "<div class=\"text-lg\">{order_summary_text}</div>"
        },
        {
          "name": "OrderSubtotal",
          "is_standalone": true,
          "description": "standalone, displays the subtotal",
          "html": "<div class=\"text-lg font-bold\">Subtotal: {subtotal_amount}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a compact display of the order summary and subtotal, with clear labels and values. It should be responsive and adaptable to small screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><OrderSummary/><OrderSubtotal/></div>",
      "components": [
        {
          "name": "OrderSummary",
          "is_standalone": true,
          "description": "standalone, displays the order summary",
          "html": "<div class=\"text-lg\">{order_summary_text}</div>"
        },
        {
          "name": "OrderSubtotal",
          "is_standalone": true,
          "description": "standalone, displays the subtotal",
          "html": "<div class=\"text-lg font-bold\">Subtotal: {subtotal_amount}</div>"
        }
      ]
    },
    {
      "description": "The UI should display an order summary with a subtotal, taxes, and a total. The design should be responsive, with a mobile-first approach, and follow accessibility guidelines.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6\"><h2 class=\"text-lg font-bold mb-2\">Order Summary</h2><OrderSummaryComponent/><div class=\"flex justify-between mb-2\"><SubtotalComponent/><TaxComponent/></div><TotalComponent/></section>",
      "components": [
        {
          "name": "OrderSummaryComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the order summary",
          "html": "<ul class=\"list-none mb-4\"><li class=\"flex justify-between mb-2\">{item_name} x {item_quantity}</li><!-- repeat for each item in the order --></ul>"
        },
        {
          "name": "SubtotalComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the subtotal",
          "html": "<p>Subtotal: <span class=\"font-bold\">{subtotal_amount}</span></p>"
        },
        {
          "name": "TaxComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the tax",
          "html": "<p>Tax ({tax_percentage}%): <span class=\"font-bold\">{tax_amount}</span></p>"
        },
        {
          "name": "TotalComponent",
          "is_standalone": true,
          "description": "(standalone) - displays the total",
          "html": "<p class=\"text-lg font-bold\">Total: <span class=\"text-lg font-bold\">{total_amount}</span></p>"
        }
      ]
    }
  ],
  "Featured Image Zoom Level": [
    {
      "description": "The UI should display a featured image with a zoom level indicator, allowing users to zoom in or out of the image. The image should be responsive, adapting to different screen sizes and devices. The zoom level indicator should be visually appealing and easy to use.",
      "html": "<div class=\"flex justify-center\"><FeaturedImage/><ZoomControl><button>+</button><button>-</button></ZoomControl><ZoomLevelIndicator/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "a standalone component that displays the featured image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-full object-cover\"/>"
        },
        {
          "name": "ZoomLevelIndicator",
          "is_standalone": true,
          "description": "a standalone component that displays the zoom level indicator.",
          "html": "<p>Zoom: {zoom_level}%</p>"
        },
        {
          "name": "ZoomControl",
          "is_standalone": false,
          "description": "a component that takes children (e.g., zoom in and zoom out buttons).",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a featured image with a zoom level indicator, allowing users to zoom in or out of the image. The image should be responsive, adapting to different screen sizes and devices. The zoom level indicator should be visually appealing and easy to use.",
      "html": "<div class=\"flex justify-center\"><FeaturedImage/><ZoomControl><button>+</button><button>-</button></ZoomControl><ZoomLevelIndicator/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "a standalone component that displays the featured image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-full object-cover\"/>"
        },
        {
          "name": "ZoomLevelIndicator",
          "is_standalone": true,
          "description": "a standalone component that displays the zoom level indicator.",
          "html": "<p>Zoom: {zoom_level}%</p>"
        },
        {
          "name": "ZoomControl",
          "is_standalone": false,
          "description": "a component that takes children (e.g., zoom in and zoom out buttons).",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a featured image with a zoom level indicator, allowing users to zoom in or out of the image. The image should be responsive, adapting to different screen sizes and devices. The zoom level indicator should be visually appealing and easy to use.",
      "html": "<div class=\"flex justify-center\"><FeaturedImage/><ZoomControl><button>+</button><button>-</button></ZoomControl><ZoomLevelIndicator/></div>",
      "components": [
        {
          "name": "FeaturedImage",
          "is_standalone": true,
          "description": "a standalone component that displays the featured image.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-full object-cover\"/>"
        },
        {
          "name": "ZoomLevelIndicator",
          "is_standalone": true,
          "description": "a standalone component that displays the zoom level indicator.",
          "html": "<p>Zoom: {zoom_level}%</p>"
        },
        {
          "name": "ZoomControl",
          "is_standalone": false,
          "description": "a component that takes children (e.g., zoom in and zoom out buttons).",
          "html": "<div class=\"flex justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "Blog Post Author Profile": [
    {
      "description": "The UI should display the author's profile information, including their name, profile picture, bio, and social media links. The profile picture should be circular and surrounded by a subtle border. The bio should be displayed in a readable font size, and the social media links should be displayed as icons with a subtle hover effect.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><AuthorProfile/></div>",
      "components": [
        {
          "name": "AuthorProfile",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile information.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg font-bold\">{authorName}</h5><AuthorBio/><SocialMediaLinks><!-- Social media links will be rendered here --></SocialMediaLinks></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Author Profile Picture\" class=\"w-20 h-20 rounded-full border-2 border-gray-200\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that renders the author's bio.",
          "html": "<p class=\"text-lg\">{authorBio}</p>"
        },
        {
          "name": "SocialMediaLinks",
          "is_standalone": false,
          "description": "Component that renders the author's social media links, takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display the author's profile information, including their name, profile picture, bio, and social media links. The profile picture should be circular and surrounded by a subtle border. The bio should be displayed in a readable font size, and the social media links should be displayed as icons with a subtle hover effect.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><AuthorProfile/></div>",
      "components": [
        {
          "name": "AuthorProfile",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile information.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg font-bold\">{authorName}</h5><AuthorBio/><SocialMediaLinks><!-- Social media links will be rendered here --></SocialMediaLinks></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Author Profile Picture\" class=\"w-20 h-20 rounded-full border-2 border-gray-200\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that renders the author's bio.",
          "html": "<p class=\"text-lg\">{authorBio}</p>"
        },
        {
          "name": "SocialMediaLinks",
          "is_standalone": false,
          "description": "Component that renders the author's social media links, takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display the author's profile information, including their name, profile picture, bio, and social media links. The profile picture should be circular and surrounded by a subtle border. The bio should be displayed in a readable font size, and the social media links should be displayed as icons with a subtle hover effect.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><AuthorProfile/></div>",
      "components": [
        {
          "name": "AuthorProfile",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile information.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg font-bold\">{authorName}</h5><AuthorBio/><SocialMediaLinks><!-- Social media links will be rendered here --></SocialMediaLinks></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Author Profile Picture\" class=\"w-20 h-20 rounded-full border-2 border-gray-200\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that renders the author's bio.",
          "html": "<p class=\"text-lg\">{authorBio}</p>"
        },
        {
          "name": "SocialMediaLinks",
          "is_standalone": false,
          "description": "Component that renders the author's social media links, takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display the author's profile information, including their name, profile picture, bio, and social media links. The profile picture should be circular and surrounded by a subtle border. The bio should be displayed in a readable font size, and the social media links should be displayed as icons with a subtle hover effect.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><AuthorProfile/></div>",
      "components": [
        {
          "name": "AuthorProfile",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile information.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg font-bold\">{authorName}</h5><AuthorBio/><SocialMediaLinks><!-- Social media links will be rendered here --></SocialMediaLinks></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Author Profile Picture\" class=\"w-20 h-20 rounded-full border-2 border-gray-200\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that renders the author's bio.",
          "html": "<p class=\"text-lg\">{authorBio}</p>"
        },
        {
          "name": "SocialMediaLinks",
          "is_standalone": false,
          "description": "Component that renders the author's social media links, takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display the author's profile information, including their name, profile picture, bio, and social media links. The profile picture should be circular and surrounded by a subtle border. The bio should be displayed in a readable font size, and the social media links should be displayed as icons with a subtle hover effect.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><AuthorProfile/></div>",
      "components": [
        {
          "name": "AuthorProfile",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile information.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg font-bold\">{authorName}</h5><AuthorBio/><SocialMediaLinks><!-- Social media links will be rendered here --></SocialMediaLinks></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Author Profile Picture\" class=\"w-20 h-20 rounded-full border-2 border-gray-200\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that renders the author's bio.",
          "html": "<p class=\"text-lg\">{authorBio}</p>"
        },
        {
          "name": "SocialMediaLinks",
          "is_standalone": false,
          "description": "Component that renders the author's social media links, takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display the author's profile information, including their name, profile picture, bio, and social media links. The profile picture should be circular and surrounded by a subtle border. The bio should be displayed in a readable font size, and the social media links should be displayed as icons with a subtle hover effect.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><AuthorProfile/></div>",
      "components": [
        {
          "name": "AuthorProfile",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile information.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg font-bold\">{authorName}</h5><AuthorBio/><SocialMediaLinks><!-- Social media links will be rendered here --></SocialMediaLinks></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Author Profile Picture\" class=\"w-20 h-20 rounded-full border-2 border-gray-200\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that renders the author's bio.",
          "html": "<p class=\"text-lg\">{authorBio}</p>"
        },
        {
          "name": "SocialMediaLinks",
          "is_standalone": false,
          "description": "Component that renders the author's social media links, takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display the author's profile information, including their name, profile picture, bio, and social media links. The profile picture should be circular and surrounded by a subtle border. The bio should be displayed in a readable font size, and the social media links should be displayed as icons with a subtle hover effect.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><AuthorProfile/></div>",
      "components": [
        {
          "name": "AuthorProfile",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile information.",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg font-bold\">{authorName}</h5><AuthorBio/><SocialMediaLinks><!-- Social media links will be rendered here --></SocialMediaLinks></div></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that renders the author's profile picture.",
          "html": "<img src={profilePictureUrl} alt=\"Author Profile Picture\" class=\"w-20 h-20 rounded-full border-2 border-gray-200\"/>"
        },
        {
          "name": "AuthorBio",
          "is_standalone": true,
          "description": "Standalone component that renders the author's bio.",
          "html": "<p class=\"text-lg\">{authorBio}</p>"
        },
        {
          "name": "SocialMediaLinks",
          "is_standalone": false,
          "description": "Component that renders the author's social media links, takes children.",
          "html": "<ul class=\"flex justify-center mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "User profile with karma, post history, and info": [
    {
      "description": "The UI should display a user's profile information, including their karma score, post history, and additional info. The profile should be divided into sections, with each section having a clear heading and concise information. The design should be clean, minimalistic, and easy to read.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><UserProfileCard/><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Post History</h2><PostHistoryList/></div><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Info</h2><InfoSection/></div></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile information, including their karma score and additional info.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h1 class=\"text-lg font-bold\">{username}</h1><p>Karma: {karma_score}</p><p>{bio}</p></div>"
        },
        {
          "name": "PostHistoryList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of the user's post history.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "PostHistoryItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single post's information, including the post title, date, and content.",
          "html": "<li class=\"py-4 border-b border-gray-200 last:border-0\"><h3 class=\"text-lg\">{post_title}</h3><p class=\"text-sm\">{post_date}</p><p>{post_content}</p></li>"
        },
        {
          "name": "InfoSection",
          "is_standalone": false,
          "description": "A component that takes children, displaying additional information about the user.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg font-bold\">Info</h2>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile information, including their karma score, post history, and additional info. The profile should be divided into sections, with each section having a clear heading and concise information. The design should be clean, minimalistic, and easy to read.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><UserProfileCard/><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Post History</h2><PostHistoryList/></div><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Info</h2><InfoSection/></div></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile information, including their karma score and additional info.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h1 class=\"text-lg font-bold\">{username}</h1><p>Karma: {karma_score}</p><p>{bio}</p></div>"
        },
        {
          "name": "PostHistoryList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of the user's post history.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "PostHistoryItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single post's information, including the post title, date, and content.",
          "html": "<li class=\"py-4 border-b border-gray-200 last:border-0\"><h3 class=\"text-lg\">{post_title}</h3><p class=\"text-sm\">{post_date}</p><p>{post_content}</p></li>"
        },
        {
          "name": "InfoSection",
          "is_standalone": false,
          "description": "A component that takes children, displaying additional information about the user.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg font-bold\">Info</h2>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile information, including their karma score, post history, and additional info. The profile should be divided into sections, with each section having a clear heading and concise information. The design should be clean, minimalistic, and easy to read.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><UserProfileCard/><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Post History</h2><PostHistoryList/></div><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Info</h2><InfoSection/></div></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile information, including their karma score and additional info.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h1 class=\"text-lg font-bold\">{username}</h1><p>Karma: {karma_score}</p><p>{bio}</p></div>"
        },
        {
          "name": "PostHistoryList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of the user's post history.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "PostHistoryItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single post's information, including the post title, date, and content.",
          "html": "<li class=\"py-4 border-b border-gray-200 last:border-0\"><h3 class=\"text-lg\">{post_title}</h3><p class=\"text-sm\">{post_date}</p><p>{post_content}</p></li>"
        },
        {
          "name": "InfoSection",
          "is_standalone": false,
          "description": "A component that takes children, displaying additional information about the user.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg font-bold\">Info</h2>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a user's profile information, including their karma score, post history, and additional info. The profile should be divided into sections, with each section having a clear heading and concise information. The design should be clean, minimalistic, and easy to read.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><UserProfileCard/><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Post History</h2><PostHistoryList/></div><div class=\"mt-6\"><h2 class=\"text-lg font-bold\">Info</h2><InfoSection/></div></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "A standalone component that displays the user's profile information, including their karma score and additional info.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h1 class=\"text-lg font-bold\">{username}</h1><p>Karma: {karma_score}</p><p>{bio}</p></div>"
        },
        {
          "name": "PostHistoryList",
          "is_standalone": false,
          "description": "A component that takes children, displaying a list of the user's post history.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        },
        {
          "name": "PostHistoryItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single post's information, including the post title, date, and content.",
          "html": "<li class=\"py-4 border-b border-gray-200 last:border-0\"><h3 class=\"text-lg\">{post_title}</h3><p class=\"text-sm\">{post_date}</p><p>{post_content}</p></li>"
        },
        {
          "name": "InfoSection",
          "is_standalone": false,
          "description": "A component that takes children, displaying additional information about the user.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg font-bold\">Info</h2>{children}</div>"
        }
      ]
    }
  ],
  "Navigation Menu Toggle Text": [
    {
      "description": "The UI should be a responsive navigation menu toggle text that displays a toggle icon and a label. On desktop, it should be a horizontal layout, and on mobile, it should be a vertical layout.",
      "html": "<div class=\"flex lg:flex-row flex-col justify-between w-full\"><NavigationToggle/></div>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that contains the toggle icon and the label.",
          "html": "<div class=\"flex justify-center lg:justify-start mb-4 lg:mb-0\"><!-- toggle icon --><span class=\"material-icons text-lg md:text-xl\">{toggle_icon}</span><!-- toggle label --><span class=\"ml-2 text-sm md:text-base\">{toggle_label}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle text that adapts to different screen sizes. On smaller screens, the toggle text should be displayed, and on larger screens, the navigation menu should be visible.",
      "html": "<div class=\"flex justify-between items-center w-full lg:hidden\"><NavigationToggleText/><NavigationMenu><!-- navigation menu items will be inserted here --></NavigationMenu></div>",
      "components": [
        {
          "name": "NavigationToggleText",
          "is_standalone": true,
          "description": "(standalone): displays the toggle text for the navigation menu",
          "html": "<a href=\"#\" class=\"text-lg font-bold hover:text-gray-700\">{menuToggleText}</a>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "(takes children): displays the navigation menu items",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-center\"><ul class=\"lg:flex lg:flex-wrap\">{children} </ul></nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle text that displays a toggle icon and a label. On desktop, it should be a horizontal layout, and on mobile, it should be a vertical layout.",
      "html": "<div class=\"flex lg:flex-row flex-col justify-between w-full\"><NavigationToggle/></div>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that contains the toggle icon and the label.",
          "html": "<div class=\"flex justify-center lg:justify-start mb-4 lg:mb-0\"><!-- toggle icon --><span class=\"material-icons text-lg md:text-xl\">{toggle_icon}</span><!-- toggle label --><span class=\"ml-2 text-sm md:text-base\">{toggle_label}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle text that adapts to different screen sizes. On smaller screens, the toggle text should be displayed, and on larger screens, the navigation menu should be visible.",
      "html": "<div class=\"flex justify-between items-center w-full lg:hidden\"><NavigationToggleText/><NavigationMenu><!-- navigation menu items will be inserted here --></NavigationMenu></div>",
      "components": [
        {
          "name": "NavigationToggleText",
          "is_standalone": true,
          "description": "(standalone): displays the toggle text for the navigation menu",
          "html": "<a href=\"#\" class=\"text-lg font-bold hover:text-gray-700\">{menuToggleText}</a>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "(takes children): displays the navigation menu items",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-center\"><ul class=\"lg:flex lg:flex-wrap\">{children} </ul></nav>"
        }
      ]
    },
    {
      "description": "The UI should display a toggle button to open and close a navigation menu. The toggle button should display a text indicating its current state.",
      "html": "<nav class=\"flex justify-between items-center py-4\"><NavbarToggler/><NavbarToggleText/></nav>",
      "components": [
        {
          "name": "NavbarToggler",
          "is_standalone": true,
          "description": "A standalone component that toggles the navigation menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Toggle navigation menu\"><span class=\"sr-only\">{toggleButtonText}</span></button>"
        },
        {
          "name": "NavbarToggleText",
          "is_standalone": true,
          "description": "A standalone component that displays the toggle button text.",
          "html": "<span class=\"text-sm\">{toggleButtonText}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle text that displays a toggle icon and a label. On desktop, it should be a horizontal layout, and on mobile, it should be a vertical layout.",
      "html": "<div class=\"flex lg:flex-row flex-col justify-between w-full\"><NavigationToggle/></div>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that contains the toggle icon and the label.",
          "html": "<div class=\"flex justify-center lg:justify-start mb-4 lg:mb-0\"><!-- toggle icon --><span class=\"material-icons text-lg md:text-xl\">{toggle_icon}</span><!-- toggle label --><span class=\"ml-2 text-sm md:text-base\">{toggle_label}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle text that adapts to different screen sizes. On smaller screens, the toggle text should be displayed, and on larger screens, the navigation menu should be visible.",
      "html": "<div class=\"flex justify-between items-center w-full lg:hidden\"><NavigationToggleText/><NavigationMenu><!-- navigation menu items will be inserted here --></NavigationMenu></div>",
      "components": [
        {
          "name": "NavigationToggleText",
          "is_standalone": true,
          "description": "(standalone): displays the toggle text for the navigation menu",
          "html": "<a href=\"#\" class=\"text-lg font-bold hover:text-gray-700\">{menuToggleText}</a>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "(takes children): displays the navigation menu items",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-center\"><ul class=\"lg:flex lg:flex-wrap\">{children} </ul></nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle text that displays a toggle icon and a label. On desktop, it should be a horizontal layout, and on mobile, it should be a vertical layout.",
      "html": "<div class=\"flex lg:flex-row flex-col justify-between w-full\"><NavigationToggle/></div>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that contains the toggle icon and the label.",
          "html": "<div class=\"flex justify-center lg:justify-start mb-4 lg:mb-0\"><!-- toggle icon --><span class=\"material-icons text-lg md:text-xl\">{toggle_icon}</span><!-- toggle label --><span class=\"ml-2 text-sm md:text-base\">{toggle_label}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle text that adapts to different screen sizes. On smaller screens, the toggle text should be displayed, and on larger screens, the navigation menu should be visible.",
      "html": "<div class=\"flex justify-between items-center w-full lg:hidden\"><NavigationToggleText/><NavigationMenu><!-- navigation menu items will be inserted here --></NavigationMenu></div>",
      "components": [
        {
          "name": "NavigationToggleText",
          "is_standalone": true,
          "description": "(standalone): displays the toggle text for the navigation menu",
          "html": "<a href=\"#\" class=\"text-lg font-bold hover:text-gray-700\">{menuToggleText}</a>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "(takes children): displays the navigation menu items",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-center\"><ul class=\"lg:flex lg:flex-wrap\">{children} </ul></nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle text that displays a toggle icon and a label. On desktop, it should be a horizontal layout, and on mobile, it should be a vertical layout.",
      "html": "<div class=\"flex lg:flex-row flex-col justify-between w-full\"><NavigationToggle/></div>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that contains the toggle icon and the label.",
          "html": "<div class=\"flex justify-center lg:justify-start mb-4 lg:mb-0\"><!-- toggle icon --><span class=\"material-icons text-lg md:text-xl\">{toggle_icon}</span><!-- toggle label --><span class=\"ml-2 text-sm md:text-base\">{toggle_label}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle text that adapts to different screen sizes. On smaller screens, the toggle text should be displayed, and on larger screens, the navigation menu should be visible.",
      "html": "<div class=\"flex justify-between items-center w-full lg:hidden\"><NavigationToggleText/><NavigationMenu><!-- navigation menu items will be inserted here --></NavigationMenu></div>",
      "components": [
        {
          "name": "NavigationToggleText",
          "is_standalone": true,
          "description": "(standalone): displays the toggle text for the navigation menu",
          "html": "<a href=\"#\" class=\"text-lg font-bold hover:text-gray-700\">{menuToggleText}</a>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "(takes children): displays the navigation menu items",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-center\"><ul class=\"lg:flex lg:flex-wrap\">{children} </ul></nav>"
        }
      ]
    },
    {
      "description": "The UI should display a toggle button to open and close a navigation menu. The toggle button should display a text indicating its current state.",
      "html": "<nav class=\"flex justify-between items-center py-4\"><NavbarToggler/><NavbarToggleText/></nav>",
      "components": [
        {
          "name": "NavbarToggler",
          "is_standalone": true,
          "description": "A standalone component that toggles the navigation menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Toggle navigation menu\"><span class=\"sr-only\">{toggleButtonText}</span></button>"
        },
        {
          "name": "NavbarToggleText",
          "is_standalone": true,
          "description": "A standalone component that displays the toggle button text.",
          "html": "<span class=\"text-sm\">{toggleButtonText}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive navigation menu toggle text that displays a toggle icon and a label. On desktop, it should be a horizontal layout, and on mobile, it should be a vertical layout.",
      "html": "<div class=\"flex lg:flex-row flex-col justify-between w-full\"><NavigationToggle/></div>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "Standalone component that contains the toggle icon and the label.",
          "html": "<div class=\"flex justify-center lg:justify-start mb-4 lg:mb-0\"><!-- toggle icon --><span class=\"material-icons text-lg md:text-xl\">{toggle_icon}</span><!-- toggle label --><span class=\"ml-2 text-sm md:text-base\">{toggle_label}</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle text that adapts to different screen sizes. On smaller screens, the toggle text should be displayed, and on larger screens, the navigation menu should be visible.",
      "html": "<div class=\"flex justify-between items-center w-full lg:hidden\"><NavigationToggleText/><NavigationMenu><!-- navigation menu items will be inserted here --></NavigationMenu></div>",
      "components": [
        {
          "name": "NavigationToggleText",
          "is_standalone": true,
          "description": "(standalone): displays the toggle text for the navigation menu",
          "html": "<a href=\"#\" class=\"text-lg font-bold hover:text-gray-700\">{menuToggleText}</a>"
        },
        {
          "name": "NavigationMenu",
          "is_standalone": false,
          "description": "(takes children): displays the navigation menu items",
          "html": "<nav class=\"lg:flex lg:flex-wrap lg:justify-center\"><ul class=\"lg:flex lg:flex-wrap\">{children} </ul></nav>"
        }
      ]
    }
  ],
  "Switches/Toggles/Buttons": [
    {
      "description": "A toggle button, a switch, and a button, each with a different style, layout, and purpose.",
      "html": "<div class=\"flex flex-col gap-4 p-4\"><ToggleSwitch/><SwitchButton/><ActionButton/></div>",
      "components": [
        {
          "name": "ToggleSwitch",
          "is_standalone": true,
          "description": "A toggle switch component that can be either on or off. Standalone.",
          "html": "<label class=\"inline-flex items-center\"><input type=\"checkbox\" class=\"hidden\"/><span class=\"toggle-slider round\"></span></label>"
        },
        {
          "name": "SwitchButton",
          "is_standalone": true,
          "description": "A switch button component that can be either enabled or disabled. Standalone.",
          "html": "<button class=\"bg-{color}-500 hover:bg-{color}-700 text-white hover:text-white py-2 px-4 rounded\">{label}</button>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "A button component that can be clicked to perform an action. Standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white hover:text-white py-2 px-4 rounded\">{label}</button>"
        }
      ]
    }
  ],
  "Page Content List Item": [
    {
      "description": "A list item that displays a brief summary of a piece of content, such as a blog post or a tutorial. The UI should be responsive, mobile-friendly, and accessible.",
      "html": "<ul class=\"flex flex-wrap justify-center mb-4\"><PageContentListItem/><!-- More list items... --></ul>",
      "components": [
        {
          "name": "PageContentListItem",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of a piece of content.",
          "html": "<li class=\"flex flex-wrap w-full md:w-1/2 xl:w-1/3 p-4\"><ContentThumbnail/><div class=\"flex-1 pl-4\"><h2 class=\"text-lg\">{title}</h2><ContentSummary/><p class=\"text-sm text-gray-600\">{brief_description}</p></div></li>"
        },
        {
          "name": "ContentThumbnail",
          "is_standalone": true,
          "description": "Standalone component that displays a thumbnail image for the content.",
          "html": "<img src={thumbnail_url} alt={title} class=\"w-24 h-24 object-cover rounded-sm\"/>"
        },
        {
          "name": "ContentSummary",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of the content.",
          "html": "<p class=\"text-sm\">{summary}</p>"
        }
      ]
    },
    {
      "description": "A list item that displays a brief summary of a piece of content, such as a blog post or a tutorial. The UI should be responsive, mobile-friendly, and accessible.",
      "html": "<ul class=\"flex flex-wrap justify-center mb-4\"><PageContentListItem/><!-- More list items... --></ul>",
      "components": [
        {
          "name": "PageContentListItem",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of a piece of content.",
          "html": "<li class=\"flex flex-wrap w-full md:w-1/2 xl:w-1/3 p-4\"><ContentThumbnail/><div class=\"flex-1 pl-4\"><h2 class=\"text-lg\">{title}</h2><ContentSummary/><p class=\"text-sm text-gray-600\">{brief_description}</p></div></li>"
        },
        {
          "name": "ContentThumbnail",
          "is_standalone": true,
          "description": "Standalone component that displays a thumbnail image for the content.",
          "html": "<img src={thumbnail_url} alt={title} class=\"w-24 h-24 object-cover rounded-sm\"/>"
        },
        {
          "name": "ContentSummary",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of the content.",
          "html": "<p class=\"text-sm\">{summary}</p>"
        }
      ]
    },
    {
      "description": "A list item that displays a brief summary of a piece of content, such as a blog post or a tutorial. The UI should be responsive, mobile-friendly, and accessible.",
      "html": "<ul class=\"flex flex-wrap justify-center mb-4\"><PageContentListItem/><!-- More list items... --></ul>",
      "components": [
        {
          "name": "PageContentListItem",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of a piece of content.",
          "html": "<li class=\"flex flex-wrap w-full md:w-1/2 xl:w-1/3 p-4\"><ContentThumbnail/><div class=\"flex-1 pl-4\"><h2 class=\"text-lg\">{title}</h2><ContentSummary/><p class=\"text-sm text-gray-600\">{brief_description}</p></div></li>"
        },
        {
          "name": "ContentThumbnail",
          "is_standalone": true,
          "description": "Standalone component that displays a thumbnail image for the content.",
          "html": "<img src={thumbnail_url} alt={title} class=\"w-24 h-24 object-cover rounded-sm\"/>"
        },
        {
          "name": "ContentSummary",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of the content.",
          "html": "<p class=\"text-sm\">{summary}</p>"
        }
      ]
    },
    {
      "description": "A list item that displays a brief summary of a piece of content, such as a blog post or a tutorial. The UI should be responsive, mobile-friendly, and accessible.",
      "html": "<ul class=\"flex flex-wrap justify-center mb-4\"><PageContentListItem/><!-- More list items... --></ul>",
      "components": [
        {
          "name": "PageContentListItem",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of a piece of content.",
          "html": "<li class=\"flex flex-wrap w-full md:w-1/2 xl:w-1/3 p-4\"><ContentThumbnail/><div class=\"flex-1 pl-4\"><h2 class=\"text-lg\">{title}</h2><ContentSummary/><p class=\"text-sm text-gray-600\">{brief_description}</p></div></li>"
        },
        {
          "name": "ContentThumbnail",
          "is_standalone": true,
          "description": "Standalone component that displays a thumbnail image for the content.",
          "html": "<img src={thumbnail_url} alt={title} class=\"w-24 h-24 object-cover rounded-sm\"/>"
        },
        {
          "name": "ContentSummary",
          "is_standalone": true,
          "description": "Standalone component that displays a brief summary of the content.",
          "html": "<p class=\"text-sm\">{summary}</p>"
        }
      ]
    }
  ],
  "Destination and Hotel Cards": [
    {
      "description": "The UI should display a grid of cards, each representing a destination or hotel. The cards should have a title, an image, and some brief information. The layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CardGrid><DestinationCard/><DestinationCard/><HotelCard/><HotelCard/></CardGrid></div>",
      "components": [
        {
          "name": "DestinationCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a destination.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={destination_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{destination_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "HotelCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a hotel.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={hotel_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{hotel_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "CardGrid",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a grid layout.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a grid of cards, each representing a destination or hotel. The cards should have a title, an image, and some brief information. The layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CardGrid><DestinationCard/><DestinationCard/><HotelCard/><HotelCard/></CardGrid></div>",
      "components": [
        {
          "name": "DestinationCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a destination.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={destination_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{destination_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "HotelCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a hotel.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={hotel_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{hotel_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "CardGrid",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a grid layout.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of destination cards, each containing a hotel card. The destination cards should have a background image, a title, and a description. The hotel cards should have a hotel name, a rating, and a price.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><DestinationList><DestinationCard/><DestinationCard/><DestinationCard/></DestinationList></div>",
      "components": [
        {
          "name": "DestinationCard",
          "is_standalone": true,
          "description": "(standalone) - A card displaying a destination's information",
          "html": "<div class=\"bg-cover bg-center h-64 mb-4\" style={{ backgroundImage: `url(${image_url})` }}><div class=\"bg-white p-4 pt-6\"><h2 class=\"text-lg\">{destination_name}</h2><p>{destination_description}</p><HotelCard/></div></div>"
        },
        {
          "name": "HotelCard",
          "is_standalone": true,
          "description": "(standalone) - A card displaying a hotel's information",
          "html": "<div class=\"bg-white p-4 mb-4\"><h3 class=\"text-md\">{hotel_name}</h3><p>Rating: {hotel_rating}/5</p><p>Price: {hotel_price}/night</p></div>"
        },
        {
          "name": "DestinationList",
          "is_standalone": false,
          "description": "(takes children) - A container for a list of destination cards",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a grid of cards, each representing a destination or hotel. The cards should have a title, an image, and some brief information. The layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CardGrid><DestinationCard/><DestinationCard/><HotelCard/><HotelCard/></CardGrid></div>",
      "components": [
        {
          "name": "DestinationCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a destination.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={destination_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{destination_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "HotelCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a hotel.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={hotel_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{hotel_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "CardGrid",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a grid layout.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a grid of cards, each representing a destination or hotel. The cards should have a title, an image, and some brief information. The layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CardGrid><DestinationCard/><DestinationCard/><HotelCard/><HotelCard/></CardGrid></div>",
      "components": [
        {
          "name": "DestinationCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a destination.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={destination_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{destination_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "HotelCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a hotel.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={hotel_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{hotel_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "CardGrid",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a grid layout.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a grid of cards, each representing a destination or hotel. The cards should have a title, an image, and some brief information. The layout should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"container mx-auto p-4\"><CardGrid><DestinationCard/><DestinationCard/><HotelCard/><HotelCard/></CardGrid></div>",
      "components": [
        {
          "name": "DestinationCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a destination.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={destination_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{destination_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "HotelCard",
          "is_standalone": true,
          "description": "A standalone component that displays information about a hotel.",
          "html": "<div class=\"bg-white rounded overflow-hidden shadow-md\"><img src={image_url} alt={hotel_name} class=\"w-full h-48 object-cover\"/><div class=\"p-4\"><h3 class=\"text-lg font-bold\">{hotel_name}</h3><p>{description}</p></div><div class=\"p-4 bg-gray-100\"><p>{price} per night</p></div></div>"
        },
        {
          "name": "CardGrid",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a grid layout.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Compose email button with dropdown menu": [
    {
      "description": "The UI should be a button that says \"Compose Email\" with a dropdown arrow on the right side. When clicked, a dropdown menu should appear below the button, containing a list of email composition options.",
      "html": "<div class=\"flex justify-center\"><ComposeEmailButton/></div><div class=\"absolute\"><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ComposeEmailButton",
          "is_standalone": true,
          "description": "Standalone component that displays the \"Compose Email\" button with a dropdown arrow.",
          "html": "<button class=\"bg-indigo-500 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded\">Compose Email <span class=\"ml-2 text-lg\">{caret_down_icon}</span></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "Component that takes children, representing the dropdown menu items.",
          "html": "<ul class=\"bg-white shadow-md py-1\">{children}</ul>"
        }
      ]
    }
  ],
  "Code Review and Approval Workflow": [
    {
      "description": "The UI should display a vertical timeline of code review and approval workflow, with each step represented by a circular icon and a brief description. The timeline should be responsive and adaptable to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><Timeline><CodeReviewStep/><CodeReviewStep/><CodeReviewStep/><!-- Add more CodeReviewStep components as needed --></Timeline></div>",
      "components": [
        {
          "name": "CodeReviewStep",
          "is_standalone": true,
          "description": "A standalone component representing a single step in the code review process.",
          "html": "<div class=\"flex items-center mb-4\"><div class=\"w-8 h-8 bg-orange-500 rounded-full text-white text-lg\">{step_icon}</div><div class=\"ml-4\"><p class=\"text-lg\">{step_description}</p><small class=\"text-gray-600\">{step_status}</small></div></div>"
        },
        {
          "name": "Timeline",
          "is_standalone": false,
          "description": "A component that takes children, which are `CodeReviewStep` components.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Revealing/Hover Effects": [
    {
      "description": "The UI should display a container with a revealing hover effect. When the user hovers over the container, a colored background and a heading should be revealed.",
      "html": "<div class=\"relative w-full h-48 md:h-64 lg:h-80 XL:h-96\"><RevealContainer/></div>",
      "components": [
        {
          "name": "RevealContainer",
          "is_standalone": true,
          "description": "standalone component that wraps the revealing hover effect.",
          "html": "<div class=\"absolute inset-0 z-10 overflow-hidden bg-transparent transition duration-300 ease-in-out hover:bg-orange-500 hover:opacity-90\"><RevealContent/></div>"
        },
        {
          "name": "RevealContent",
          "is_standalone": true,
          "description": "standalone component that displays the revealed content (heading and background).",
          "html": "<div class=\"flex items-center justify-center h-full\"><h2 class=\"text-2xl font-bold\">{heading_text}</h2></div>"
        }
      ]
    }
  ],
  "Social Media Follow Count": [
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of social media platforms with their corresponding follow counts. Each platform should have an icon, the platform name, and the number of followers. The UI should be responsive, with a maximum width of 300px on desktop and stacked on mobile devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SocialMediaList><SocialMediaItem/><SocialMediaItem/><SocialMediaItem/></SocialMediaList></div>",
      "components": [
        {
          "name": "SocialMediaItem",
          "is_standalone": true,
          "description": "(standalone): represents a single social media platform with its follow count",
          "html": "<div class=\"flex items-center mb-4\"><img src={icon_url} alt={platform_name} class=\"w-8 h-8 mr-2\"/><div><p class=\"text-lg\">{platform_name}</p><p class=\"text-sm\">{follower_count} followers</p></div></div>"
        },
        {
          "name": "SocialMediaList",
          "is_standalone": false,
          "description": "(takes children): the container for the list of social media platforms",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "User Profile and Reputation System": [
    {
      "description": "The UI should display a user's profile information, including their username, profile picture, reputation score, and badges. The reputation score should be prominently displayed, and the badges should be displayed in a grid or list.",
      "html": "<div class=\"flex justify-center\"><UserProfileHeader/><div class=\"ml-4\"><ReputationScore/><BadgeGrid><Badge/><Badge/><!-- More badges here --></BadgeGrid></div></div>",
      "components": [
        {
          "name": "UserProfileHeader",
          "is_standalone": true,
          "description": "Standalone component that displays the user's profile picture and username.",
          "html": "<div class=\"flex items-center\"><img src=\"{profile_picture_url}\" alt=\"Profile Picture\" class=\"w-12 h-12 rounded-full\"/><h2 class=\"ml-2 text-lg\">{username}</h2></div>"
        },
        {
          "name": "ReputationScore",
          "is_standalone": true,
          "description": "Standalone component that displays the user's reputation score.",
          "html": "<h3 class=\"text-lg font-bold\">{reputation_score} Reputation</h3>"
        },
        {
          "name": "BadgeGrid",
          "is_standalone": false,
          "description": "Component that takes children, which are `Badge` components.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        },
        {
          "name": "Badge",
          "is_standalone": true,
          "description": "Standalone component that displays a single badge.",
          "html": "<li class=\"mr-2 mb-2\"><img src=\"{badge_image_url}\" alt=\"Badge\" class=\"w-8 h-8\"/><span class=\"text-sm\">{badge_name}</span></li>"
        }
      ]
    }
  ],
  "Game Tiles and Grids": [
    {
      "description": "The UI should display a grid of game tiles. Each tile should have a unique background color, a number indicating the tile's value, and an optional \"locked\" indicator.",
      "html": "<div class=\"grid grid-cols-4 gap-4\"><GameGrid/></div>",
      "components": [
        {
          "name": "GameGrid",
          "is_standalone": true,
          "description": "A standalone component that displays a grid of game tiles.",
          "html": "<div class=\"flex flex-wrap justify-center\">{/* an 4x4 grid of GameTile components */ } <GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/><GameTile/></div>"
        },
        {
          "name": "GameTile",
          "is_standalone": false,
          "description": "A component that takes children (the tile's value and optional \"locked\" indicator) and displays a single game tile.",
          "html": "<div class={`h-16 w-16 bg-${tile_color} rounded-md flex justify-center items-center`}><p class=\"text-lg\">{tile_value}</p>{locked && <span class=\"text-xs\">(Locked)</span>} {children}</div>"
        }
      ]
    }
  ],
  "Search Bar: Input field for searching the site": [
    {
      "description": "The UI should be a simple search bar component that consists of a text input field and a search button. The search bar should be responsive, with the search button aligned to the right of the input field on larger screens, and stacked on top of each other on smaller screens.",
      "html": "<nav class=\"max-w-md mx-auto p-4 flex justify-center\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the entire search bar UI",
          "html": "<div class=\"flex flex-wrap items-center\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that represents the text input field",
          "html": "<input type=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that represents the search button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    }
  ],
  "User Profile and Reputation Systems": [
    {
      "description": "The UI should display a user's profile information, including their profile picture, username, bio, and reputation score. The reputation score should be displayed prominently, with an option to view a breakdown of the score.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><UserProfile/></div>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "standalone component that contains the user's profile information",
          "html": "<div class=\"flex flex-col md:flex-row items-center md:items-start\"><UserProfilePicture/><UserProfileInfo/><ReputationScore/></div>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component that displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"User Profile Picture\" class=\"rounded-full w-24 h-24 md:w-48 md:h-48 object-cover\">"
        },
        {
          "name": "UserProfileInfo",
          "is_standalone": true,
          "description": "standalone component that displays the user's username and bio",
          "html": "<div class=\"flex flex-col ml-4 md:ml-6\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-600\">{bio}</p></div>"
        },
        {
          "name": "ReputationScore",
          "is_standalone": true,
          "description": "standalone component that displays the user's reputation score",
          "html": "<div class=\"text-lg font-bold flex items-center\"><span class=\"mr-2\">{reputation_score}</span><span class=\"text-gray-600\">Reputation Score</span><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">View Breakdown</button></div>"
        }
      ]
    },
    {
      "description": "A user profile and reputation system that displays the user's profile information, reputation score, and badges earned.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><UserProfileCard/><div class=\"mt-4\"><h2 class=\"text-lg font-bold\">Reputation</h2><BadgeList><!-- badges will be inserted here --></BadgeList></div></div>",
      "components": [
        {
          "name": "UserProfileCard",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"bg-white shadow-md p-4 rounded\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{bio}</p><p class=\"text-sm text-gray-500\">{joined_at}</p></div>"
        },
        {
          "name": "BadgeList",
          "is_standalone": false,
          "description": "takes children",
          "html": "<ul class=\"flex flex-wrap\">{children}</ul>"
        }
      ]
    }
  ],
  "Dividers/Section Separators": [
    {
      "description": "The UI should have a horizontal divider/section separator that visually separates content sections. The divider should be a thin, horizontal line that takes up the full width of its parent container. On smaller screens, the divider should be slightly thicker to ensure visibility.",
      "html": "<div class=\"container mx-auto p-4\"><!-- content above the divider --><SectionSeparator/><!-- content below the divider --></div>",
      "components": [
        {
          "name": "SectionSeparator",
          "is_standalone": true,
          "description": "a standalone component that renders a horizontal divider",
          "html": "<hr class=\"border border-solid border-gray-300 w-full my-4 md:my-6\"/>"
        }
      ]
    },
    {
      "description": "The UI should have a horizontal divider/section separator that visually separates content sections. The divider should be a thin, horizontal line that takes up the full width of its parent container. On smaller screens, the divider should be slightly thicker to ensure visibility.",
      "html": "<div class=\"container mx-auto p-4\"><!-- content above the divider --><SectionSeparator/><!-- content below the divider --></div>",
      "components": [
        {
          "name": "SectionSeparator",
          "is_standalone": true,
          "description": "a standalone component that renders a horizontal divider",
          "html": "<hr class=\"border border-solid border-gray-300 w-full my-4 md:my-6\"/>"
        }
      ]
    },
    {
      "description": "The UI should have a horizontal divider/section separator that visually separates content sections. The divider should be a thin, horizontal line that takes up the full width of its parent container. On smaller screens, the divider should be slightly thicker to ensure visibility.",
      "html": "<div class=\"container mx-auto p-4\"><!-- content above the divider --><SectionSeparator/><!-- content below the divider --></div>",
      "components": [
        {
          "name": "SectionSeparator",
          "is_standalone": true,
          "description": "a standalone component that renders a horizontal divider",
          "html": "<hr class=\"border border-solid border-gray-300 w-full my-4 md:my-6\"/>"
        }
      ]
    },
    {
      "description": "The UI should have a horizontal divider/section separator that visually separates content sections. The divider should be a thin, horizontal line that takes up the full width of its parent container. On smaller screens, the divider should be slightly thicker to ensure visibility.",
      "html": "<div class=\"container mx-auto p-4\"><!-- content above the divider --><SectionSeparator/><!-- content below the divider --></div>",
      "components": [
        {
          "name": "SectionSeparator",
          "is_standalone": true,
          "description": "a standalone component that renders a horizontal divider",
          "html": "<hr class=\"border border-solid border-gray-300 w-full my-4 md:my-6\"/>"
        }
      ]
    },
    {
      "description": "The UI should have a horizontal divider/section separator that visually separates content sections. The divider should be a thin, horizontal line that takes up the full width of its parent container. On smaller screens, the divider should be slightly thicker to ensure visibility.",
      "html": "<div class=\"container mx-auto p-4\"><!-- content above the divider --><SectionSeparator/><!-- content below the divider --></div>",
      "components": [
        {
          "name": "SectionSeparator",
          "is_standalone": true,
          "description": "a standalone component that renders a horizontal divider",
          "html": "<hr class=\"border border-solid border-gray-300 w-full my-4 md:my-6\"/>"
        }
      ]
    }
  ],
  "Social Sharing: Buttons for sharing content": [
    {
      "description": "The UI should be a horizontal row of social media sharing buttons, each with an icon and a brief label. The buttons should be evenly spaced and have a subtle hover effect. On mobile devices, the buttons should stack vertically to accommodate smaller screens.",
      "html": "<div class=\"flex justify-center sm:flex-row flex-wrap\"><SocialShareButtonGroup><SocialShareButton/><SocialShareButton/><SocialShareButton/><!-- Add more social media buttons here --></SocialShareButtonGroup></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "Standalone component, represents a single social media sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><i class={`fab fa-${social_media_icon}`}></i><span class=\"ml-2\">{social_media_label}</span></button>"
        },
        {
          "name": "SocialShareButtonGroup",
          "is_standalone": false,
          "description": "Component that takes children, represents the container for the social media sharing buttons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a horizontal row of social media sharing buttons, each with an icon and a brief label. The buttons should be evenly spaced and have a subtle hover effect. On mobile devices, the buttons should stack vertically to accommodate smaller screens.",
      "html": "<div class=\"flex justify-center sm:flex-row flex-wrap\"><SocialShareButtonGroup><SocialShareButton/><SocialShareButton/><SocialShareButton/><!-- Add more social media buttons here --></SocialShareButtonGroup></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "Standalone component, represents a single social media sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><i class={`fab fa-${social_media_icon}`}></i><span class=\"ml-2\">{social_media_label}</span></button>"
        },
        {
          "name": "SocialShareButtonGroup",
          "is_standalone": false,
          "description": "Component that takes children, represents the container for the social media sharing buttons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a horizontal row of social media sharing buttons, each with an icon and a brief label. The buttons should be evenly spaced and have a subtle hover effect. On mobile devices, the buttons should stack vertically to accommodate smaller screens.",
      "html": "<div class=\"flex justify-center sm:flex-row flex-wrap\"><SocialShareButtonGroup><SocialShareButton/><SocialShareButton/><SocialShareButton/><!-- Add more social media buttons here --></SocialShareButtonGroup></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "Standalone component, represents a single social media sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><i class={`fab fa-${social_media_icon}`}></i><span class=\"ml-2\">{social_media_label}</span></button>"
        },
        {
          "name": "SocialShareButtonGroup",
          "is_standalone": false,
          "description": "Component that takes children, represents the container for the social media sharing buttons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a horizontal row of social media sharing buttons, each with an icon and a brief label. The buttons should be evenly spaced and have a subtle hover effect. On mobile devices, the buttons should stack vertically to accommodate smaller screens.",
      "html": "<div class=\"flex justify-center sm:flex-row flex-wrap\"><SocialShareButtonGroup><SocialShareButton/><SocialShareButton/><SocialShareButton/><!-- Add more social media buttons here --></SocialShareButtonGroup></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "Standalone component, represents a single social media sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><i class={`fab fa-${social_media_icon}`}></i><span class=\"ml-2\">{social_media_label}</span></button>"
        },
        {
          "name": "SocialShareButtonGroup",
          "is_standalone": false,
          "description": "Component that takes children, represents the container for the social media sharing buttons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a horizontal row of social media sharing buttons, each with an icon and a brief label. The buttons should be evenly spaced and have a subtle hover effect. On mobile devices, the buttons should stack vertically to accommodate smaller screens.",
      "html": "<div class=\"flex justify-center sm:flex-row flex-wrap\"><SocialShareButtonGroup><SocialShareButton/><SocialShareButton/><SocialShareButton/><!-- Add more social media buttons here --></SocialShareButtonGroup></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "Standalone component, represents a single social media sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><i class={`fab fa-${social_media_icon}`}></i><span class=\"ml-2\">{social_media_label}</span></button>"
        },
        {
          "name": "SocialShareButtonGroup",
          "is_standalone": false,
          "description": "Component that takes children, represents the container for the social media sharing buttons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a horizontal row of social media sharing buttons, each with an icon and a brief label. The buttons should be evenly spaced and have a subtle hover effect. On mobile devices, the buttons should stack vertically to accommodate smaller screens.",
      "html": "<div class=\"flex justify-center sm:flex-row flex-wrap\"><SocialShareButtonGroup><SocialShareButton/><SocialShareButton/><SocialShareButton/><!-- Add more social media buttons here --></SocialShareButtonGroup></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "Standalone component, represents a single social media sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><i class={`fab fa-${social_media_icon}`}></i><span class=\"ml-2\">{social_media_label}</span></button>"
        },
        {
          "name": "SocialShareButtonGroup",
          "is_standalone": false,
          "description": "Component that takes children, represents the container for the social media sharing buttons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a horizontal row of social media sharing buttons, each with an icon and a brief label. The buttons should be evenly spaced and have a subtle hover effect. On mobile devices, the buttons should stack vertically to accommodate smaller screens.",
      "html": "<div class=\"flex justify-center sm:flex-row flex-wrap\"><SocialShareButtonGroup><SocialShareButton/><SocialShareButton/><SocialShareButton/><!-- Add more social media buttons here --></SocialShareButtonGroup></div>",
      "components": [
        {
          "name": "SocialShareButton",
          "is_standalone": true,
          "description": "Standalone component, represents a single social media sharing button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\"><i class={`fab fa-${social_media_icon}`}></i><span class=\"ml-2\">{social_media_label}</span></button>"
        },
        {
          "name": "SocialShareButtonGroup",
          "is_standalone": false,
          "description": "Component that takes children, represents the container for the social media sharing buttons.",
          "html": "<div class=\"flex flex-wrap justify-center md:flex-row\">{children}</div>"
        }
      ]
    }
  ],
  "Stencil Portals/Masking": [
    {
      "description": "The UI should display a rectangular portal with a masked background, allowing a smaller rectangular area to be visible through a circular \"window\". The portal should have a subtle shadow and a slight border radius. The masked area should be a solid color or a subtle gradient.",
      "html": "<div class=\"relative w-full h-screen\"><PortalMask/><PortalWindow/></div>",
      "components": [
        {
          "name": "PortalMask",
          "is_standalone": true,
          "description": "- standalone - Represents the masked background.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-gray-200\" aria-hidden=\"true\"><!-- masked background --></div>"
        },
        {
          "name": "PortalWindow",
          "is_standalone": true,
          "description": "- standalone - Represents the circular \"window\" through which the background is visible.",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-48 h-48 rounded-full bg-white shadow-md\"><!-- circular \"window\" --><div class=\"w-full h-full bg-{portal_window_background} rounded-full\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a rectangular portal with a masked background, allowing a smaller rectangular area to be visible through a circular \"window\". The portal should have a subtle shadow and a slight border radius. The masked area should be a solid color or a subtle gradient.",
      "html": "<div class=\"relative w-full h-screen\"><PortalMask/><PortalWindow/></div>",
      "components": [
        {
          "name": "PortalMask",
          "is_standalone": true,
          "description": "- standalone - Represents the masked background.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-gray-200\" aria-hidden=\"true\"><!-- masked background --></div>"
        },
        {
          "name": "PortalWindow",
          "is_standalone": true,
          "description": "- standalone - Represents the circular \"window\" through which the background is visible.",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-48 h-48 rounded-full bg-white shadow-md\"><!-- circular \"window\" --><div class=\"w-full h-full bg-{portal_window_background} rounded-full\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a rectangular portal with a masked background, allowing a smaller rectangular area to be visible through a circular \"window\". The portal should have a subtle shadow and a slight border radius. The masked area should be a solid color or a subtle gradient.",
      "html": "<div class=\"relative w-full h-screen\"><PortalMask/><PortalWindow/></div>",
      "components": [
        {
          "name": "PortalMask",
          "is_standalone": true,
          "description": "- standalone - Represents the masked background.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-gray-200\" aria-hidden=\"true\"><!-- masked background --></div>"
        },
        {
          "name": "PortalWindow",
          "is_standalone": true,
          "description": "- standalone - Represents the circular \"window\" through which the background is visible.",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-48 h-48 rounded-full bg-white shadow-md\"><!-- circular \"window\" --><div class=\"w-full h-full bg-{portal_window_background} rounded-full\"></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a rectangular portal with a masked background, allowing a smaller rectangular area to be visible through a circular \"window\". The portal should have a subtle shadow and a slight border radius. The masked area should be a solid color or a subtle gradient.",
      "html": "<div class=\"relative w-full h-screen\"><PortalMask/><PortalWindow/></div>",
      "components": [
        {
          "name": "PortalMask",
          "is_standalone": true,
          "description": "- standalone - Represents the masked background.",
          "html": "<div class=\"absolute top-0 left-0 w-full h-full bg-gray-200\" aria-hidden=\"true\"><!-- masked background --></div>"
        },
        {
          "name": "PortalWindow",
          "is_standalone": true,
          "description": "- standalone - Represents the circular \"window\" through which the background is visible.",
          "html": "<div class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-48 h-48 rounded-full bg-white shadow-md\"><!-- circular \"window\" --><div class=\"w-full h-full bg-{portal_window_background} rounded-full\"></div></div>"
        }
      ]
    }
  ],
  "Header Search Suggestion": [
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    },
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    },
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    },
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    },
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    },
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    },
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    },
    {
      "description": "A search bar with a dropdown list of suggested search queries, which appears when the user starts typing in the search input field.",
      "html": "<header class=\"w-full flex justify-center\"><SearchBar/><SearchSuggestion><SearchSuggestionItem/><!-- Repeat SearchSuggestionItem for each suggestion --></SearchSuggestion></header>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone): A text input field with a search icon.",
          "html": "<div class=\"relative\"><input type=\"search\" class=\"w-full pl-10 pr-4 py-2 text-sm text-gray-700\" placeholder={search_placeholder}/><span class=\"absolute left-3 top-1/2 -translate-y-1/2\"><i class=\"fas fa-search text-gray-400\" aria-hidden=\"true\"></i></span></div>"
        },
        {
          "name": "SearchSuggestion",
          "is_standalone": false,
          "description": "(takes children): A list of suggested search queries.",
          "html": "<ul class=\"absolute bg-white shadow-md w-full\">{children}</ul>"
        },
        {
          "name": "SearchSuggestionItem",
          "is_standalone": true,
          "description": "(standalone): A single suggested search query.",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><a href={suggestion_url} class=\"block\">{suggestion_text}</a></li>"
        }
      ]
    }
  ],
  "Avatar Upload: Input field for uploading a profile picture": [
    {
      "description": "The UI should be a simple input field with a label that allows users to upload a profile picture. The input field should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"flex flex-col md:w-1/2 lg:w-1/3 xl:w-1/4 mx-auto p-4\"><InputLabel/><InputField/><!-- Optional: display uploaded image --><img src=\"{uploaded_image_url}\" alt=\"Profile Picture\" class=\"w-full h-full object-cover rounded-full\"/></div>",
      "components": [
        {
          "name": "InputLabel",
          "is_standalone": true,
          "description": "(standalone) - The label for the input field.",
          "html": "<label for=\"avatar-upload\" class=\"block mb-2 text-sm font-bold text-gray-700\">Upload Profile Picture</label>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "(standalone) - The input field for uploading the profile picture.",
          "html": "<input type=\"file\" id=\"avatar-upload\" class=\"block w-full px-4 py-2 text-gray-700\"/>"
        }
      ]
    }
  ],
  "Message input field with send button and emoji picker": [
    {
      "description": "A message input field with a send button on the right side, and an emoji picker button on the left side of the input field.",
      "html": "<div class=\"flex items-center bg-white py-2 px-4 rounded-lg\"><EmojiPickerButton/><MessageInputField><input type=\"text\" class=\"px-2 py-1 w-full\"/><SendButton/></MessageInputField></div>",
      "components": [
        {
          "name": "EmojiPickerButton",
          "is_standalone": true,
          "description": "standalone component that renders an emoji picker",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">😊</button>"
        },
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "standalone component that renders a send button",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">{sendButtonText}</button>"
        },
        {
          "name": "MessageInputField",
          "is_standalone": false,
          "description": "component that takes children",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a message input field with a send button and an emoji picker. The input field should be responsive and mobile-friendly. The send button should be enabled only when the input field has some text. The emoji picker should be a dropdown list that appears when the user clicks on the emoji icon. The UI should be accessible, with clear labels and high contrast colors.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><MessageInputField/><SendButton/><EmojiPickerTrigger><EmojiPicker/></EmojiPickerTrigger></div>",
      "components": [
        {
          "name": "MessageInputField",
          "is_standalone": true,
          "description": "standalone component that renders an input field.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Type a message...\"/>"
        },
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "standalone component that renders a button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" disabled={isDisabled}>Send</button>"
        },
        {
          "name": "EmojiPicker",
          "is_standalone": true,
          "description": "standalone component that renders a dropdown list of emojis.",
          "html": "<ul class=\"absolute bg-white rounded shadow-md p-2\">{emojis.map((emoji) =>( <li class=\"py-2 px-4 hover:bg-gray-100\">{emoji}</li>))}</ul>"
        },
        {
          "name": "EmojiPickerTrigger",
          "is_standalone": false,
          "description": "takes children, renders a button that toggles the emoji picker dropdown.",
          "html": "<button class=\"p-2 hover:bg-gray-100 rounded text-lg\">{children}</button>"
        }
      ]
    }
  ],
  "Product Feature Icon List": [
    {
      "description": "The UI should be a list of icons with accompanying text that highlight key features of a product. The list should be responsive, with icons and text aligned horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\"><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and associated text.",
          "html": "<li class=\"lg:w-1/2 xl:w-1/3 md:w-full px-4 md:px-8 mb-8 md:mb-4\"><i class=\"fas fa-{icon_class} text-{icon_color}\">{icon_size}</i><p class=\"text-lg\">{feature_text}</p></li>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a list.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of icons, each representing a product feature, with a brief description. The icons should be displayed in a grid on larger screens and stacked on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><ProductFeatureIconList><ProductFeatureIcon/><ProductFeatureIcon/><ProductFeatureIcon/><!-- Add more ProductFeatureIcon components as needed --></ProductFeatureIconList></section>",
      "components": [
        {
          "name": "ProductFeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that represents a single product feature icon with a description.",
          "html": "<div class=\"flex items-center mb-4 gap-2\"><i class=\"text-lg\">{icon_class}</i><div><p class=\"text-sm\">{feature_name}</p><p class=\"text-xs text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "ProductFeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of ProductFeatureIcon components.",
          "html": "<ul class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of icons with accompanying text that highlight key features of a product. The list should be responsive, with icons and text aligned horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\"><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and associated text.",
          "html": "<li class=\"lg:w-1/2 xl:w-1/3 md:w-full px-4 md:px-8 mb-8 md:mb-4\"><i class=\"fas fa-{icon_class} text-{icon_color}\">{icon_size}</i><p class=\"text-lg\">{feature_text}</p></li>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a list.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of icons, each representing a product feature, with a brief description. The icons should be displayed in a grid on larger screens and stacked on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><ProductFeatureIconList><ProductFeatureIcon/><ProductFeatureIcon/><ProductFeatureIcon/><!-- Add more ProductFeatureIcon components as needed --></ProductFeatureIconList></section>",
      "components": [
        {
          "name": "ProductFeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that represents a single product feature icon with a description.",
          "html": "<div class=\"flex items-center mb-4 gap-2\"><i class=\"text-lg\">{icon_class}</i><div><p class=\"text-sm\">{feature_name}</p><p class=\"text-xs text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "ProductFeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of ProductFeatureIcon components.",
          "html": "<ul class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of product features, each represented by an icon and a brief description. The list should be responsive, mobile-first, and accessible. The icons should be prominently displayed, with the descriptions below each icon.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><FeatureList><IconItem/><IconItem/><IconItem/><!-- Add more IconItem components as needed --></FeatureList></div>",
      "components": [
        {
          "name": "IconItem",
          "is_standalone": true,
          "description": "A standalone component representing a single feature icon and its description.",
          "html": "<div class=\"flex mb-4 lg:mb-6\"><div class=\"mr-4 lg:mr-6\"><i aria-hidden=\"true\" class={`fas fa-${icon_name} text-3xl lg:text-4xl`}></i></div><div class=\"text-sm lg:text-base\"><p class=\"font-bold\">{feature_name}</p><p class=\"text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the list of `IconItem` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, each represented by an icon and a brief description. The list should be responsive, with a maximum of 3 items per row on desktop and 1 item per row on mobile. The icons should be large and prominent, with a subtle hover effect.",
      "html": "<div class=\"container mx-auto p-4\"><FeatureIconList><FeatureIconListItem/><FeatureIconListItem/><FeatureIconListItem/><!-- add more items here --></FeatureIconList></div>",
      "components": [
        {
          "name": "FeatureIconListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single feature icon and description",
          "html": "<div class=\"flex flex-col items-center p-4 md:w-1/3\"><i class={`fa ${icon_class}`}></i><p class=\"text-sm\">{feature_description}</p></div>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "(takes children): a container for a list of `FeatureIconListItem`s",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of icons with accompanying text that highlight key features of a product. The list should be responsive, with icons and text aligned horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\"><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and associated text.",
          "html": "<li class=\"lg:w-1/2 xl:w-1/3 md:w-full px-4 md:px-8 mb-8 md:mb-4\"><i class=\"fas fa-{icon_class} text-{icon_color}\">{icon_size}</i><p class=\"text-lg\">{feature_text}</p></li>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a list.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of icons with accompanying text that highlight key features of a product. The list should be responsive, with icons and text aligned horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\"><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and associated text.",
          "html": "<li class=\"lg:w-1/2 xl:w-1/3 md:w-full px-4 md:px-8 mb-8 md:mb-4\"><i class=\"fas fa-{icon_class} text-{icon_color}\">{icon_size}</i><p class=\"text-lg\">{feature_text}</p></li>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a list.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of icons, each representing a product feature, with a brief description. The icons should be displayed in a grid on larger screens and stacked on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><ProductFeatureIconList><ProductFeatureIcon/><ProductFeatureIcon/><ProductFeatureIcon/><!-- Add more ProductFeatureIcon components as needed --></ProductFeatureIconList></section>",
      "components": [
        {
          "name": "ProductFeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that represents a single product feature icon with a description.",
          "html": "<div class=\"flex items-center mb-4 gap-2\"><i class=\"text-lg\">{icon_class}</i><div><p class=\"text-sm\">{feature_name}</p><p class=\"text-xs text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "ProductFeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of ProductFeatureIcon components.",
          "html": "<ul class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of icons with accompanying text that highlight key features of a product. The list should be responsive, with icons and text aligned horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\"><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and associated text.",
          "html": "<li class=\"lg:w-1/2 xl:w-1/3 md:w-full px-4 md:px-8 mb-8 md:mb-4\"><i class=\"fas fa-{icon_class} text-{icon_color}\">{icon_size}</i><p class=\"text-lg\">{feature_text}</p></li>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a list.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of icons, each representing a product feature, with a brief description. The icons should be displayed in a grid on larger screens and stacked on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><ProductFeatureIconList><ProductFeatureIcon/><ProductFeatureIcon/><ProductFeatureIcon/><!-- Add more ProductFeatureIcon components as needed --></ProductFeatureIconList></section>",
      "components": [
        {
          "name": "ProductFeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that represents a single product feature icon with a description.",
          "html": "<div class=\"flex items-center mb-4 gap-2\"><i class=\"text-lg\">{icon_class}</i><div><p class=\"text-sm\">{feature_name}</p><p class=\"text-xs text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "ProductFeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of ProductFeatureIcon components.",
          "html": "<ul class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of product features, each represented by an icon and a brief description. The list should be responsive, mobile-first, and accessible. The icons should be prominently displayed, with the descriptions below each icon.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><FeatureList><IconItem/><IconItem/><IconItem/><!-- Add more IconItem components as needed --></FeatureList></div>",
      "components": [
        {
          "name": "IconItem",
          "is_standalone": true,
          "description": "A standalone component representing a single feature icon and its description.",
          "html": "<div class=\"flex mb-4 lg:mb-6\"><div class=\"mr-4 lg:mr-6\"><i aria-hidden=\"true\" class={`fas fa-${icon_name} text-3xl lg:text-4xl`}></i></div><div class=\"text-sm lg:text-base\"><p class=\"font-bold\">{feature_name}</p><p class=\"text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component that takes children, wrapping the list of `IconItem` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, each represented by an icon and a brief description. The list should be responsive, with a maximum of 3 items per row on desktop and 1 item per row on mobile. The icons should be large and prominent, with a subtle hover effect.",
      "html": "<div class=\"container mx-auto p-4\"><FeatureIconList><FeatureIconListItem/><FeatureIconListItem/><FeatureIconListItem/><!-- add more items here --></FeatureIconList></div>",
      "components": [
        {
          "name": "FeatureIconListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single feature icon and description",
          "html": "<div class=\"flex flex-col items-center p-4 md:w-1/3\"><i class={`fa ${icon_class}`}></i><p class=\"text-sm\">{feature_description}</p></div>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "(takes children): a container for a list of `FeatureIconListItem`s",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of product features, with each feature represented by an icon and a brief description. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></div>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and a brief description of a product feature.",
          "html": "<div class=\"flex items-center mb-4\"><div class=\"w-12 h-12 p-2 mr-4 bg-gray-200 rounded-full\"><i class=\"fas {icon_class}\" aria-hidden=\"true\"></i></div><p class=\"text-gray-600\">{feature_description}</p></div>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays a list of `FeatureIcon` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of icons with accompanying text that highlight key features of a product. The list should be responsive, with icons and text aligned horizontally on larger screens and stacked vertically on smaller screens.",
      "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\"><FeatureIconList><FeatureIcon/><FeatureIcon/><FeatureIcon/></FeatureIconList></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon and associated text.",
          "html": "<li class=\"lg:w-1/2 xl:w-1/3 md:w-full px-4 md:px-8 mb-8 md:mb-4\"><i class=\"fas fa-{icon_class} text-{icon_color}\">{icon_size}</i><p class=\"text-lg\">{feature_text}</p></li>"
        },
        {
          "name": "FeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children and displays them in a list.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-row md:justify-start\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive list of icons, each representing a product feature, with a brief description. The icons should be displayed in a grid on larger screens and stacked on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Product Features</h2><ProductFeatureIconList><ProductFeatureIcon/><ProductFeatureIcon/><ProductFeatureIcon/><!-- Add more ProductFeatureIcon components as needed --></ProductFeatureIconList></section>",
      "components": [
        {
          "name": "ProductFeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that represents a single product feature icon with a description.",
          "html": "<div class=\"flex items-center mb-4 gap-2\"><i class=\"text-lg\">{icon_class}</i><div><p class=\"text-sm\">{feature_name}</p><p class=\"text-xs text-gray-600\">{feature_description}</p></div></div>"
        },
        {
          "name": "ProductFeatureIconList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of ProductFeatureIcon components.",
          "html": "<ul class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Product Feature List Item": [
    {
      "description": "The UI should be a single item in a list of product features, showcasing a specific benefit of the product. It should display an icon, a brief description, and optional additional information.",
      "html": "<ul class=\"flex flex-col gap-4\"><ProductFeatureListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single item in the list of product features",
          "html": "<li class=\"flex items-center gap-2\"><IconWrapper><i class={`{icon_class}`}></i></IconWrapper><FeatureDescription>{description}</FeatureDescription><OptionalInfo>{optional_info}</OptionalInfo></li>"
        },
        {
          "name": "IconWrapper",
          "is_standalone": false,
          "description": "(takes children): wraps an icon with a consistent styling",
          "html": "<span class=\"w-6 h-6 text-lg\">{children}</span>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": false,
          "description": "(takes children): contains the description of the feature",
          "html": "<p class=\"text-lg\">{children}</p>"
        },
        {
          "name": "OptionalInfo",
          "is_standalone": false,
          "description": "(takes children): displays additional information, if available",
          "html": "<p class=\"text-sm text-gray-600\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a list item that displays a product feature with an icon, a brief description, and a optional link to learn more. The component should be responsive and adaptable to different screen sizes.",
      "html": "<ul class=\"flex flex-col md:flex-row md:flex-wrap\"><li class=\"mb-4 md:w-1/2 xl:w-1/3\"><ProductFeatureListItem/></li></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "standalone component that displays a product feature.",
          "html": "<div class=\"flex items-center mb-2\"><FeatureIcon/><div class=\"ml-4\"><h5 class=\"text-lg\">{feature_name}</h5><p class=\"text-gray-600\">{feature_description}</p>{learn_more_url && <LearnMoreLink/>} </div></div>"
        },
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "standalone component that displays an icon for the feature.",
          "html": "<i class=\"fas fa-{feature_icon} text-2xl text-gray-600\"></i>"
        },
        {
          "name": "LearnMoreLink",
          "is_standalone": true,
          "description": "standalone component that displays a link to learn more about the feature.",
          "html": "<a href=\"{learn_more_url}\" class=\"text-blue-600 hover:text-blue-900\">Learn more</a>"
        }
      ]
    },
    {
      "description": "The UI should be a single item in a list of product features, showcasing a specific benefit of the product. It should display an icon, a brief description, and optional additional information.",
      "html": "<ul class=\"flex flex-col gap-4\"><ProductFeatureListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single item in the list of product features",
          "html": "<li class=\"flex items-center gap-2\"><IconWrapper><i class={`{icon_class}`}></i></IconWrapper><FeatureDescription>{description}</FeatureDescription><OptionalInfo>{optional_info}</OptionalInfo></li>"
        },
        {
          "name": "IconWrapper",
          "is_standalone": false,
          "description": "(takes children): wraps an icon with a consistent styling",
          "html": "<span class=\"w-6 h-6 text-lg\">{children}</span>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": false,
          "description": "(takes children): contains the description of the feature",
          "html": "<p class=\"text-lg\">{children}</p>"
        },
        {
          "name": "OptionalInfo",
          "is_standalone": false,
          "description": "(takes children): displays additional information, if available",
          "html": "<p class=\"text-sm text-gray-600\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a list item that displays a product feature with an icon, a brief description, and a optional link to learn more. The component should be responsive and adaptable to different screen sizes.",
      "html": "<ul class=\"flex flex-col md:flex-row md:flex-wrap\"><li class=\"mb-4 md:w-1/2 xl:w-1/3\"><ProductFeatureListItem/></li></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "standalone component that displays a product feature.",
          "html": "<div class=\"flex items-center mb-2\"><FeatureIcon/><div class=\"ml-4\"><h5 class=\"text-lg\">{feature_name}</h5><p class=\"text-gray-600\">{feature_description}</p>{learn_more_url && <LearnMoreLink/>} </div></div>"
        },
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "standalone component that displays an icon for the feature.",
          "html": "<i class=\"fas fa-{feature_icon} text-2xl text-gray-600\"></i>"
        },
        {
          "name": "LearnMoreLink",
          "is_standalone": true,
          "description": "standalone component that displays a link to learn more about the feature.",
          "html": "<a href=\"{learn_more_url}\" class=\"text-blue-600 hover:text-blue-900\">Learn more</a>"
        }
      ]
    },
    {
      "description": "The UI should be a single list item representing a product feature, with an icon, a brief description, and a optional learn more link. The feature item should be responsive and adaptable to different screen sizes.",
      "html": "<li class=\"flex items-center py-4\"><FeatureIcon/><FeatureDescription/><LearnMoreLink/></li>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon representing the feature.",
          "html": "<i class=\"w-6 h-6 text-gray-500 {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "A standalone component that displays a brief description of the feature.",
          "html": "<p class=\"ml-4 text-gray-700\">{feature_description}</p>"
        },
        {
          "name": "LearnMoreLink",
          "is_standalone": true,
          "description": "A standalone component that displays a link to learn more about the feature.",
          "html": "<a class=\"text-blue-600 hover:text-blue-800 transition duration-300 ease-in-out\" href=\"{learn_more_url}\">Learn more</a>"
        }
      ]
    },
    {
      "description": "A single item in a list of product features, displaying an icon, a heading, and a brief description.",
      "html": "<ul class=\"list-none mb-4\"><li class=\"flex items-center mb-4\"><FeatureListItem><FeatureIcon/><FeatureHeading/><FeatureDescription/></FeatureListItem></li><!-- Add more list items here --></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "(standalone): Displaying an icon for the feature",
          "html": "<i class=\"text-lg text-gray-500\">{icon_name}</i>"
        },
        {
          "name": "FeatureHeading",
          "is_standalone": true,
          "description": "(standalone): Displaying the heading of the feature",
          "html": "<h3 class=\"text-lg font-bold\">{heading_text}</h3>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "(standalone): Displaying a brief description of the feature",
          "html": "<p class=\"text-gray-600\">{description_text}</p>"
        },
        {
          "name": "FeatureListItem",
          "is_standalone": false,
          "description": "(takes children): A container for a single feature item, comprising an icon, heading, and description.",
          "html": "<div class=\"flex items-center\"><div class=\"mr-4\">{children}</div><div class=\"flex-1\">{children}</div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a single item in a list of product features, showcasing a specific benefit of the product. It should display an icon, a brief description, and optional additional information.",
      "html": "<ul class=\"flex flex-col gap-4\"><ProductFeatureListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single item in the list of product features",
          "html": "<li class=\"flex items-center gap-2\"><IconWrapper><i class={`{icon_class}`}></i></IconWrapper><FeatureDescription>{description}</FeatureDescription><OptionalInfo>{optional_info}</OptionalInfo></li>"
        },
        {
          "name": "IconWrapper",
          "is_standalone": false,
          "description": "(takes children): wraps an icon with a consistent styling",
          "html": "<span class=\"w-6 h-6 text-lg\">{children}</span>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": false,
          "description": "(takes children): contains the description of the feature",
          "html": "<p class=\"text-lg\">{children}</p>"
        },
        {
          "name": "OptionalInfo",
          "is_standalone": false,
          "description": "(takes children): displays additional information, if available",
          "html": "<p class=\"text-sm text-gray-600\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a single item in a list of product features, showcasing a specific benefit of the product. It should display an icon, a brief description, and optional additional information.",
      "html": "<ul class=\"flex flex-col gap-4\"><ProductFeatureListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single item in the list of product features",
          "html": "<li class=\"flex items-center gap-2\"><IconWrapper><i class={`{icon_class}`}></i></IconWrapper><FeatureDescription>{description}</FeatureDescription><OptionalInfo>{optional_info}</OptionalInfo></li>"
        },
        {
          "name": "IconWrapper",
          "is_standalone": false,
          "description": "(takes children): wraps an icon with a consistent styling",
          "html": "<span class=\"w-6 h-6 text-lg\">{children}</span>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": false,
          "description": "(takes children): contains the description of the feature",
          "html": "<p class=\"text-lg\">{children}</p>"
        },
        {
          "name": "OptionalInfo",
          "is_standalone": false,
          "description": "(takes children): displays additional information, if available",
          "html": "<p class=\"text-sm text-gray-600\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a single item in a list of product features, showcasing a specific benefit of the product. It should display an icon, a brief description, and optional additional information.",
      "html": "<ul class=\"flex flex-col gap-4\"><ProductFeatureListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single item in the list of product features",
          "html": "<li class=\"flex items-center gap-2\"><IconWrapper><i class={`{icon_class}`}></i></IconWrapper><FeatureDescription>{description}</FeatureDescription><OptionalInfo>{optional_info}</OptionalInfo></li>"
        },
        {
          "name": "IconWrapper",
          "is_standalone": false,
          "description": "(takes children): wraps an icon with a consistent styling",
          "html": "<span class=\"w-6 h-6 text-lg\">{children}</span>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": false,
          "description": "(takes children): contains the description of the feature",
          "html": "<p class=\"text-lg\">{children}</p>"
        },
        {
          "name": "OptionalInfo",
          "is_standalone": false,
          "description": "(takes children): displays additional information, if available",
          "html": "<p class=\"text-sm text-gray-600\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a list item that displays a product feature with an icon, a brief description, and a optional link to learn more. The component should be responsive and adaptable to different screen sizes.",
      "html": "<ul class=\"flex flex-col md:flex-row md:flex-wrap\"><li class=\"mb-4 md:w-1/2 xl:w-1/3\"><ProductFeatureListItem/></li></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "standalone component that displays a product feature.",
          "html": "<div class=\"flex items-center mb-2\"><FeatureIcon/><div class=\"ml-4\"><h5 class=\"text-lg\">{feature_name}</h5><p class=\"text-gray-600\">{feature_description}</p>{learn_more_url && <LearnMoreLink/>} </div></div>"
        },
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "standalone component that displays an icon for the feature.",
          "html": "<i class=\"fas fa-{feature_icon} text-2xl text-gray-600\"></i>"
        },
        {
          "name": "LearnMoreLink",
          "is_standalone": true,
          "description": "standalone component that displays a link to learn more about the feature.",
          "html": "<a href=\"{learn_more_url}\" class=\"text-blue-600 hover:text-blue-900\">Learn more</a>"
        }
      ]
    },
    {
      "description": "The UI should be a single list item representing a product feature, with an icon, a brief description, and a optional learn more link. The feature item should be responsive and adaptable to different screen sizes.",
      "html": "<li class=\"flex items-center py-4\"><FeatureIcon/><FeatureDescription/><LearnMoreLink/></li>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon representing the feature.",
          "html": "<i class=\"w-6 h-6 text-gray-500 {icon_class}\" aria-hidden=\"true\"></i>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "A standalone component that displays a brief description of the feature.",
          "html": "<p class=\"ml-4 text-gray-700\">{feature_description}</p>"
        },
        {
          "name": "LearnMoreLink",
          "is_standalone": true,
          "description": "A standalone component that displays a link to learn more about the feature.",
          "html": "<a class=\"text-blue-600 hover:text-blue-800 transition duration-300 ease-in-out\" href=\"{learn_more_url}\">Learn more</a>"
        }
      ]
    },
    {
      "description": "A single item in a list of product features, displaying an icon, a heading, and a brief description.",
      "html": "<ul class=\"list-none mb-4\"><li class=\"flex items-center mb-4\"><FeatureListItem><FeatureIcon/><FeatureHeading/><FeatureDescription/></FeatureListItem></li><!-- Add more list items here --></ul>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "(standalone): Displaying an icon for the feature",
          "html": "<i class=\"text-lg text-gray-500\">{icon_name}</i>"
        },
        {
          "name": "FeatureHeading",
          "is_standalone": true,
          "description": "(standalone): Displaying the heading of the feature",
          "html": "<h3 class=\"text-lg font-bold\">{heading_text}</h3>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "(standalone): Displaying a brief description of the feature",
          "html": "<p class=\"text-gray-600\">{description_text}</p>"
        },
        {
          "name": "FeatureListItem",
          "is_standalone": false,
          "description": "(takes children): A container for a single feature item, comprising an icon, heading, and description.",
          "html": "<div class=\"flex items-center\"><div class=\"mr-4\">{children}</div><div class=\"flex-1\">{children}</div></div>"
        }
      ]
    },
    {
      "description": "A product feature list item should display an icon, a brief description, and a title, with adequate spacing and margin to separate it from other list items.",
      "html": "<ul class=\"list-none mb-4\"><FeatureListItem/><!-- Add more list items here --></ul>",
      "components": [
        {
          "name": "FeatureListItem",
          "is_standalone": true,
          "description": "a standalone component representing a single list item.",
          "html": "<li class=\"flex items-center mb-4\"><FeatureIcon/><div class=\"ml-4\"><FeatureTitle/><FeatureDescription/></div></li>"
        },
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "a standalone component displaying an icon.",
          "html": "<i class=\"text-xl {icon_class}\"></i>"
        },
        {
          "name": "FeatureTitle",
          "is_standalone": true,
          "description": "a standalone component displaying the title of the feature.",
          "html": "<h3 class=\"text-lg font-bold\">{feature_title}</h3>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": true,
          "description": "a standalone component displaying the brief description of the feature.",
          "html": "<p class=\"text-gray-600\">{feature_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a single item in a list of product features, showcasing a specific benefit of the product. It should display an icon, a brief description, and optional additional information.",
      "html": "<ul class=\"flex flex-col gap-4\"><ProductFeatureListItem/><!-- more list items --></ul>",
      "components": [
        {
          "name": "ProductFeatureListItem",
          "is_standalone": true,
          "description": "(standalone): represents a single item in the list of product features",
          "html": "<li class=\"flex items-center gap-2\"><IconWrapper><i class={`{icon_class}`}></i></IconWrapper><FeatureDescription>{description}</FeatureDescription><OptionalInfo>{optional_info}</OptionalInfo></li>"
        },
        {
          "name": "IconWrapper",
          "is_standalone": false,
          "description": "(takes children): wraps an icon with a consistent styling",
          "html": "<span class=\"w-6 h-6 text-lg\">{children}</span>"
        },
        {
          "name": "FeatureDescription",
          "is_standalone": false,
          "description": "(takes children): contains the description of the feature",
          "html": "<p class=\"text-lg\">{children}</p>"
        },
        {
          "name": "OptionalInfo",
          "is_standalone": false,
          "description": "(takes children): displays additional information, if available",
          "html": "<p class=\"text-sm text-gray-600\">{children}</p>"
        }
      ]
    }
  ],
  "Personal interests and hobbies section with icons": [
    {
      "description": "The UI should be a section showcasing personal interests and hobbies, with icons to visually represent each interest. The section should be responsive, with a flexible layout that adapts to different screen sizes. On mobile devices, the interests should be displayed in a single column, while on larger screens, they should be displayed in a grid.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests</h2><HobbiesSection><HobbyItem/><HobbyItem/><!-- more HobbyItem components here --></HobbiesSection></section>",
      "components": [
        {
          "name": "HobbyItem",
          "is_standalone": true,
          "description": "A standalone component representing a single hobby or interest, with an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><p>{hobby_label}</p></div>"
        },
        {
          "name": "HobbiesSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `HobbyItem` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first section that displays a person's interests and hobbies with accompanying icons. The section should have a clear and concise layout, with each interest or hobby listed in a grid or flexbox layout.",
      "html": "<section class=\"lg:grid lg:grid-cols-2 xl:grid-cols-3 max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests and Hobbies</h2><InterestsSection><InterestItem/><InterestItem/><InterestItem/><!-- Add more InterestItem components as needed --></InterestsSection></section>",
      "components": [
        {
          "name": "InterestItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single interest or hobby with an icon.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><i class={`w-6 h-6 text-gray-500 {icon_name}`}></i><p class=\"text-sm\">{interest_name}</p></div>"
        },
        {
          "name": "InterestsSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `InterestItem` components) and displays them in a grid or flexbox layout.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a section showcasing personal interests and hobbies, with icons to visually represent each interest. The section should be responsive, with a flexible layout that adapts to different screen sizes. On mobile devices, the interests should be displayed in a single column, while on larger screens, they should be displayed in a grid.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests</h2><HobbiesSection><HobbyItem/><HobbyItem/><!-- more HobbyItem components here --></HobbiesSection></section>",
      "components": [
        {
          "name": "HobbyItem",
          "is_standalone": true,
          "description": "A standalone component representing a single hobby or interest, with an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><p>{hobby_label}</p></div>"
        },
        {
          "name": "HobbiesSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `HobbyItem` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a section showcasing personal interests and hobbies, with icons to visually represent each interest. The section should be responsive, with a flexible layout that adapts to different screen sizes. On mobile devices, the interests should be displayed in a single column, while on larger screens, they should be displayed in a grid.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests</h2><HobbiesSection><HobbyItem/><HobbyItem/><!-- more HobbyItem components here --></HobbiesSection></section>",
      "components": [
        {
          "name": "HobbyItem",
          "is_standalone": true,
          "description": "A standalone component representing a single hobby or interest, with an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><p>{hobby_label}</p></div>"
        },
        {
          "name": "HobbiesSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `HobbyItem` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first section that displays a person's interests and hobbies with accompanying icons. The section should have a clear and concise layout, with each interest or hobby listed in a grid or flexbox layout.",
      "html": "<section class=\"lg:grid lg:grid-cols-2 xl:grid-cols-3 max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests and Hobbies</h2><InterestsSection><InterestItem/><InterestItem/><InterestItem/><!-- Add more InterestItem components as needed --></InterestsSection></section>",
      "components": [
        {
          "name": "InterestItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single interest or hobby with an icon.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\"><i class={`w-6 h-6 text-gray-500 {icon_name}`}></i><p class=\"text-sm\">{interest_name}</p></div>"
        },
        {
          "name": "InterestsSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `InterestItem` components) and displays them in a grid or flexbox layout.",
          "html": "<div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a section showcasing personal interests and hobbies, with icons to visually represent each interest. The section should be responsive, with a flexible layout that adapts to different screen sizes. On mobile devices, the interests should be displayed in a single column, while on larger screens, they should be displayed in a grid.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests</h2><HobbiesSection><HobbyItem/><HobbyItem/><!-- more HobbyItem components here --></HobbiesSection></section>",
      "components": [
        {
          "name": "HobbyItem",
          "is_standalone": true,
          "description": "A standalone component representing a single hobby or interest, with an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><p>{hobby_label}</p></div>"
        },
        {
          "name": "HobbiesSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `HobbyItem` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a section showcasing personal interests and hobbies, with icons to visually represent each interest. The section should be responsive, with a flexible layout that adapts to different screen sizes. On mobile devices, the interests should be displayed in a single column, while on larger screens, they should be displayed in a grid.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests</h2><HobbiesSection><HobbyItem/><HobbyItem/><!-- more HobbyItem components here --></HobbiesSection></section>",
      "components": [
        {
          "name": "HobbyItem",
          "is_standalone": true,
          "description": "A standalone component representing a single hobby or interest, with an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><p>{hobby_label}</p></div>"
        },
        {
          "name": "HobbiesSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `HobbyItem` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a section showcasing personal interests and hobbies, with icons to visually represent each interest. The section should be responsive, with a flexible layout that adapts to different screen sizes. On mobile devices, the interests should be displayed in a single column, while on larger screens, they should be displayed in a grid.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests</h2><HobbiesSection><HobbyItem/><HobbyItem/><!-- more HobbyItem components here --></HobbiesSection></section>",
      "components": [
        {
          "name": "HobbyItem",
          "is_standalone": true,
          "description": "A standalone component representing a single hobby or interest, with an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><p>{hobby_label}</p></div>"
        },
        {
          "name": "HobbiesSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `HobbyItem` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a section showcasing personal interests and hobbies, with icons to visually represent each interest. The section should be responsive, with a flexible layout that adapts to different screen sizes. On mobile devices, the interests should be displayed in a single column, while on larger screens, they should be displayed in a grid.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests</h2><HobbiesSection><HobbyItem/><HobbyItem/><!-- more HobbyItem components here --></HobbiesSection></section>",
      "components": [
        {
          "name": "HobbyItem",
          "is_standalone": true,
          "description": "A standalone component representing a single hobby or interest, with an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon_name}</span><p>{hobby_label}</p></div>"
        },
        {
          "name": "HobbiesSection",
          "is_standalone": false,
          "description": "A component that takes children (multiple `HobbyItem` components) and displays them in a responsive grid or list.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of personal interests and hobbies, each accompanied by an icon that represents the interest or hobby. The list should be responsive, with a maximum of 3 items per row on larger screens, and a single column on mobile devices.",
      "html": "<section class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-4\">Personal Interests and Hobbies</h2><InterestsList><InterestItem/><InterestItem/><InterestItem/><!-- Add more InterestItem components as needed --></InterestsList></section>",
      "components": [
        {
          "name": "InterestItem",
          "is_standalone": true,
          "description": "(standalone): Represents a single interest or hobby, consisting of an icon and a label.",
          "html": "<div class=\"flex items-center mb-4\"><i class={`w-6 h-6 text-lg {icon_class}`}></i><span class=\"ml-2\">{interest_label}</span></div>"
        },
        {
          "name": "InterestsList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of `InterestItem`s.",
          "html": "<ul class=\"flex flex-wrap justify-center md:flex-nowrap md:flex-row\">{children}</ul>"
        }
      ]
    }
  ],
  "Company Email Address": [
    {
      "description": "The UI should display a company email address in a simple and clean format, with a label indicating that it's an email address.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><EmailLabel/><EmailAddress>{companyEmailAddress}</EmailAddress></div>",
      "components": [
        {
          "name": "EmailLabel",
          "is_standalone": true,
          "description": "A standalone component to display the label \"Email\".",
          "html": "<span class=\"text-sm text-gray-600\">Email</span>"
        },
        {
          "name": "EmailAddress",
          "is_standalone": false,
          "description": "A component that takes children to display the actual email address.",
          "html": "<a href={`mailto:${children}`} class=\"text-blue-600 hover:text-blue-800\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"mx-auto p-4 md:p-6 lg:p-8\"><EmailAddress/></div>",
      "components": [
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{company_email_address}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a label indicating that it's an email address.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><EmailLabel/><EmailAddress>{companyEmailAddress}</EmailAddress></div>",
      "components": [
        {
          "name": "EmailLabel",
          "is_standalone": true,
          "description": "A standalone component to display the label \"Email\".",
          "html": "<span class=\"text-sm text-gray-600\">Email</span>"
        },
        {
          "name": "EmailAddress",
          "is_standalone": false,
          "description": "A component that takes children to display the actual email address.",
          "html": "<a href={`mailto:${children}`} class=\"text-blue-600 hover:text-blue-800\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"mx-auto p-4 md:p-6 lg:p-8\"><EmailAddress/></div>",
      "components": [
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{company_email_address}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a label indicating that it's an email address.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><EmailLabel/><EmailAddress>{companyEmailAddress}</EmailAddress></div>",
      "components": [
        {
          "name": "EmailLabel",
          "is_standalone": true,
          "description": "A standalone component to display the label \"Email\".",
          "html": "<span class=\"text-sm text-gray-600\">Email</span>"
        },
        {
          "name": "EmailAddress",
          "is_standalone": false,
          "description": "A component that takes children to display the actual email address.",
          "html": "<a href={`mailto:${children}`} class=\"text-blue-600 hover:text-blue-800\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a label indicating that it's an email address.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><EmailLabel/><EmailAddress>{companyEmailAddress}</EmailAddress></div>",
      "components": [
        {
          "name": "EmailLabel",
          "is_standalone": true,
          "description": "A standalone component to display the label \"Email\".",
          "html": "<span class=\"text-sm text-gray-600\">Email</span>"
        },
        {
          "name": "EmailAddress",
          "is_standalone": false,
          "description": "A component that takes children to display the actual email address.",
          "html": "<a href={`mailto:${children}`} class=\"text-blue-600 hover:text-blue-800\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"mx-auto p-4 md:p-6 lg:p-8\"><EmailAddress/></div>",
      "components": [
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{company_email_address}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a label indicating that it's an email address.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><EmailLabel/><EmailAddress>{companyEmailAddress}</EmailAddress></div>",
      "components": [
        {
          "name": "EmailLabel",
          "is_standalone": true,
          "description": "A standalone component to display the label \"Email\".",
          "html": "<span class=\"text-sm text-gray-600\">Email</span>"
        },
        {
          "name": "EmailAddress",
          "is_standalone": false,
          "description": "A component that takes children to display the actual email address.",
          "html": "<a href={`mailto:${children}`} class=\"text-blue-600 hover:text-blue-800\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"mx-auto p-4 md:p-6 lg:p-8\"><EmailAddress/></div>",
      "components": [
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{company_email_address}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a clean and readable format. The email address should be clickable, allowing users to send an email to the company. The component should be responsive, adapting to different screen sizes and devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><p class=\"text-lg font-bold\">Get in touch with us:</p><EmailAddress/></div>",
      "components": [
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href=\"mailto: {company_email_address}\" class=\"text-blue-600 hover:text-blue-900\">{company_email_address}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a label indicating that it's an email address.",
      "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><EmailLabel/><EmailAddress>{companyEmailAddress}</EmailAddress></div>",
      "components": [
        {
          "name": "EmailLabel",
          "is_standalone": true,
          "description": "A standalone component to display the label \"Email\".",
          "html": "<span class=\"text-sm text-gray-600\">Email</span>"
        },
        {
          "name": "EmailAddress",
          "is_standalone": false,
          "description": "A component that takes children to display the actual email address.",
          "html": "<a href={`mailto:${children}`} class=\"text-blue-600 hover:text-blue-800\">{children}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company email address in a simple and clean format, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"mx-auto p-4 md:p-6 lg:p-8\"><EmailAddress/></div>",
      "components": [
        {
          "name": "EmailAddress",
          "is_standalone": true,
          "description": "component (standalone)",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{company_email_address}</p>"
        }
      ]
    }
  ],
  "Message body text editor with formatting tools": [
    {
      "description": "The UI should be a text editor with a toolbar containing formatting tools such as bold, italic, underline, and font sizes. The text editor should be responsive and mobile-friendly, with a clean and minimalistic design.",
      "html": "<div class=\"flex flex-col h-screen max-h-screen overflow-y-auto p-4\"><TextEditor/></div>",
      "components": [
        {
          "name": "TextEditor",
          "is_standalone": true,
          "description": "(standalone): The main text editor component containing the text area and toolbar.",
          "html": "<div class=\"flex flex-col h-full w-full\"><Toolbar/><textarea class=\"w-full p-2 h-full overflow-y-auto resize-y\"/></div>"
        },
        {
          "name": "Toolbar",
          "is_standalone": true,
          "description": "(standalone): The toolbar component containing the formatting tools.",
          "html": "<div class=\"flex justify-center mb-2\"><ToolButton><i class=\"fas fa-bold\"/></ToolButton><ToolButton><i class=\"fas fa-italic\"/></ToolButton><ToolButton><i class=\"fas fa-underline\"/></ToolButton><ToolButton><span>Font size: {font_size}</span><select class=\"pl-2\"><option value=\"10\">10px</option><option value=\"12\">12px</option><option value=\"14\">14px</option></select></ToolButton></div>"
        },
        {
          "name": "ToolButton",
          "is_standalone": false,
          "description": "(takes children): A single tool button in the toolbar, containing an icon and optional text.",
          "html": "<button class=\"py-2 px-4 rounded-md hover:bg-gray-100\">{children}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a text editor with a toolbar containing formatting tools such as bold, italic, underline, and font sizes. The text editor should be responsive and mobile-friendly, with a clean and minimalistic design.",
      "html": "<div class=\"flex flex-col h-screen max-h-screen overflow-y-auto p-4\"><TextEditor/></div>",
      "components": [
        {
          "name": "TextEditor",
          "is_standalone": true,
          "description": "(standalone): The main text editor component containing the text area and toolbar.",
          "html": "<div class=\"flex flex-col h-full w-full\"><Toolbar/><textarea class=\"w-full p-2 h-full overflow-y-auto resize-y\"/></div>"
        },
        {
          "name": "Toolbar",
          "is_standalone": true,
          "description": "(standalone): The toolbar component containing the formatting tools.",
          "html": "<div class=\"flex justify-center mb-2\"><ToolButton><i class=\"fas fa-bold\"/></ToolButton><ToolButton><i class=\"fas fa-italic\"/></ToolButton><ToolButton><i class=\"fas fa-underline\"/></ToolButton><ToolButton><span>Font size: {font_size}</span><select class=\"pl-2\"><option value=\"10\">10px</option><option value=\"12\">12px</option><option value=\"14\">14px</option></select></ToolButton></div>"
        },
        {
          "name": "ToolButton",
          "is_standalone": false,
          "description": "(takes children): A single tool button in the toolbar, containing an icon and optional text.",
          "html": "<button class=\"py-2 px-4 rounded-md hover:bg-gray-100\">{children}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a text editor with a toolbar containing formatting tools such as bold, italic, underline, and font sizes. The text editor should be responsive and mobile-friendly, with a clean and minimalistic design.",
      "html": "<div class=\"flex flex-col h-screen max-h-screen overflow-y-auto p-4\"><TextEditor/></div>",
      "components": [
        {
          "name": "TextEditor",
          "is_standalone": true,
          "description": "(standalone): The main text editor component containing the text area and toolbar.",
          "html": "<div class=\"flex flex-col h-full w-full\"><Toolbar/><textarea class=\"w-full p-2 h-full overflow-y-auto resize-y\"/></div>"
        },
        {
          "name": "Toolbar",
          "is_standalone": true,
          "description": "(standalone): The toolbar component containing the formatting tools.",
          "html": "<div class=\"flex justify-center mb-2\"><ToolButton><i class=\"fas fa-bold\"/></ToolButton><ToolButton><i class=\"fas fa-italic\"/></ToolButton><ToolButton><i class=\"fas fa-underline\"/></ToolButton><ToolButton><span>Font size: {font_size}</span><select class=\"pl-2\"><option value=\"10\">10px</option><option value=\"12\">12px</option><option value=\"14\">14px</option></select></ToolButton></div>"
        },
        {
          "name": "ToolButton",
          "is_standalone": false,
          "description": "(takes children): A single tool button in the toolbar, containing an icon and optional text.",
          "html": "<button class=\"py-2 px-4 rounded-md hover:bg-gray-100\">{children}</button>"
        }
      ]
    }
  ],
  "Article Title: Headline of individual post": [
    {
      "description": "The UI should display a prominent headline of an individual post, with a clear and readable font, suitable for desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PostHeadline/></header>",
      "components": [
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-3xl font-bold mb-2\">{post_title}</h1>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent headline of an individual post, with a clear and readable font, suitable for desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PostHeadline/></header>",
      "components": [
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-3xl font-bold mb-2\">{post_title}</h1>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent headline of an individual post, with a clear and readable font, suitable for desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PostHeadline/></header>",
      "components": [
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-3xl font-bold mb-2\">{post_title}</h1>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent headline of an individual post, with a clear and readable font, suitable for desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PostHeadline/></header>",
      "components": [
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-3xl font-bold mb-2\">{post_title}</h1>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent headline of an individual post, with a clear and readable font, suitable for desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PostHeadline/></header>",
      "components": [
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-3xl font-bold mb-2\">{post_title}</h1>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent headline of an individual post, with a clear and readable font, suitable for desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PostHeadline/></header>",
      "components": [
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-3xl font-bold mb-2\">{post_title}</h1>"
        }
      ]
    },
    {
      "description": "The UI should display a prominent headline of an individual post, with a clear and readable font, suitable for desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4\"><PostHeadline/></header>",
      "components": [
        {
          "name": "PostHeadline",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<h1 class=\"text-3xl font-bold mb-2\">{post_title}</h1>"
        }
      ]
    }
  ],
  "Product Description Text": [
    {
      "description": "The UI should display a product description text, which is a brief summary of the product's features and benefits. The text should be readable on various devices and should be accessible to screen readers.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProductDescriptionText/></div>",
      "components": [
        {
          "name": "ProductDescriptionText",
          "is_standalone": true,
          "description": "standalone component that renders the product description text.",
          "html": "<p class=\"text-lg leading-relaxed\">{product_description_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a product description text, which is a brief summary of the product's features and benefits. The text should be readable on various devices and should be accessible to screen readers.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProductDescriptionText/></div>",
      "components": [
        {
          "name": "ProductDescriptionText",
          "is_standalone": true,
          "description": "standalone component that renders the product description text.",
          "html": "<p class=\"text-lg leading-relaxed\">{product_description_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a product description text, which is a brief summary of the product's features and benefits. The text should be readable on various devices and should be accessible to screen readers.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProductDescriptionText/></div>",
      "components": [
        {
          "name": "ProductDescriptionText",
          "is_standalone": true,
          "description": "standalone component that renders the product description text.",
          "html": "<p class=\"text-lg leading-relaxed\">{product_description_text}</p>"
        }
      ]
    }
  ],
  "Floating Action Buttons": [
    {
      "description": "A set of floating action buttons (FABs) that can be used to perform various actions. There should be a main FAB and several smaller FABs that can be toggled on and off.",
      "html": "<div class=\"fixed bottom-0 right-0 mb-4 mr-4\"><FabContainer><MainFab/><MiniFab/><MiniFab/><MiniFab/></FabContainer></div>",
      "components": [
        {
          "name": "MainFab",
          "is_standalone": true,
          "description": "Standalone component that represents the main FAB.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">{main_fab_icon}</button>"
        },
        {
          "name": "MiniFab",
          "is_standalone": true,
          "description": "Standalone component that represents a smaller FAB.",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-1 px-2 rounded-full\">{mini_fab_icon}</button>"
        },
        {
          "name": "FabContainer",
          "is_standalone": false,
          "description": "Component that takes children, used to wrap the FABs.",
          "html": "<div class=\"relative\">{children}</div>"
        }
      ]
    }
  ],
  "SEO Meta Tags/Optimization": [
    {
      "description": "A basic SEO meta tags optimization setup with title, description, and keywords.",
      "html": "<head><MetaTitle/><MetaDescription/><MetaKeywords/></head>",
      "components": [
        {
          "name": "MetaTitle",
          "is_standalone": true,
          "description": "- Standalone - Displays the title of the webpage.",
          "html": "<title>{title}</title>"
        },
        {
          "name": "MetaDescription",
          "is_standalone": true,
          "description": "- Standalone - Displays the meta description of the webpage.",
          "html": "<meta name=\"description\" content=\"{description}\"/>"
        },
        {
          "name": "MetaKeywords",
          "is_standalone": true,
          "description": "- Standalone - Displays the meta keywords of the webpage.",
          "html": "<meta name=\"keywords\" content=\"{keywords}\"/>"
        }
      ]
    }
  ],
  "Send button to post new tweet": [
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    },
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    },
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    },
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    },
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    },
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    },
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    },
    {
      "description": "A call-to-action button to post a new tweet, responsive and accessible, with a blue background and white text, with a paper airplane icon indicating sending a tweet.",
      "html": "<div class=\"flex justify-center mb-4\"><TweetButton/></div>",
      "components": [
        {
          "name": "TweetButton",
          "is_standalone": true,
          "description": "(standalone) - a self-contained button component with a paper airplane icon and text \"Tweet\"",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-paper-plane mr-2\"></i>{tweet_button_text}</button>"
        }
      ]
    }
  ],
  "Headline and Summary Text": [
    {
      "description": "A headline and summary text section, typically used on a blog post or article page, that is responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12\"><HeadlineComponent/><SummaryTextComponent/></div>",
      "components": [
        {
          "name": "HeadlineComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays a headline text.",
          "html": "<h1 class=\"text-3xl md:text-4xl lg:text-5xl font-bold\">{headline_text}</h1>"
        },
        {
          "name": "SummaryTextComponent",
          "is_standalone": true,
          "description": "(standalone) - Displays a summary text.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{summary_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a headline and a summary text in a responsive, mobile-first layout. The headline should be prominent and attention-grabbing, while the summary text should provide a brief overview of the content.",
      "html": "<div class=\"flex flex-col items-center md:flex-row md:justify-center\"><HeadlineComponent/><SummaryTextComponent/></div>",
      "components": [
        {
          "name": "HeadlineComponent",
          "is_standalone": true,
          "description": "(standalone): displays a prominent headline text",
          "html": "<h1 class=\"text-3xl font-bold mb-4\">{headline_text}</h1>"
        },
        {
          "name": "SummaryTextComponent",
          "is_standalone": true,
          "description": "(standalone): displays a brief summary text",
          "html": "<p class=\"text-lg text-gray-600\">{summary_text}</p>"
        }
      ]
    }
  ],
  "Resume download button with print option": [
    {
      "description": "The UI should be a responsive, mobile-friendly button that allows users to download a resume in various formats (e.g., PDF, Word, Text) and also provides an option to print the resume. The button should be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><DownloadResumeButton/></div>",
      "components": [
        {
          "name": "DownloadResumeButton",
          "is_standalone": true,
          "description": "a standalone component that renders a button with a dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download Resume <span class=\"caret ml-2\"></span><DropdownMenu/></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the dropdown menu with options to download the resume in different formats and print the resume.",
          "html": "<ul class=\"dropdown-menu absolute bg-white shadow-md py-2\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{format_url}\" download=\"{filename}\">{format_name} </a><!-- or --><a href=\"#\" onclick=\"window.print()\">Print Resume </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-friendly button that allows users to download a resume in various formats (e.g., PDF, Word, Text) and also provides an option to print the resume. The button should be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><DownloadResumeButton/></div>",
      "components": [
        {
          "name": "DownloadResumeButton",
          "is_standalone": true,
          "description": "a standalone component that renders a button with a dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download Resume <span class=\"caret ml-2\"></span><DropdownMenu/></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the dropdown menu with options to download the resume in different formats and print the resume.",
          "html": "<ul class=\"dropdown-menu absolute bg-white shadow-md py-2\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{format_url}\" download=\"{filename}\">{format_name} </a><!-- or --><a href=\"#\" onclick=\"window.print()\">Print Resume </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-friendly button that allows users to download a resume in various formats (e.g., PDF, Word, Text) and also provides an option to print the resume. The button should be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><DownloadResumeButton/></div>",
      "components": [
        {
          "name": "DownloadResumeButton",
          "is_standalone": true,
          "description": "a standalone component that renders a button with a dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download Resume <span class=\"caret ml-2\"></span><DropdownMenu/></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the dropdown menu with options to download the resume in different formats and print the resume.",
          "html": "<ul class=\"dropdown-menu absolute bg-white shadow-md py-2\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{format_url}\" download=\"{filename}\">{format_name} </a><!-- or --><a href=\"#\" onclick=\"window.print()\">Print Resume </a></li>"
        }
      ]
    },
    {
      "description": "A download button with an adjacent print option, styled with a modern and minimalistic design.",
      "html": "<div class=\"flex gap-2\"><ResumeDownloadButton/><PrintOption/></div>",
      "components": [
        {
          "name": "ResumeDownloadButton",
          "is_standalone": true,
          "description": "standalone component for the download button",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Download Resume ({file_size})</button>"
        },
        {
          "name": "PrintOption",
          "is_standalone": true,
          "description": "standalone component for the print option",
          "html": "<button class=\"bg-gray-500 hover:bg-gray-700 text-gray-100 font-bold py-2 px-4 rounded\">Print</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-friendly button that allows users to download a resume in various formats (e.g., PDF, Word, Text) and also provides an option to print the resume. The button should be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><DownloadResumeButton/></div>",
      "components": [
        {
          "name": "DownloadResumeButton",
          "is_standalone": true,
          "description": "a standalone component that renders a button with a dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download Resume <span class=\"caret ml-2\"></span><DropdownMenu/></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the dropdown menu with options to download the resume in different formats and print the resume.",
          "html": "<ul class=\"dropdown-menu absolute bg-white shadow-md py-2\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{format_url}\" download=\"{filename}\">{format_name} </a><!-- or --><a href=\"#\" onclick=\"window.print()\">Print Resume </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-friendly button that allows users to download a resume in various formats (e.g., PDF, Word, Text) and also provides an option to print the resume. The button should be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><DownloadResumeButton/></div>",
      "components": [
        {
          "name": "DownloadResumeButton",
          "is_standalone": true,
          "description": "a standalone component that renders a button with a dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download Resume <span class=\"caret ml-2\"></span><DropdownMenu/></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the dropdown menu with options to download the resume in different formats and print the resume.",
          "html": "<ul class=\"dropdown-menu absolute bg-white shadow-md py-2\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{format_url}\" download=\"{filename}\">{format_name} </a><!-- or --><a href=\"#\" onclick=\"window.print()\">Print Resume </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-friendly button that allows users to download a resume in various formats (e.g., PDF, Word, Text) and also provides an option to print the resume. The button should be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><DownloadResumeButton/></div>",
      "components": [
        {
          "name": "DownloadResumeButton",
          "is_standalone": true,
          "description": "a standalone component that renders a button with a dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download Resume <span class=\"caret ml-2\"></span><DropdownMenu/></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the dropdown menu with options to download the resume in different formats and print the resume.",
          "html": "<ul class=\"dropdown-menu absolute bg-white shadow-md py-2\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{format_url}\" download=\"{filename}\">{format_name} </a><!-- or --><a href=\"#\" onclick=\"window.print()\">Print Resume </a></li>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-friendly button that allows users to download a resume in various formats (e.g., PDF, Word, Text) and also provides an option to print the resume. The button should be accessible and SEO-friendly.",
      "html": "<div class=\"flex justify-center\"><DownloadResumeButton/></div>",
      "components": [
        {
          "name": "DownloadResumeButton",
          "is_standalone": true,
          "description": "a standalone component that renders a button with a dropdown menu.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Download Resume <span class=\"caret ml-2\"></span><DropdownMenu/></button>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "a component that takes children, representing the dropdown menu with options to download the resume in different formats and print the resume.",
          "html": "<ul class=\"dropdown-menu absolute bg-white shadow-md py-2\">{children}</ul>"
        },
        {
          "name": "DropdownItem",
          "is_standalone": true,
          "description": "a standalone component that represents a single item in the dropdown menu.",
          "html": "<li class=\"py-2 px-4 hover:bg-gray-100\"><a href=\"{format_url}\" download=\"{filename}\">{format_name} </a><!-- or --><a href=\"#\" onclick=\"window.print()\">Print Resume </a></li>"
        }
      ]
    },
    {
      "description": "A button group with two buttons: one to download the resume and another to print the resume. The buttons should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><ResumeActionButtons/></div>",
      "components": [
        {
          "name": "ResumeActionButtons",
          "is_standalone": true,
          "description": "(standalone) - contains the download and print buttons",
          "html": "<div class=\"btn-group\"><ActionButton><i class=\"fas fa-download mr-2\"></i>Download Resume </ActionButton><ActionButton><i class=\"fas fa-print mr-2\"></i>Print Resume </ActionButton></div>"
        },
        {
          "name": "ActionButton",
          "is_standalone": false,
          "description": "(takes children) - a single button with a label and optional icon",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{children}</button>"
        }
      ]
    }
  ],
  "Search Bar: Input field for searching content": [
    {
      "description": "The UI should be a simple search bar with an input field and a submit button. The input field should be responsive and adapt to different screen sizes. The search bar should be accessible, with a clear label and a submit button that can be clicked or pressed using the keyboard.",
      "html": "<div class=\"flex justify-center xl:w-1/2 md:w-2/3 w-full mx-auto mb-4\"><form><SearchInput/><SearchButton/></form></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "a standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full pl-4 pr-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search input\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that represents the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The search bar should be a simple input field with a search icon on the left and a clear button on the right. It should be full-width on mobile devices and have a maximum width on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and clear button.",
          "html": "<div class=\"flex items-center w-full rounded-md border border-gray-300\"><SearchIcon/><input type=\"search\" class=\"w-full pl-8 pr-4 py-2\" placeholder=\"Search...\"/><ClearButton/></div>"
        },
        {
          "name": "SearchIcon",
          "is_standalone": true,
          "description": "standalone component that displays a search icon.",
          "html": "<span class=\"text-gray-400 text-lg\"><!-- search icon will go here --></span>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "standalone component that displays a clear button.",
          "html": "<button class=\"text-gray-400 hover:text-gray-600 transition duration-300\"><!-- clear icon will go here --></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with an input field and a submit button. The input field should be responsive and adapt to different screen sizes. The search bar should be accessible, with a clear label and a submit button that can be clicked or pressed using the keyboard.",
      "html": "<div class=\"flex justify-center xl:w-1/2 md:w-2/3 w-full mx-auto mb-4\"><form><SearchInput/><SearchButton/></form></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "a standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full pl-4 pr-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search input\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that represents the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with an input field and a submit button. The input field should be responsive and adapt to different screen sizes. The search bar should be accessible, with a clear label and a submit button that can be clicked or pressed using the keyboard.",
      "html": "<div class=\"flex justify-center xl:w-1/2 md:w-2/3 w-full mx-auto mb-4\"><form><SearchInput/><SearchButton/></form></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "a standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full pl-4 pr-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search input\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that represents the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The search bar should be a simple input field with a search icon on the left and a clear button on the right. It should be full-width on mobile devices and have a maximum width on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field, search icon, and clear button.",
          "html": "<div class=\"flex items-center w-full rounded-md border border-gray-300\"><SearchIcon/><input type=\"search\" class=\"w-full pl-8 pr-4 py-2\" placeholder=\"Search...\"/><ClearButton/></div>"
        },
        {
          "name": "SearchIcon",
          "is_standalone": true,
          "description": "standalone component that displays a search icon.",
          "html": "<span class=\"text-gray-400 text-lg\"><!-- search icon will go here --></span>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "standalone component that displays a clear button.",
          "html": "<button class=\"text-gray-400 hover:text-gray-600 transition duration-300\"><!-- clear icon will go here --></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with an input field and a submit button. The input field should be responsive and adapt to different screen sizes. The search bar should be accessible, with a clear label and a submit button that can be clicked or pressed using the keyboard.",
      "html": "<div class=\"flex justify-center xl:w-1/2 md:w-2/3 w-full mx-auto mb-4\"><form><SearchInput/><SearchButton/></form></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "a standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full pl-4 pr-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search input\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that represents the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with an input field and a submit button. The input field should be responsive and adapt to different screen sizes. The search bar should be accessible, with a clear label and a submit button that can be clicked or pressed using the keyboard.",
      "html": "<div class=\"flex justify-center xl:w-1/2 md:w-2/3 w-full mx-auto mb-4\"><form><SearchInput/><SearchButton/></form></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "a standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full pl-4 pr-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search input\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that represents the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with an input field and a submit button. The input field should be responsive and adapt to different screen sizes. The search bar should be accessible, with a clear label and a submit button that can be clicked or pressed using the keyboard.",
      "html": "<div class=\"flex justify-center xl:w-1/2 md:w-2/3 w-full mx-auto mb-4\"><form><SearchInput/><SearchButton/></form></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "a standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full pl-4 pr-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search input\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that represents the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with an input field and a submit button. The input field should be responsive and adapt to different screen sizes. The search bar should be accessible, with a clear label and a submit button that can be clicked or pressed using the keyboard.",
      "html": "<div class=\"flex justify-center xl:w-1/2 md:w-2/3 w-full mx-auto mb-4\"><form><SearchInput/><SearchButton/></form></div>",
      "components": [
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "a standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full pl-4 pr-10 text-sm text-gray-700\" placeholder=\"Search...\" aria-label=\"Search input\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that represents the submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    }
  ],
  "Reply button to respond to tweets": [
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a small button with a reply icon and the text \"Reply\". The button should be blue and round, with a subtle hover effect. The text should be white and centered vertically within the button.",
      "html": "<button><ReplyButton/></button>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"><i class=\"fas fa-reply mr-2\"></i>Reply</button>"
        }
      ]
    },
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    },
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a small button with a reply icon and the text \"Reply\". The button should be blue and round, with a subtle hover effect. The text should be white and centered vertically within the button.",
      "html": "<button><ReplyButton/></button>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"><i class=\"fas fa-reply mr-2\"></i>Reply</button>"
        }
      ]
    },
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    },
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    },
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    },
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a small button with a reply icon and the text \"Reply\". The button should be blue and round, with a subtle hover effect. The text should be white and centered vertically within the button.",
      "html": "<button><ReplyButton/></button>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-full\"><i class=\"fas fa-reply mr-2\"></i>Reply</button>"
        }
      ]
    },
    {
      "description": "A small reply button that appears when hovering over a tweet, with a white reply icon on a blue background.",
      "html": "<div class=\"flex justify-end\"><ReplyButton/></div>",
      "components": [
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "- Standalone",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-reply\" aria-hidden=\"true\"></i><!-- Button text for screen readers --><span class=\"sr-only\">Reply</span></button>"
        }
      ]
    }
  ],
  "Skills section with icons and proficiency levels": [
    {
      "description": "A Skills section that displays a list of skills with their corresponding icons and proficiency levels.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-2xl font-bold mb-4\">Skills</h2><ul class=\"list-none mb-0\"><SkillCard/><SkillCard/><SkillCard/><!-- Add more SkillCard components as needed --></ul></div>",
      "components": [
        {
          "name": "SkillCard",
          "is_standalone": true,
          "description": "Standalone component that displays a single skill with its icon and proficiency level.",
          "html": "<li class=\"flex items-center mb-4\"><i class=\"mr-2 {icon_class}\" aria-hidden=\"true\"></i><span class=\"text-lg\">{skill_name}</span><span class=\"text-sm text-gray-600\">{proficiency_level}</span></li>"
        }
      ]
    }
  ],
  "Category List: Links to categorized content": [
    {
      "description": "The Category List should display a list of categorized content links, with each link displaying the category name and a brief description. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Categories</h2><ul class=\"list-none mb-0\"><CategoryList><!-- category links will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of `CategoryLink` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The Category List should display a list of categorized content links, with each link displaying the category name and a brief description. The list should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4 lg:p-6\"><h2 class=\"text-lg font-bold mb-4\">Categories</h2><ul class=\"list-none mb-0\"><CategoryList><!-- category links will be inserted here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of `CategoryLink` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of categories, with each category having a title and a link to the corresponding content.",
      "html": "<div class=\"container mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Categories</h2><ul class=\"list-none mb-0\"><CategoryList><CategoryLink/><CategoryLink/><!-- Add more CategoryLink components here --></CategoryList></ul></div>",
      "components": [
        {
          "name": "CategoryLink",
          "is_standalone": true,
          "description": "A standalone component representing a single category with a link.",
          "html": "<li class=\"mb-2\"><a href=\"{categoryLink}\" class=\"text-blue-600 hover:text-blue-900 transition duration-300\">{categoryName}</a></li>"
        },
        {
          "name": "CategoryList",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CategoryLink` components) to display a list of categories.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Video/Audio Players": [
    {
      "description": "The UI should have a large video or audio player in the center, with playback controls (play/pause, seek, volume) below it. There should also be a title and optional description above the player.",
      "html": "<div class=\"flex flex-col h-screen p-4\"><div class=\"flex justify-center mb-4\"><MediaTitle/><!-- displays the title of the media --><MediaDescription/><!-- displays a optional description of the media --></div><MediaPlayer/><!-- displays the video or audio content --><MediaControls/><!-- displays the playback controls (play/pause, seek, volume) --></div>",
      "components": [
        {
          "name": "MediaPlayer",
          "is_standalone": true,
          "description": "standalone, displays the video or audio content",
          "html": "<div class=\"w-full h-96 bg-gray-200 rounded-lg\"><!-- video or audio content will be rendered here --></div>"
        },
        {
          "name": "MediaControls",
          "is_standalone": true,
          "description": "standalone, displays the playback controls (play/pause, seek, volume)",
          "html": "<div class=\"flex justify-center mb-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{play_or_pause_text} </button><div class=\"mx-4\"><input type=\"range\" class=\"w-full\"/></div><button class=\"bg-gray-200 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded\">Volume: {volume_level}% </button></div>"
        },
        {
          "name": "MediaTitle",
          "is_standalone": true,
          "description": "standalone, displays the title of the media",
          "html": "<h2 class=\"text-2xl font-bold mb-2\">{media_title}</h2>"
        },
        {
          "name": "MediaDescription",
          "is_standalone": true,
          "description": "standalone, displays a optional description of the media",
          "html": "<p class=\"text-gray-600\">{media_description}</p>"
        }
      ]
    }
  ],
  "Product Cards/Grids": [
    {
      "description": "A responsive grid of product cards, with each card displaying a product image, title, price, and a \"Add to Cart\" button. The grid should be mobile-first, with a single column on small screens and a multi-column layout on larger screens.",
      "html": "<!-- Product Grid container --><div class=\"container mx-auto p-4\"><!-- Product Grid --><div class=\"grid gap-4 lg:grid-cols-2 xl:grid-cols-3\"><!-- Product Card 1 --><ProductCard/><!-- Product Card 2 --><ProductCard/><!-- ... --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "(standalone): A single product card, containing image, title, price, and \"Add to Cart\" button.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><!-- Product Image --><img src=\"{product_image}\" alt=\"{product_title}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><!-- Product Title --><h2 class=\"text-lg font-bold\">{product_title}</h2><!-- Product Price --><p class=\"text-lg\">{product_price}</p><!-- Add to Cart Button --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button></div></div>"
        }
      ]
    },
    {
      "description": "A responsive grid of product cards, with each card displaying a product image, title, price, and a \"Add to Cart\" button. The grid should be mobile-first, with a single column on small screens and a multi-column layout on larger screens.",
      "html": "<!-- Product Grid container --><div class=\"container mx-auto p-4\"><!-- Product Grid --><div class=\"grid gap-4 lg:grid-cols-2 xl:grid-cols-3\"><!-- Product Card 1 --><ProductCard/><!-- Product Card 2 --><ProductCard/><!-- ... --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "(standalone): A single product card, containing image, title, price, and \"Add to Cart\" button.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><!-- Product Image --><img src=\"{product_image}\" alt=\"{product_title}\" class=\"w-full h-48 object-cover rounded-t-md\"/><div class=\"p-4\"><!-- Product Title --><h2 class=\"text-lg font-bold\">{product_title}</h2><!-- Product Price --><p class=\"text-lg\">{product_price}</p><!-- Add to Cart Button --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Add to Cart</button></div></div>"
        }
      ]
    }
  ],
  "Popular Tags: Cloud of frequently used keywords": [
    {
      "description": "A cloud of popular tags, where each tag has a different size and color based on its frequency of use. The tags should be arranged in a way that creates a visually appealing and organic shape.",
      "html": "<div class=\"md:max-w-md mx-auto p-4\"><PopularTagCloud/></div>",
      "components": [
        {
          "name": "PopularTagCloud",
          "is_standalone": true,
          "description": "standalone component that contains all the popular tags",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{tags}</div>"
        },
        {
          "name": "Tag",
          "is_standalone": true,
          "description": "standalone component that represents a single popular tag",
          "html": "<a href=\"{tag_url}\" class=\"inline-block px-2 py-1 rounded {tag_color} text-lg mb-2 mr-2 hover:underline\">{tag_name} <span class=\"text-sm\">({tag_frequency})</span></a>"
        }
      ]
    }
  ],
  "Countdown Timers": [
    {
      "description": "The UI should display a countdown timer showing days, hours, minutes, and seconds until a specific date and time.",
      "html": "<div class=\"flex justify-center\"><CountdownTimer/></div>",
      "components": [
        {
          "name": "CountdownTimer",
          "is_standalone": true,
          "description": "(standalone): The main countdown timer component.",
          "html": "<div class=\"flex gap-4\"><DayCounter/><span>:</span><HourCounter/><span>:</span><MinuteCounter/><span>:</span><SecondCounter/></div>"
        },
        {
          "name": "DayCounter",
          "is_standalone": true,
          "description": "(standalone): Displays the number of days.",
          "html": "<div class=\"text-4xl\">{days} <span>days</span></div>"
        },
        {
          "name": "HourCounter",
          "is_standalone": true,
          "description": "(standalone): Displays the number of hours.",
          "html": "<div class=\"text-4xl\">{hours} <span>hours</span></div>"
        },
        {
          "name": "MinuteCounter",
          "is_standalone": true,
          "description": "(standalone): Displays the number of minutes.",
          "html": "<div class=\"text-4xl\">{minutes} <span>minutes</span></div>"
        },
        {
          "name": "SecondCounter",
          "is_standalone": true,
          "description": "(standalone): Displays the number of seconds.",
          "html": "<div class=\"text-4xl\">{seconds} <span>seconds</span></div>"
        }
      ]
    }
  ],
  "Mention display for tagged users": [
    {
      "description": "The UI should display a list of users with tags, allowing users to be mentioned in a post or comment. Each user should be displayed with their username and a tag icon.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Mentioned Users</h2><TaggedUserList><!-- list of tagged users will be rendered here --></TaggedUserList></div>",
      "components": [
        {
          "name": "TaggedUserList",
          "is_standalone": false,
          "description": "A component that takes children, rendering a list of `TaggedUser` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of users with tags, allowing users to be mentioned in a post or comment. Each user should be displayed with their username and a tag icon.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Mentioned Users</h2><TaggedUserList><!-- list of tagged users will be rendered here --></TaggedUserList></div>",
      "components": [
        {
          "name": "TaggedUserList",
          "is_standalone": false,
          "description": "A component that takes children, rendering a list of `TaggedUser` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A list of tagged users, each with their username and a \"Remove tag\" button.",
      "html": "<ul class=\"list-none mb-4\"><li class=\"flex justify-between mb-2\"><TaggedUser/></li><!-- more tagged users here --></ul>",
      "components": [
        {
          "name": "TaggedUser",
          "is_standalone": true,
          "description": "A standalone component displaying a single tagged user's information.",
          "html": "<span class=\"mr-2\">{username}</span><RemoveButton/>"
        },
        {
          "name": "RemoveButton",
          "is_standalone": true,
          "description": "A standalone component representing the \"Remove tag\" button.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Remove tag</button>"
        }
      ]
    },
    {
      "description": "The UI should display a list of users with tags, allowing users to be mentioned in a post or comment. Each user should be displayed with their username and a tag icon.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Mentioned Users</h2><TaggedUserList><!-- list of tagged users will be rendered here --></TaggedUserList></div>",
      "components": [
        {
          "name": "TaggedUserList",
          "is_standalone": false,
          "description": "A component that takes children, rendering a list of `TaggedUser` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Thread Favorites and Watching": [
    {
      "description": "The UI should display a list of threads that the user has favorited or is watching, with options to unfavorite or stop watching each thread.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Thread Favorites and Watching</h2><ThreadsList><ThreadCard/><ThreadCard/><!-- more ThreadCard components here --></ThreadsList></div>",
      "components": [
        {
          "name": "ThreadCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single thread's information.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{thread_title}</h3><p class=\"text-gray-600\">{thread_description}</p><div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_favorite ? 'Unfavorite' : 'Favorite'} </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_watching ? 'Stop Watching' : 'Watch'} </button></div></div>"
        },
        {
          "name": "ThreadsList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `ThreadCard` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of threads that the user has favorited or is watching, with options to unfavorite or stop watching each thread.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Thread Favorites and Watching</h2><ThreadsList><ThreadCard/><ThreadCard/><!-- more ThreadCard components here --></ThreadsList></div>",
      "components": [
        {
          "name": "ThreadCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single thread's information.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{thread_title}</h3><p class=\"text-gray-600\">{thread_description}</p><div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_favorite ? 'Unfavorite' : 'Favorite'} </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_watching ? 'Stop Watching' : 'Watch'} </button></div></div>"
        },
        {
          "name": "ThreadsList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `ThreadCard` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of threads that the user has favorited or is watching, with options to unfavorite or stop watching each thread.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Thread Favorites and Watching</h2><ThreadsList><ThreadCard/><ThreadCard/><!-- more ThreadCard components here --></ThreadsList></div>",
      "components": [
        {
          "name": "ThreadCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single thread's information.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{thread_title}</h3><p class=\"text-gray-600\">{thread_description}</p><div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_favorite ? 'Unfavorite' : 'Favorite'} </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_watching ? 'Stop Watching' : 'Watch'} </button></div></div>"
        },
        {
          "name": "ThreadsList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `ThreadCard` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of threads that the user has favorited or is watching, with options to unfavorite or stop watching each thread.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Thread Favorites and Watching</h2><ThreadsList><ThreadCard/><ThreadCard/><!-- more ThreadCard components here --></ThreadsList></div>",
      "components": [
        {
          "name": "ThreadCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single thread's information.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{thread_title}</h3><p class=\"text-gray-600\">{thread_description}</p><div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_favorite ? 'Unfavorite' : 'Favorite'} </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_watching ? 'Stop Watching' : 'Watch'} </button></div></div>"
        },
        {
          "name": "ThreadsList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `ThreadCard` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of threads that the user has favorited or is watching, with options to unfavorite or stop watching each thread.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Thread Favorites and Watching</h2><ThreadsList><ThreadCard/><ThreadCard/><!-- more ThreadCard components here --></ThreadsList></div>",
      "components": [
        {
          "name": "ThreadCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single thread's information.",
          "html": "<div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg font-bold\">{thread_title}</h3><p class=\"text-gray-600\">{thread_description}</p><div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_favorite ? 'Unfavorite' : 'Favorite'} </button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{is_watching ? 'Stop Watching' : 'Watch'} </button></div></div>"
        },
        {
          "name": "ThreadsList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `ThreadCard` components.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of threads that the user has favorited or is watching, with each thread showing its title, a brief description, and buttons to unfavorite or unwatch.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-2xl font-bold mb-4\">Favorites and Watched Threads</h1><ThreadList><!-- thread cards will be inserted here --></ThreadList></div>",
      "components": [
        {
          "name": "ThreadList",
          "is_standalone": false,
          "description": "(takes children) - A container for the list of thread cards.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Navigation Menu Toggle Icon": [
    {
      "description": "The UI should be a navigation menu toggle icon that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. The toggle icon should be a hamburger menu icon () that changes to a close icon (×) when the navigation menu is opened.",
      "html": "<nav><NavigationToggle/><!-- Navigation menu will be inserted here --></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation toggle icon component.",
          "html": "<button class=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-500\" aria-label=\"Toggle navigation\" aria-expanded=\"false\"><span class=\"sr-only\">Toggle navigation</span><span class=\"block w-5 h-0.5 bg-gray-600\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a navigation menu toggle icon that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. The toggle icon should be a hamburger menu icon () that changes to a close icon (×) when the navigation menu is opened.",
      "html": "<nav><NavigationToggle/><!-- Navigation menu will be inserted here --></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation toggle icon component.",
          "html": "<button class=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-500\" aria-label=\"Toggle navigation\" aria-expanded=\"false\"><span class=\"sr-only\">Toggle navigation</span><span class=\"block w-5 h-0.5 bg-gray-600\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle icon that can be used to expand or collapse a navigation menu. It should be accessible and SEO-friendly.",
      "html": "<nav class=\"lg:flex hidden lg:bg-white lg:shadow-md lg:rounded\"><NavToggle/><!-- navigation menu content here --></nav>",
      "components": [
        {
          "name": "NavToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation menu toggle icon.",
          "html": "<button class=\"lg:hidden flex justify-center w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded\" aria-label=\"Toggle navigation menu\"><span class=\"sr-only\">Toggle navigation menu</span><span class=\"block w-5 h-1 bg-gray-600\"></span><span class=\"block w-5 h-1 bg-gray-600 mt-1\"></span><span class=\"block w-5 h-1 bg-gray-600 mt-1\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a navigation menu toggle icon that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. The toggle icon should be a hamburger menu icon () that changes to a close icon (×) when the navigation menu is opened.",
      "html": "<nav><NavigationToggle/><!-- Navigation menu will be inserted here --></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation toggle icon component.",
          "html": "<button class=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-500\" aria-label=\"Toggle navigation\" aria-expanded=\"false\"><span class=\"sr-only\">Toggle navigation</span><span class=\"block w-5 h-0.5 bg-gray-600\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a navigation menu toggle icon that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. The toggle icon should be a hamburger menu icon () that changes to a close icon (×) when the navigation menu is opened.",
      "html": "<nav><NavigationToggle/><!-- Navigation menu will be inserted here --></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation toggle icon component.",
          "html": "<button class=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-500\" aria-label=\"Toggle navigation\" aria-expanded=\"false\"><span class=\"sr-only\">Toggle navigation</span><span class=\"block w-5 h-0.5 bg-gray-600\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a navigation menu toggle icon that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. The toggle icon should be a hamburger menu icon () that changes to a close icon (×) when the navigation menu is opened.",
      "html": "<nav><NavigationToggle/><!-- Navigation menu will be inserted here --></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation toggle icon component.",
          "html": "<button class=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-500\" aria-label=\"Toggle navigation\" aria-expanded=\"false\"><span class=\"sr-only\">Toggle navigation</span><span class=\"block w-5 h-0.5 bg-gray-600\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first navigation menu toggle icon that can be used to expand or collapse a navigation menu. It should be accessible and SEO-friendly.",
      "html": "<nav class=\"lg:flex hidden lg:bg-white lg:shadow-md lg:rounded\"><NavToggle/><!-- navigation menu content here --></nav>",
      "components": [
        {
          "name": "NavToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation menu toggle icon.",
          "html": "<button class=\"lg:hidden flex justify-center w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded\" aria-label=\"Toggle navigation menu\"><span class=\"sr-only\">Toggle navigation menu</span><span class=\"block w-5 h-1 bg-gray-600\"></span><span class=\"block w-5 h-1 bg-gray-600 mt-1\"></span><span class=\"block w-5 h-1 bg-gray-600 mt-1\"></span></button>"
        }
      ]
    },
    {
      "description": "The UI should have a navigation menu toggle icon that resembles a hamburger icon. When clicked, it should toggle the navigation menu on and off.",
      "html": "<nav><NavigationMenuToggle/><ul id=\"navigation-menu\"><!-- navigation menu items here --></ul></nav>",
      "components": [
        {
          "name": "NavigationMenuToggle",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"block lg:hidden rounded focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500\" aria-label=\"Toggle navigation menu\"><span class=\"sr-only\">Toggle navigation menu</span><span class=\"block w-6 h-6\" aria-hidden=\"true\"><!-- hamburger icon here --><span class=\"block w-6 h-1 bg-gray-600 rounded-full mb-2\"></span><span class=\"block w-6 h-1 bg-gray-600 rounded-full mb-2\"></span><span class=\"block w-6 h-1 bg-gray-600 rounded-full\"></span></span></button>"
        }
      ]
    },
    {
      "description": "The UI should be a navigation menu toggle icon that is responsive, mobile-first, accessible, SEO-friendly, and well-documented. The toggle icon should be a hamburger menu icon () that changes to a close icon (×) when the navigation menu is opened.",
      "html": "<nav><NavigationToggle/><!-- Navigation menu will be inserted here --></nav>",
      "components": [
        {
          "name": "NavigationToggle",
          "is_standalone": true,
          "description": "(standalone) - The navigation toggle icon component.",
          "html": "<button class=\"w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-gray-500\" aria-label=\"Toggle navigation\" aria-expanded=\"false\"><span class=\"sr-only\">Toggle navigation</span><span class=\"block w-5 h-0.5 bg-gray-600\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span><span class=\"block w-5 h-0.5 bg-gray-600 mt-1.5\"></span></button>"
        }
      ]
    }
  ],
  "Feed/List View of Posts": [
    {
      "description": "The UI should be a responsive list view of posts, displaying the title, content, and metadata of each post. On smaller screens, the list items should be stacked vertically, and on larger screens, they should be displayed in a grid with multiple columns.",
      "html": "<main class=\"container mx-auto p-4\"><PostList><PostListItem/><PostListItem/><!-- add more PostListItem components here --></PostList></main>",
      "components": [
        {
          "name": "PostListItem",
          "is_standalone": true,
          "description": "(standalone): a single list item representing a post",
          "html": "<article class=\"mb-4 bg-white rounded-lg shadow-md p-4\"><h2 class=\"text-lg\">{post_title}</h2><p class=\"text-gray-600\">{post_excerpt}</p><p class=\"text-sm text-gray-500\">{post_author} | {post_date}</p></article>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children): a container for the list of posts, which wraps the PostListItem components",
          "html": "<ul class=\"flex flex-wrap justify-center lg:justify-start\">{children}</ul>"
        }
      ]
    }
  ],
  "Hero Overlay Opacity": [
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a full-width hero section with a dark overlay that overlays a background image. The overlay should have a subtle opacity, allowing the background image to still be visible.",
      "html": "<section class=\"h-screen w-full\"><HeroSection/></section>",
      "components": [
        {
          "name": "HeroSection",
          "is_standalone": true,
          "description": "(standalone): The main hero section component that contains the background image and overlay.",
          "html": "<div class=\"h-full w-full relative\"><img src=\"{background_image_url}\" alt=\"Background Image\" class=\"absolute h-full w-full object-cover\"/><HeroOverlay/></div>"
        },
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The dark overlay component that overlays the background image.",
          "html": "<div class=\"absolute h-full w-full bg-gray-900 opacity-50\"></div>"
        }
      ]
    }
  ],
  "Hero Section with Form": [
    {
      "description": "A hero section with a background image, a heading, a paragraph of text, and a form with input fields and a submit button. The form should be centered and responsive.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><HeroContent/><form><FormInputs/><SubmitButton/></form></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"absolute w-full h-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"text-center mb-8\"><h1 class=\"text-3xl md:text-4xl lg:text-5xl\">{hero_heading}</h1><p class=\"text-lg md:text-xl lg:text-2xl\">{hero_text}</p></div>"
        },
        {
          "name": "FormInputs",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><input class=\"w-full p-2 mb-2\" type=\"text\" placeholder=\"Name:\"/><input class=\"w-full p-2 mb-2\" type=\"email\" placeholder=\"Email:\"/><input class=\"w-full p-2 mb-2\" type=\"tel\" placeholder=\"Phone:\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"w-full p-2 bg-orange-500 hover:bg-orange-700 text-white\">Submit</button>"
        }
      ]
    },
    {
      "description": "A hero section with a background image, a heading, a paragraph of text, and a form with input fields and a submit button. The form should be centered and responsive.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><HeroContent/><form><FormInputs/><SubmitButton/></form></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"absolute w-full h-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"text-center mb-8\"><h1 class=\"text-3xl md:text-4xl lg:text-5xl\">{hero_heading}</h1><p class=\"text-lg md:text-xl lg:text-2xl\">{hero_text}</p></div>"
        },
        {
          "name": "FormInputs",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><input class=\"w-full p-2 mb-2\" type=\"text\" placeholder=\"Name:\"/><input class=\"w-full p-2 mb-2\" type=\"email\" placeholder=\"Email:\"/><input class=\"w-full p-2 mb-2\" type=\"tel\" placeholder=\"Phone:\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"w-full p-2 bg-orange-500 hover:bg-orange-700 text-white\">Submit</button>"
        }
      ]
    },
    {
      "description": "A hero section with a background image, a heading, a paragraph of text, and a form with input fields and a submit button. The form should be centered and responsive.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><HeroContent/><form><FormInputs/><SubmitButton/></form></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"absolute w-full h-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"text-center mb-8\"><h1 class=\"text-3xl md:text-4xl lg:text-5xl\">{hero_heading}</h1><p class=\"text-lg md:text-xl lg:text-2xl\">{hero_text}</p></div>"
        },
        {
          "name": "FormInputs",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><input class=\"w-full p-2 mb-2\" type=\"text\" placeholder=\"Name:\"/><input class=\"w-full p-2 mb-2\" type=\"email\" placeholder=\"Email:\"/><input class=\"w-full p-2 mb-2\" type=\"tel\" placeholder=\"Phone:\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"w-full p-2 bg-orange-500 hover:bg-orange-700 text-white\">Submit</button>"
        }
      ]
    },
    {
      "description": "A hero section with a background image, a heading, a paragraph of text, and a form with input fields and a submit button. The form should be centered and responsive.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><HeroContent/><form><FormInputs/><SubmitButton/></form></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"absolute w-full h-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"text-center mb-8\"><h1 class=\"text-3xl md:text-4xl lg:text-5xl\">{hero_heading}</h1><p class=\"text-lg md:text-xl lg:text-2xl\">{hero_text}</p></div>"
        },
        {
          "name": "FormInputs",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><input class=\"w-full p-2 mb-2\" type=\"text\" placeholder=\"Name:\"/><input class=\"w-full p-2 mb-2\" type=\"email\" placeholder=\"Email:\"/><input class=\"w-full p-2 mb-2\" type=\"tel\" placeholder=\"Phone:\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"w-full p-2 bg-orange-500 hover:bg-orange-700 text-white\">Submit</button>"
        }
      ]
    },
    {
      "description": "A hero section with a background image, a heading, a paragraph of text, and a form with input fields and a submit button. The form should be centered and responsive.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><HeroContent/><form><FormInputs/><SubmitButton/></form></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"absolute w-full h-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"text-center mb-8\"><h1 class=\"text-3xl md:text-4xl lg:text-5xl\">{hero_heading}</h1><p class=\"text-lg md:text-xl lg:text-2xl\">{hero_text}</p></div>"
        },
        {
          "name": "FormInputs",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><input class=\"w-full p-2 mb-2\" type=\"text\" placeholder=\"Name:\"/><input class=\"w-full p-2 mb-2\" type=\"email\" placeholder=\"Email:\"/><input class=\"w-full p-2 mb-2\" type=\"tel\" placeholder=\"Phone:\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"w-full p-2 bg-orange-500 hover:bg-orange-700 text-white\">Submit</button>"
        }
      ]
    },
    {
      "description": "A hero section with a background image, a heading, a paragraph of text, and a form with input fields and a submit button. The form should be centered and responsive.",
      "html": "<section class=\"h-screen w-full relative\"><HeroBackground/><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><HeroContent/><form><FormInputs/><SubmitButton/></form></div></section>",
      "components": [
        {
          "name": "HeroBackground",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"absolute w-full h-full bg-cover bg-center\" style={{ backgroundImage: `url(${hero_image_url})` }}></div>"
        },
        {
          "name": "HeroContent",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"text-center mb-8\"><h1 class=\"text-3xl md:text-4xl lg:text-5xl\">{hero_heading}</h1><p class=\"text-lg md:text-xl lg:text-2xl\">{hero_text}</p></div>"
        },
        {
          "name": "FormInputs",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"flex flex-col mb-4\"><input class=\"w-full p-2 mb-2\" type=\"text\" placeholder=\"Name:\"/><input class=\"w-full p-2 mb-2\" type=\"email\" placeholder=\"Email:\"/><input class=\"w-full p-2 mb-2\" type=\"tel\" placeholder=\"Phone:\"/></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"w-full p-2 bg-orange-500 hover:bg-orange-700 text-white\">Submit</button>"
        }
      ]
    }
  ],
  "Testimonial Author Profile": [
    {
      "description": "The UI should display a testimonial author's profile information, including their name, role, and photo, along with a quote and a rating. The component should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto mb-4 md:mb-8\"><TestimonialAuthorProfile/></div>",
      "components": [
        {
          "name": "TestimonialAuthorProfile",
          "is_standalone": true,
          "description": "A standalone component that displays the author's profile information and testimonial.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><AuthorAvatar/><div class=\"md:ml-4\"><p class=\"text-lg font-bold\">{author_name}</p><p class=\"text-gray-600\">{author_role}</p><Rating/></div></div><TestimonialQuote/>"
        },
        {
          "name": "AuthorAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the author's photo.",
          "html": "<img class=\"w-24 h-24 rounded-full\" src={author_photo_url} alt={author_name}/>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "A standalone component that displays the rating.",
          "html": "<div class=\"flex mb-2\">{rating_out_of_five} <i class=\"fas fa-star text-yellow-500\"></i></div>"
        },
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "A standalone component that displays the testimonial quote.",
          "html": "<blockquote class=\"text-lg italic mb-4\">{testimonial_quote}</blockquote>"
        }
      ]
    },
    {
      "description": "The UI should display a testimonial author's profile information, including their name, role, and photo, along with a quote and a rating. The component should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto mb-4 md:mb-8\"><TestimonialAuthorProfile/></div>",
      "components": [
        {
          "name": "TestimonialAuthorProfile",
          "is_standalone": true,
          "description": "A standalone component that displays the author's profile information and testimonial.",
          "html": "<div class=\"flex flex-col md:flex-row items-center mb-4\"><AuthorAvatar/><div class=\"md:ml-4\"><p class=\"text-lg font-bold\">{author_name}</p><p class=\"text-gray-600\">{author_role}</p><Rating/></div></div><TestimonialQuote/>"
        },
        {
          "name": "AuthorAvatar",
          "is_standalone": true,
          "description": "A standalone component that displays the author's photo.",
          "html": "<img class=\"w-24 h-24 rounded-full\" src={author_photo_url} alt={author_name}/>"
        },
        {
          "name": "Rating",
          "is_standalone": true,
          "description": "A standalone component that displays the rating.",
          "html": "<div class=\"flex mb-2\">{rating_out_of_five} <i class=\"fas fa-star text-yellow-500\"></i></div>"
        },
        {
          "name": "TestimonialQuote",
          "is_standalone": true,
          "description": "A standalone component that displays the testimonial quote.",
          "html": "<blockquote class=\"text-lg italic mb-4\">{testimonial_quote}</blockquote>"
        }
      ]
    }
  ],
  "Button Groups": [
    {
      "description": "The UI should display a group of buttons that can be used to perform different actions. The buttons should be grouped together and spaced evenly. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center\"><ButtonGroup><Button/><Button/><Button/></ButtonGroup></div>",
      "components": [
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "A container component that groups multiple buttons together. This component takes children.",
          "html": "<div class=\"flex flex-wrap justify-center'>{children}</div>"
        },
        {
          "name": "Button",
          "is_standalone": true,
          "description": "An individual button component that can be used to perform an action. This component is standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a group of buttons that can be used to perform different actions. The buttons should be grouped together and spaced evenly. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center\"><ButtonGroup><Button/><Button/><Button/></ButtonGroup></div>",
      "components": [
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "A container component that groups multiple buttons together. This component takes children.",
          "html": "<div class=\"flex flex-wrap justify-center'>{children}</div>"
        },
        {
          "name": "Button",
          "is_standalone": true,
          "description": "An individual button component that can be used to perform an action. This component is standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a group of buttons that can be used to perform different actions. The buttons should be grouped together and spaced evenly. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center\"><ButtonGroup><Button/><Button/><Button/></ButtonGroup></div>",
      "components": [
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "A container component that groups multiple buttons together. This component takes children.",
          "html": "<div class=\"flex flex-wrap justify-center'>{children}</div>"
        },
        {
          "name": "Button",
          "is_standalone": true,
          "description": "An individual button component that can be used to perform an action. This component is standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a group of buttons that can be used to perform different actions. The buttons should be grouped together and spaced evenly. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center\"><ButtonGroup><Button/><Button/><Button/></ButtonGroup></div>",
      "components": [
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "A container component that groups multiple buttons together. This component takes children.",
          "html": "<div class=\"flex flex-wrap justify-center'>{children}</div>"
        },
        {
          "name": "Button",
          "is_standalone": true,
          "description": "An individual button component that can be used to perform an action. This component is standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should display a group of buttons that can be used to perform different actions. The buttons should be grouped together and spaced evenly. The UI should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-wrap justify-center\"><ButtonGroup><Button/><Button/><Button/></ButtonGroup></div>",
      "components": [
        {
          "name": "ButtonGroup",
          "is_standalone": false,
          "description": "A container component that groups multiple buttons together. This component takes children.",
          "html": "<div class=\"flex flex-wrap justify-center'>{children}</div>"
        },
        {
          "name": "Button",
          "is_standalone": true,
          "description": "An individual button component that can be used to perform an action. This component is standalone.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    }
  ],
  "Server icon and name display with dropdown menu": [
    {
      "description": "A compact display of a server icon and name with a dropdown menu that appears when the icon is clicked. The dropdown menu should contain a list of options.",
      "html": "<div class=\"flex items-center\"><ServerIconWithName/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ServerIconWithName",
          "is_standalone": true,
          "description": "A standalone component that displays a server icon and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={serverIconUrl} alt={serverName} class=\"w-6 h-6 rounded-full\"/><span class=\"ml-2 text-lg\">{serverName}</span></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children (menu items) and is initially hidden, becoming visible when the server icon is clicked.",
          "html": "<div class=\"hidden\"><ul class=\"bg-white shadow-md py-2\">{children} </ul></div>"
        }
      ]
    },
    {
      "description": "The UI should display a server icon and name, with a dropdown menu that appears when the user clicks on the icon or name.",
      "html": "<div class=\"flex items-center\"><ServerIcon/><ServerName/><div class=\"hidden lg:block\"><DropdownMenu><!-- menu items will be inserted here --></DropdownMenu></div></div>",
      "components": [
        {
          "name": "ServerIcon",
          "is_standalone": true,
          "description": "standalone component that displays a server icon",
          "html": "<i class=\"fas fa-server text-lg\"></i>"
        },
        {
          "name": "ServerName",
          "is_standalone": true,
          "description": "standalone component that displays the server name",
          "html": "<span>{server_name}</span>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "component that takes children, which are the menu items",
          "html": "<div class=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A compact display of a server icon and name with a dropdown menu that appears when the icon is clicked. The dropdown menu should contain a list of options.",
      "html": "<div class=\"flex items-center\"><ServerIconWithName/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ServerIconWithName",
          "is_standalone": true,
          "description": "A standalone component that displays a server icon and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={serverIconUrl} alt={serverName} class=\"w-6 h-6 rounded-full\"/><span class=\"ml-2 text-lg\">{serverName}</span></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children (menu items) and is initially hidden, becoming visible when the server icon is clicked.",
          "html": "<div class=\"hidden\"><ul class=\"bg-white shadow-md py-2\">{children} </ul></div>"
        }
      ]
    },
    {
      "description": "A compact display of a server icon and name with a dropdown menu that appears when the icon is clicked. The dropdown menu should contain a list of options.",
      "html": "<div class=\"flex items-center\"><ServerIconWithName/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ServerIconWithName",
          "is_standalone": true,
          "description": "A standalone component that displays a server icon and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={serverIconUrl} alt={serverName} class=\"w-6 h-6 rounded-full\"/><span class=\"ml-2 text-lg\">{serverName}</span></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children (menu items) and is initially hidden, becoming visible when the server icon is clicked.",
          "html": "<div class=\"hidden\"><ul class=\"bg-white shadow-md py-2\">{children} </ul></div>"
        }
      ]
    },
    {
      "description": "The UI should display a server icon and name, with a dropdown menu that appears when the user clicks on the icon or name.",
      "html": "<div class=\"flex items-center\"><ServerIcon/><ServerName/><div class=\"hidden lg:block\"><DropdownMenu><!-- menu items will be inserted here --></DropdownMenu></div></div>",
      "components": [
        {
          "name": "ServerIcon",
          "is_standalone": true,
          "description": "standalone component that displays a server icon",
          "html": "<i class=\"fas fa-server text-lg\"></i>"
        },
        {
          "name": "ServerName",
          "is_standalone": true,
          "description": "standalone component that displays the server name",
          "html": "<span>{server_name}</span>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "component that takes children, which are the menu items",
          "html": "<div class=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A compact display of a server icon and name with a dropdown menu that appears when the icon is clicked. The dropdown menu should contain a list of options.",
      "html": "<div class=\"flex items-center\"><ServerIconWithName/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ServerIconWithName",
          "is_standalone": true,
          "description": "A standalone component that displays a server icon and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={serverIconUrl} alt={serverName} class=\"w-6 h-6 rounded-full\"/><span class=\"ml-2 text-lg\">{serverName}</span></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children (menu items) and is initially hidden, becoming visible when the server icon is clicked.",
          "html": "<div class=\"hidden\"><ul class=\"bg-white shadow-md py-2\">{children} </ul></div>"
        }
      ]
    },
    {
      "description": "A compact display of a server icon and name with a dropdown menu that appears when the icon is clicked. The dropdown menu should contain a list of options.",
      "html": "<div class=\"flex items-center\"><ServerIconWithName/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ServerIconWithName",
          "is_standalone": true,
          "description": "A standalone component that displays a server icon and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={serverIconUrl} alt={serverName} class=\"w-6 h-6 rounded-full\"/><span class=\"ml-2 text-lg\">{serverName}</span></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children (menu items) and is initially hidden, becoming visible when the server icon is clicked.",
          "html": "<div class=\"hidden\"><ul class=\"bg-white shadow-md py-2\">{children} </ul></div>"
        }
      ]
    },
    {
      "description": "A compact display of a server icon and name with a dropdown menu that appears when the icon is clicked. The dropdown menu should contain a list of options.",
      "html": "<div class=\"flex items-center\"><ServerIconWithName/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ServerIconWithName",
          "is_standalone": true,
          "description": "A standalone component that displays a server icon and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={serverIconUrl} alt={serverName} class=\"w-6 h-6 rounded-full\"/><span class=\"ml-2 text-lg\">{serverName}</span></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children (menu items) and is initially hidden, becoming visible when the server icon is clicked.",
          "html": "<div class=\"hidden\"><ul class=\"bg-white shadow-md py-2\">{children} </ul></div>"
        }
      ]
    },
    {
      "description": "A compact display of a server icon and name with a dropdown menu that appears when the icon is clicked. The dropdown menu should contain a list of options.",
      "html": "<div class=\"flex items-center\"><ServerIconWithName/><DropdownMenu><!-- dropdown menu items will be inserted here --></DropdownMenu></div>",
      "components": [
        {
          "name": "ServerIconWithName",
          "is_standalone": true,
          "description": "A standalone component that displays a server icon and name.",
          "html": "<div class=\"flex items-center mb-2\"><img src={serverIconUrl} alt={serverName} class=\"w-6 h-6 rounded-full\"/><span class=\"ml-2 text-lg\">{serverName}</span></div>"
        },
        {
          "name": "DropdownMenu",
          "is_standalone": false,
          "description": "A component that takes children (menu items) and is initially hidden, becoming visible when the server icon is clicked.",
          "html": "<div class=\"hidden\"><ul class=\"bg-white shadow-md py-2\">{children} </ul></div>"
        }
      ]
    }
  ],
  "Search Bar and Filters": [
    {
      "description": "The UI should be a search bar with filters, allowing users to search for specific items and apply filters to narrow down the results. The search bar should be prominent and centered, with filters displayed below it.",
      "html": "<div class=\"container mx-auto p-4\"><SearchAndFilters><SearchBar/><FilterMenu><FilterButton/><!-- more FilterButton components here --></FilterMenu></SearchAndFilters></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "Standalone component for the search input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full py-2 px-4 border-2 border-gray-200 rounded-lg\" placeholder=\"Search...\"/>"
        },
        {
          "name": "FilterButton",
          "is_standalone": true,
          "description": "Standalone component for each filter button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{filter_name}</button>"
        },
        {
          "name": "FilterMenu",
          "is_standalone": false,
          "description": "Component that wraps all filter buttons, takes children.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "SearchAndFilters",
          "is_standalone": false,
          "description": "Component that wraps the search bar and filter menu, takes children.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a search bar with filters, allowing users to search for specific items and apply filters to narrow down the results. The search bar should be prominent and centered, with filters displayed below it.",
      "html": "<div class=\"container mx-auto p-4\"><SearchAndFilters><SearchBar/><FilterMenu><FilterButton/><!-- more FilterButton components here --></FilterMenu></SearchAndFilters></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "Standalone component for the search input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full py-2 px-4 border-2 border-gray-200 rounded-lg\" placeholder=\"Search...\"/>"
        },
        {
          "name": "FilterButton",
          "is_standalone": true,
          "description": "Standalone component for each filter button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{filter_name}</button>"
        },
        {
          "name": "FilterMenu",
          "is_standalone": false,
          "description": "Component that wraps all filter buttons, takes children.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "SearchAndFilters",
          "is_standalone": false,
          "description": "Component that wraps the search bar and filter menu, takes children.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should consist of a search bar with a text input field, a search button, and filters (e.g., dropdowns or checkboxes) to narrow down the search results.",
      "html": "<div class=\"flex flex-col\"><SearchBar/><FilterRow><FilterOption/><FilterOption/><!-- Add more FilterOption components as needed --></FilterRow></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains a text input field and a search button.",
          "html": "<div class=\"flex items-center bg-white rounded-md shadow-md p-2\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that is a text input field.",
          "html": "<input type=\"text\" class=\"border border-gray-200 p-2 w-full\" placeholder=\"Search...\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that is a button.",
          "html": "<button class=\"bg-orange-500 text-white p-2 rounded-md\">Search</button>"
        },
        {
          "name": "FilterRow",
          "is_standalone": false,
          "description": "component that takes children, which will be filter options (e.g., dropdowns or checkboxes).",
          "html": "<div class=\"flex flex-wrap justify-between\">{children}</div>"
        },
        {
          "name": "FilterOption",
          "is_standalone": true,
          "description": "standalone component that represents a single filter option (e.g., a dropdown item or checkbox).",
          "html": "<div class=\"mr-2 mb-2\"><select class=\"border border-gray-200 p-2 w-full\"><option value={option_value}>{option_label}</option></select></div>"
        }
      ]
    },
    {
      "description": "The UI should be a search bar with filters, allowing users to search for specific items and apply filters to narrow down the results. The search bar should be prominent and centered, with filters displayed below it.",
      "html": "<div class=\"container mx-auto p-4\"><SearchAndFilters><SearchBar/><FilterMenu><FilterButton/><!-- more FilterButton components here --></FilterMenu></SearchAndFilters></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "Standalone component for the search input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full py-2 px-4 border-2 border-gray-200 rounded-lg\" placeholder=\"Search...\"/>"
        },
        {
          "name": "FilterButton",
          "is_standalone": true,
          "description": "Standalone component for each filter button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{filter_name}</button>"
        },
        {
          "name": "FilterMenu",
          "is_standalone": false,
          "description": "Component that wraps all filter buttons, takes children.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "SearchAndFilters",
          "is_standalone": false,
          "description": "Component that wraps the search bar and filter menu, takes children.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a search bar with filters, allowing users to search for specific items and apply filters to narrow down the results. The search bar should be prominent and centered, with filters displayed below it.",
      "html": "<div class=\"container mx-auto p-4\"><SearchAndFilters><SearchBar/><FilterMenu><FilterButton/><!-- more FilterButton components here --></FilterMenu></SearchAndFilters></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "Standalone component for the search input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full py-2 px-4 border-2 border-gray-200 rounded-lg\" placeholder=\"Search...\"/>"
        },
        {
          "name": "FilterButton",
          "is_standalone": true,
          "description": "Standalone component for each filter button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{filter_name}</button>"
        },
        {
          "name": "FilterMenu",
          "is_standalone": false,
          "description": "Component that wraps all filter buttons, takes children.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "SearchAndFilters",
          "is_standalone": false,
          "description": "Component that wraps the search bar and filter menu, takes children.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a search bar with filters, allowing users to search for specific items and apply filters to narrow down the results. The search bar should be prominent and centered, with filters displayed below it.",
      "html": "<div class=\"container mx-auto p-4\"><SearchAndFilters><SearchBar/><FilterMenu><FilterButton/><!-- more FilterButton components here --></FilterMenu></SearchAndFilters></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "Standalone component for the search input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full py-2 px-4 border-2 border-gray-200 rounded-lg\" placeholder=\"Search...\"/>"
        },
        {
          "name": "FilterButton",
          "is_standalone": true,
          "description": "Standalone component for each filter button.",
          "html": "<button class=\"bg-white hover:bg-gray-100 text-gray-800 font-semibold py-2 px-4 border border-gray-400 rounded\">{filter_name}</button>"
        },
        {
          "name": "FilterMenu",
          "is_standalone": false,
          "description": "Component that wraps all filter buttons, takes children.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        },
        {
          "name": "SearchAndFilters",
          "is_standalone": false,
          "description": "Component that wraps the search bar and filter menu, takes children.",
          "html": "<div class=\"flex flex-col items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a search bar with a text input field and a search button. Below the search bar, there should be a filter section with checkboxes and labels. The filter section should be collapsible. The UI should be responsive and mobile-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SearchBar/><FilterSection><FilterItem/><FilterItem/><FilterItem/></FilterSection></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "(standalone) - a text input field and a search button.",
          "html": "<div class=\"flex mb-4\"><input type=\"text\" class=\"w-full px-2 py-1 border border-gray-200 rounded\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-1 px-2 rounded\">Search</button></div>"
        },
        {
          "name": "FilterSection",
          "is_standalone": false,
          "description": "(takes children) - a collapsible section containing filter checkboxes and labels.",
          "html": "<div class=\"bg-white shadow-md p-2 mb-4\"><h5 class=\"mb-2\">{filterInSectionTitle}</h5><div class=\"flex flex-wrap\">{children} </div></div>"
        },
        {
          "name": "FilterItem",
          "is_standalone": true,
          "description": "(standalone) - a single filter checkbox and label.",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"checkbox\" id=\"{filterItemId}\" class=\"mr-2\"/><label for=\"{filterItemId}\" class=\"text-sm\">{filterItemLabel}</label></div>"
        }
      ]
    }
  ],
  "Post/Tweet Box": [
    {
      "description": "A post/tweet box with a profile picture, username, input field, and a send button.",
      "html": "<div class=\"flex p-4\"><UserProfilePicture/><div class=\"flex-1 ml-4\"><Username/><PostInput><PostInput/></PostInput><SendButton/></div></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<img class=\"w-12 h-12 rounded-full\" src={profile_picture_url} alt=\"Profile Picture\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<span class=\"text-lg font-bold\">{username}</span>"
        },
        {
          "name": "PostInput",
          "is_standalone": false,
          "description": "Takes children",
          "html": "<textarea class=\"w-full p-2 pl-10 text-lg\" rows=\"3\" placeholder=\"What's on your mind?\">{children}</textarea>"
        },
        {
          "name": "SendButton",
          "is_standalone": true,
          "description": "Standalone component",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Send</button>"
        }
      ]
    }
  ],
  "Chart Builder: Visualize data trends": [
    {
      "description": "The UI should be a responsive, mobile-first chart builder that allows users to visualize data trends. It should have a simple and clean design, with a prominent chart area and accessible interactive elements.",
      "html": "<div class=\"flex flex-col h-screen overflow-hidden\"><ChartHeader/><div class=\"flex flex-grow overflow-hidden\"><DataSelector><!-- data selector options will be rendered here --></DataSelector><div class=\"flex-grow\"><ChartCanvas/><AxisLabels/><Legend/></div></div></div>",
      "components": [
        {
          "name": "ChartHeader",
          "is_standalone": true,
          "description": "A standalone component that displays the chart title and a dropdown menu for selecting the chart type.",
          "html": "<header class=\"bg-white py-4 shadow-md\"><h2 class=\"text-lg\">{chart_title}</h2><div class=\"relative\"><button class=\"bg-gray-200 hover:bg-gray-300 py-2 px-4 rounded\">Chart Type</button><ul class=\"absolute bg-white shadow-md py-2\"><li><a href=\"#\" class=\"block py-2 px-4\">Line Chart</a></li><li><a href=\"#\" class=\"block py-2 px-4\">Bar Chart</a></li><!-- more chart types --></ul></div></header>"
        },
        {
          "name": "ChartCanvas",
          "is_standalone": true,
          "description": "A standalone component that renders the chart using a third-party library (not included in this response).",
          "html": "<div class=\"flex-grow h-full\"><!-- chart will be rendered here --></div>"
        },
        {
          "name": "DataSelector",
          "is_standalone": false,
          "description": "A component that takes children and allows users to select the data to display in the chart.",
          "html": "<div class=\"bg-white py-4 pl-4 pr-2\"><h3 class=\"text-lg\">Select Data</h3><ul class=\"list-none mb-4\">{children} </ul></div>"
        },
        {
          "name": "AxisLabels",
          "is_standalone": true,
          "description": "A standalone component that displays the axis labels for the chart.",
          "html": "<div class=\"flex justify-between mb-4\"><p class=\"text-sm\">{x_axis_label}</p><p class=\"text-sm\">{y_axis_label}</p></div>"
        },
        {
          "name": "Legend",
          "is_standalone": true,
          "description": "A standalone component that displays the legend for the chart.",
          "html": "<div class=\"bg-white py-4 pl-4 pr-2\"><h3 class=\"text-lg\">Legend</h3><ul class=\"list-none mb-4\"><!-- legend items will be rendered here --></ul></div>"
        }
      ]
    }
  ],
  "Project Cards/Grids": [
    {
      "description": "A responsive grid of project cards, with each card displaying a thumbnail, title, description, and tags. The grid should be flexible to accommodate different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ProjectGrid><ProjectCard/><ProjectCard/><ProjectCard/><!-- Add more ProjectCard components here --></ProjectGrid></div>",
      "components": [
        {
          "name": "ProjectCard",
          "is_standalone": true,
          "description": "standalone component that displays a single project card",
          "html": "<div class=\"bg-white shadow-md rounded p-4 mb-4\"><img src={thumbnail_url} alt={project_title} class=\"w-full rounded-t\"/><h2 class=\"text-lg font-bold\">{project_title}</h2><p class=\"text-gray-600\">{project_description}</p><ul class=\"flex flex-wrap\">{tags.map((tag) =>( <li class=\"mr-2\">{tag}</li>))} </ul></div>"
        },
        {
          "name": "ProjectGrid",
          "is_standalone": false,
          "description": "container component that wraps a grid of project cards, takes children",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Who to follow suggestions for users": [
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible list of user suggestions with profile pictures, usernames, and follow buttons. The list should be easy to navigate and understand, with clear typography and sufficient whitespace.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Who to Follow</h2><UserList><UserProfileSuggestion/><UserProfileSuggestion/><!-- more user suggestions here --></UserList></div>",
      "components": [
        {
          "name": "UserProfileSuggestion",
          "is_standalone": true,
          "description": "a standalone component representing a single user suggestion, with a profile picture, username, and follow button.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" class=\"w-12 h-12 rounded-full mr-4\"/><div><p class=\"text-lg\">{username}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div></div>"
        },
        {
          "name": "UserList",
          "is_standalone": false,
          "description": "a component that takes children, rendering a list of `UserProfileSuggestion` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible list of user suggestions with profile pictures, usernames, and follow buttons. The list should be easy to navigate and understand, with clear typography and sufficient whitespace.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Who to Follow</h2><UserList><UserProfileSuggestion/><UserProfileSuggestion/><!-- more user suggestions here --></UserList></div>",
      "components": [
        {
          "name": "UserProfileSuggestion",
          "is_standalone": true,
          "description": "a standalone component representing a single user suggestion, with a profile picture, username, and follow button.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" class=\"w-12 h-12 rounded-full mr-4\"/><div><p class=\"text-lg\">{username}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div></div>"
        },
        {
          "name": "UserList",
          "is_standalone": false,
          "description": "a component that takes children, rendering a list of `UserProfileSuggestion` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of user suggestions with their profile pictures, names, and a \"Follow\" button. The list should be scrollable and have a header with a title.",
      "html": "<div class=\"max-h-screen overflow-y-scroll px-4 pt-4\"><h2 class=\"text-lg font-bold\">Who to follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} class=\"w-12 h-12 rounded-full\"/><div class=\"ml-4\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600\">{name}</p></div><button class=\"ml-auto bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow </button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A responsive, mobile-first, and accessible list of user suggestions with profile pictures, usernames, and follow buttons. The list should be easy to navigate and understand, with clear typography and sufficient whitespace.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-xl font-bold mb-4\">Who to Follow</h2><UserList><UserProfileSuggestion/><UserProfileSuggestion/><!-- more user suggestions here --></UserList></div>",
      "components": [
        {
          "name": "UserProfileSuggestion",
          "is_standalone": true,
          "description": "a standalone component representing a single user suggestion, with a profile picture, username, and follow button.",
          "html": "<div class=\"flex items-center mb-4\"><img src=\"{profile_picture_url}\" class=\"w-12 h-12 rounded-full mr-4\"/><div><p class=\"text-lg\">{username}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div></div>"
        },
        {
          "name": "UserList",
          "is_standalone": false,
          "description": "a component that takes children, rendering a list of `UserProfileSuggestion` components.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The \"Who to Follow\" component should display a list of user suggestions with their profile pictures, usernames, and a \"Follow\" button. It should be responsive, accessible, and easy to use.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Who to Follow</h2><WhoToFollowList><UserSuggestionCard/><UserSuggestionCard/><UserSuggestionCard/><!-- Add more UserSuggestionCard components here --></WhoToFollowList></div>",
      "components": [
        {
          "name": "UserSuggestionCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single user suggestion.",
          "html": "<div class=\"flex items-center mb-4\"><img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full mr-4\"><div class=\"flex-1\"><p class=\"text-lg\">{username}</p><p class=\"text-gray-600 text-sm\">{bio}</p></div><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button></div>"
        },
        {
          "name": "WhoToFollowList",
          "is_standalone": false,
          "description": "A component that takes children, which are multiple `UserSuggestionCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    }
  ],
  "Discussion Forums and Comments": [
    {
      "description": "A discussion forum with a list of comments and a form to add new comments. Each comment should display the user's name, the comment text, and a timestamp. The UI should have a clean and modern design, with adequate spacing and clear typography.",
      "html": "<!-- The main discussion forum container --><div class=\"max-w-md mx-auto p-4\"><DiscussionForum><CommentList><!-- List of comments will be rendered here --><CommentCard/><CommentCard/><!-- ... --></CommentList><CommentForm/></DiscussionForum></div>",
      "components": [
        {
          "name": "CommentCard",
          "is_standalone": true,
          "description": "(standalone): Displays a single comment with user name, comment text, and timestamp.",
          "html": "<div class=\"flex gap-2 mb-4\"><img src=\"{user_avatar_url}\" alt=\"User Avatar\" class=\"w-10 h-10 rounded-full\"/><div class=\"flex-1\"><h5 class=\"text-lg font-bold\">{username}</h5><p>{comment_text}</p><p class=\"text-sm text-gray-500\">{timestamp}</p></div></div>"
        },
        {
          "name": "CommentForm",
          "is_standalone": true,
          "description": "(standalone): A form to add a new comment.",
          "html": "<form class=\"flex gap-2 mb-4\"><input type=\"text\" placeholder=\"Add a comment...\" class=\"flex-1 p-2\"/><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4\">Comment</button></form>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of comments.",
          "html": "<!-- This component will render a list of CommentCards --><div class=\"space-y-4\">{children}</div>"
        },
        {
          "name": "DiscussionForum",
          "is_standalone": false,
          "description": "(takes children): The main container for the discussion forum.",
          "html": "<!-- This component will render the entire discussion forum UI --><div class=\"rounded-lg overflow-hidden shadow-md\">{children}</div>"
        }
      ]
    }
  ],
  "Faceted search results display": [
    {
      "description": "The UI should display a list of search results with facets (filters) on the side. The facets should allow the user to narrow down the search results. The search results should be displayed in a list with each item showing the title, description, and any other relevant information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/4 xl:w-1/5 p-4\"><FacetContainer/></div><div class=\"w-full md:w-3/4 xl:w-4/5 p-4\"><SearchResults><!-- search results will be rendered here --></SearchResults></div></div></div>",
      "components": [
        {
          "name": "FacetContainer",
          "is_standalone": true,
          "description": "A standalone component that wraps the facets.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><h2 class=\"text-lg font-bold mb-4\">Filters</h2><!-- facets will be rendered here --></div>"
        },
        {
          "name": "FacetItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single item within a facet (e.g. \"$0-$50\", \"Nike\", etc.).",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><input type=\"checkbox\" id=\"{facet_item_id}\"/><label for=\"{facet_item_id}\" class=\"ml-2\">{facet_item_name}</label></li>"
        },
        {
          "name": "SearchResult",
          "is_standalone": true,
          "description": "A standalone component that displays a single search result.",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{result_title}</h3><p class=\"text-sm\">{result_description}</p><!-- other result details can be added here --></div>"
        },
        {
          "name": "SearchResults",
          "is_standalone": false,
          "description": "A component that takes children and displays the list of search results.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of search results with facets (filters) on the side. The facets should allow the user to narrow down the search results. The search results should be displayed in a list with each item showing the title, description, and any other relevant information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/4 xl:w-1/5 p-4\"><FacetContainer/></div><div class=\"w-full md:w-3/4 xl:w-4/5 p-4\"><SearchResults><!-- search results will be rendered here --></SearchResults></div></div></div>",
      "components": [
        {
          "name": "FacetContainer",
          "is_standalone": true,
          "description": "A standalone component that wraps the facets.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><h2 class=\"text-lg font-bold mb-4\">Filters</h2><!-- facets will be rendered here --></div>"
        },
        {
          "name": "FacetItem",
          "is_standalone": true,
          "description": "A standalone component that displays a single item within a facet (e.g. \"$0-$50\", \"Nike\", etc.).",
          "html": "<li class=\"px-4 py-2 hover:bg-gray-100\"><input type=\"checkbox\" id=\"{facet_item_id}\"/><label for=\"{facet_item_id}\" class=\"ml-2\">{facet_item_name}</label></li>"
        },
        {
          "name": "SearchResult",
          "is_standalone": true,
          "description": "A standalone component that displays a single search result.",
          "html": "<div class=\"bg-white rounded shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{result_title}</h3><p class=\"text-sm\">{result_description}</p><!-- other result details can be added here --></div>"
        },
        {
          "name": "SearchResults",
          "is_standalone": false,
          "description": "A component that takes children and displays the list of search results.",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Featured Video Thumbnail": [
    {
      "description": "The UI should display a thumbnail of a featured video, with a play button overlay and a darkened background to focus attention on the video. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"lg:w-1/2 xl:w-1/3 p-4 md:p-6 lg:p-8 xl:p-10\"><FeaturedVideoThumbnail/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"relative overflow-hidden rounded-md shadow-md\"><img src=\"{thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover\"/><PlayButton/><div class=\"absolute w-full h-full bg-gray-800 opacity-50\"></div></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-4xl text-white\">▶</button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video thumbnail with a play button on top of it, and a title below the thumbnail.",
      "html": "<div class=\"flex flex-col md:flex-row items-center\"><FeaturedVideoThumbnail/><VideoTitle/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"relative\"><img src={image_src} alt={alt_text} class=\"w-full rounded-md object-cover\"/><PlayButton/></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white rounded-full p-2\"><i class=\"fas fa-play\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a thumbnail of a featured video, with a play button overlay and a darkened background to focus attention on the video. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"lg:w-1/2 xl:w-1/3 p-4 md:p-6 lg:p-8 xl:p-10\"><FeaturedVideoThumbnail/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"relative overflow-hidden rounded-md shadow-md\"><img src=\"{thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover\"/><PlayButton/><div class=\"absolute w-full h-full bg-gray-800 opacity-50\"></div></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-4xl text-white\">▶</button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video thumbnail with a play button on top of it, and a title below the thumbnail.",
      "html": "<div class=\"flex flex-col md:flex-row items-center\"><FeaturedVideoThumbnail/><VideoTitle/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"relative\"><img src={image_src} alt={alt_text} class=\"w-full rounded-md object-cover\"/><PlayButton/></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white rounded-full p-2\"><i class=\"fas fa-play\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a thumbnail of a featured video, with a play button overlay and a darkened background to focus attention on the video. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"lg:w-1/2 xl:w-1/3 p-4 md:p-6 lg:p-8 xl:p-10\"><FeaturedVideoThumbnail/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"relative overflow-hidden rounded-md shadow-md\"><img src=\"{thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover\"/><PlayButton/><div class=\"absolute w-full h-full bg-gray-800 opacity-50\"></div></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-4xl text-white\">▶</button>"
        }
      ]
    },
    {
      "description": "The UI should display a thumbnail of a featured video, with a play button overlay and a darkened background to focus attention on the video. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"lg:w-1/2 xl:w-1/3 p-4 md:p-6 lg:p-8 xl:p-10\"><FeaturedVideoThumbnail/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"relative overflow-hidden rounded-md shadow-md\"><img src=\"{thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover\"/><PlayButton/><div class=\"absolute w-full h-full bg-gray-800 opacity-50\"></div></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-4xl text-white\">▶</button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video thumbnail with a play button on top of it, and a title below the thumbnail.",
      "html": "<div class=\"flex flex-col md:flex-row items-center\"><FeaturedVideoThumbnail/><VideoTitle/></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"relative\"><img src={image_src} alt={alt_text} class=\"w-full rounded-md object-cover\"/><PlayButton/></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white rounded-full p-2\"><i class=\"fas fa-play\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        }
      ]
    }
  ],
  "Search Result Item Link": [
    {
      "description": "The Search Result Item Link should display a link with a title, a summary, and a URL. The link should be visually appealing, with a clear hierarchy of information and sufficient whitespace for readability.",
      "html": "<ul class=\"list-none mb-4\"><li><SearchResultItemLink/></li></ul>",
      "components": [
        {
          "name": "SearchResultItemLink",
          "is_standalone": true,
          "description": "A standalone component that contains a link with a title, summary, and URL.",
          "html": "<a href=\"{url}\" class=\"block py-4 no-underline hover:underline\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{summary}</p></a>"
        }
      ]
    },
    {
      "description": "The Search Result Item Link should display a link with a title, a summary, and a URL. The link should be visually appealing, with a clear hierarchy of information and sufficient whitespace for readability.",
      "html": "<ul class=\"list-none mb-4\"><li><SearchResultItemLink/></li></ul>",
      "components": [
        {
          "name": "SearchResultItemLink",
          "is_standalone": true,
          "description": "A standalone component that contains a link with a title, summary, and URL.",
          "html": "<a href=\"{url}\" class=\"block py-4 no-underline hover:underline\"><h3 class=\"text-lg font-bold\">{title}</h3><p class=\"text-gray-600\">{summary}</p></a>"
        }
      ]
    },
    {
      "description": "The UI should be a link item that displays a search result, with a title, a description, and a URL. It should be responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"flex flex-col mb-4\"><SearchResultItemLink/></div>",
      "components": [
        {
          "name": "SearchResultItemLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a href={url} class=\"text-lg font-bold text-blue-600 hover:text-blue-900 transition duration-300\"><SearchResultItemTitle/><SearchResultItemDescription/><SearchResultItemUrl/></a>"
        },
        {
          "name": "SearchResultItemTitle",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-lg font-bold\">{title}</span>"
        },
        {
          "name": "SearchResultItemDescription",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-gray-600\">{description}</p>"
        },
        {
          "name": "SearchResultItemUrl",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-sm text-gray-600\">{url}</p>"
        }
      ]
    }
  ],
  "Featured Video Play Button": [
    {
      "description": "A large play button overlay on top of a featured video thumbnail, with a hover effect to indicate that it's clickable.",
      "html": "<!-- Container for the featured video thumbnail and play button --><div class=\"relative h-full w-full\"><!-- Featured video thumbnail --><img src=\"{video_thumbnail_url}\" alt=\"Featured video thumbnail\" class=\"w-full h-full object-cover\"\n/><!-- Play button overlay --><div class=\"absolute inset-0 flex items-center justify-center\"><FeaturedVideoPlayButton/></div></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<!-- Play button with a hover effect --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\"><!-- Play icon --><i class=\"fas fa-play text-lg\" aria-hidden=\"true\"></i><!-- Accessibility text for screen readers --><span class=\"sr-only\">Play featured video</span></button>"
        }
      ]
    },
    {
      "description": "A large play button overlay on top of a featured video thumbnail, with a hover effect to indicate that it's clickable.",
      "html": "<!-- Container for the featured video thumbnail and play button --><div class=\"relative h-full w-full\"><!-- Featured video thumbnail --><img src=\"{video_thumbnail_url}\" alt=\"Featured video thumbnail\" class=\"w-full h-full object-cover\"\n/><!-- Play button overlay --><div class=\"absolute inset-0 flex items-center justify-center\"><FeaturedVideoPlayButton/></div></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<!-- Play button with a hover effect --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\"><!-- Play icon --><i class=\"fas fa-play text-lg\" aria-hidden=\"true\"></i><!-- Accessibility text for screen readers --><span class=\"sr-only\">Play featured video</span></button>"
        }
      ]
    },
    {
      "description": "A large play button overlay on top of a featured video thumbnail, with a hover effect to indicate that it's clickable.",
      "html": "<!-- Container for the featured video thumbnail and play button --><div class=\"relative h-full w-full\"><!-- Featured video thumbnail --><img src=\"{video_thumbnail_url}\" alt=\"Featured video thumbnail\" class=\"w-full h-full object-cover\"\n/><!-- Play button overlay --><div class=\"absolute inset-0 flex items-center justify-center\"><FeaturedVideoPlayButton/></div></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<!-- Play button with a hover effect --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\"><!-- Play icon --><i class=\"fas fa-play text-lg\" aria-hidden=\"true\"></i><!-- Accessibility text for screen readers --><span class=\"sr-only\">Play featured video</span></button>"
        }
      ]
    },
    {
      "description": "A large play button overlay on top of a featured video thumbnail, with a hover effect to indicate that it's clickable.",
      "html": "<!-- Container for the featured video thumbnail and play button --><div class=\"relative h-full w-full\"><!-- Featured video thumbnail --><img src=\"{video_thumbnail_url}\" alt=\"Featured video thumbnail\" class=\"w-full h-full object-cover\"\n/><!-- Play button overlay --><div class=\"absolute inset-0 flex items-center justify-center\"><FeaturedVideoPlayButton/></div></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<!-- Play button with a hover effect --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\"><!-- Play icon --><i class=\"fas fa-play text-lg\" aria-hidden=\"true\"></i><!-- Accessibility text for screen readers --><span class=\"sr-only\">Play featured video</span></button>"
        }
      ]
    },
    {
      "description": "The UI should display a play button overlaid on a featured video thumbnail, encouraging users to play the video.",
      "html": "<div class=\"relative w-full h-full flex justify-center\"><FeaturedVideoThumbnail/><div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"><PlayButton/></div></div>",
      "components": [
        {
          "name": "FeaturedVideoThumbnail",
          "is_standalone": true,
          "description": "standalone, displays the video thumbnail.",
          "html": "<img src={video_thumbnail_url} alt=\"Featured Video Thumbnail\" class=\"w-full h-full object-cover rounded-lg\"/>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "standalone, displays a play button icon.",
          "html": "<button aria-label=\"Play Video\" class=\"bg-white rounded-full p-4 text-3xl font-bold\"><i class=\"fas fa-play text-lg\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "A large play button overlay on top of a featured video thumbnail, with a hover effect to indicate that it's clickable.",
      "html": "<!-- Container for the featured video thumbnail and play button --><div class=\"relative h-full w-full\"><!-- Featured video thumbnail --><img src=\"{video_thumbnail_url}\" alt=\"Featured video thumbnail\" class=\"w-full h-full object-cover\"\n/><!-- Play button overlay --><div class=\"absolute inset-0 flex items-center justify-center\"><FeaturedVideoPlayButton/></div></div>",
      "components": [
        {
          "name": "FeaturedVideoPlayButton",
          "is_standalone": true,
          "description": "standalone",
          "html": "<!-- Play button with a hover effect --><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-md\"><!-- Play icon --><i class=\"fas fa-play text-lg\" aria-hidden=\"true\"></i><!-- Accessibility text for screen readers --><span class=\"sr-only\">Play featured video</span></button>"
        }
      ]
    }
  ],
  "Logout button with confirmation prompt": [
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    },
    {
      "description": "A logout button that when clicked, prompts the user to confirm they want to log out. If confirmed, the logout action is performed.",
      "html": "<div class=\"flex justify-center mt-4\"><LogoutButton/></div><!-- Confirmation prompt will be inserted here --><div id=\"confirm-logout\" class=\"hidden\"><ConfirmLogout><p>Are you sure you want to log out?</p><div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">OK</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded ml-2\">Cancel</button></div></ConfirmLogout></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "standalone, displays a button with a logout icon and text.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-sign-out-alt mr-2\"/>Log Out</button>"
        },
        {
          "name": "ConfirmLogout",
          "is_standalone": false,
          "description": "takes children, displays a confirmation prompt to the user with an OK and Cancel button.",
          "html": "<div class=\"bg-white p-4 rounded shadow-md\">{children}</div>"
        }
      ]
    },
    {
      "description": "A logout button that, when clicked, displays a confirmation prompt to ensure the user intends to log out. The prompt should have a warning tone and provide a clear call-to-action to confirm logout.",
      "html": "<div class=\"flex justify-center mb-4\"><LogoutButton/><!-- confirmation prompt will be inserted here --><ConfirmationPrompt><p>Are you sure you want to log out?</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Confirm Logout</button><button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded\">Cancel</button></ConfirmationPrompt></div>",
      "components": [
        {
          "name": "LogoutButton",
          "is_standalone": true,
          "description": "(standalone): A button that triggers the confirmation prompt.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Log out</button>"
        },
        {
          "name": "ConfirmationPrompt",
          "is_standalone": false,
          "description": "(takes children): A modal dialog with a warning tone that confirms the user's intention to log out.",
          "html": "<div class=\"fixed top-0 left-0 w-full h-full flex justify-center bg-gray-200 bg-opacity-75\"><div class=\"bg-white rounded shadow-md p-4 max-w-sm\">{children} </div></div>"
        }
      ]
    }
  ],
  "Drag-and-Drop Interfaces": [
    {
      "description": "The UI should be a responsive, mobile-first drag-and-drop interface that allows users to drag items from a list and drop them into a designated drop zone. The interface should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Drag and Drop Interface</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DraggableList><!-- Draggable items will be rendered here --></DraggableList></div><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DropZone><!-- Dropped items will be rendered here --></DropZone></div></div></div>",
      "components": [
        {
          "name": "DropZone",
          "is_standalone": false,
          "description": "(takes children) - A container that accepts dragged items and displays them in a list.",
          "html": "<div class=\"bg-gray-200 rounded p-4 mb-4 border-2 border-dashed border-gray-400\"><h2 class=\"text-lg font-bold mb-2\">Drop Zone</h2><ul class=\"list-none p-0 m-0\">{children} </ul></div>"
        },
        {
          "name": "DraggableList",
          "is_standalone": false,
          "description": "(takes children) - A list of draggable items that can be dragged and dropped into a drop zone.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first drag-and-drop interface that allows users to drag items from a list and drop them into a designated drop zone. The interface should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Drag and Drop Interface</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DraggableList><!-- Draggable items will be rendered here --></DraggableList></div><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DropZone><!-- Dropped items will be rendered here --></DropZone></div></div></div>",
      "components": [
        {
          "name": "DropZone",
          "is_standalone": false,
          "description": "(takes children) - A container that accepts dragged items and displays them in a list.",
          "html": "<div class=\"bg-gray-200 rounded p-4 mb-4 border-2 border-dashed border-gray-400\"><h2 class=\"text-lg font-bold mb-2\">Drop Zone</h2><ul class=\"list-none p-0 m-0\">{children} </ul></div>"
        },
        {
          "name": "DraggableList",
          "is_standalone": false,
          "description": "(takes children) - A list of draggable items that can be dragged and dropped into a drop zone.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A drag-and-drop interface with a drop zone, a list of draggable items, and a button to clear the drop zone.",
      "html": "<div class=\"flex h-screen\"><div class=\"flex-1 overflow-y-auto\"><!-- List of draggable items --><ul class=\"space-y-2\"><DraggableItem/><DraggableItem/><DraggableItem/></ul></div><div class=\"flex-1 border\"><!-- Drop zone --><DropZone><!-- dropped items will be rendered here --></DropZone></div><ClearButton/></div>",
      "components": [
        {
          "name": "DraggableItem",
          "is_standalone": true,
          "description": "- standalone: A single item that can be dragged and dropped.",
          "html": "<div class=\"bg-white shadow-md p-2 rounded\"><p>{item_name}</p></div>"
        },
        {
          "name": "DropZone",
          "is_standalone": false,
          "description": "- takes children: The area where items can be dropped.",
          "html": "<div class=\"h-full p-4 border-dashed border-2\">{children}</div>"
        },
        {
          "name": "ClearButton",
          "is_standalone": true,
          "description": "- standalone: A button to clear the drop zone.",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Clear</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first drag-and-drop interface that allows users to drag items from a list and drop them into a designated drop zone. The interface should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Drag and Drop Interface</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DraggableList><!-- Draggable items will be rendered here --></DraggableList></div><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DropZone><!-- Dropped items will be rendered here --></DropZone></div></div></div>",
      "components": [
        {
          "name": "DropZone",
          "is_standalone": false,
          "description": "(takes children) - A container that accepts dragged items and displays them in a list.",
          "html": "<div class=\"bg-gray-200 rounded p-4 mb-4 border-2 border-dashed border-gray-400\"><h2 class=\"text-lg font-bold mb-2\">Drop Zone</h2><ul class=\"list-none p-0 m-0\">{children} </ul></div>"
        },
        {
          "name": "DraggableList",
          "is_standalone": false,
          "description": "(takes children) - A list of draggable items that can be dragged and dropped into a drop zone.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first drag-and-drop interface that allows users to drag items from a list and drop them into a designated drop zone. The interface should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Drag and Drop Interface</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DraggableList><!-- Draggable items will be rendered here --></DraggableList></div><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DropZone><!-- Dropped items will be rendered here --></DropZone></div></div></div>",
      "components": [
        {
          "name": "DropZone",
          "is_standalone": false,
          "description": "(takes children) - A container that accepts dragged items and displays them in a list.",
          "html": "<div class=\"bg-gray-200 rounded p-4 mb-4 border-2 border-dashed border-gray-400\"><h2 class=\"text-lg font-bold mb-2\">Drop Zone</h2><ul class=\"list-none p-0 m-0\">{children} </ul></div>"
        },
        {
          "name": "DraggableList",
          "is_standalone": false,
          "description": "(takes children) - A list of draggable items that can be dragged and dropped into a drop zone.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first drag-and-drop interface that allows users to drag items from a list and drop them into a designated drop zone. The interface should be accessible and SEO-friendly.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Drag and Drop Interface</h1><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DraggableList><!-- Draggable items will be rendered here --></DraggableList></div><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><DropZone><!-- Dropped items will be rendered here --></DropZone></div></div></div>",
      "components": [
        {
          "name": "DropZone",
          "is_standalone": false,
          "description": "(takes children) - A container that accepts dragged items and displays them in a list.",
          "html": "<div class=\"bg-gray-200 rounded p-4 mb-4 border-2 border-dashed border-gray-400\"><h2 class=\"text-lg font-bold mb-2\">Drop Zone</h2><ul class=\"list-none p-0 m-0\">{children} </ul></div>"
        },
        {
          "name": "DraggableList",
          "is_standalone": false,
          "description": "(takes children) - A list of draggable items that can be dragged and dropped into a drop zone.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Channel topic and description with edit button": [
    {
      "description": "A channel topic and description with an edit button. The topic should be a heading, the description should be a paragraph, and the edit button should be a small button with a pencil icon. The UI should be responsive, with the edit button aligned to the right on larger screens, and below the description on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><div><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "Standalone component that displays a heading with the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a paragraph with the channel description.",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "Standalone component that displays a small button with a pencil icon.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-200 rounded\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>Edit</button>"
        }
      ]
    },
    {
      "description": "The UI should display a channel topic and description with an edit button. The edit button should be aligned to the right side of the container. On smaller screens, the edit button should be aligned below the channel topic.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-white rounded shadow-md\"><ChannelInfo><ChannelTopic/><ChannelDescription/><EditButton/></ChannelInfo></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "standalone - displays the channel topic",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "standalone - displays the channel description",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "standalone - displays an edit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Edit</button>"
        },
        {
          "name": "ChannelInfo",
          "is_standalone": false,
          "description": "takes children - wraps the channel topic, description, and edit button",
          "html": "<div class=\"flex flex-wrap justify-between\">{children}</div>"
        }
      ]
    },
    {
      "description": "A channel topic and description with an edit button. The topic should be a heading, the description should be a paragraph, and the edit button should be a small button with a pencil icon. The UI should be responsive, with the edit button aligned to the right on larger screens, and below the description on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><div><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "Standalone component that displays a heading with the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a paragraph with the channel description.",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "Standalone component that displays a small button with a pencil icon.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-200 rounded\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>Edit</button>"
        }
      ]
    },
    {
      "description": "A channel topic and description with an edit button. The topic should be a heading, the description should be a paragraph, and the edit button should be a small button with a pencil icon. The UI should be responsive, with the edit button aligned to the right on larger screens, and below the description on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><div><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "Standalone component that displays a heading with the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a paragraph with the channel description.",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "Standalone component that displays a small button with a pencil icon.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-200 rounded\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>Edit</button>"
        }
      ]
    },
    {
      "description": "The UI should display a channel topic and description with an edit button. The edit button should be aligned to the right side of the container. On smaller screens, the edit button should be aligned below the channel topic.",
      "html": "<div class=\"max-w-md mx-auto p-4 bg-white rounded shadow-md\"><ChannelInfo><ChannelTopic/><ChannelDescription/><EditButton/></ChannelInfo></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "standalone - displays the channel topic",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "standalone - displays the channel description",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "standalone - displays an edit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Edit</button>"
        },
        {
          "name": "ChannelInfo",
          "is_standalone": false,
          "description": "takes children - wraps the channel topic, description, and edit button",
          "html": "<div class=\"flex flex-wrap justify-between\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a channel topic and description with an edit button.",
      "html": "<div class=\"flex flex-col gap-2\"><ChannelTopic/><ChannelDescription/><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "standalone component to display the channel topic",
          "html": "<p class=\"text-lg font-bold\">{channel_topic}</p>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "standalone component to display the channel description",
          "html": "<p class=\"text-sm\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "standalone component for the edit button",
          "html": "<button class=\"px-4 py-2 bg-blue-500 hover:bg-blue-700 text-white font-bold rounded\">Edit</button>"
        }
      ]
    },
    {
      "description": "A channel topic and description with an edit button. The topic should be a heading, the description should be a paragraph, and the edit button should be a small button with a pencil icon. The UI should be responsive, with the edit button aligned to the right on larger screens, and below the description on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><div><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "Standalone component that displays a heading with the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a paragraph with the channel description.",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "Standalone component that displays a small button with a pencil icon.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-200 rounded\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>Edit</button>"
        }
      ]
    },
    {
      "description": "A channel topic and description with an edit button. The topic should be a heading, the description should be a paragraph, and the edit button should be a small button with a pencil icon. The UI should be responsive, with the edit button aligned to the right on larger screens, and below the description on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><div><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "Standalone component that displays a heading with the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a paragraph with the channel description.",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "Standalone component that displays a small button with a pencil icon.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-200 rounded\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>Edit</button>"
        }
      ]
    },
    {
      "description": "A channel topic and description with an edit button. The topic should be a heading, the description should be a paragraph, and the edit button should be a small button with a pencil icon. The UI should be responsive, with the edit button aligned to the right on larger screens, and below the description on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><div><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "Standalone component that displays a heading with the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a paragraph with the channel description.",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "Standalone component that displays a small button with a pencil icon.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-200 rounded\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>Edit</button>"
        }
      ]
    },
    {
      "description": "A channel topic and description with an edit button. The topic should be a heading, the description should be a paragraph, and the edit button should be a small button with a pencil icon. The UI should be responsive, with the edit button aligned to the right on larger screens, and below the description on smaller screens.",
      "html": "<div class=\"flex flex-wrap justify-between mb-4\"><div><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "Standalone component that displays a heading with the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a paragraph with the channel description.",
          "html": "<p class=\"text-gray-600\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "Standalone component that displays a small button with a pencil icon.",
          "html": "<button class=\"bg-gray-200 hover:bg-gray-300 text-gray-800 font-semibold py-2 px-4 border border-gray-200 rounded\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i>Edit</button>"
        }
      ]
    },
    {
      "description": "The UI should display a channel topic and description with an edit button. The topic and description should be clearly readable, and the edit button should be prominent and accessible.",
      "html": "<div class=\"flex flex-col gap-4 md:flex-row md:items-center\"><div class=\"flex-1\"><ChannelTopic/><ChannelDescription/></div><EditButton/></div>",
      "components": [
        {
          "name": "ChannelTopic",
          "is_standalone": true,
          "description": "A standalone component that displays the channel topic.",
          "html": "<h2 class=\"text-lg font-bold\">{channel_topic}</h2>"
        },
        {
          "name": "ChannelDescription",
          "is_standalone": true,
          "description": "A standalone component that displays the channel description.",
          "html": "<p class=\"text-sm\">{channel_description}</p>"
        },
        {
          "name": "EditButton",
          "is_standalone": true,
          "description": "A standalone component that displays an edit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Edit</button>"
        }
      ]
    }
  ],
  "Interactive Product Demo Simulation": [
    {
      "description": "The UI should be a responsive, mobile-first, interactive demo simulation that allows users to explore a product's features and benefits. It should have a clean and modern design, with clear typography and prominent calls-to-action.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><ProductHero/><section class=\"flex flex-wrap justify-center mb-4\"><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard></section><CallToAction/><ProductImage/></div>",
      "components": [
        {
          "name": "ProductHero",
          "is_standalone": true,
          "description": "A standalone component that serves as the hero section of the demo simulation, featuring a prominent product image and a brief introduction.",
          "html": "<section class=\"hero bg-cover bg-center h-screen\" style=\"background-image: url('{hero_image_url}')\"><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl lg:text-5xl text-white\">{hero_title}</h1><p class=\"text-lg lg:text-2xl text-white\">{hero_subtitle}</p></div></section>"
        },
        {
          "name": "FeatureCard",
          "is_standalone": false,
          "description": "A component that takes children, used to showcase individual features of the product, including a brief description and a call-to-action.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 lg:p-6\"><div slot=\"content\">{children}</div><CallToAction/></div>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "A standalone component that encourages users to take a specific action, such as \"Learn More\" or \"Get Started\".",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        },
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component that displays a product image.",
          "html": "<img class=\"w-full lg:w-1/2 xl:w-1/3 mx-auto\" src=\"{product_image_url}\" alt=\"{product_image_alt_text}\">"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, interactive demo simulation that allows users to explore a product's features and benefits. It should have a clean and modern design, with clear typography and prominent calls-to-action.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><ProductHero/><section class=\"flex flex-wrap justify-center mb-4\"><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard></section><CallToAction/><ProductImage/></div>",
      "components": [
        {
          "name": "ProductHero",
          "is_standalone": true,
          "description": "A standalone component that serves as the hero section of the demo simulation, featuring a prominent product image and a brief introduction.",
          "html": "<section class=\"hero bg-cover bg-center h-screen\" style=\"background-image: url('{hero_image_url}')\"><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl lg:text-5xl text-white\">{hero_title}</h1><p class=\"text-lg lg:text-2xl text-white\">{hero_subtitle}</p></div></section>"
        },
        {
          "name": "FeatureCard",
          "is_standalone": false,
          "description": "A component that takes children, used to showcase individual features of the product, including a brief description and a call-to-action.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 lg:p-6\"><div slot=\"content\">{children}</div><CallToAction/></div>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "A standalone component that encourages users to take a specific action, such as \"Learn More\" or \"Get Started\".",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        },
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component that displays a product image.",
          "html": "<img class=\"w-full lg:w-1/2 xl:w-1/3 mx-auto\" src=\"{product_image_url}\" alt=\"{product_image_alt_text}\">"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, interactive demo simulation that allows users to explore a product's features and benefits. It should have a clean and modern design, with clear typography and prominent calls-to-action.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><ProductHero/><section class=\"flex flex-wrap justify-center mb-4\"><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard><FeatureCard><div slot=\"content\">Insert feature content here...</div></FeatureCard></section><CallToAction/><ProductImage/></div>",
      "components": [
        {
          "name": "ProductHero",
          "is_standalone": true,
          "description": "A standalone component that serves as the hero section of the demo simulation, featuring a prominent product image and a brief introduction.",
          "html": "<section class=\"hero bg-cover bg-center h-screen\" style=\"background-image: url('{hero_image_url}')\"><div class=\"container mx-auto p-4 md:p-6 lg:p-12\"><h1 class=\"text-3xl lg:text-5xl text-white\">{hero_title}</h1><p class=\"text-lg lg:text-2xl text-white\">{hero_subtitle}</p></div></section>"
        },
        {
          "name": "FeatureCard",
          "is_standalone": false,
          "description": "A component that takes children, used to showcase individual features of the product, including a brief description and a call-to-action.",
          "html": "<div class=\"bg-white shadow-md rounded p-4 lg:p-6\"><div slot=\"content\">{children}</div><CallToAction/></div>"
        },
        {
          "name": "CallToAction",
          "is_standalone": true,
          "description": "A standalone component that encourages users to take a specific action, such as \"Learn More\" or \"Get Started\".",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_text}</button>"
        },
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "A standalone component that displays a product image.",
          "html": "<img class=\"w-full lg:w-1/2 xl:w-1/3 mx-auto\" src=\"{product_image_url}\" alt=\"{product_image_alt_text}\">"
        }
      ]
    }
  ],
  "Callout Box Border Style": [
    {
      "description": "A callout box with a border style, usually used to highlight important information.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains the callout box content.",
          "html": "<div class=\"bg-yellow-100 border-l-4 border-orange-500 p-4 rounded-md\"><p>{callout_message}</p></div>"
        }
      ]
    },
    {
      "description": "A callout box with a border style, usually used to highlight important information.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains the callout box content.",
          "html": "<div class=\"bg-yellow-100 border-l-4 border-orange-500 p-4 rounded-md\"><p>{callout_message}</p></div>"
        }
      ]
    },
    {
      "description": "A callout box with a border style, usually used to highlight important information.",
      "html": "<div class=\"container mx-auto p-4 md:p-6\"><CalloutBox/></div>",
      "components": [
        {
          "name": "CalloutBox",
          "is_standalone": true,
          "description": "A standalone component that contains the callout box content.",
          "html": "<div class=\"bg-yellow-100 border-l-4 border-orange-500 p-4 rounded-md\"><p>{callout_message}</p></div>"
        }
      ]
    }
  ],
  "Search bar for finding specific content": [
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a search button. The search bar should be responsive, taking up the full width of the screen on mobile devices and adding some margins on larger screens. The input field should have a placeholder text and the search button should have an icon of a magnifying glass.",
      "html": "<nav class=\"flex justify-center md:w-3/4 md:mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field and search button.",
          "html": "<div class=\"flex items-center bg-white border border-gray-200 rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that is the input field.",
          "html": "<input type=\"search\" class=\"w-full px-4 py-2 rounded-md border border-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-500\" placeholder=\"Search...\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that is the search button.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-md\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field, a placeholder text, and a search button. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<nav class=\"flex justify-center md:w-1/2 lg:w-1/3 mx-auto\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the input field and the search button.",
          "html": "<div class=\"flex items-center border border-gray-200 rounded-lg\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "A standalone component that represents the input field.",
          "html": "<input type=\"search\" placeholder=\"Search...\" class=\"w-full px-4 py-2 text-lg text-gray-700\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "A standalone component that represents the search button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i></button>"
        }
      ]
    }
  ],
  "Trending topics display for popular discussions": [
    {
      "description": "The UI should display a list of trending topics, each with a title, a brief description, and a call-to-action button.",
      "html": "<div class=\"container mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><h2 class=\"text-2xl font-bold mb-4\">Trending Topics</h2><TrendingTopicList><!-- list of TrendingTopicCard components will go here --></TrendingTopicList></div>",
      "components": [
        {
          "name": "TrendingTopicList",
          "is_standalone": false,
          "description": "component that takes children, which will be a list of `TrendingTopicCard` components",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Featured Video Player": [
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive video player with a prominent play button, video title, and video description. It should be accessible and SEO-friendly.",
      "html": "<!-- Container for the video player --><div class=\"max-w-md lg:max-w-lg xl:max-w-xl mx-auto p-4\"><!-- Video player component --><VideoPlayer/><!-- Video title component --><VideoTitle/><!-- Video description component --><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that renders the video player.",
          "html": "<!-- Video player container --><div class=\"relative\"><!-- Video element --><video id=\"video\" class=\"w-full h-full\" poster=\"{poster_url}\"><source src=\"{video_url}\" type=\"video/mp4\"/></video><!-- Video play button --><VideoPlayButton/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "Standalone component that renders the play button.",
          "html": "<!-- Play button --><button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Play video\"><span class=\"sr-only\">Play video</span><i class=\"fas fa-play\" aria-hidden=\"true\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that renders the video title.",
          "html": "<!-- Video title --><h2 class=\"text-2xl font-bold mb-2\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that renders the video description.",
          "html": "<!-- Video description --><p class=\"text-lg mb-4\">{video_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive video player with a prominent play button, video title, and video description. It should be accessible and SEO-friendly.",
      "html": "<!-- Container for the video player --><div class=\"max-w-md lg:max-w-lg xl:max-w-xl mx-auto p-4\"><!-- Video player component --><VideoPlayer/><!-- Video title component --><VideoTitle/><!-- Video description component --><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that renders the video player.",
          "html": "<!-- Video player container --><div class=\"relative\"><!-- Video element --><video id=\"video\" class=\"w-full h-full\" poster=\"{poster_url}\"><source src=\"{video_url}\" type=\"video/mp4\"/></video><!-- Video play button --><VideoPlayButton/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "Standalone component that renders the play button.",
          "html": "<!-- Play button --><button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Play video\"><span class=\"sr-only\">Play video</span><i class=\"fas fa-play\" aria-hidden=\"true\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that renders the video title.",
          "html": "<!-- Video title --><h2 class=\"text-2xl font-bold mb-2\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that renders the video description.",
          "html": "<!-- Video description --><p class=\"text-lg mb-4\">{video_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive video player with a prominent play button, video title, and video description. It should be accessible and SEO-friendly.",
      "html": "<!-- Container for the video player --><div class=\"max-w-md lg:max-w-lg xl:max-w-xl mx-auto p-4\"><!-- Video player component --><VideoPlayer/><!-- Video title component --><VideoTitle/><!-- Video description component --><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that renders the video player.",
          "html": "<!-- Video player container --><div class=\"relative\"><!-- Video element --><video id=\"video\" class=\"w-full h-full\" poster=\"{poster_url}\"><source src=\"{video_url}\" type=\"video/mp4\"/></video><!-- Video play button --><VideoPlayButton/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "Standalone component that renders the play button.",
          "html": "<!-- Play button --><button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Play video\"><span class=\"sr-only\">Play video</span><i class=\"fas fa-play\" aria-hidden=\"true\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that renders the video title.",
          "html": "<!-- Video title --><h2 class=\"text-2xl font-bold mb-2\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that renders the video description.",
          "html": "<!-- Video description --><p class=\"text-lg mb-4\">{video_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive video player with a prominent play button, video title, and video description. It should be accessible and SEO-friendly.",
      "html": "<!-- Container for the video player --><div class=\"max-w-md lg:max-w-lg xl:max-w-xl mx-auto p-4\"><!-- Video player component --><VideoPlayer/><!-- Video title component --><VideoTitle/><!-- Video description component --><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that renders the video player.",
          "html": "<!-- Video player container --><div class=\"relative\"><!-- Video element --><video id=\"video\" class=\"w-full h-full\" poster=\"{poster_url}\"><source src=\"{video_url}\" type=\"video/mp4\"/></video><!-- Video play button --><VideoPlayButton/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "Standalone component that renders the play button.",
          "html": "<!-- Play button --><button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Play video\"><span class=\"sr-only\">Play video</span><i class=\"fas fa-play\" aria-hidden=\"true\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that renders the video title.",
          "html": "<!-- Video title --><h2 class=\"text-2xl font-bold mb-2\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that renders the video description.",
          "html": "<!-- Video description --><p class=\"text-lg mb-4\">{video_description}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first video player component that displays a featured video. It should have a video container, a play button, and optional video title and description.",
      "html": "<div class=\"mx-auto max-w-md p-4\"><div class=\"flex flex-col items-center\"><VideoPlayer/><PlayButton/><VideoTitle/><VideoDescription/></div></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that contains the video element.",
          "html": "<div class=\"video-container\"><video id=\"featured-video\" width=\"100%\" height=\"auto\" controls><source src=\"{video_url}\" type=\"video/mp4\"/>Your browser does not support the video tag. </video></div>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "Standalone component that displays a play button to play/pause the video.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{playButtonText}</button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg\">{videoTitle}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that displays a brief description of the video.",
          "html": "<p class=\"text-sm\">{videoDescription}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive video player with a prominent play button, video title, and video description. It should be accessible and SEO-friendly.",
      "html": "<!-- Container for the video player --><div class=\"max-w-md lg:max-w-lg xl:max-w-xl mx-auto p-4\"><!-- Video player component --><VideoPlayer/><!-- Video title component --><VideoTitle/><!-- Video description component --><VideoDescription/></div>",
      "components": [
        {
          "name": "VideoPlayer",
          "is_standalone": true,
          "description": "Standalone component that renders the video player.",
          "html": "<!-- Video player container --><div class=\"relative\"><!-- Video element --><video id=\"video\" class=\"w-full h-full\" poster=\"{poster_url}\"><source src=\"{video_url}\" type=\"video/mp4\"/></video><!-- Video play button --><VideoPlayButton/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "Standalone component that renders the play button.",
          "html": "<!-- Play button --><button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\" aria-label=\"Play video\"><span class=\"sr-only\">Play video</span><i class=\"fas fa-play\" aria-hidden=\"true\"></i></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "Standalone component that renders the video title.",
          "html": "<!-- Video title --><h2 class=\"text-2xl font-bold mb-2\">{video_title}</h2>"
        },
        {
          "name": "VideoDescription",
          "is_standalone": true,
          "description": "Standalone component that renders the video description.",
          "html": "<!-- Video description --><p class=\"text-lg mb-4\">{video_description}</p>"
        }
      ]
    }
  ],
  "Award or achievement section with icons and dates": [
    {
      "description": "The UI should have a section that showcases awards or achievements, with icons and dates.",
      "html": "<section class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl mb-4\">Awards and Achievements</h2><AchievementSection><AwardItem/><AwardItem/><AwardItem/></AchievementSection></section>",
      "components": [
        {
          "name": "AwardItem",
          "is_standalone": true,
          "description": "A standalone component that represents a single award or achievement.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-4\">{icon}</span><div><h3 class=\"text-lg\">{award_name}</h3><p class=\"text-sm text-gray-600\">{award_date}</p></div></div>"
        },
        {
          "name": "AchievementSection",
          "is_standalone": false,
          "description": "A component that takes children and wraps the award items.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of awards or achievements with icons and dates in a responsive, mobile-first, and accessible manner.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Awards and Achievements</h2><AwardList><AwardCard/><AwardCard/><!-- Add more AwardCard components here --></AwardList></section>",
      "components": [
        {
          "name": "AwardCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single award or achievement.",
          "html": "<div class=\"flex items-center mb-4\"><div class=\"mr-4\"><i class=\"fas fa-{award_icon} text-2xl text-gray-600\"></i></div><div><h3 class=\"text-lg font-bold\">{award_name}</h3><p class=\"text-gray-600\">{award_date}</p></div></div>"
        },
        {
          "name": "AwardList",
          "is_standalone": false,
          "description": "A component that takes children, which is a list of `AwardCard` components.",
          "html": "<ul class=\"list-none mb-0 p-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Email list view with sender and subject": [
    {
      "description": "A list of emails with sender and subject information.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Emails</h2><EmailList><EmailListItem/><EmailListItem/><!-- more EmailListItem components here --></EmailList></div>",
      "components": [
        {
          "name": "EmailListItem",
          "is_standalone": true,
          "description": "(stands alone)",
          "html": "<div class=\"flex items-center justify-between p-2 border-b border-gray-200\"><div><span class=\"text-sm\">{sender}</span><span class=\"text-xs text-gray-500\">{timestamp}</span></div><div><span class=\"text-lg\">{subject}</span></div></div>"
        },
        {
          "name": "EmailList",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of emails, with each email showing the sender's name and the subject of the email. The list should be responsive, with each email item taking up the full width of the screen on mobile devices and becoming a compact list item on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-2xl font-bold mb-4\">Emails</h1><EmailList><EmailListItem/><EmailListItem/><!-- add more EmailListItem components here --></EmailList></div>",
      "components": [
        {
          "name": "EmailListItem",
          "is_standalone": true,
          "description": "(standalone): A single email item in the list, displaying the sender and subject.",
          "html": "<div class=\"flex justify-between mb-4 p-4 bg-white shadow-md rounded\"><div><p class=\"text-lg font-bold\">{senderName}</p><p class=\"text-gray-600\">{subject}</p></div><div class=\"text-right\"><p class=\"text-gray-600\">{receivedAt}</p></div></div>"
        },
        {
          "name": "EmailList",
          "is_standalone": false,
          "description": "(takes children): A container for the list of email items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Social Media Feed Item": [
    {
      "description": "The UI should display a single social media feed item, showing the user's profile picture, username, post text, post image, likes, comments, and a timestamp.",
      "html": "<div class=\"flex flex-col gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><PostHeader/><PostText/><PostImage/><EngagementStats/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's username and timestamp",
          "html": "<div class=\"flex justify-between\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, displays the post text",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "standalone, displays the post image",
          "html": "<img src=\"{post_image_url}\" alt=\"Post image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "EngagementStats",
          "is_standalone": true,
          "description": "standalone, displays the likes and comments",
          "html": "<ul class=\"flex justify-between text-gray-500\"><li>{likes} likes</li><li>{comments} comments</li></ul>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "takes children, the main container for the social media feed item",
          "html": "<div class=\"flex flex-col gap-2 p-4 border-b border-gray-200\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single social media feed item, showing the user's profile picture, username, post text, post image, likes, comments, and a timestamp.",
      "html": "<div class=\"flex flex-col gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><PostHeader/><PostText/><PostImage/><EngagementStats/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's username and timestamp",
          "html": "<div class=\"flex justify-between\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, displays the post text",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "standalone, displays the post image",
          "html": "<img src=\"{post_image_url}\" alt=\"Post image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "EngagementStats",
          "is_standalone": true,
          "description": "standalone, displays the likes and comments",
          "html": "<ul class=\"flex justify-between text-gray-500\"><li>{likes} likes</li><li>{comments} comments</li></ul>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "takes children, the main container for the social media feed item",
          "html": "<div class=\"flex flex-col gap-2 p-4 border-b border-gray-200\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single social media feed item, showing the user's profile picture, username, post text, post image, likes, comments, and a timestamp.",
      "html": "<div class=\"flex flex-col gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><PostHeader/><PostText/><PostImage/><EngagementStats/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's username and timestamp",
          "html": "<div class=\"flex justify-between\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, displays the post text",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "standalone, displays the post image",
          "html": "<img src=\"{post_image_url}\" alt=\"Post image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "EngagementStats",
          "is_standalone": true,
          "description": "standalone, displays the likes and comments",
          "html": "<ul class=\"flex justify-between text-gray-500\"><li>{likes} likes</li><li>{comments} comments</li></ul>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "takes children, the main container for the social media feed item",
          "html": "<div class=\"flex flex-col gap-2 p-4 border-b border-gray-200\">{children}</div>"
        }
      ]
    },
    {
      "description": "A social media feed item that displays a user's profile picture, name, timestamp, and a brief text message. The item should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><UsernameAndTimestamp/><MessageText/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays a user's profile picture.",
          "html": "<img class=\"w-10 h-10 rounded-full\" src={profilePictureUrl} alt=\"User Profile Picture\"/>"
        },
        {
          "name": "UsernameAndTimestamp",
          "is_standalone": true,
          "description": "Standalone component that displays a user's name and timestamp.",
          "html": "<div class=\"flex flex-col\"><p class=\"font-bold\">{userName}</p><p class=\"text-sm text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "MessageText",
          "is_standalone": true,
          "description": "Standalone component that displays a brief text message.",
          "html": "<p class=\"text-sm\">{messageText}</p>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameAndTimestamp, and MessageText).",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single social media feed item, showing the user's profile picture, username, post text, post image, likes, comments, and a timestamp.",
      "html": "<div class=\"flex flex-col gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><PostHeader/><PostText/><PostImage/><EngagementStats/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's username and timestamp",
          "html": "<div class=\"flex justify-between\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, displays the post text",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "standalone, displays the post image",
          "html": "<img src=\"{post_image_url}\" alt=\"Post image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "EngagementStats",
          "is_standalone": true,
          "description": "standalone, displays the likes and comments",
          "html": "<ul class=\"flex justify-between text-gray-500\"><li>{likes} likes</li><li>{comments} comments</li></ul>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "takes children, the main container for the social media feed item",
          "html": "<div class=\"flex flex-col gap-2 p-4 border-b border-gray-200\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single social media feed item, showing the user's profile picture, username, post text, post image, likes, comments, and a timestamp.",
      "html": "<div class=\"flex flex-col gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><PostHeader/><PostText/><PostImage/><EngagementStats/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's username and timestamp",
          "html": "<div class=\"flex justify-between\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, displays the post text",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "standalone, displays the post image",
          "html": "<img src=\"{post_image_url}\" alt=\"Post image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "EngagementStats",
          "is_standalone": true,
          "description": "standalone, displays the likes and comments",
          "html": "<ul class=\"flex justify-between text-gray-500\"><li>{likes} likes</li><li>{comments} comments</li></ul>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "takes children, the main container for the social media feed item",
          "html": "<div class=\"flex flex-col gap-2 p-4 border-b border-gray-200\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single social media feed item, showing the user's profile picture, username, post text, post image, likes, comments, and a timestamp.",
      "html": "<div class=\"flex flex-col gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><PostHeader/><PostText/><PostImage/><EngagementStats/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's username and timestamp",
          "html": "<div class=\"flex justify-between\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, displays the post text",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "standalone, displays the post image",
          "html": "<img src=\"{post_image_url}\" alt=\"Post image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "EngagementStats",
          "is_standalone": true,
          "description": "standalone, displays the likes and comments",
          "html": "<ul class=\"flex justify-between text-gray-500\"><li>{likes} likes</li><li>{comments} comments</li></ul>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "takes children, the main container for the social media feed item",
          "html": "<div class=\"flex flex-col gap-2 p-4 border-b border-gray-200\">{children}</div>"
        }
      ]
    },
    {
      "description": "A social media feed item that displays a user's profile picture, name, timestamp, and a brief text message. The item should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><UsernameAndTimestamp/><MessageText/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays a user's profile picture.",
          "html": "<img class=\"w-10 h-10 rounded-full\" src={profilePictureUrl} alt=\"User Profile Picture\"/>"
        },
        {
          "name": "UsernameAndTimestamp",
          "is_standalone": true,
          "description": "Standalone component that displays a user's name and timestamp.",
          "html": "<div class=\"flex flex-col\"><p class=\"font-bold\">{userName}</p><p class=\"text-sm text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "MessageText",
          "is_standalone": true,
          "description": "Standalone component that displays a brief text message.",
          "html": "<p class=\"text-sm\">{messageText}</p>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameAndTimestamp, and MessageText).",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a single social media feed item, showing the user's profile picture, username, post text, post image, likes, comments, and a timestamp.",
      "html": "<div class=\"flex flex-col gap-2 p-4\"><SocialMediaFeedItem><UserProfilePicture/><PostHeader/><PostText/><PostImage/><EngagementStats/></SocialMediaFeedItem></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone, displays the user's profile picture",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full object-cover\"/>"
        },
        {
          "name": "PostHeader",
          "is_standalone": true,
          "description": "standalone, displays the user's username and timestamp",
          "html": "<div class=\"flex justify-between\"><h2 class=\"text-lg\">{username}</h2><p class=\"text-gray-500\">{timestamp}</p></div>"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "standalone, displays the post text",
          "html": "<p>{post_text}</p>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "standalone, displays the post image",
          "html": "<img src=\"{post_image_url}\" alt=\"Post image\" class=\"w-full h-64 object-cover\"/>"
        },
        {
          "name": "EngagementStats",
          "is_standalone": true,
          "description": "standalone, displays the likes and comments",
          "html": "<ul class=\"flex justify-between text-gray-500\"><li>{likes} likes</li><li>{comments} comments</li></ul>"
        },
        {
          "name": "SocialMediaFeedItem",
          "is_standalone": false,
          "description": "takes children, the main container for the social media feed item",
          "html": "<div class=\"flex flex-col gap-2 p-4 border-b border-gray-200\">{children}</div>"
        }
      ]
    }
  ],
  "Availability and Pricing Calendars": [
    {
      "description": "The UI should display a calendar for availability and pricing, showing the dates and corresponding prices. It should have a title, a month selector, and a grid of days with prices.",
      "html": "<div class=\"flex flex-col\"><CalendarTitle/><MonthSelector/><AvailabilityGrid><!-- grid of days with prices --><DayCell/><DayCell/><DayCell/><!-- repeat for each day of the month --></AvailabilityGrid></div>",
      "components": [
        {
          "name": "CalendarTitle",
          "is_standalone": true,
          "description": "Standalone component to display the title of the calendar.",
          "html": "<h2 class=\"text-2xl font-bold\">{calendar_title}</h2>"
        },
        {
          "name": "MonthSelector",
          "is_standalone": true,
          "description": "Standalone component to select the month.",
          "html": "<select class=\"py-2 pl-2 pr-4 text-gray-700\"><option value=\"January\">{month_name}</option><!-- repeat for each month --></select>"
        },
        {
          "name": "AvailabilityGrid",
          "is_standalone": false,
          "description": "Component that takes children to render the grid of days with prices.",
          "html": "<table class=\"w-full\"><tbody><tr>{children} </tr></tbody></table>"
        },
        {
          "name": "DayCell",
          "is_standalone": true,
          "description": "Standalone component to render a single day with its price.",
          "html": "<td class=\"px-2 py-1 border border-gray-200\"><span class=\"text-sm\">{day_number}</span><span class=\"text-xs\">{day_price}</span></td>"
        }
      ]
    }
  ],
  "Job/Project Listings": [
    {
      "description": "The UI should be a list of job/project listings, each displaying essential information such as the job title, company, location, and a brief description. The listings should be responsive, accessible, and easy to read.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h1 class=\"text-3xl font-bold mb-4\">Job Listings</h1><ul class=\"list-none mb-0\"><JobListing/><JobListing/><!-- Add more JobListing components here --></ul></div>",
      "components": [
        {
          "name": "JobListing",
          "is_standalone": true,
          "description": "A standalone component that represents a single job listing.",
          "html": "<li class=\"mb-4\"><JobListingCard/></li>"
        },
        {
          "name": "JobListingCard",
          "is_standalone": true,
          "description": "A standalone component that wraps the job listing information.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><JobTitle/><CompanyName/><Location/><JobDescription/></div>"
        },
        {
          "name": "JobTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the job title.",
          "html": "<h2 class=\"text-lg font-bold\">{job_title}</h2>"
        },
        {
          "name": "CompanyName",
          "is_standalone": true,
          "description": "A standalone component that displays the company name.",
          "html": "<p class=\"text-gray-600\">{company_name}</p>"
        },
        {
          "name": "Location",
          "is_standalone": true,
          "description": "A standalone component that displays the location.",
          "html": "<p class=\"text-gray-600\">{location}</p>"
        },
        {
          "name": "JobDescription",
          "is_standalone": true,
          "description": "A standalone component that displays a brief job description.",
          "html": "<p class=\"text-gray-600\">{job_description}</p>"
        }
      ]
    }
  ],
  "Blog Post Category Name": [
    {
      "description": "The UI should display a category name for a blog post, with a visually appealing design that is responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"text-lg font-bold mb-2\"><CategoryName/></div>",
      "components": [
        {
          "name": "CategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name of a blog post.",
          "html": "<span class=\"text-lg\">{category_name}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a category name for a blog post, with a visually appealing design that is responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"text-lg font-bold mb-2\"><CategoryName/></div>",
      "components": [
        {
          "name": "CategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name of a blog post.",
          "html": "<span class=\"text-lg\">{category_name}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a blog post category name in a clean and simple format, with a responsive design that adapts to different screen sizes. The text should be easy to read and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h2 class=\"text-lg md:text-xl lg:text-2xl font-bold mb-2\"><BlogPostCategoryName/></h2></div>",
      "components": [
        {
          "name": "BlogPostCategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name.",
          "html": "<span class=\"uppercase\">{category_name}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a category name for a blog post, with a visually appealing design that is responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"text-lg font-bold mb-2\"><CategoryName/></div>",
      "components": [
        {
          "name": "CategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name of a blog post.",
          "html": "<span class=\"text-lg\">{category_name}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a category name for a blog post, with a visually appealing design that is responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"text-lg font-bold mb-2\"><CategoryName/></div>",
      "components": [
        {
          "name": "CategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name of a blog post.",
          "html": "<span class=\"text-lg\">{category_name}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a blog post category name in a clean and simple format, with a responsive design that adapts to different screen sizes. The text should be easy to read and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><h2 class=\"text-lg md:text-xl lg:text-2xl font-bold mb-2\"><BlogPostCategoryName/></h2></div>",
      "components": [
        {
          "name": "BlogPostCategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name.",
          "html": "<span class=\"uppercase\">{category_name}</span>"
        }
      ]
    },
    {
      "description": "The UI should display a category name for a blog post, with a visually appealing design that is responsive, mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"text-lg font-bold mb-2\"><CategoryName/></div>",
      "components": [
        {
          "name": "CategoryName",
          "is_standalone": true,
          "description": "a standalone component that displays the category name of a blog post.",
          "html": "<span class=\"text-lg\">{category_name}</span>"
        }
      ]
    }
  ],
  "Featured Video Poster": [
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly video poster that displays a featured video with a play button and video title.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded-md shadow-md\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "standalone (main component)",
          "html": "<div class=\"relative mb-4\"><img src=\"{video_thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover rounded-md\"/><VideoPlayButton/><VideoTitle/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "standalone (play button)",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-3xl bg-white rounded-full p-2\"><i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play video</span></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "standalone (video title)",
          "html": "<h2 class=\"text-lg font-bold mb-2\">{video_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly video poster that displays a featured video with a play button and video title.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded-md shadow-md\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "standalone (main component)",
          "html": "<div class=\"relative mb-4\"><img src=\"{video_thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover rounded-md\"/><VideoPlayButton/><VideoTitle/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "standalone (play button)",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-3xl bg-white rounded-full p-2\"><i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play video</span></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "standalone (video title)",
          "html": "<h2 class=\"text-lg font-bold mb-2\">{video_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly video poster that displays a featured video with a play button and video title.",
      "html": "<div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-12 bg-white rounded-md shadow-md\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "standalone (main component)",
          "html": "<div class=\"relative mb-4\"><img src=\"{video_thumbnail_url}\" alt=\"{video_title}\" class=\"w-full h-48 object-cover rounded-md\"/><VideoPlayButton/><VideoTitle/></div>"
        },
        {
          "name": "VideoPlayButton",
          "is_standalone": true,
          "description": "standalone (play button)",
          "html": "<button class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-3xl bg-white rounded-full p-2\"><i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"sr-only\">Play video</span></button>"
        },
        {
          "name": "VideoTitle",
          "is_standalone": true,
          "description": "standalone (video title)",
          "html": "<h2 class=\"text-lg font-bold mb-2\">{video_title}</h2>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    },
    {
      "description": "The UI should display a featured video poster with a background image, a title, a description, and a play button. The poster should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto\"><FeaturedVideoPoster/></div>",
      "components": [
        {
          "name": "FeaturedVideoPoster",
          "is_standalone": true,
          "description": "a standalone component that displays the featured video poster.",
          "html": "<div class=\"relative mb-4\"><PosterBackgroundImage/><div class=\"absolute bottom-0 left-0 p-4\"><PosterTitle/><PosterDescription/><PlayButton/></div></div>"
        },
        {
          "name": "PosterBackgroundImage",
          "is_standalone": true,
          "description": "a standalone component that displays the background image of the poster.",
          "html": "<img src={video_poster_image_url} alt={video_title} class=\"w-full h-64 object-cover object-center\"/>"
        },
        {
          "name": "PosterTitle",
          "is_standalone": true,
          "description": "a standalone component that displays the title of the video.",
          "html": "<h2 class=\"text-lg font-bold\">{video_title}</h2>"
        },
        {
          "name": "PosterDescription",
          "is_standalone": true,
          "description": "a standalone component that displays the description of the video.",
          "html": "<p class=\"text-sm\">{video_description}</p>"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "a standalone component that displays the play button.",
          "html": "<button class=\"px-4 py-2 bg-orange-500 text-white rounded\">Play</button>"
        }
      ]
    }
  ],
  "Product Price Currency": [
    {
      "description": "The UI should display the price of a product with its corresponding currency in a responsive and accessible way.",
      "html": "<div class=\"flex items-center\"><ProductPriceCurrency/></div>",
      "components": [
        {
          "name": "ProductPriceCurrency",
          "is_standalone": true,
          "description": "A standalone component that displays the price and currency of a product.",
          "html": "<span class=\"text-lg font-bold\">{price} {currency}</span>"
        }
      ]
    },
    {
      "description": "The UI should display the price of a product with its corresponding currency in a responsive and accessible way.",
      "html": "<div class=\"flex items-center\"><ProductPriceCurrency/></div>",
      "components": [
        {
          "name": "ProductPriceCurrency",
          "is_standalone": true,
          "description": "A standalone component that displays the price and currency of a product.",
          "html": "<span class=\"text-lg font-bold\">{price} {currency}</span>"
        }
      ]
    },
    {
      "description": "The UI should display the price of a product with its corresponding currency in a responsive and accessible way.",
      "html": "<div class=\"flex items-center\"><ProductPriceCurrency/></div>",
      "components": [
        {
          "name": "ProductPriceCurrency",
          "is_standalone": true,
          "description": "A standalone component that displays the price and currency of a product.",
          "html": "<span class=\"text-lg font-bold\">{price} {currency}</span>"
        }
      ]
    },
    {
      "description": "The UI should display the price of a product with its corresponding currency in a responsive and accessible way.",
      "html": "<div class=\"flex items-center\"><ProductPriceCurrency/></div>",
      "components": [
        {
          "name": "ProductPriceCurrency",
          "is_standalone": true,
          "description": "A standalone component that displays the price and currency of a product.",
          "html": "<span class=\"text-lg font-bold\">{price} {currency}</span>"
        }
      ]
    }
  ],
  "Video analytics dashboard for creators": [
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays video analytics data in a clear and concise manner. It should include a navigation bar, a video thumbnail with playback information, a chart displaying video engagement metrics, and a table showing video performance data.",
      "html": "<div class=\"max-w-md mx-auto p-4 mt-4\"><NavigationBar/><DashboardContainer><VideoThumbnail/><div class=\"flex flex-wrap justify-between mb-4\"><EngagementChart/><PerformanceTable/></div></DashboardContainer></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "(standalone) - a navigation bar with links to other dashboard pages",
          "html": "<nav class=\"flex justify-between mb-4\"><ul class=\"list-none mb-0\"><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_1}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_2}</a></li><li><a href=\"#\" class=\"text-gray-600 hover:text-gray-900\">{nav_link_3}</a></li></ul></nav>"
        },
        {
          "name": "VideoThumbnail",
          "is_standalone": true,
          "description": "(standalone) - a video thumbnail with playback information",
          "html": "<div class=\"flex mb-4\"><img src={video_thumbnail_url} alt={video_title} class=\"w-40 h-40 object-cover rounded-lg\"><div class=\"ml-4\"><p class=\"text-lg font-bold\">{video_title}</p><p>{video_description}</p><p>{playback_info}</p></div></div>"
        },
        {
          "name": "EngagementChart",
          "is_standalone": true,
          "description": "(standalone) - a chart displaying video engagement metrics",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Engagement Metrics</h3><canvas id=\"engagement-chart\" width={chart_width} height={chart_height}></canvas></div>"
        },
        {
          "name": "PerformanceTable",
          "is_standalone": true,
          "description": "(standalone) - a table showing video performance data",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4 mb-4\"><h3 class=\"text-lg font-bold mb-2\">Video Performance</h3><table class=\"w-full\"><thead><tr><th>Metric</th><th>Value</th></tr></thead><tbody><tr><td>Views</td><td>{views}</td></tr><tr><td>Likes</td><td>{likes}</td></tr><tr><td>Comments</td><td>{comments}</td></tr></tbody></table></div>"
        },
        {
          "name": "DashboardContainer",
          "is_standalone": false,
          "description": "(takes children) - a container element that wraps the entire dashboard",
          "html": "<div class=\"p-4 mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Features Grid: Highlight key benefits in a grid layout": [
    {
      "description": "A responsive grid layout with 3-4 columns, showcasing key benefits of a product or service. Each grid item should have an icon, a heading, and a brief description.",
      "html": "<section class=\"container mx-auto p-4 lg:p-8\"><FeaturesGrid><FeatureItem/><FeatureItem/><FeatureItem/><!-- Add more FeatureItem components as needed --></FeaturesGrid></section>",
      "components": [
        {
          "name": "FeatureItem",
          "is_standalone": true,
          "description": "(standalone): A single feature item in the grid, containing an icon, heading, and description.",
          "html": "<div class=\"flex flex-col items-center p-4 lg:p-6\"><i class=\"text-3xl {icon_class} mb-4\"/><!-- icon --><h3 class=\"text-lg font-bold\">{heading}</h3><p class=\"text-gray-600\">{description}</p></div>"
        },
        {
          "name": "FeaturesGrid",
          "is_standalone": false,
          "description": "(takes children): The container element for the feature items, managing the grid layout.",
          "html": "<div class=\"grid grid-cols-1 lg:grid-cols-3 gap-4 lg:gap-8\">{children}</div>"
        }
      ]
    }
  ],
  "Loading spinner with animation and progress circle": [
    {
      "description": "The UI should be a responsive, mobile-first loading spinner with an animation and a progress circle. The progress circle should show the percentage of completion.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "a standalone component that displays the loading animation and progress circle.",
          "html": "<div class=\"relative w-12 h-12 mx-auto\"><!-- animation --><div class=\"animate-spin h-12 w-12 border-4 border-gray-200 rounded-full border-t-transparent\"></div><!-- progress circle --><div class=\"absolute top-0 left-0 w-12 h-12 text-lg text-gray-600\"><span>{progress}%</span></div></div>"
        }
      ]
    }
  ],
  "Product Description Textarea": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible textarea component for entering product descriptions. It should have a clear and concise design, with a clear label and sufficient space for user input.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><label for=\"product-description\" class=\"block mb-2 text-lg\">Product Description</label><ProductDescriptionTextarea/></div>",
      "components": [
        {
          "name": "ProductDescriptionTextarea",
          "is_standalone": true,
          "description": "A standalone component representing the textarea for entering product descriptions.",
          "html": "<textarea id=\"product-description\" class=\"block w-full p-2 pl-10 text-lg text-gray-700 bg-gray-50 rounded\" placeholder=\"Enter product description...\"/>"
        }
      ]
    }
  ],
  "Form Validation Feedback": [
    {
      "description": "The UI should display form validation feedback in a clear and accessible manner. It should provide users with information about the errors in their form submission, with clear and concise error messages.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4 bg-red-100 rounded\"><ValidationFeedback><ValidationError/><ValidationError/></ValidationFeedback></div>",
      "components": [
        {
          "name": "ValidationError",
          "is_standalone": true,
          "description": "component (standalone) - displays a single error message",
          "html": "<p class=\"text-sm text-red-700\">{error_message}</p>"
        },
        {
          "name": "ValidationFeedback",
          "is_standalone": false,
          "description": "component (takes children) - container for one or more `ValidationError` components",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display form validation feedback in a clear and accessible manner. It should provide users with information about the errors in their form submission, with clear and concise error messages.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4 bg-red-100 rounded\"><ValidationFeedback><ValidationError/><ValidationError/></ValidationFeedback></div>",
      "components": [
        {
          "name": "ValidationError",
          "is_standalone": true,
          "description": "component (standalone) - displays a single error message",
          "html": "<p class=\"text-sm text-red-700\">{error_message}</p>"
        },
        {
          "name": "ValidationFeedback",
          "is_standalone": false,
          "description": "component (takes children) - container for one or more `ValidationError` components",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a form input field with an error message or success message below it, indicating the validation status of the input.",
      "html": "<div class=\"flex flex-col gap-2\"><FormInput/><ValidationFeedback><p>{validation_message}</p></ValidationFeedback></div>",
      "components": [
        {
          "name": "FormInput",
          "is_standalone": true,
          "description": "A standalone component that represents a single form input field.",
          "html": "<input type=\"text\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder={input_placeholder}/>"
        },
        {
          "name": "ValidationFeedback",
          "is_standalone": false,
          "description": "A component that takes children and displays the validation message (error or success).",
          "html": "<div class={`text-xs ${validation_status === 'error' ? 'text-red-500' : 'text-green-500'}`}>{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display form validation feedback in a clear and accessible manner. It should provide users with information about the errors in their form submission, with clear and concise error messages.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4 bg-red-100 rounded\"><ValidationFeedback><ValidationError/><ValidationError/></ValidationFeedback></div>",
      "components": [
        {
          "name": "ValidationError",
          "is_standalone": true,
          "description": "component (standalone) - displays a single error message",
          "html": "<p class=\"text-sm text-red-700\">{error_message}</p>"
        },
        {
          "name": "ValidationFeedback",
          "is_standalone": false,
          "description": "component (takes children) - container for one or more `ValidationError` components",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display form validation feedback in a clear and accessible manner. It should provide users with information about the errors in their form submission, with clear and concise error messages.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4 bg-red-100 rounded\"><ValidationFeedback><ValidationError/><ValidationError/></ValidationFeedback></div>",
      "components": [
        {
          "name": "ValidationError",
          "is_standalone": true,
          "description": "component (standalone) - displays a single error message",
          "html": "<p class=\"text-sm text-red-700\">{error_message}</p>"
        },
        {
          "name": "ValidationFeedback",
          "is_standalone": false,
          "description": "component (takes children) - container for one or more `ValidationError` components",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display form validation feedback in a clear and accessible manner. It should provide users with information about the errors in their form submission, with clear and concise error messages.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4 bg-red-100 rounded\"><ValidationFeedback><ValidationError/><ValidationError/></ValidationFeedback></div>",
      "components": [
        {
          "name": "ValidationError",
          "is_standalone": true,
          "description": "component (standalone) - displays a single error message",
          "html": "<p class=\"text-sm text-red-700\">{error_message}</p>"
        },
        {
          "name": "ValidationFeedback",
          "is_standalone": false,
          "description": "component (takes children) - container for one or more `ValidationError` components",
          "html": "<div class=\"space-y-2\">{children}</div>"
        }
      ]
    }
  ],
  "Product Feature List": [
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a list of product features, with each feature having a title, description, and optional icon. The list should be responsive, with each feature taking up the full width on mobile devices and being arranged in a grid on larger screens.",
      "html": "<div class=\"container mx-auto p-4 lg:p-6\"><div class=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-4\"><FeatureList><!-- List of features goes here --></FeatureList></div></div>",
      "components": [
        {
          "name": "FeatureList",
          "is_standalone": false,
          "description": "A component wrapping a list of `FeatureItem`s, taking in a list of features as children.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    }
  ],
  "Tag Clouds/Folksonomy": [
    {
      "description": "The UI should display a collection of tags-cloud, with each tag having a size and color that represents its importance or frequency of use. The tags should be organized in a responsive layout that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Tag Cloud</h2><TagCloud><Tag/><Tag/>...\n</TagCloud></div>",
      "components": [
        {
          "name": "Tag",
          "is_standalone": true,
          "description": "(standalone): A single tag element that displays the tag text, with a size and color that represents its importance.",
          "html": "<a href=\"{tag_url}\" class=\"inline-block text-sm px-2 py-1 rounded {tag_color} {tag_size}\">{tag_text}</a>"
        },
        {
          "name": "TagCloud",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps multiple **Tag** components and lays them out in a responsive layout.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a collection of tags-cloud, with each tag having a size and color that represents its importance or frequency of use. The tags should be organized in a responsive layout that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Tag Cloud</h2><TagCloud><Tag/><Tag/>...\n</TagCloud></div>",
      "components": [
        {
          "name": "Tag",
          "is_standalone": true,
          "description": "(standalone): A single tag element that displays the tag text, with a size and color that represents its importance.",
          "html": "<a href=\"{tag_url}\" class=\"inline-block text-sm px-2 py-1 rounded {tag_color} {tag_size}\">{tag_text}</a>"
        },
        {
          "name": "TagCloud",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps multiple **Tag** components and lays them out in a responsive layout.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a collection of tags-cloud, with each tag having a size and color that represents its importance or frequency of use. The tags should be organized in a responsive layout that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Tag Cloud</h2><TagCloud><Tag/><Tag/>...\n</TagCloud></div>",
      "components": [
        {
          "name": "Tag",
          "is_standalone": true,
          "description": "(standalone): A single tag element that displays the tag text, with a size and color that represents its importance.",
          "html": "<a href=\"{tag_url}\" class=\"inline-block text-sm px-2 py-1 rounded {tag_color} {tag_size}\">{tag_text}</a>"
        },
        {
          "name": "TagCloud",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps multiple **Tag** components and lays them out in a responsive layout.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a collection of tags-cloud, with each tag having a size and color that represents its importance or frequency of use. The tags should be organized in a responsive layout that adapts to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Tag Cloud</h2><TagCloud><Tag/><Tag/>...\n</TagCloud></div>",
      "components": [
        {
          "name": "Tag",
          "is_standalone": true,
          "description": "(standalone): A single tag element that displays the tag text, with a size and color that represents its importance.",
          "html": "<a href=\"{tag_url}\" class=\"inline-block text-sm px-2 py-1 rounded {tag_color} {tag_size}\">{tag_text}</a>"
        },
        {
          "name": "TagCloud",
          "is_standalone": false,
          "description": "(takes children): A container component that wraps multiple **Tag** components and lays them out in a responsive layout.",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    }
  ],
  "User Comments and Feedback": [
    {
      "description": "The UI should display a list of user comments and feedback, with each comment showing the user's name, profile picture, comment text, and a timestamp. The UI should also include a form for users to submit new comments.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><CommentForm/><CommentList><CommentCard/><CommentCard/><!-- more CommentCard components here --></CommentList></div>",
      "components": [
        {
          "name": "CommentCard",
          "is_standalone": true,
          "description": "(Standalone): Displays a single comment, including the user's name, profile picture, comment text, and timestamp.",
          "html": "<div class=\"flex mb-4\"><UserProfilePicture/><div class=\"ml-4\"><h5 class=\"text-lg\">{username}</h5><p>{comment_text}</p><p class=\"text-sm text-gray-600\">{timestamp}</p></div></div>"
        },
        {
          "name": "CommentForm",
          "is_standalone": true,
          "description": "(Standalone): Provides a form for users to submit new comments.",
          "html": "<form class=\"flex mb-4\"><input type=\"text\" placeholder=\"Enter your comment...\" class=\"w-full p-2\"/><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button></form>"
        },
        {
          "name": "CommentList",
          "is_standalone": false,
          "description": "(Takes Children): Displays a list of `CommentCard` components.",
          "html": "<ul class=\"list-none mb-4\">{children}</ul>"
        },
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "(Standalone): Displays a user's profile picture.",
          "html": "<img src={profile_picture_url} class=\"w-12 h-12 rounded-full\" alt=\"User Profile Picture\"/>"
        }
      ]
    }
  ],
  "Product Showcase with Animated Cards": [
    {
      "description": "The UI should be a product showcase with a grid of animated cards. Each card should have a hover effect and display a product image, title, and description. The grid should be responsive and adjust to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><ProductGrid><ProductCard/><ProductCard/><ProductCard/><!-- Add more ProductCard components here --></ProductGrid></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "(standalone): A single product card with a hover effect.",
          "html": "<div class=\"bg-white shadow-md rounded overflow-hidden transition duration-500 hover:scale-105\"><img src={product_image} alt={product_name} class=\"w-full h-48 object-cover rounded-t\"/><div class=\"p-4\"><h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p></div></div>"
        },
        {
          "name": "ProductGrid",
          "is_standalone": false,
          "description": "(takes children): A grid container that wraps multiple `ProductCard` components.",
          "html": "<div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Image Lightbox Close": [
    {
      "description": "A Lightbox component that displays a featured image and has a close button.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-screen bg-black bg-opacity-50 flex justify-center\"><Lightbox/></div>",
      "components": [
        {
          "name": "Lightbox",
          "is_standalone": true,
          "description": "A standalone component that contains the image and the close button.",
          "html": "<div class=\"bg-white p-4 max-w-md mx-auto mt-16\"><CloseButton/><img src={imageUrl} alt={imageAlt} class=\"mx-auto\"/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that represents the close button.",
          "html": "<button class=\"absolute top-2 right-2 text-3xl text-gray-500 hover:text-gray-800\">×</button>"
        }
      ]
    },
    {
      "description": "A Lightbox component that displays a featured image and has a close button.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-screen bg-black bg-opacity-50 flex justify-center\"><Lightbox/></div>",
      "components": [
        {
          "name": "Lightbox",
          "is_standalone": true,
          "description": "A standalone component that contains the image and the close button.",
          "html": "<div class=\"bg-white p-4 max-w-md mx-auto mt-16\"><CloseButton/><img src={imageUrl} alt={imageAlt} class=\"mx-auto\"/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that represents the close button.",
          "html": "<button class=\"absolute top-2 right-2 text-3xl text-gray-500 hover:text-gray-800\">×</button>"
        }
      ]
    },
    {
      "description": "A lightbox with a close button at the top right corner, displaying a large featured image. The lightbox should be modal, overlaying the underlying content.",
      "html": "<div class=\"fixed inset-0 flex justify-center items-center bg-gray-500 bg-opacity-50\"><FeaturedImageLightbox/></div>",
      "components": [
        {
          "name": "FeaturedImageLightbox",
          "is_standalone": true,
          "description": "a standalone component that contains a large featured image and a close button.",
          "html": "<div class=\"max-w-md p-4 bg-white rounded\"><LightboxCloseButton/><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"max-w-full h-auto rounded\"></div>"
        },
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "a standalone component that provides a close button for the lightbox.",
          "html": "<button class=\"absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-800\"><i class=\"fas fa-times\" aria-label=\"Close\"></i></button>"
        }
      ]
    },
    {
      "description": "A Lightbox component that displays a featured image and has a close button.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-screen bg-black bg-opacity-50 flex justify-center\"><Lightbox/></div>",
      "components": [
        {
          "name": "Lightbox",
          "is_standalone": true,
          "description": "A standalone component that contains the image and the close button.",
          "html": "<div class=\"bg-white p-4 max-w-md mx-auto mt-16\"><CloseButton/><img src={imageUrl} alt={imageAlt} class=\"mx-auto\"/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that represents the close button.",
          "html": "<button class=\"absolute top-2 right-2 text-3xl text-gray-500 hover:text-gray-800\">×</button>"
        }
      ]
    },
    {
      "description": "A lightbox with a close button at the top right corner, displaying a large featured image. The lightbox should be modal, overlaying the underlying content.",
      "html": "<div class=\"fixed inset-0 flex justify-center items-center bg-gray-500 bg-opacity-50\"><FeaturedImageLightbox/></div>",
      "components": [
        {
          "name": "FeaturedImageLightbox",
          "is_standalone": true,
          "description": "a standalone component that contains a large featured image and a close button.",
          "html": "<div class=\"max-w-md p-4 bg-white rounded\"><LightboxCloseButton/><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"max-w-full h-auto rounded\"></div>"
        },
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "a standalone component that provides a close button for the lightbox.",
          "html": "<button class=\"absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-800\"><i class=\"fas fa-times\" aria-label=\"Close\"></i></button>"
        }
      ]
    },
    {
      "description": "A Lightbox component that displays a featured image and has a close button.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-screen bg-black bg-opacity-50 flex justify-center\"><Lightbox/></div>",
      "components": [
        {
          "name": "Lightbox",
          "is_standalone": true,
          "description": "A standalone component that contains the image and the close button.",
          "html": "<div class=\"bg-white p-4 max-w-md mx-auto mt-16\"><CloseButton/><img src={imageUrl} alt={imageAlt} class=\"mx-auto\"/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that represents the close button.",
          "html": "<button class=\"absolute top-2 right-2 text-3xl text-gray-500 hover:text-gray-800\">×</button>"
        }
      ]
    },
    {
      "description": "A Lightbox component that displays a featured image and has a close button.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-screen bg-black bg-opacity-50 flex justify-center\"><Lightbox/></div>",
      "components": [
        {
          "name": "Lightbox",
          "is_standalone": true,
          "description": "A standalone component that contains the image and the close button.",
          "html": "<div class=\"bg-white p-4 max-w-md mx-auto mt-16\"><CloseButton/><img src={imageUrl} alt={imageAlt} class=\"mx-auto\"/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that represents the close button.",
          "html": "<button class=\"absolute top-2 right-2 text-3xl text-gray-500 hover:text-gray-800\">×</button>"
        }
      ]
    },
    {
      "description": "A lightbox with a close button at the top right corner, displaying a large featured image. The lightbox should be modal, overlaying the underlying content.",
      "html": "<div class=\"fixed inset-0 flex justify-center items-center bg-gray-500 bg-opacity-50\"><FeaturedImageLightbox/></div>",
      "components": [
        {
          "name": "FeaturedImageLightbox",
          "is_standalone": true,
          "description": "a standalone component that contains a large featured image and a close button.",
          "html": "<div class=\"max-w-md p-4 bg-white rounded\"><LightboxCloseButton/><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"max-w-full h-auto rounded\"></div>"
        },
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "a standalone component that provides a close button for the lightbox.",
          "html": "<button class=\"absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-800\"><i class=\"fas fa-times\" aria-label=\"Close\"></i></button>"
        }
      ]
    },
    {
      "description": "A Lightbox component that displays a featured image and has a close button.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-screen bg-black bg-opacity-50 flex justify-center\"><Lightbox/></div>",
      "components": [
        {
          "name": "Lightbox",
          "is_standalone": true,
          "description": "A standalone component that contains the image and the close button.",
          "html": "<div class=\"bg-white p-4 max-w-md mx-auto mt-16\"><CloseButton/><img src={imageUrl} alt={imageAlt} class=\"mx-auto\"/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that represents the close button.",
          "html": "<button class=\"absolute top-2 right-2 text-3xl text-gray-500 hover:text-gray-800\">×</button>"
        }
      ]
    },
    {
      "description": "A lightbox with a close button at the top right corner, displaying a large featured image. The lightbox should be modal, overlaying the underlying content.",
      "html": "<div class=\"fixed inset-0 flex justify-center items-center bg-gray-500 bg-opacity-50\"><FeaturedImageLightbox/></div>",
      "components": [
        {
          "name": "FeaturedImageLightbox",
          "is_standalone": true,
          "description": "a standalone component that contains a large featured image and a close button.",
          "html": "<div class=\"max-w-md p-4 bg-white rounded\"><LightboxCloseButton/><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"max-w-full h-auto rounded\"></div>"
        },
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "a standalone component that provides a close button for the lightbox.",
          "html": "<button class=\"absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-800\"><i class=\"fas fa-times\" aria-label=\"Close\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a lightbox close button for a featured image. It should be a responsive, mobile-first, accessible, and SEO-friendly component.",
      "html": "<!-- Lightbox container --><div class=\"fixed top-0 left-0 h-screen w-screen bg-black bg-opacity-50 flex justify-center\"><!-- Lightbox content --><div class=\"bg-white p-4 max-w-md m-4\"><!-- Featured image --><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full\"/><!-- Lightbox close button --><LightboxCloseButton/></div></div>",
      "components": [
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "a standalone component representing the close button for the lightbox.",
          "html": "<!-- Lightbox close button --><button class=\"absolute top-0 right-0 p-4 text-lg text-white hover:text-gray-200 focus:outline-none\">×</button>"
        }
      ]
    },
    {
      "description": "A Lightbox component that displays a featured image and has a close button.",
      "html": "<div class=\"fixed top-0 left-0 w-full h-screen bg-black bg-opacity-50 flex justify-center\"><Lightbox/></div>",
      "components": [
        {
          "name": "Lightbox",
          "is_standalone": true,
          "description": "A standalone component that contains the image and the close button.",
          "html": "<div class=\"bg-white p-4 max-w-md mx-auto mt-16\"><CloseButton/><img src={imageUrl} alt={imageAlt} class=\"mx-auto\"/></div>"
        },
        {
          "name": "CloseButton",
          "is_standalone": true,
          "description": "A standalone component that represents the close button.",
          "html": "<button class=\"absolute top-2 right-2 text-3xl text-gray-500 hover:text-gray-800\">×</button>"
        }
      ]
    },
    {
      "description": "A lightbox with a close button at the top right corner, displaying a large featured image. The lightbox should be modal, overlaying the underlying content.",
      "html": "<div class=\"fixed inset-0 flex justify-center items-center bg-gray-500 bg-opacity-50\"><FeaturedImageLightbox/></div>",
      "components": [
        {
          "name": "FeaturedImageLightbox",
          "is_standalone": true,
          "description": "a standalone component that contains a large featured image and a close button.",
          "html": "<div class=\"max-w-md p-4 bg-white rounded\"><LightboxCloseButton/><img src=\"{image_url}\" alt=\"{image_alt}\" class=\"max-w-full h-auto rounded\"></div>"
        },
        {
          "name": "LightboxCloseButton",
          "is_standalone": true,
          "description": "a standalone component that provides a close button for the lightbox.",
          "html": "<button class=\"absolute top-0 right-0 p-2 text-gray-500 hover:text-gray-800\"><i class=\"fas fa-times\" aria-label=\"Close\"></i></button>"
        }
      ]
    }
  ],
  "Tweet analytics for engagement metrics": [
    {
      "description": "The UI should be a dashboard displaying tweet analytics for engagement metrics. It should show the number of likes, retweets, replies, and engagements for a tweet.",
      "html": "<div class=\" container mx-auto p-4 pt-6 md:p-6\"><TweetAnalyticsCard/></div>",
      "components": [
        {
          "name": "TweetAnalyticsCard",
          "is_standalone": true,
          "description": "standalone component displaying the tweet analytics",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><h2 class=\"text-lg font-bold\">Tweet Analytics</h2><ul class=\"list-none mb-0\"><MetricItem>Likes: {likes} </MetricItem><MetricItem>Retweets: {retweets} </MetricItem><MetricItem>Replies: {replies} </MetricItem><MetricItem>Engagements: {engagements} </MetricItem></ul></div>"
        },
        {
          "name": "MetricItem",
          "is_standalone": false,
          "description": "takes children, displays a single metric (e.g. likes, retweets, etc.)",
          "html": "<li class=\"flex items-center mb-2\"><span class=\"mr-2\">{icon}</span><span>{children}</span></li>"
        }
      ]
    }
  ],
  "Social Media Feed Header": [
    {
      "description": "The UI should display a header for a social media feed, showing the profile picture, username, and a button to follow the user. The header should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-between p-4\"><SocialMediaFeedHeader><UserProfilePicture/><UsernameDisplay/><FollowButton/></SocialMediaFeedHeader></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component to display the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component to display the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component to display a button to follow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameDisplay, and FollowButton).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a header for a social media feed, showing the profile picture, username, and a button to follow the user. The header should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-between p-4\"><SocialMediaFeedHeader><UserProfilePicture/><UsernameDisplay/><FollowButton/></SocialMediaFeedHeader></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component to display the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component to display the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component to display a button to follow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameDisplay, and FollowButton).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should be a horizontal bar that displays the social media platform's logo, a title, and a navigation menu. It should be responsive, adapting to different screen sizes and devices.",
      "html": "<header class=\"container mx-auto p-4 flex justify-between items-center\"><SocialMediaLogo/><FeedTitle/><NavMenu><!-- navigation menu items will be inserted here --></NavMenu></header>",
      "components": [
        {
          "name": "SocialMediaLogo",
          "is_standalone": true,
          "description": "A standalone component that displays the social media platform's logo.",
          "html": "<img src={logo_url} alt=\"Social Media Logo\" class=\"h-8 w-8 mr-2\"/>"
        },
        {
          "name": "FeedTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the social media feed.",
          "html": "<h1 class=\"text-2xl font-bold\">{feed_title}</h1>"
        },
        {
          "name": "NavMenu",
          "is_standalone": false,
          "description": "A component that takes children, which are navigation menu items.",
          "html": "<nav class=\"flex justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header that contains a username, profile picture, and a post count. It should be easily accessible on both desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><SocialMediaHeader><UserProfile/><PostCount/></SocialMediaHeader></header>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone) - contains the profile picture and username",
          "html": "<div class=\"flex items-center mb-4 lg:mb-6\"><img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-4\"/><h2 class=\"text-lg lg:text-xl\">{username}</h2></div>"
        },
        {
          "name": "PostCount",
          "is_standalone": true,
          "description": "(standalone) - displays the number of posts",
          "html": "<p class=\"text-sm lg:text-base\">{post_count} posts</p>"
        },
        {
          "name": "SocialMediaHeader",
          "is_standalone": false,
          "description": "(takes children) - the main header component that contains the `UserProfile` and `PostCount` components",
          "html": "<div class=\"flex flex-col lg:flex-row justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a header for a social media feed, showing the profile picture, username, and a button to follow the user. The header should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-between p-4\"><SocialMediaFeedHeader><UserProfilePicture/><UsernameDisplay/><FollowButton/></SocialMediaFeedHeader></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component to display the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component to display the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component to display a button to follow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameDisplay, and FollowButton).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should be a horizontal bar that displays the social media platform's logo, a title, and a navigation menu. It should be responsive, adapting to different screen sizes and devices.",
      "html": "<header class=\"container mx-auto p-4 flex justify-between items-center\"><SocialMediaLogo/><FeedTitle/><NavMenu><!-- navigation menu items will be inserted here --></NavMenu></header>",
      "components": [
        {
          "name": "SocialMediaLogo",
          "is_standalone": true,
          "description": "A standalone component that displays the social media platform's logo.",
          "html": "<img src={logo_url} alt=\"Social Media Logo\" class=\"h-8 w-8 mr-2\"/>"
        },
        {
          "name": "FeedTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the social media feed.",
          "html": "<h1 class=\"text-2xl font-bold\">{feed_title}</h1>"
        },
        {
          "name": "NavMenu",
          "is_standalone": false,
          "description": "A component that takes children, which are navigation menu items.",
          "html": "<nav class=\"flex justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header that contains a username, profile picture, and a post count. It should be easily accessible on both desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><SocialMediaHeader><UserProfile/><PostCount/></SocialMediaHeader></header>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone) - contains the profile picture and username",
          "html": "<div class=\"flex items-center mb-4 lg:mb-6\"><img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-4\"/><h2 class=\"text-lg lg:text-xl\">{username}</h2></div>"
        },
        {
          "name": "PostCount",
          "is_standalone": true,
          "description": "(standalone) - displays the number of posts",
          "html": "<p class=\"text-sm lg:text-base\">{post_count} posts</p>"
        },
        {
          "name": "SocialMediaHeader",
          "is_standalone": false,
          "description": "(takes children) - the main header component that contains the `UserProfile` and `PostCount` components",
          "html": "<div class=\"flex flex-col lg:flex-row justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should display a profile picture, username, and a button to follow/unfollow the user. It should be responsive, with the profile picture and username aligned to the left and the follow button to the right on larger screens, and stacked on smaller screens.",
      "html": "<header class=\"flex flex-wrap justify-between p-4 lg:p-6\"><SocialMediaFeedHeader><ProfilePicture/><Username/><FollowButton/></SocialMediaFeedHeader></header>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays a profile picture.",
          "html": "<img src={profile_picture_url} class=\"w-12 h-12 rounded-full\" alt=\"Profile Picture\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "Standalone component that displays the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component that displays a button to follow or unfollow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">{follow_button_text}</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children, which consists of the profile picture, username, and follow button.",
          "html": "<div class=\"flex flex-wrap lg:flex-nowrap justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a header for a social media feed, showing the profile picture, username, and a button to follow the user. The header should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-between p-4\"><SocialMediaFeedHeader><UserProfilePicture/><UsernameDisplay/><FollowButton/></SocialMediaFeedHeader></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component to display the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component to display the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component to display a button to follow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameDisplay, and FollowButton).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should be a horizontal bar that displays the social media platform's logo, a title, and a navigation menu. It should be responsive, adapting to different screen sizes and devices.",
      "html": "<header class=\"container mx-auto p-4 flex justify-between items-center\"><SocialMediaLogo/><FeedTitle/><NavMenu><!-- navigation menu items will be inserted here --></NavMenu></header>",
      "components": [
        {
          "name": "SocialMediaLogo",
          "is_standalone": true,
          "description": "A standalone component that displays the social media platform's logo.",
          "html": "<img src={logo_url} alt=\"Social Media Logo\" class=\"h-8 w-8 mr-2\"/>"
        },
        {
          "name": "FeedTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the social media feed.",
          "html": "<h1 class=\"text-2xl font-bold\">{feed_title}</h1>"
        },
        {
          "name": "NavMenu",
          "is_standalone": false,
          "description": "A component that takes children, which are navigation menu items.",
          "html": "<nav class=\"flex justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should display a header for a social media feed, showing the profile picture, username, and a button to follow the user. The header should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-between p-4\"><SocialMediaFeedHeader><UserProfilePicture/><UsernameDisplay/><FollowButton/></SocialMediaFeedHeader></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component to display the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component to display the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component to display a button to follow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameDisplay, and FollowButton).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should be a horizontal bar that displays the social media platform's logo, a title, and a navigation menu. It should be responsive, adapting to different screen sizes and devices.",
      "html": "<header class=\"container mx-auto p-4 flex justify-between items-center\"><SocialMediaLogo/><FeedTitle/><NavMenu><!-- navigation menu items will be inserted here --></NavMenu></header>",
      "components": [
        {
          "name": "SocialMediaLogo",
          "is_standalone": true,
          "description": "A standalone component that displays the social media platform's logo.",
          "html": "<img src={logo_url} alt=\"Social Media Logo\" class=\"h-8 w-8 mr-2\"/>"
        },
        {
          "name": "FeedTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the social media feed.",
          "html": "<h1 class=\"text-2xl font-bold\">{feed_title}</h1>"
        },
        {
          "name": "NavMenu",
          "is_standalone": false,
          "description": "A component that takes children, which are navigation menu items.",
          "html": "<nav class=\"flex justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header that contains a username, profile picture, and a post count. It should be easily accessible on both desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><SocialMediaHeader><UserProfile/><PostCount/></SocialMediaHeader></header>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone) - contains the profile picture and username",
          "html": "<div class=\"flex items-center mb-4 lg:mb-6\"><img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-4\"/><h2 class=\"text-lg lg:text-xl\">{username}</h2></div>"
        },
        {
          "name": "PostCount",
          "is_standalone": true,
          "description": "(standalone) - displays the number of posts",
          "html": "<p class=\"text-sm lg:text-base\">{post_count} posts</p>"
        },
        {
          "name": "SocialMediaHeader",
          "is_standalone": false,
          "description": "(takes children) - the main header component that contains the `UserProfile` and `PostCount` components",
          "html": "<div class=\"flex flex-col lg:flex-row justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a header for a social media feed, showing the profile picture, username, and a button to follow the user. The header should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-between p-4\"><SocialMediaFeedHeader><UserProfilePicture/><UsernameDisplay/><FollowButton/></SocialMediaFeedHeader></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component to display the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component to display the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component to display a button to follow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameDisplay, and FollowButton).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should be a horizontal bar that displays the social media platform's logo, a title, and a navigation menu. It should be responsive, adapting to different screen sizes and devices.",
      "html": "<header class=\"container mx-auto p-4 flex justify-between items-center\"><SocialMediaLogo/><FeedTitle/><NavMenu><!-- navigation menu items will be inserted here --></NavMenu></header>",
      "components": [
        {
          "name": "SocialMediaLogo",
          "is_standalone": true,
          "description": "A standalone component that displays the social media platform's logo.",
          "html": "<img src={logo_url} alt=\"Social Media Logo\" class=\"h-8 w-8 mr-2\"/>"
        },
        {
          "name": "FeedTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the social media feed.",
          "html": "<h1 class=\"text-2xl font-bold\">{feed_title}</h1>"
        },
        {
          "name": "NavMenu",
          "is_standalone": false,
          "description": "A component that takes children, which are navigation menu items.",
          "html": "<nav class=\"flex justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header that contains a username, profile picture, and a post count. It should be easily accessible on both desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><SocialMediaHeader><UserProfile/><PostCount/></SocialMediaHeader></header>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone) - contains the profile picture and username",
          "html": "<div class=\"flex items-center mb-4 lg:mb-6\"><img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-4\"/><h2 class=\"text-lg lg:text-xl\">{username}</h2></div>"
        },
        {
          "name": "PostCount",
          "is_standalone": true,
          "description": "(standalone) - displays the number of posts",
          "html": "<p class=\"text-sm lg:text-base\">{post_count} posts</p>"
        },
        {
          "name": "SocialMediaHeader",
          "is_standalone": false,
          "description": "(takes children) - the main header component that contains the `UserProfile` and `PostCount` components",
          "html": "<div class=\"flex flex-col lg:flex-row justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should display a profile picture, username, and a button to follow/unfollow the user. It should be responsive, with the profile picture and username aligned to the left and the follow button to the right on larger screens, and stacked on smaller screens.",
      "html": "<header class=\"flex flex-wrap justify-between p-4 lg:p-6\"><SocialMediaFeedHeader><ProfilePicture/><Username/><FollowButton/></SocialMediaFeedHeader></header>",
      "components": [
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays a profile picture.",
          "html": "<img src={profile_picture_url} class=\"w-12 h-12 rounded-full\" alt=\"Profile Picture\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "Standalone component that displays the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component that displays a button to follow or unfollow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">{follow_button_text}</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children, which consists of the profile picture, username, and follow button.",
          "html": "<div class=\"flex flex-wrap lg:flex-nowrap justify-between items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a header for a social media feed, showing the profile picture, username, and a button to follow the user. The header should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"flex justify-between p-4\"><SocialMediaFeedHeader><UserProfilePicture/><UsernameDisplay/><FollowButton/></SocialMediaFeedHeader></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component to display the user's profile picture.",
          "html": "<img src={profile_picture_url} alt=\"User Profile Picture\" class=\"w-12 h-12 rounded-full mr-4\"/>"
        },
        {
          "name": "UsernameDisplay",
          "is_standalone": true,
          "description": "Standalone component to display the username.",
          "html": "<p class=\"text-lg font-bold\">{username}</p>"
        },
        {
          "name": "FollowButton",
          "is_standalone": true,
          "description": "Standalone component to display a button to follow the user.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Follow</button>"
        },
        {
          "name": "SocialMediaFeedHeader",
          "is_standalone": false,
          "description": "Component that takes children (UserProfilePicture, UsernameDisplay, and FollowButton).",
          "html": "<div class=\"flex items-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The Social Media Feed Header should be a horizontal bar that displays the social media platform's logo, a title, and a navigation menu. It should be responsive, adapting to different screen sizes and devices.",
      "html": "<header class=\"container mx-auto p-4 flex justify-between items-center\"><SocialMediaLogo/><FeedTitle/><NavMenu><!-- navigation menu items will be inserted here --></NavMenu></header>",
      "components": [
        {
          "name": "SocialMediaLogo",
          "is_standalone": true,
          "description": "A standalone component that displays the social media platform's logo.",
          "html": "<img src={logo_url} alt=\"Social Media Logo\" class=\"h-8 w-8 mr-2\"/>"
        },
        {
          "name": "FeedTitle",
          "is_standalone": true,
          "description": "A standalone component that displays the title of the social media feed.",
          "html": "<h1 class=\"text-2xl font-bold\">{feed_title}</h1>"
        },
        {
          "name": "NavMenu",
          "is_standalone": false,
          "description": "A component that takes children, which are navigation menu items.",
          "html": "<nav class=\"flex justify-end\">{children}</nav>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive header that contains a username, profile picture, and a post count. It should be easily accessible on both desktop and mobile devices.",
      "html": "<header class=\"max-w-md mx-auto p-4 pt-6 lg:p-6 lg:pt-12\"><SocialMediaHeader><UserProfile/><PostCount/></SocialMediaHeader></header>",
      "components": [
        {
          "name": "UserProfile",
          "is_standalone": true,
          "description": "(standalone) - contains the profile picture and username",
          "html": "<div class=\"flex items-center mb-4 lg:mb-6\"><img src=\"{profile_picture_url}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-4\"/><h2 class=\"text-lg lg:text-xl\">{username}</h2></div>"
        },
        {
          "name": "PostCount",
          "is_standalone": true,
          "description": "(standalone) - displays the number of posts",
          "html": "<p class=\"text-sm lg:text-base\">{post_count} posts</p>"
        },
        {
          "name": "SocialMediaHeader",
          "is_standalone": false,
          "description": "(takes children) - the main header component that contains the `UserProfile` and `PostCount` components",
          "html": "<div class=\"flex flex-col lg:flex-row justify-between items-center\">{children}</div>"
        }
      ]
    }
  ],
  "Product filtering and sorting controls": [
    {
      "description": "The UI should display a set of filtering and sorting controls for products, allowing users to narrow down their search results by category, price range, and rating. The controls should be responsive, accessible, and easy to use on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><FilterControls><FilterCategorySelect/><PriceRangeSlider/><RatingFilterButtons/><SortBySelect/></FilterControls></div>",
      "components": [
        {
          "name": "FilterCategorySelect",
          "is_standalone": true,
          "description": "A standalone dropdown component for selecting a product category.",
          "html": "<select class=\"bg-white border border-gray-300 rounded-full text-gray-600 py-2 px-4 w-full\"><option value=\"\">{category_placeholder}</option><!-- Option list will be populated dynamically --></select>"
        },
        {
          "name": "PriceRangeSlider",
          "is_standalone": true,
          "description": "A standalone component for selecting a price range.",
          "html": "<div class=\"flex items-center mb-4\"><span class=\"mr-2\">Min: {min_price}</span><input type=\"range\" min=\"0\" max=\"100\" value=\"50\" class=\"w-full\"/><span class=\"ml-2\">Max: {max_price}</span></div>"
        },
        {
          "name": "RatingFilterButtons",
          "is_standalone": true,
          "description": "A standalone component for selecting a rating filter.",
          "html": "<div class=\"flex mb-4\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">4+</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">3+</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-full\">2+</button></div>"
        },
        {
          "name": "SortBySelect",
          "is_standalone": true,
          "description": "A standalone dropdown component for selecting a sorting option.",
          "html": "<select class=\"bg-white border border-gray-300 rounded-full text-gray-600 py-2 px-4 w-full\"><option value=\"\">Sort by</option><option value=\"price_asc\">Price: Low to High</option><option value=\"price_desc\">Price: High to Low</option><option value=\"rating_desc\">Rating: High to Low</option></select>"
        },
        {
          "name": "FilterControls",
          "is_standalone": false,
          "description": "A container component that takes children ( FilterCategorySelect, PriceRangeSlider, RatingFilterButtons, and SortBySelect ).",
          "html": "<div class=\"flex flex-wrap justify-between mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "Individual email thread with reply buttons": [
    {
      "description": "The UI should display an individual email thread with reply buttons. The email thread should show the sender's name, email subject, and email body. There should be reply buttons (e.g., \"Reply\" and \"Reply All\") below the email body.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><EmailThread/></div>",
      "components": [
        {
          "name": "EmailThread",
          "is_standalone": true,
          "description": "Standalone component that displays an individual email thread.",
          "html": "<div class=\"border bg-white rounded p-4\"><EmailMetadata/><EmailBody/><ReplyButtons/></div>"
        },
        {
          "name": "EmailMetadata",
          "is_standalone": true,
          "description": "Standalone component that displays the sender's name and email subject.",
          "html": "<div class=\"flex justify-between mb-2\"><p class=\"font-bold\">{sender_name}</p><p class=\"text-gray-600\">{email_subject}</p></div>"
        },
        {
          "name": "EmailBody",
          "is_standalone": true,
          "description": "Standalone component that displays the email body.",
          "html": "<div class=\"mb-4\"><p>{email_body}</p></div>"
        },
        {
          "name": "ReplyButtons",
          "is_standalone": true,
          "description": "Standalone component that displays the reply buttons.",
          "html": "<div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply All</button></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual email thread with reply buttons. The email thread should show the sender's name, email subject, and email body. There should be reply buttons (e.g., \"Reply\" and \"Reply All\") below the email body.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><EmailThread/></div>",
      "components": [
        {
          "name": "EmailThread",
          "is_standalone": true,
          "description": "Standalone component that displays an individual email thread.",
          "html": "<div class=\"border bg-white rounded p-4\"><EmailMetadata/><EmailBody/><ReplyButtons/></div>"
        },
        {
          "name": "EmailMetadata",
          "is_standalone": true,
          "description": "Standalone component that displays the sender's name and email subject.",
          "html": "<div class=\"flex justify-between mb-2\"><p class=\"font-bold\">{sender_name}</p><p class=\"text-gray-600\">{email_subject}</p></div>"
        },
        {
          "name": "EmailBody",
          "is_standalone": true,
          "description": "Standalone component that displays the email body.",
          "html": "<div class=\"mb-4\"><p>{email_body}</p></div>"
        },
        {
          "name": "ReplyButtons",
          "is_standalone": true,
          "description": "Standalone component that displays the reply buttons.",
          "html": "<div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply All</button></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual email thread with reply buttons, showing the email's sender, subject, and content, along with buttons to reply to or delete the email.",
      "html": "<EmailThread><EmailThreadHeader/><EmailContent/><ReplyButton/><DeleteButton/></EmailThread>",
      "components": [
        {
          "name": "EmailThreadHeader",
          "is_standalone": true,
          "description": "standalone, displays email sender and subject",
          "html": "<div class=\"flex justify-between\"><p>{sender}</p><p>{subject}</p></div>"
        },
        {
          "name": "EmailContent",
          "is_standalone": true,
          "description": "standalone, displays email content",
          "html": "<div><p>{content}</p></div>"
        },
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "standalone, displays a reply button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply</button>"
        },
        {
          "name": "DeleteButton",
          "is_standalone": true,
          "description": "standalone, displays a delete button",
          "html": "<button class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">Delete</button>"
        },
        {
          "name": "EmailThread",
          "is_standalone": false,
          "description": "takes children, wraps the entire email thread",
          "html": "<div class=\"bg-white rounded shadow-md p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual email thread with reply buttons. The email thread should show the sender's name, email subject, and email body. There should be reply buttons (e.g., \"Reply\" and \"Reply All\") below the email body.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><EmailThread/></div>",
      "components": [
        {
          "name": "EmailThread",
          "is_standalone": true,
          "description": "Standalone component that displays an individual email thread.",
          "html": "<div class=\"border bg-white rounded p-4\"><EmailMetadata/><EmailBody/><ReplyButtons/></div>"
        },
        {
          "name": "EmailMetadata",
          "is_standalone": true,
          "description": "Standalone component that displays the sender's name and email subject.",
          "html": "<div class=\"flex justify-between mb-2\"><p class=\"font-bold\">{sender_name}</p><p class=\"text-gray-600\">{email_subject}</p></div>"
        },
        {
          "name": "EmailBody",
          "is_standalone": true,
          "description": "Standalone component that displays the email body.",
          "html": "<div class=\"mb-4\"><p>{email_body}</p></div>"
        },
        {
          "name": "ReplyButtons",
          "is_standalone": true,
          "description": "Standalone component that displays the reply buttons.",
          "html": "<div class=\"flex justify-end\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply</button><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Reply All</button></div>"
        }
      ]
    }
  ],
  "About me section with bio and profile picture": [
    {
      "description": "The UI should be a responsive, mobile-first About Me section with a profile picture and a brief bio. The profile picture should be circular and positioned above the bio. The bio should be a short paragraphs of text.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AboutMeContainer/></div>",
      "components": [
        {
          "name": "AboutMeContainer",
          "is_standalone": true,
          "description": "Standalone component that wraps the entire About Me section.",
          "html": "<div class=\"flex flex-col items-center md:flex-row\"><ProfilePicture/><Bio/></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the profile picture.",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{profile_picture_alt}\" class=\"w-24 h-24 rounded-full mb-4 md:mr-4 md:mb-0\"/>"
        },
        {
          "name": "Bio",
          "is_standalone": true,
          "description": "Standalone component that displays the bio text.",
          "html": "<p class=\"text-lg\">{bio_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first About Me section with a profile picture and a brief bio. The profile picture should be circular and positioned above the bio. The bio should be a short paragraphs of text.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><AboutMeContainer/></div>",
      "components": [
        {
          "name": "AboutMeContainer",
          "is_standalone": true,
          "description": "Standalone component that wraps the entire About Me section.",
          "html": "<div class=\"flex flex-col items-center md:flex-row\"><ProfilePicture/><Bio/></div>"
        },
        {
          "name": "ProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the profile picture.",
          "html": "<img src=\"{profile_picture_url}\" alt=\"{profile_picture_alt}\" class=\"w-24 h-24 rounded-full mb-4 md:mr-4 md:mb-0\"/>"
        },
        {
          "name": "Bio",
          "is_standalone": true,
          "description": "Standalone component that displays the bio text.",
          "html": "<p class=\"text-lg\">{bio_text}</p>"
        }
      ]
    }
  ],
  "Custom Field Builder: Create tailored data fields": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible interface for building custom data fields. It should consist of a header, a field-type selection section, and a field configuration section. The header should display the title \"Custom Field Builder\" and have an optional \"Save\" button. The field-type selection section should display a list of available field types (e.g., text, number, date, etc.). The field configuration section should display fields depending on the selected field type.",
      "html": "<div class=\"container mx-auto p-4 md:p-6 lg:p-8\"><HeaderComponent/><div class=\"flex flex-wrap -mx-4\"><div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><FieldTypeSelectorComponent/></div><div class=\"w-full md:w-1/2 xl:w-2/3 p-4\"><FieldConfiguratorComponent><!-- field configuration fields will be rendered here --></FieldConfiguratorComponent></div></div></div>",
      "components": [
        {
          "name": "HeaderComponent",
          "is_standalone": true,
          "description": "(standalone): Displays the title and optional save button.",
          "html": "<header class=\"flex justify-between mb-4\"><h1 class=\"text-lg font-bold\">Custom Field Builder</h1><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Save</button></header>"
        },
        {
          "name": "FieldTypeSelectorComponent",
          "is_standalone": true,
          "description": "(standalone): Displays a list of available field types.",
          "html": "<ul class=\"list-none mb-4\"><li><input type=\"radio\" id=\"text-field\" name=\"field-type\" value=\"text\"/><label for=\"text-field\">Text</label></li><li><input type=\"radio\" id=\"number-field\" name=\"field-type\" value=\"number\"/><label for=\"number-field\">Number</label></li><li><input type=\"radio\" id=\"date-field\" name=\"field-type\" value=\"date\"/><label for=\"date-field\">Date</label></li><!-- more field types will be rendered here --></ul>"
        },
        {
          "name": "FieldConfiguratorComponent",
          "is_standalone": false,
          "description": "(takes children): Displays fields depending on the selected field type.",
          "html": "<!-- field configuration fields will be rendered here based on the selected field type -->{children}"
        }
      ]
    }
  ],
  "Footer Newsletter Submit": [
    {
      "description": "The UI should be a simple newsletter submit form in the footer of a website. It should have a text input for the email address and a submit button. The form should be responsive, mobile-first, and accessible.",
      "html": "<footer><FooterNewsletterSubmit/></footer>",
      "components": [
        {
          "name": "FooterNewsletterSubmit",
          "is_standalone": true,
          "description": "a standalone component that contains the newsletter submit form.",
          "html": "<div class=\"bg-gray-200 p-4 md:p-6 lg:p-8\"><h4 class=\"text-lg md:text-xl lg:text-2xl\">{newsletter_title}</h4><NewsletterInput/><SubmitButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "a standalone component that is a text input for the email address.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "a standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Submit</button>"
        }
      ]
    }
  ],
  "Featured Image Carousel Nav": [
    {
      "description": "The UI should be a carousel navigation for featured images, allowing users to navigate through multiple images. The navigation should be responsive, mobile-first, and accessible.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselNav><CarouselNavItem/><CarouselNavItem/><CarouselNavItem/><!-- Add more CarouselNavItem components here --></CarouselNav></nav>",
      "components": [
        {
          "name": "CarouselNavItem",
          "is_standalone": true,
          "description": "A standalone component representing a navigation item in the carousel.",
          "html": "<button class=\"w-4 h-4 bg-gray-300 rounded-full mx-1\"><!-- Use Tailwind CSS to style the navigation item --></button>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": false,
          "description": "A component that takes children, representing the navigation container for the carousel.",
          "html": "<ul class=\"flex justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a carousel navigation for featured images, allowing users to navigate through multiple images. The navigation should be responsive, mobile-first, and accessible.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselNav><CarouselNavItem/><CarouselNavItem/><CarouselNavItem/><!-- Add more CarouselNavItem components here --></CarouselNav></nav>",
      "components": [
        {
          "name": "CarouselNavItem",
          "is_standalone": true,
          "description": "A standalone component representing a navigation item in the carousel.",
          "html": "<button class=\"w-4 h-4 bg-gray-300 rounded-full mx-1\"><!-- Use Tailwind CSS to style the navigation item --></button>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": false,
          "description": "A component that takes children, representing the navigation container for the carousel.",
          "html": "<ul class=\"flex justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a carousel navigation for featured images, allowing users to navigate through multiple images. The navigation should be responsive, mobile-first, and accessible.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselNav><CarouselNavItem/><CarouselNavItem/><CarouselNavItem/><!-- Add more CarouselNavItem components here --></CarouselNav></nav>",
      "components": [
        {
          "name": "CarouselNavItem",
          "is_standalone": true,
          "description": "A standalone component representing a navigation item in the carousel.",
          "html": "<button class=\"w-4 h-4 bg-gray-300 rounded-full mx-1\"><!-- Use Tailwind CSS to style the navigation item --></button>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": false,
          "description": "A component that takes children, representing the navigation container for the carousel.",
          "html": "<ul class=\"flex justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a carousel navigation for featured images, allowing users to navigate through multiple images. The navigation should be responsive, mobile-first, and accessible.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselNav><CarouselNavItem/><CarouselNavItem/><CarouselNavItem/><!-- Add more CarouselNavItem components here --></CarouselNav></nav>",
      "components": [
        {
          "name": "CarouselNavItem",
          "is_standalone": true,
          "description": "A standalone component representing a navigation item in the carousel.",
          "html": "<button class=\"w-4 h-4 bg-gray-300 rounded-full mx-1\"><!-- Use Tailwind CSS to style the navigation item --></button>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": false,
          "description": "A component that takes children, representing the navigation container for the carousel.",
          "html": "<ul class=\"flex justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a carousel navigation for featured images, allowing users to navigate through multiple images. The navigation should be responsive, mobile-first, and accessible.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselNav><CarouselNavItem/><CarouselNavItem/><CarouselNavItem/><!-- Add more CarouselNavItem components here --></CarouselNav></nav>",
      "components": [
        {
          "name": "CarouselNavItem",
          "is_standalone": true,
          "description": "A standalone component representing a navigation item in the carousel.",
          "html": "<button class=\"w-4 h-4 bg-gray-300 rounded-full mx-1\"><!-- Use Tailwind CSS to style the navigation item --></button>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": false,
          "description": "A component that takes children, representing the navigation container for the carousel.",
          "html": "<ul class=\"flex justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a carousel navigation for featured images, allowing users to navigate through multiple images. The navigation should be responsive, mobile-first, and accessible.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselNav><CarouselNavItem/><CarouselNavItem/><CarouselNavItem/><!-- Add more CarouselNavItem components here --></CarouselNav></nav>",
      "components": [
        {
          "name": "CarouselNavItem",
          "is_standalone": true,
          "description": "A standalone component representing a navigation item in the carousel.",
          "html": "<button class=\"w-4 h-4 bg-gray-300 rounded-full mx-1\"><!-- Use Tailwind CSS to style the navigation item --></button>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": false,
          "description": "A component that takes children, representing the navigation container for the carousel.",
          "html": "<ul class=\"flex justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a carousel navigation for featured images, allowing users to navigate through multiple images. The navigation should be responsive, mobile-first, and accessible.",
      "html": "<nav class=\"flex justify-center mb-4\"><CarouselNav><CarouselNavItem/><CarouselNavItem/><CarouselNavItem/><!-- Add more CarouselNavItem components here --></CarouselNav></nav>",
      "components": [
        {
          "name": "CarouselNavItem",
          "is_standalone": true,
          "description": "A standalone component representing a navigation item in the carousel.",
          "html": "<button class=\"w-4 h-4 bg-gray-300 rounded-full mx-1\"><!-- Use Tailwind CSS to style the navigation item --></button>"
        },
        {
          "name": "CarouselNav",
          "is_standalone": false,
          "description": "A component that takes children, representing the navigation container for the carousel.",
          "html": "<ul class=\"flex justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Breadcrumbs for navigation": [
    {
      "description": "The UI should display a sequence of breadcrumbs, each representing a navigation step, separated by a separator (e.g., `/`). The breadcrumbs should be responsive, accessible, and SEO-friendly.",
      "html": "<nav aria-label=\"Breadcrumb navigation\"><ol class=\"flex flex-wrap mb-4 list-none\"><BreadcrumbList><Breadcrumb/><!-- more breadcrumbs here --></BreadcrumbList></ol></nav>",
      "components": [
        {
          "name": "Breadcrumb",
          "is_standalone": true,
          "description": "(standalone): Represents a single breadcrumb item.",
          "html": "<li class=\"inline-flex items-center\"><a href=\"{breadcrumb_url}\" class=\"text-gray-600 hover:text-gray-900\">{breadcrumb_label}</a><span class=\"text-gray-600\">{separator}</span></li>"
        },
        {
          "name": "BreadcrumbList",
          "is_standalone": false,
          "description": "(takes children): A container for a list of breadcrumbs.",
          "html": "<ol class=\"flex flex-wrap mb-4 list-none\">{children}</ol>"
        }
      ]
    }
  ],
  "Simple product listing with thumbnails": [
    {
      "description": "A responsive grid of product cards with thumbnails, displaying product information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProductCard/><ProductCard/><ProductCard/><!-- add more ProductCard components here --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "A standalone component displaying a single product's information.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><ProductCardThumbnail/><ProductCardInfo/></div>"
        },
        {
          "name": "ProductCardThumbnail",
          "is_standalone": true,
          "description": "A standalone component displaying a product's thumbnail.",
          "html": "<img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/>"
        },
        {
          "name": "ProductCardInfo",
          "is_standalone": true,
          "description": "A standalone component displaying a product's details.",
          "html": "<h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p><p class=\"text-sm\">{product_price}</p>"
        }
      ]
    },
    {
      "description": "A responsive grid of product cards with thumbnails, displaying product information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProductCard/><ProductCard/><ProductCard/><!-- add more ProductCard components here --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "A standalone component displaying a single product's information.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><ProductCardThumbnail/><ProductCardInfo/></div>"
        },
        {
          "name": "ProductCardThumbnail",
          "is_standalone": true,
          "description": "A standalone component displaying a product's thumbnail.",
          "html": "<img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/>"
        },
        {
          "name": "ProductCardInfo",
          "is_standalone": true,
          "description": "A standalone component displaying a product's details.",
          "html": "<h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p><p class=\"text-sm\">{product_price}</p>"
        }
      ]
    },
    {
      "description": "A grid of product thumbnails with a title and price overlay.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-8\"><h1>Product Listing</h1><div class=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"><ProductThumbnail/><ProductThumbnail/><ProductThumbnail/><!-- repeat ProductThumbnail components here --></div></div>",
      "components": [
        {
          "name": "ProductThumbnail",
          "is_standalone": true,
          "description": "standalone",
          "html": "<div class=\"relative overflow-hidden shadow-md rounded-lg\"><img src=\"{product_image}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover\"/><div class=\"absolute bottom-0 left-0 p-4 text-white\"><h5>{product_name}</h5><p>${product_price}</p></div></div>"
        },
        {
          "name": "ProductListing",
          "is_standalone": false,
          "description": "takes children (`ProductThumbnail` components)",
          "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-8\">{children}</div>"
        }
      ]
    },
    {
      "description": "A responsive grid of product cards with thumbnails, displaying product information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProductCard/><ProductCard/><ProductCard/><!-- add more ProductCard components here --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "A standalone component displaying a single product's information.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><ProductCardThumbnail/><ProductCardInfo/></div>"
        },
        {
          "name": "ProductCardThumbnail",
          "is_standalone": true,
          "description": "A standalone component displaying a product's thumbnail.",
          "html": "<img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/>"
        },
        {
          "name": "ProductCardInfo",
          "is_standalone": true,
          "description": "A standalone component displaying a product's details.",
          "html": "<h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p><p class=\"text-sm\">{product_price}</p>"
        }
      ]
    },
    {
      "description": "A responsive grid of product cards with thumbnails, displaying product information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProductCard/><ProductCard/><ProductCard/><!-- add more ProductCard components here --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "A standalone component displaying a single product's information.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><ProductCardThumbnail/><ProductCardInfo/></div>"
        },
        {
          "name": "ProductCardThumbnail",
          "is_standalone": true,
          "description": "A standalone component displaying a product's thumbnail.",
          "html": "<img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/>"
        },
        {
          "name": "ProductCardInfo",
          "is_standalone": true,
          "description": "A standalone component displaying a product's details.",
          "html": "<h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p><p class=\"text-sm\">{product_price}</p>"
        }
      ]
    },
    {
      "description": "A responsive grid of product cards with thumbnails, displaying product information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProductCard/><ProductCard/><ProductCard/><!-- add more ProductCard components here --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "A standalone component displaying a single product's information.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><ProductCardThumbnail/><ProductCardInfo/></div>"
        },
        {
          "name": "ProductCardThumbnail",
          "is_standalone": true,
          "description": "A standalone component displaying a product's thumbnail.",
          "html": "<img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/>"
        },
        {
          "name": "ProductCardInfo",
          "is_standalone": true,
          "description": "A standalone component displaying a product's details.",
          "html": "<h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p><p class=\"text-sm\">{product_price}</p>"
        }
      ]
    },
    {
      "description": "A responsive grid of product cards with thumbnails, displaying product information.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6\"><div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\"><ProductCard/><ProductCard/><ProductCard/><!-- add more ProductCard components here --></div></div>",
      "components": [
        {
          "name": "ProductCard",
          "is_standalone": true,
          "description": "A standalone component displaying a single product's information.",
          "html": "<div class=\"bg-white rounded shadow-md p-4\"><ProductCardThumbnail/><ProductCardInfo/></div>"
        },
        {
          "name": "ProductCardThumbnail",
          "is_standalone": true,
          "description": "A standalone component displaying a product's thumbnail.",
          "html": "<img src=\"{product_image_url}\" alt=\"{product_name}\" class=\"w-full h-48 object-cover rounded-t\"/>"
        },
        {
          "name": "ProductCardInfo",
          "is_standalone": true,
          "description": "A standalone component displaying a product's details.",
          "html": "<h2 class=\"text-lg font-bold\">{product_name}</h2><p class=\"text-gray-600\">{product_description}</p><p class=\"text-sm\">{product_price}</p>"
        }
      ]
    }
  ],
  "Footer Newsletter Input": [
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple newsletter input field with a button to submit the email address. It should be responsive, mobile-friendly, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-6\"><NewsletterInputWrapper/></footer>",
      "components": [
        {
          "name": "NewsletterInputWrapper",
          "is_standalone": true,
          "description": "- standalone component that wraps the newsletter input and button.",
          "html": "<div class=\"max-w-md mx-auto p-4\"><NewsletterInput/><SubscribeButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "- standalone component that is a text input field.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "- standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple newsletter input field with a button to submit the email address. It should be responsive, mobile-friendly, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-6\"><NewsletterInputWrapper/></footer>",
      "components": [
        {
          "name": "NewsletterInputWrapper",
          "is_standalone": true,
          "description": "- standalone component that wraps the newsletter input and button.",
          "html": "<div class=\"max-w-md mx-auto p-4\"><NewsletterInput/><SubscribeButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "- standalone component that is a text input field.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "- standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer newsletter input field with a submit button, responsive and accessible, with a clean and minimalistic design.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-4\"><div class=\"container mx-auto p-4 md:p-6\"><FooterNewsletterInput/></div></footer>",
      "components": [
        {
          "name": "FooterNewsletterInput",
          "is_standalone": true,
          "description": "standalone component that contains the input field and submit button.",
          "html": "<div class=\"w-full max-w-md mx-auto mb-4\"><NewsletterInputField/><SubmitButton/></div>"
        },
        {
          "name": "NewsletterInputField",
          "is_standalone": true,
          "description": "standalone component that is the input field for the newsletter email address.",
          "html": "<input type=\"email\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple newsletter input field with a button to submit the email address. It should be responsive, mobile-friendly, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-6\"><NewsletterInputWrapper/></footer>",
      "components": [
        {
          "name": "NewsletterInputWrapper",
          "is_standalone": true,
          "description": "- standalone component that wraps the newsletter input and button.",
          "html": "<div class=\"max-w-md mx-auto p-4\"><NewsletterInput/><SubscribeButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "- standalone component that is a text input field.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "- standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple newsletter input field with a button to submit the email address. It should be responsive, mobile-friendly, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-6\"><NewsletterInputWrapper/></footer>",
      "components": [
        {
          "name": "NewsletterInputWrapper",
          "is_standalone": true,
          "description": "- standalone component that wraps the newsletter input and button.",
          "html": "<div class=\"max-w-md mx-auto p-4\"><NewsletterInput/><SubscribeButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "- standalone component that is a text input field.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "- standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple newsletter input field with a button to submit the email address. It should be responsive, mobile-friendly, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-6\"><NewsletterInputWrapper/></footer>",
      "components": [
        {
          "name": "NewsletterInputWrapper",
          "is_standalone": true,
          "description": "- standalone component that wraps the newsletter input and button.",
          "html": "<div class=\"max-w-md mx-auto p-4\"><NewsletterInput/><SubscribeButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "- standalone component that is a text input field.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "- standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple footer newsletter input field with a submit button, responsive and accessible, with a clean and minimalistic design.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-4\"><div class=\"container mx-auto p-4 md:p-6\"><FooterNewsletterInput/></div></footer>",
      "components": [
        {
          "name": "FooterNewsletterInput",
          "is_standalone": true,
          "description": "standalone component that contains the input field and submit button.",
          "html": "<div class=\"w-full max-w-md mx-auto mb-4\"><NewsletterInputField/><SubmitButton/></div>"
        },
        {
          "name": "NewsletterInputField",
          "is_standalone": true,
          "description": "standalone component that is the input field for the newsletter email address.",
          "html": "<input type=\"email\" class=\"block w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "standalone component that is the submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive footer newsletter input component that is mobile-first, accessible, and SEO-friendly. It should consist of a container with a heading, a brief description, an input field for email, a submit button, and a privacy policy link.",
      "html": "<footer class=\"bg-gray-200 h-screen p-4\"><FooterNewsletter/></footer>",
      "components": [
        {
          "name": "FooterNewsletter",
          "is_standalone": true,
          "description": "Standalone component that contains all the elements (heading, description, input, button, and link)",
          "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-lg font-bold mb-2\">Stay updated</h2><p class=\"text-sm mb-4\">Get the latest news and updates from us.</p><InputField/><SubmitButton/><PrivacyPolicyLink/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "Standalone component that contains the email input field",
          "html": "<input type=\"email\" placeholder=\"Enter your email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "Standalone component that contains the submit button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        },
        {
          "name": "PrivacyPolicyLink",
          "is_standalone": true,
          "description": "Standalone component that contains the privacy policy link",
          "html": "<p class=\"text-xs text-gray-600\">By subscribing, you agree to our <a href={privacy_policy_url} target=\"_blank\" class=\"text-blue-600 hover:text-blue-900\">privacy policy</a>.</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple newsletter input field with a button to submit the email address. It should be responsive, mobile-friendly, and accessible.",
      "html": "<footer class=\"bg-gray-200 h-screen pt-12 pb-6\"><NewsletterInputWrapper/></footer>",
      "components": [
        {
          "name": "NewsletterInputWrapper",
          "is_standalone": true,
          "description": "- standalone component that wraps the newsletter input and button.",
          "html": "<div class=\"max-w-md mx-auto p-4\"><NewsletterInput/><SubscribeButton/></div>"
        },
        {
          "name": "NewsletterInput",
          "is_standalone": true,
          "description": "- standalone component that is a text input field.",
          "html": "<input type=\"email\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Enter your email address\"/>"
        },
        {
          "name": "SubscribeButton",
          "is_standalone": true,
          "description": "- standalone component that is a submit button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Subscribe</button>"
        }
      ]
    }
  ],
  "Tweet display for individual posts": [
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a single tweet, with a profile picture, username, handle, timestamp, text, and any media (e.g. images or videos). The design should be clean, minimal, and responsive.",
      "html": "<div class=\"flex w-full p-4 rounded-lg shadow-md bg-white\"><TweetHeader/><TweetText/><TweetMedia/><TweetFooter/></div>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "standalone, displays the profile picture, username, handle, and timestamp",
          "html": "<div class=\"flex items-center mb-2\"><img src=\"{profilePictureUrl}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-2\"/><div><span class=\"text-lg font-bold\">{username}</span><span class=\"text-gray-600\">@{handle}</span><span class=\"text-gray-600\">{timestamp}</span></div></div>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "standalone, displays the text of the tweet",
          "html": "<p class=\"text-lg\">{tweetText}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": true,
          "description": "standalone, displays any media associated with the tweet (e.g. images or videos)",
          "html": "<!-- If there is media, display it -->{mediaUrl && ( <img src={mediaUrl} alt=\"Tweet media\" class=\"w-full mb-2\"/>)}"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "standalone, displays any additional information or actions (e.g. likes, retweets, replies)",
          "html": "<div class=\"flex justify-between text-gray-600 mb-2\"><span>Likes: {likeCount}</span><span>Retweets: {retweetCount}</span><span>Replies: {replyCount}</span><!-- Add more actions here, e.g. Reply, Retweet, Like buttons --></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a single tweet, with a profile picture, username, handle, timestamp, text, and any media (e.g. images or videos). The design should be clean, minimal, and responsive.",
      "html": "<div class=\"flex w-full p-4 rounded-lg shadow-md bg-white\"><TweetHeader/><TweetText/><TweetMedia/><TweetFooter/></div>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "standalone, displays the profile picture, username, handle, and timestamp",
          "html": "<div class=\"flex items-center mb-2\"><img src=\"{profilePictureUrl}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-2\"/><div><span class=\"text-lg font-bold\">{username}</span><span class=\"text-gray-600\">@{handle}</span><span class=\"text-gray-600\">{timestamp}</span></div></div>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "standalone, displays the text of the tweet",
          "html": "<p class=\"text-lg\">{tweetText}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": true,
          "description": "standalone, displays any media associated with the tweet (e.g. images or videos)",
          "html": "<!-- If there is media, display it -->{mediaUrl && ( <img src={mediaUrl} alt=\"Tweet media\" class=\"w-full mb-2\"/>)}"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "standalone, displays any additional information or actions (e.g. likes, retweets, replies)",
          "html": "<div class=\"flex justify-between text-gray-600 mb-2\"><span>Likes: {likeCount}</span><span>Retweets: {retweetCount}</span><span>Replies: {replyCount}</span><!-- Add more actions here, e.g. Reply, Retweet, Like buttons --></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet post with the user's profile picture, username, timestamp, tweet content, and a reply button.",
      "html": "<TweetPost><UserProfilePicture/><TweetContent><h2>{username}</h2><p>{tweet_content}</p><p>{timestamp}</p></TweetContent><ReplyButton/></TweetPost>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "Standalone component that displays the user's profile picture.",
          "html": "<img src={profile_picture_url} alt={username} class=\"w-10 h-10 rounded-full\"/>"
        },
        {
          "name": "TweetContent",
          "is_standalone": false,
          "description": "Takes children component that displays the tweet content.",
          "html": "<div class=\"ml-4\">{children}</div>"
        },
        {
          "name": "ReplyButton",
          "is_standalone": true,
          "description": "Standalone component that displays a reply button.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Reply</button>"
        },
        {
          "name": "TweetPost",
          "is_standalone": false,
          "description": "Takes children component that displays the entire tweet post.",
          "html": "<div class=\"flex mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    },
    {
      "description": "The UI should display a single tweet, with a profile picture, username, handle, timestamp, text, and any media (e.g. images or videos). The design should be clean, minimal, and responsive.",
      "html": "<div class=\"flex w-full p-4 rounded-lg shadow-md bg-white\"><TweetHeader/><TweetText/><TweetMedia/><TweetFooter/></div>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "standalone, displays the profile picture, username, handle, and timestamp",
          "html": "<div class=\"flex items-center mb-2\"><img src=\"{profilePictureUrl}\" alt=\"{username}\" class=\"w-12 h-12 rounded-full mr-2\"/><div><span class=\"text-lg font-bold\">{username}</span><span class=\"text-gray-600\">@{handle}</span><span class=\"text-gray-600\">{timestamp}</span></div></div>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "standalone, displays the text of the tweet",
          "html": "<p class=\"text-lg\">{tweetText}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": true,
          "description": "standalone, displays any media associated with the tweet (e.g. images or videos)",
          "html": "<!-- If there is media, display it -->{mediaUrl && ( <img src={mediaUrl} alt=\"Tweet media\" class=\"w-full mb-2\"/>)}"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "standalone, displays any additional information or actions (e.g. likes, retweets, replies)",
          "html": "<div class=\"flex justify-between text-gray-600 mb-2\"><span>Likes: {likeCount}</span><span>Retweets: {retweetCount}</span><span>Replies: {replyCount}</span><!-- Add more actions here, e.g. Reply, Retweet, Like buttons --></div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet in a compact, readable format. It should include the user's profile picture, username, tweet text, and timestamp. The tweet text should be the primary focus, with the user's profile picture and username secondary. The timestamp should be displayed lightly.",
      "html": "<div class=\"max-w-md mx-auto p-4 mb-4 bg-white rounded shadow-md\"><Tweet><UserProfilePicture/><div class=\"flex items-center\"><Username/><Timestamp/></div><TweetText/></Tweet></div>",
      "components": [
        {
          "name": "UserProfilePicture",
          "is_standalone": true,
          "description": "standalone component to display the user's profile picture.",
          "html": "<img src=\"{profile_picture_url}\" alt=\"User profile picture\" class=\"w-12 h-12 rounded-full mr-2\"/>"
        },
        {
          "name": "Username",
          "is_standalone": true,
          "description": "standalone component to display the user's username.",
          "html": "<span class=\"text-lg font-bold\">{username}</span>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "standalone component to display the tweet text.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "Timestamp",
          "is_standalone": true,
          "description": "standalone component to display the timestamp.",
          "html": "<small class=\"text-gray-500\">{timestamp}</small>"
        },
        {
          "name": "Tweet",
          "is_standalone": false,
          "description": "takes children, a container component to display the entire tweet.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display an individual tweet with the user's profile picture, name, username, timestamp, tweet text, and optional media (e.g., images or videos). The design should be responsive, accessible, and visually appealing, with clear typography and sufficient whitespace.",
      "html": "<article class=\"max-w-md mx-auto pb-4 mb-4 bg-white rounded-md shadow-md\"><TweetHeader/><TweetTimestamp/><TweetText/><TweetMedia><!-- Optional media content --></TweetMedia><TweetFooter/></article>",
      "components": [
        {
          "name": "TweetHeader",
          "is_standalone": true,
          "description": "Standalone component displaying the user's profile picture, name, and username.",
          "html": "<div class=\"flex items-center pb-2\"><img src=\"{profile_picture_url}\" alt=\"Profile picture\" class=\"w-10 h-10 rounded-full mr-2\"/><div class=\"flex-1\"><h2 class=\"text-lg font-bold\">{username}</h2><p class=\"text-gray-600\">{name}</p></div></div>"
        },
        {
          "name": "TweetTimestamp",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp of the tweet.",
          "html": "<p class=\"text-gray-600 text-sm\">{timestamp}</p>"
        },
        {
          "name": "TweetText",
          "is_standalone": true,
          "description": "Standalone component displaying the text of the tweet.",
          "html": "<p class=\"text-lg\">{tweet_text}</p>"
        },
        {
          "name": "TweetMedia",
          "is_standalone": false,
          "description": "Component that takes children to display optional media (e.g., images or videos).",
          "html": "<!-- Optional media content --><div class=\"flex justify-center\">{children}</div>"
        },
        {
          "name": "TweetFooter",
          "is_standalone": true,
          "description": "Standalone component displaying the timestamp and engagement metrics (e.g., likes, retweets).",
          "html": "<div class=\"flex justify-between pt-2\"><p class=\"text-gray-600 text-sm\">{timestamp}</p><p class=\"text-gray-600 text-sm\">{engagement_metrics}</p></div>"
        }
      ]
    }
  ],
  "Course Recommendations": [
    {
      "description": "The UI should be a card component that displays a list of course recommendations. Each recommendation should show the course title, a short description, and a call-to-action (CTA) button to learn more.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><h2 class=\"text-3xl font-bold mb-4\">Recommended Courses</h2><CourseRecommendationList><CourseRecommendationCard/><CourseRecommendationCard/><!-- Add more CourseRecommendationCard components here --></CourseRecommendationList></div>",
      "components": [
        {
          "name": "CourseRecommendationCard",
          "is_standalone": true,
          "description": "(standalone): A single course recommendation card.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-4 mb-4\"><h3 class=\"text-lg font-bold\">{course_title}</h3><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "CourseRecommendationList",
          "is_standalone": false,
          "description": "(takes children): A list of course recommendation cards.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card component that displays a list of course recommendations. Each recommendation should show the course title, a short description, and a call-to-action (CTA) button to learn more.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><h2 class=\"text-3xl font-bold mb-4\">Recommended Courses</h2><CourseRecommendationList><CourseRecommendationCard/><CourseRecommendationCard/><!-- Add more CourseRecommendationCard components here --></CourseRecommendationList></div>",
      "components": [
        {
          "name": "CourseRecommendationCard",
          "is_standalone": true,
          "description": "(standalone): A single course recommendation card.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-4 mb-4\"><h3 class=\"text-lg font-bold\">{course_title}</h3><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "CourseRecommendationList",
          "is_standalone": false,
          "description": "(takes children): A list of course recommendation cards.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display course recommendations in a card layout, with each card showing the course title, description, and rating. The cards should be arranged in a grid, with multiple cards per row.",
      "html": "<div class=\"container mx-auto p-4\"><h1 class=\"text-3xl font-bold\">Course Recommendations</h1><div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\"><CourseRecommendationsGrid><CourseCard/><CourseCard/><CourseCard/><!-- Add more CourseCard components as needed --></CourseRecommendationsGrid></div></div>",
      "components": [
        {
          "name": "CourseCard",
          "is_standalone": true,
          "description": "A standalone component that displays a course's information, including title, description, and rating.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg font-bold\">{course_title}</h2><p>{course_description}</p><p>Rating: {rating}/5</p></div>"
        },
        {
          "name": "CourseRecommendationsGrid",
          "is_standalone": false,
          "description": "A component that takes children (multiple `CourseCard` components) and arranges them in a grid layout.",
          "html": "<!-- Children will be placed here -->{children}"
        }
      ]
    },
    {
      "description": "The UI should be a card component that displays a list of course recommendations. Each recommendation should show the course title, a short description, and a call-to-action (CTA) button to learn more.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><h2 class=\"text-3xl font-bold mb-4\">Recommended Courses</h2><CourseRecommendationList><CourseRecommendationCard/><CourseRecommendationCard/><!-- Add more CourseRecommendationCard components here --></CourseRecommendationList></div>",
      "components": [
        {
          "name": "CourseRecommendationCard",
          "is_standalone": true,
          "description": "(standalone): A single course recommendation card.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-4 mb-4\"><h3 class=\"text-lg font-bold\">{course_title}</h3><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "CourseRecommendationList",
          "is_standalone": false,
          "description": "(takes children): A list of course recommendation cards.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card component that displays a list of course recommendations. Each recommendation should show the course title, a short description, and a call-to-action (CTA) button to learn more.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><h2 class=\"text-3xl font-bold mb-4\">Recommended Courses</h2><CourseRecommendationList><CourseRecommendationCard/><CourseRecommendationCard/><!-- Add more CourseRecommendationCard components here --></CourseRecommendationList></div>",
      "components": [
        {
          "name": "CourseRecommendationCard",
          "is_standalone": true,
          "description": "(standalone): A single course recommendation card.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-4 mb-4\"><h3 class=\"text-lg font-bold\">{course_title}</h3><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "CourseRecommendationList",
          "is_standalone": false,
          "description": "(takes children): A list of course recommendation cards.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card component that displays a list of course recommendations. Each recommendation should show the course title, a short description, and a call-to-action (CTA) button to learn more.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><h2 class=\"text-3xl font-bold mb-4\">Recommended Courses</h2><CourseRecommendationList><CourseRecommendationCard/><CourseRecommendationCard/><!-- Add more CourseRecommendationCard components here --></CourseRecommendationList></div>",
      "components": [
        {
          "name": "CourseRecommendationCard",
          "is_standalone": true,
          "description": "(standalone): A single course recommendation card.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-4 mb-4\"><h3 class=\"text-lg font-bold\">{course_title}</h3><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "CourseRecommendationList",
          "is_standalone": false,
          "description": "(takes children): A list of course recommendation cards.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a card component that displays a list of course recommendations. Each recommendation should show the course title, a short description, and a call-to-action (CTA) button to learn more.",
      "html": "<div class=\"max-w-md mx-auto px-4 py-8\"><h2 class=\"text-3xl font-bold mb-4\">Recommended Courses</h2><CourseRecommendationList><CourseRecommendationCard/><CourseRecommendationCard/><!-- Add more CourseRecommendationCard components here --></CourseRecommendationList></div>",
      "components": [
        {
          "name": "CourseRecommendationCard",
          "is_standalone": true,
          "description": "(standalone): A single course recommendation card.",
          "html": "<div class=\"bg-white shadow-md rounded px-4 py-4 mb-4\"><h3 class=\"text-lg font-bold\">{course_title}</h3><p class=\"text-gray-600\">{course_description}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Learn More</button></div>"
        },
        {
          "name": "CourseRecommendationList",
          "is_standalone": false,
          "description": "(takes children): A list of course recommendation cards.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of course recommendations with their titles, short descriptions, and ratings. The list should be responsive and accessible.",
      "html": "<!-- The main container for the course recommendations list --><div class=\"max-w-3xl mx-auto p-4\"><h2>Course Recommendations</h2><!-- The list of course recommendations --><CourseRecommendationsList>{/*\nThis will be replaced with multiple CourseRecommendationCard components\n*/}\n</CourseRecommendationsList></div>",
      "components": [
        {
          "name": "CourseRecommendationsList",
          "is_standalone": false,
          "description": "Component that takes children (a list of `CourseRecommendationCard` components).",
          "html": "<!-- The list of course recommendations --><ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Call-to-Action (CTA) Button Section": [
    {
      "description": "The UI should have a prominent call-to-action (CTA) button section with a bold headline, a brief description, and a prominent CTA button that encourages the user to take action.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6\"><HeadlineComponent/><DescriptionComponent/><CTAButtonComponent/></section>",
      "components": [
        {
          "name": "HeadlineComponent",
          "is_standalone": true,
          "description": "Standalone component that displays a bold headline text.",
          "html": "<h2 class=\"text-3xl font-bold\">{headline_text}</h2>"
        },
        {
          "name": "DescriptionComponent",
          "is_standalone": true,
          "description": "Standalone component that displays a brief descriptive text.",
          "html": "<p class=\"text-lg\">{description_text}</p>"
        },
        {
          "name": "CTAButtonComponent",
          "is_standalone": true,
          "description": "Standalone component that displays a prominent CTA button.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{cta_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a prominent call-to-action (CTA) button section that encourages users to take a specific action. The section should be full-width, with a bold background color, and a contrasting CTA button that stands out. The section should be responsive, with the button size and spacing adjusting based on screen size.",
      "html": "<section class=\"relative pt-12 pb-20 lg:pt-20 lg:pb-32\"><div class=\"container max-w-md mx-auto p-4 lg:p-8\"><CTASection/></div></section>",
      "components": [
        {
          "name": "CTASection",
          "is_standalone": true,
          "description": "- standalone component that contains the entire CTA section",
          "html": "<div class=\"bg-orange-500 text-white p-4 lg:p-8\"><h2 class=\"text-2xl lg:text-3xl\">{headline}</h2><p class=\"text-lg lg:text-xl\">{description}</p><CTAButton/></div>"
        },
        {
          "name": "CTAButton",
          "is_standalone": true,
          "description": "- standalone component that represents the call-to-action button",
          "html": "<button class=\"bg-white hover:bg-gray-200 text-orange-500 font-bold py-2 px-4 rounded\">{button_text}</button>"
        }
      ]
    }
  ],
  "Hover Effects/Animations": [
    {
      "description": "The UI should display a box that changes its background color and text color when hovered over, along with a scaling effect.",
      "html": "<div class=\"flex justify-center h-screen\"><HoverEffectBox/></div>",
      "components": [
        {
          "name": "HoverEffectBox",
          "is_standalone": true,
          "description": "A standalone component that displays a box with hover effects.",
          "html": "<div class=\"bg-orange-300 hover:bg-orange-500 transition duration-300 ease-in-out p-10 rounded-md cursor-pointer hover:scale-110\"><p class=\"text-lg text-orange-800 hover:text-white\">{hover_text}</p></div>"
        }
      ]
    }
  ],
  "Search bar for finding products": [
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive, taking up the full width on mobile devices and a maximum width of 400px on desktop devices. The input field should have a placeholder text \"Search for products...\". The submit button should have a search icon and the text \"Search\".",
      "html": "<nav class=\"max-w-md mx-auto p-4\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "a standalone component that contains the input field and submit button.",
          "html": "<div class=\"flex items-center\"><input type=\"text\" placeholder=\"Search for products...\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><SearchButton/></div>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that contains the search icon and text.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i>Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a search bar with a text input field, a search button, and an optional dropdown list of suggestions. The search bar should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center pt-4\"><SearchBar/><div class=\"absolute z-10\"><SearchSuggestions/></div></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the search input field and button.",
          "html": "<div class=\"relative w-full lg:max-w-md\"><input type=\"search\" class=\"w-full bg-white border border-gray-300 rounded-md pl-10 pr-3 py-2\" placeholder=\"Search products...\"/><button class=\"absolute top-0 right-0 p-2\"><i class=\"fas fa-search text-gray-600\"/></button></div>"
        },
        {
          "name": "SearchSuggestions",
          "is_standalone": false,
          "description": "A component that takes children (i.e., a list of suggested products) and renders them in a dropdown list.",
          "html": "<ul class=\"bg-white border border-gray-300 rounded-b-md\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive, taking up the full width on mobile devices and a maximum width of 400px on desktop devices. The input field should have a placeholder text \"Search for products...\". The submit button should have a search icon and the text \"Search\".",
      "html": "<nav class=\"max-w-md mx-auto p-4\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "a standalone component that contains the input field and submit button.",
          "html": "<div class=\"flex items-center\"><input type=\"text\" placeholder=\"Search for products...\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><SearchButton/></div>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that contains the search icon and text.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i>Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a search bar with a text input field, a search button, and an optional dropdown list of suggestions. The search bar should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex justify-center pt-4\"><SearchBar/><div class=\"absolute z-10\"><SearchSuggestions/></div></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "A standalone component that contains the search input field and button.",
          "html": "<div class=\"relative w-full lg:max-w-md\"><input type=\"search\" class=\"w-full bg-white border border-gray-300 rounded-md pl-10 pr-3 py-2\" placeholder=\"Search products...\"/><button class=\"absolute top-0 right-0 p-2\"><i class=\"fas fa-search text-gray-600\"/></button></div>"
        },
        {
          "name": "SearchSuggestions",
          "is_standalone": false,
          "description": "A component that takes children (i.e., a list of suggested products) and renders them in a dropdown list.",
          "html": "<ul class=\"bg-white border border-gray-300 rounded-b-md\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive, taking up the full width on mobile devices and a maximum width of 400px on desktop devices. The input field should have a placeholder text \"Search for products...\". The submit button should have a search icon and the text \"Search\".",
      "html": "<nav class=\"max-w-md mx-auto p-4\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "a standalone component that contains the input field and submit button.",
          "html": "<div class=\"flex items-center\"><input type=\"text\" placeholder=\"Search for products...\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><SearchButton/></div>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that contains the search icon and text.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i>Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive, taking up the full width on mobile devices and a maximum width of 400px on desktop devices. The input field should have a placeholder text \"Search for products...\". The submit button should have a search icon and the text \"Search\".",
      "html": "<nav class=\"max-w-md mx-auto p-4\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "a standalone component that contains the input field and submit button.",
          "html": "<div class=\"flex items-center\"><input type=\"text\" placeholder=\"Search for products...\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><SearchButton/></div>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that contains the search icon and text.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i>Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive, taking up the full width on mobile devices and a maximum width of 400px on desktop devices. The input field should have a placeholder text \"Search for products...\". The submit button should have a search icon and the text \"Search\".",
      "html": "<nav class=\"max-w-md mx-auto p-4\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "a standalone component that contains the input field and submit button.",
          "html": "<div class=\"flex items-center\"><input type=\"text\" placeholder=\"Search for products...\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><SearchButton/></div>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that contains the search icon and text.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i>Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a text input field and a submit button. The search bar should be responsive, taking up the full width on mobile devices and a maximum width of 400px on desktop devices. The input field should have a placeholder text \"Search for products...\". The submit button should have a search icon and the text \"Search\".",
      "html": "<nav class=\"max-w-md mx-auto p-4\"><SearchBar/></nav>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "a standalone component that contains the input field and submit button.",
          "html": "<div class=\"flex items-center\"><input type=\"text\" placeholder=\"Search for products...\" class=\"w-full p-2 pl-10 text-sm text-gray-700\"/><SearchButton/></div>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "a standalone component that contains the search icon and text.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\"><i class=\"fas fa-search\"></i>Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the search input field and submit button.",
          "html": "<div class=\"flex items-center\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that is a simple input field.",
          "html": "<input type=\"search\" id=\"search-input\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"Search products\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that is a submit button.",
          "html": "<button type=\"submit\" class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Search</button>"
        }
      ]
    }
  ],
  "Loading Spinner: Animated loading indicator": [
    {
      "description": "The UI should be a small, circular loading indicator that rotates to indicate that the system is busy loading data. The spinner should be centered horizontally and vertically, and should be easily accessible on all devices.",
      "html": "<div class=\"flex justify-center items-center h-screen\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full\" role=\"progressbar\" aria-valuetext=\"Loading...\"><span class=\"sr-only\">Loading...</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a small, circular loading indicator that rotates to indicate that the system is busy loading data. The spinner should be centered horizontally and vertically, and should be easily accessible on all devices.",
      "html": "<div class=\"flex justify-center items-center h-screen\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full\" role=\"progressbar\" aria-valuetext=\"Loading...\"><span class=\"sr-only\">Loading...</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a circular animated loading indicator that spins to indicate that the application is loading or processing something.",
      "html": "<div class=\"flex justify-center\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<div class=\"inline-block w-8 h-8 border-4 border-solid rounded-full border-white border-t-transparent animate-spin\"/>"
        }
      ]
    },
    {
      "description": "The UI should be a small, circular loading indicator that rotates to indicate that the system is busy loading data. The spinner should be centered horizontally and vertically, and should be easily accessible on all devices.",
      "html": "<div class=\"flex justify-center items-center h-screen\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full\" role=\"progressbar\" aria-valuetext=\"Loading...\"><span class=\"sr-only\">Loading...</span></div>"
        }
      ]
    },
    {
      "description": "The UI should be a small, circular loading indicator that rotates to indicate that the system is busy loading data. The spinner should be centered horizontally and vertically, and should be easily accessible on all devices.",
      "html": "<div class=\"flex justify-center items-center h-screen\"><LoadingSpinner/></div>",
      "components": [
        {
          "name": "LoadingSpinner",
          "is_standalone": true,
          "description": "standalone component",
          "html": "<div class=\"spinner-border animate-spin inline-block w-8 h-8 border-4 rounded-full\" role=\"progressbar\" aria-valuetext=\"Loading...\"><span class=\"sr-only\">Loading...</span></div>"
        }
      ]
    }
  ],
  "Ratings and Reviews": [
    {
      "description": "The UI should display a rating system with an average rating and the number of reviews. It should also display a list of individual reviews from users.",
      "html": "<div class=\"flex flex-col gap-4\"><RatingIndicator/><p>{review_count} reviews</p><ReviewList><ReviewItem/><!-- more ReviewItem components here --></ReviewList></div>",
      "components": [
        {
          "name": "RatingIndicator",
          "is_standalone": true,
          "description": "Standalone component to display the average rating.",
          "html": "<div class=\"flex items-center gap-2\"><span class=\"text-xl\">{average_rating}/5</span><i class=\"fa fa-star text-yellow-500\"></i><span class=\"text-gray-500\">{rating_count} ratings</span></div>"
        },
        {
          "name": "ReviewList",
          "is_standalone": false,
          "description": "Component that takes children (individual reviews).",
          "html": "<ul class=\"list-none py-4\">{children}</ul>"
        },
        {
          "name": "ReviewItem",
          "is_standalone": true,
          "description": "Standalone component to display a single review.",
          "html": "<li class=\"py-2 border-b border-gray-200\"><div class=\"flex items-center justify-between\"><div><span class=\"text-lg\">{reviewer_name}</span><span class=\"text-sm text-gray-500\">{review_date}</span></div><div><i class=\"fa fa-star text-yellow-500\"></i><span class=\"text-sm\">{rating}/5</span></div></div><p class=\"text-sm text-gray-600\">{review_text}</p></li>"
        }
      ]
    }
  ],
  "Company Phone Number": [
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a suitable icon and styling to make it easily identifiable as a phone number.",
      "html": "<div class=\"flex items-center\"><PhoneNumberItem/></div>",
      "components": [
        {
          "name": "PhoneNumberItem",
          "is_standalone": true,
          "description": "A standalone component that displays a phone number with an icon.",
          "html": "<!-- phoneNumber is a string, e.g. \"+1 123 456 7890\" --><i class=\"fas fa-phone text-gray-500 mr-2\"></i><a href={`tel:${phoneNumber}`} class=\"text-blue-600 hover:text-blue-800\">{phoneNumber}</a>"
        }
      ]
    },
    {
      "description": "A simple phone number display component with a clear label and a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PhoneNumberComponent/></div>",
      "components": [
        {
          "name": "PhoneNumberComponent",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg font-medium\">Phone: <span class=\"text-primary\">{phone_number}</span></p>"
        }
      ]
    },
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a suitable icon and styling to make it easily identifiable as a phone number.",
      "html": "<div class=\"flex items-center\"><PhoneNumberItem/></div>",
      "components": [
        {
          "name": "PhoneNumberItem",
          "is_standalone": true,
          "description": "A standalone component that displays a phone number with an icon.",
          "html": "<!-- phoneNumber is a string, e.g. \"+1 123 456 7890\" --><i class=\"fas fa-phone text-gray-500 mr-2\"></i><a href={`tel:${phoneNumber}`} class=\"text-blue-600 hover:text-blue-800\">{phoneNumber}</a>"
        }
      ]
    },
    {
      "description": "A simple phone number display component with a clear label and a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PhoneNumberComponent/></div>",
      "components": [
        {
          "name": "PhoneNumberComponent",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg font-medium\">Phone: <span class=\"text-primary\">{phone_number}</span></p>"
        }
      ]
    },
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a suitable icon and styling to make it easily identifiable as a phone number.",
      "html": "<div class=\"flex items-center\"><PhoneNumberItem/></div>",
      "components": [
        {
          "name": "PhoneNumberItem",
          "is_standalone": true,
          "description": "A standalone component that displays a phone number with an icon.",
          "html": "<!-- phoneNumber is a string, e.g. \"+1 123 456 7890\" --><i class=\"fas fa-phone text-gray-500 mr-2\"></i><a href={`tel:${phoneNumber}`} class=\"text-blue-600 hover:text-blue-800\">{phoneNumber}</a>"
        }
      ]
    },
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a suitable icon and styling to make it easily identifiable as a phone number.",
      "html": "<div class=\"flex items-center\"><PhoneNumberItem/></div>",
      "components": [
        {
          "name": "PhoneNumberItem",
          "is_standalone": true,
          "description": "A standalone component that displays a phone number with an icon.",
          "html": "<!-- phoneNumber is a string, e.g. \"+1 123 456 7890\" --><i class=\"fas fa-phone text-gray-500 mr-2\"></i><a href={`tel:${phoneNumber}`} class=\"text-blue-600 hover:text-blue-800\">{phoneNumber}</a>"
        }
      ]
    },
    {
      "description": "A simple phone number display component with a clear label and a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PhoneNumberComponent/></div>",
      "components": [
        {
          "name": "PhoneNumberComponent",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg font-medium\">Phone: <span class=\"text-primary\">{phone_number}</span></p>"
        }
      ]
    },
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a suitable icon and styling to make it easily identifiable as a phone number.",
      "html": "<div class=\"flex items-center\"><PhoneNumberItem/></div>",
      "components": [
        {
          "name": "PhoneNumberItem",
          "is_standalone": true,
          "description": "A standalone component that displays a phone number with an icon.",
          "html": "<!-- phoneNumber is a string, e.g. \"+1 123 456 7890\" --><i class=\"fas fa-phone text-gray-500 mr-2\"></i><a href={`tel:${phoneNumber}`} class=\"text-blue-600 hover:text-blue-800\">{phoneNumber}</a>"
        }
      ]
    },
    {
      "description": "A simple phone number display component with a clear label and a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PhoneNumberComponent/></div>",
      "components": [
        {
          "name": "PhoneNumberComponent",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg font-medium\">Phone: <span class=\"text-primary\">{phone_number}</span></p>"
        }
      ]
    },
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex justify-center\"><PhoneNumberDisplay/></div>",
      "components": [
        {
          "name": "PhoneNumberDisplay",
          "is_standalone": true,
          "description": "A standalone component that displays the company phone number.",
          "html": "<p class=\"text-lg md:text-xl lg:text-2xl\">{company_phone_number}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a company phone number in a clean and readable format, with a suitable icon and styling to make it easily identifiable as a phone number.",
      "html": "<div class=\"flex items-center\"><PhoneNumberItem/></div>",
      "components": [
        {
          "name": "PhoneNumberItem",
          "is_standalone": true,
          "description": "A standalone component that displays a phone number with an icon.",
          "html": "<!-- phoneNumber is a string, e.g. \"+1 123 456 7890\" --><i class=\"fas fa-phone text-gray-500 mr-2\"></i><a href={`tel:${phoneNumber}`} class=\"text-blue-600 hover:text-blue-800\">{phoneNumber}</a>"
        }
      ]
    },
    {
      "description": "A simple phone number display component with a clear label and a responsive design that adapts to different screen sizes.",
      "html": "<div class=\"flex flex-wrap justify-center mb-4\"><PhoneNumberComponent/></div>",
      "components": [
        {
          "name": "PhoneNumberComponent",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<p class=\"text-lg font-medium\">Phone: <span class=\"text-primary\">{phone_number}</span></p>"
        }
      ]
    }
  ],
  "Product Rating Average": [
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    },
    {
      "description": "The UI should display the average rating of a product, with a maximum rating of 5 stars. The rating should be displayed visually using 5 stars, with filled stars representing the average rating and unfilled stars representing the remaining rating. The average rating should be displayed as a numerical value next to the stars.",
      "html": "<div class=\"flex items-center\"><RatingStars/><AverageRatingText/></div>",
      "components": [
        {
          "name": "RatingStars",
          "is_standalone": true,
          "description": "(standalone): Displays the 5 stars, with some filled and some unfilled to represent the average rating.",
          "html": "<div class=\"flex text-yellow-400\">{filledStarCount}<i class=\"fas fa-star\"></i>{unfilledStarCount}<i class=\"far fa-star\"></i></div>"
        },
        {
          "name": "AverageRatingText",
          "is_standalone": true,
          "description": "(standalone): Displays the numerical average rating next to the stars.",
          "html": "<p class=\"text-gray-600\">{averageRating}/5</p>"
        }
      ]
    }
  ],
  "Hero Overlay Text": [
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    },
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    },
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    },
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    },
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    },
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    },
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    },
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    },
    {
      "description": "The Hero Overlay Text component should be a full-bleed hero section with a centered overlay text that can be used to highlight a key message or title.",
      "html": "<section class=\"h-screen w-full relative\"><HeroOverlay/><OverlayText/></section>",
      "components": [
        {
          "name": "HeroOverlay",
          "is_standalone": true,
          "description": "(standalone): The container component for the hero section.",
          "html": "<div class=\"absolute top-0 left-0 h-full w-full bg-cover bg-center\" style={{ backgroundImage: `url(${heroBackgroundImage})` }}><!-- Hero background image --></div>"
        },
        {
          "name": "OverlayText",
          "is_standalone": true,
          "description": "(standalone): The centered overlay text component.",
          "html": "<div class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-4xl lg:text-5xl xl:text-6xl font-bold tracking-wide text-center\">{heroOverlayText}</div>"
        }
      ]
    }
  ],
  "Project Timeline Visualization Tool": [
    {
      "description": "The UI should be a responsive, mobile-first, and accessible visualization tool that displays a project timeline, including milestones, tasks, and dependencies. The tool should be easy to use, intuitive, and provide a clear visual representation of the project timeline.",
      "html": "<!-- The main project timeline component --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProjectTimeline><!-- Milestones and tasks will be rendered here --></ProjectTimeline></div>",
      "components": [
        {
          "name": "ProjectTimeline",
          "is_standalone": false,
          "description": "The main component that renders the project timeline. Takes children.",
          "html": "<!-- Container for the project timeline --><div class=\"flex flex-col\">{children}</div>"
        },
        {
          "name": "MilestoneCard",
          "is_standalone": true,
          "description": "A card component that represents a milestone in the project timeline. Standalone.",
          "html": "<!-- Milestone card component --><div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{milestone_name}</h3><p class=\"text-gray-600\">{milestone_description}</p><p class=\"text-sm text-gray-500\">{milestone_date}</p></div>"
        },
        {
          "name": "TaskCard",
          "is_standalone": true,
          "description": "A card component that represents a task in the project timeline. Standalone.",
          "html": "<!-- Task card component --><div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{task_name}</h3><p class=\"text-gray-600\">{task_description}</p><p class=\"text-sm text-gray-500\">{task_date}</p></div>"
        },
        {
          "name": "DependencyLine",
          "is_standalone": true,
          "description": "A line component that represents a dependency between tasks or milestones. Standalone.",
          "html": "<!-- Dependency line component --><div class=\"h-4 w-1 bg-gray-300\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, and accessible visualization tool that displays a project timeline, including milestones, tasks, and dependencies. The tool should be easy to use, intuitive, and provide a clear visual representation of the project timeline.",
      "html": "<!-- The main project timeline component --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProjectTimeline><!-- Milestones and tasks will be rendered here --></ProjectTimeline></div>",
      "components": [
        {
          "name": "ProjectTimeline",
          "is_standalone": false,
          "description": "The main component that renders the project timeline. Takes children.",
          "html": "<!-- Container for the project timeline --><div class=\"flex flex-col\">{children}</div>"
        },
        {
          "name": "MilestoneCard",
          "is_standalone": true,
          "description": "A card component that represents a milestone in the project timeline. Standalone.",
          "html": "<!-- Milestone card component --><div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{milestone_name}</h3><p class=\"text-gray-600\">{milestone_description}</p><p class=\"text-sm text-gray-500\">{milestone_date}</p></div>"
        },
        {
          "name": "TaskCard",
          "is_standalone": true,
          "description": "A card component that represents a task in the project timeline. Standalone.",
          "html": "<!-- Task card component --><div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{task_name}</h3><p class=\"text-gray-600\">{task_description}</p><p class=\"text-sm text-gray-500\">{task_date}</p></div>"
        },
        {
          "name": "DependencyLine",
          "is_standalone": true,
          "description": "A line component that represents a dependency between tasks or milestones. Standalone.",
          "html": "<!-- Dependency line component --><div class=\"h-4 w-1 bg-gray-300\"></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, and accessible visualization tool that displays a project timeline, including milestones, tasks, and dependencies. The tool should be easy to use, intuitive, and provide a clear visual representation of the project timeline.",
      "html": "<!-- The main project timeline component --><div class=\"max-w-md mx-auto p-4 md:p-6 lg:p-8\"><ProjectTimeline><!-- Milestones and tasks will be rendered here --></ProjectTimeline></div>",
      "components": [
        {
          "name": "ProjectTimeline",
          "is_standalone": false,
          "description": "The main component that renders the project timeline. Takes children.",
          "html": "<!-- Container for the project timeline --><div class=\"flex flex-col\">{children}</div>"
        },
        {
          "name": "MilestoneCard",
          "is_standalone": true,
          "description": "A card component that represents a milestone in the project timeline. Standalone.",
          "html": "<!-- Milestone card component --><div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{milestone_name}</h3><p class=\"text-gray-600\">{milestone_description}</p><p class=\"text-sm text-gray-500\">{milestone_date}</p></div>"
        },
        {
          "name": "TaskCard",
          "is_standalone": true,
          "description": "A card component that represents a task in the project timeline. Standalone.",
          "html": "<!-- Task card component --><div class=\"bg-white shadow-md p-4 mb-4\"><h3 class=\"text-lg\">{task_name}</h3><p class=\"text-gray-600\">{task_description}</p><p class=\"text-sm text-gray-500\">{task_date}</p></div>"
        },
        {
          "name": "DependencyLine",
          "is_standalone": true,
          "description": "A line component that represents a dependency between tasks or milestones. Standalone.",
          "html": "<!-- Dependency line component --><div class=\"h-4 w-1 bg-gray-300\"></div>"
        }
      ]
    }
  ],
  "Course Progress Bars": [
    {
      "description": "The UI should display a progress bar indicating the completion percentage of a course, with a label showing the percentage complete. The progress bar should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><!-- course information --><CourseLabel/><!-- progress bar --><ProgressBar/></div>",
      "components": [
        {
          "name": "ProgressBar",
          "is_standalone": true,
          "description": "(standalone) - displays the progress bar with a percentage complete label",
          "html": "<div class=\"w-full h-4 rounded bg-gray-200\"><div class=\"h-4 bg-blue-500 rounded\" style={{ width: `${progressPercentage}%` }}></div><p class=\"text-lg\">{progressPercentage}% Complete</p></div>"
        },
        {
          "name": "CourseLabel",
          "is_standalone": true,
          "description": "(standalone) - displays the course name and completion percentage",
          "html": "<h2 class=\"text-lg\">{courseName} - {completionPercentage}% Complete</h2>"
        }
      ]
    }
  ],
  "Post List: Teasers for latest articles": [
    {
      "description": "The UI should display a list of article teasers, with each teaser showing the article title, a short summary, and a \"Read more\" button. The list should be responsive, with a maximum of three columns on larger screens and a single column on smaller screens. Each teaser should have a subtle background color and padding to differentiate it from the others.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Latest Articles</h2><div class=\"flex flex-wrap -mx-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components as needed --></PostList></div></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone) - A single article teaser component.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold mb-2\">{article_title}</h3><p class=\"text-gray-600\">{article_summary}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read more</button></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - A container component for the list of article teasers.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of article teasers, with each teaser showing the article title, a short summary, and a \"Read more\" button. The list should be responsive, with a maximum of three columns on larger screens and a single column on smaller screens. Each teaser should have a subtle background color and padding to differentiate it from the others.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Latest Articles</h2><div class=\"flex flex-wrap -mx-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components as needed --></PostList></div></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone) - A single article teaser component.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold mb-2\">{article_title}</h3><p class=\"text-gray-600\">{article_summary}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read more</button></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - A container component for the list of article teasers.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of article teasers, with each teaser showing the article title, a short summary, and a \"Read more\" button. The list should be responsive, with a maximum of three columns on larger screens and a single column on smaller screens. Each teaser should have a subtle background color and padding to differentiate it from the others.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Latest Articles</h2><div class=\"flex flex-wrap -mx-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components as needed --></PostList></div></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone) - A single article teaser component.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold mb-2\">{article_title}</h3><p class=\"text-gray-600\">{article_summary}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read more</button></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - A container component for the list of article teasers.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "A list of teaser articles, with a title, image, and short summary. Should be responsive and look good on desktop and mobile.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2>Latest Articles</h2><PostList><PostTeaser/><PostTeaser/><PostTeaser/></PostList></div>",
      "components": [
        {
          "name": "PostTeaser",
          "is_standalone": true,
          "description": "(standalone) - a single post teaser component",
          "html": "<article class=\"mb-4 p-4 border border-gray-200 rounded\"><img src={image_url} alt={post_title} class=\"w-full h-48 object-cover rounded-t\"/><h3 class=\"text-lg font-bold\">{post_title}</h3><p class=\"text-sm\">{post_summary}</p><a href={post_url} class=\"text-indigo-600 hover:text-indigo-900\">Read more</a></article>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - the container for the list of post teasers",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should display a list of article teasers, with each teaser showing the article title, a short summary, and a \"Read more\" button. The list should be responsive, with a maximum of three columns on larger screens and a single column on smaller screens. Each teaser should have a subtle background color and padding to differentiate it from the others.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Latest Articles</h2><div class=\"flex flex-wrap -mx-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components as needed --></PostList></div></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone) - A single article teaser component.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold mb-2\">{article_title}</h3><p class=\"text-gray-600\">{article_summary}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read more</button></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - A container component for the list of article teasers.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of article teasers, with each teaser showing the article title, a short summary, and a \"Read more\" button. The list should be responsive, with a maximum of three columns on larger screens and a single column on smaller screens. Each teaser should have a subtle background color and padding to differentiate it from the others.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Latest Articles</h2><div class=\"flex flex-wrap -mx-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components as needed --></PostList></div></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone) - A single article teaser component.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold mb-2\">{article_title}</h3><p class=\"text-gray-600\">{article_summary}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read more</button></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - A container component for the list of article teasers.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of article teasers, with each teaser showing the article title, a short summary, and a \"Read more\" button. The list should be responsive, with a maximum of three columns on larger screens and a single column on smaller screens. Each teaser should have a subtle background color and padding to differentiate it from the others.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Latest Articles</h2><div class=\"flex flex-wrap -mx-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components as needed --></PostList></div></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone) - A single article teaser component.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold mb-2\">{article_title}</h3><p class=\"text-gray-600\">{article_summary}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read more</button></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - A container component for the list of article teasers.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a list of article teasers, with each teaser showing the article title, a short summary, and a \"Read more\" button. The list should be responsive, with a maximum of three columns on larger screens and a single column on smaller screens. Each teaser should have a subtle background color and padding to differentiate it from the others.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><h2 class=\"text-2xl font-bold mb-4\">Latest Articles</h2><div class=\"flex flex-wrap -mx-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components as needed --></PostList></div></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone) - A single article teaser component.",
          "html": "<div class=\"w-full md:w-1/2 xl:w-1/3 p-4\"><h3 class=\"text-lg font-bold mb-2\">{article_title}</h3><p class=\"text-gray-600\">{article_summary}</p><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Read more</button></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children) - A container component for the list of article teasers.",
          "html": "<div class=\"flex flex-wrap\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a list of article teasers, displaying the title, a brief summary, and a link to read more. The list should be responsive, with a maximum of 3 columns on large screens, 2 columns on medium screens, and a single column on small screens.",
      "html": "<div class=\"container mx-auto p-4\"><PostList><ArticleTeaser/><ArticleTeaser/><ArticleTeaser/><!-- Add more ArticleTeaser components here --></PostList></div>",
      "components": [
        {
          "name": "ArticleTeaser",
          "is_standalone": true,
          "description": "(standalone): A single article teaser, containing a title, summary, and read more link.",
          "html": "<div class=\"md:flex mb-4\"><h2 class=\"text-lg font-bold\">{article_title}</h2><p class=\"text-gray-600\">{article_summary}</p><a href=\"{article_link}\" class=\"text-blue-600 hover:text-blue-900\">Read more</a></div>"
        },
        {
          "name": "PostList",
          "is_standalone": false,
          "description": "(takes children): A list of article teasers.",
          "html": "<ul class=\"flex flex-wrap justify-center\">{children}</ul>"
        }
      ]
    }
  ],
  "Breadcrumb navigation for category and subreddits": [
    {
      "description": "The UI should display a breadcrumb navigation for categories and subreddits. Each item in the breadcrumb should display the category name and have a separator (e.g., `/`) between each item.",
      "html": "<nav class=\"flex items-center mb-4\"><BreadCrumbNavigation><BreadCrumb/><BreadCrumb/><!-- Add more Breadcrumbs as needed --></BreadCrumbNavigation></nav>",
      "components": [
        {
          "name": "BreadCrumb",
          "is_standalone": true,
          "description": "standalone component that renders a single breadcrumb item.",
          "html": "<li class=\"mr-2\"><a href=\"{category_url}\" class=\"text-gray-600 hover:text-gray-900\">{category_name}</a><span class=\"text-gray-400\">/</span></li>"
        },
        {
          "name": "BreadCrumbNavigation",
          "is_standalone": false,
          "description": "container component that takes children (multiple `BreadCrumb` components).",
          "html": "<ul class=\"flex\">{children}</ul>"
        }
      ]
    }
  ],
  "Reporting Dashboard: Generate data insights": [
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays various data insights in a clear and organized manner. The dashboard should have a top navigation bar, a sidebar with navigation options, and a main content area that displays different charts, graphs, and data tables.",
      "html": "<div class=\"flex h-screen\"><NavigationBar/><div class=\"flex-1 overflow-y-hidden\"><Sidebar/><main class=\"p-4\"><DataSection><DataCard>{children}</DataCard><DataCard>{children}</DataCard></DataSection><DataSection><DataTable><thead><tr><th>{column1_header}</th><th>{column2_header}</th></tr></thead><tbody><tr><td>{data_point1}</td><td>{data_point2}</td></tr></tbody></DataTable></DataSection></main></div></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "- Standalone - Displays the top navigation bar with a dashboard title and navigation links.",
          "html": "<nav class=\"bg-white border-b border-gray-200\"><div class=\"container mx-auto p-4\"><h1 class=\"text-lg\">{dashboard_title}</h1><ul class=\"flex justify-end\"><li><a href=\"#\" class=\"text-gray-600\">{nav_link1}</a></li><li><a href=\"#\" class=\"text-gray-600\">{nav_link2}</a></li></ul></div></nav>"
        },
        {
          "name": "Sidebar",
          "is_standalone": true,
          "description": "- Standalone - Displays the sidebar with navigation options.",
          "html": "<aside class=\"w-64 bg-white border-r border-gray-200\"><nav class=\"px-4\"><ul><li><a href=\"#\" class=\"block py-2\">{sidebar_link1}</a></li><li><a href=\"#\" class=\"block py-2\">{sidebar_link2}</a></li></ul></nav></aside>"
        },
        {
          "name": "DataCard",
          "is_standalone": false,
          "description": "- Takes children - Displays a single data insight, such as a chart or graph, with a title and description.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg\">{title}</h2><p>{description}</p>{children}</div>"
        },
        {
          "name": "DataSection",
          "is_standalone": false,
          "description": "- Takes children - Displays a section of data insights, such as a row of charts or graphs.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        },
        {
          "name": "DataTable",
          "is_standalone": false,
          "description": "- Takes children - Displays a table of data with column headers and rows.",
          "html": "<table class=\"w-full\">{children}</table>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first dashboard that displays various data insights in a clear and organized manner. The dashboard should have a top navigation bar, a sidebar with navigation options, and a main content area that displays different charts, graphs, and data tables.",
      "html": "<div class=\"flex h-screen\"><NavigationBar/><div class=\"flex-1 overflow-y-hidden\"><Sidebar/><main class=\"p-4\"><DataSection><DataCard>{children}</DataCard><DataCard>{children}</DataCard></DataSection><DataSection><DataTable><thead><tr><th>{column1_header}</th><th>{column2_header}</th></tr></thead><tbody><tr><td>{data_point1}</td><td>{data_point2}</td></tr></tbody></DataTable></DataSection></main></div></div>",
      "components": [
        {
          "name": "NavigationBar",
          "is_standalone": true,
          "description": "- Standalone - Displays the top navigation bar with a dashboard title and navigation links.",
          "html": "<nav class=\"bg-white border-b border-gray-200\"><div class=\"container mx-auto p-4\"><h1 class=\"text-lg\">{dashboard_title}</h1><ul class=\"flex justify-end\"><li><a href=\"#\" class=\"text-gray-600\">{nav_link1}</a></li><li><a href=\"#\" class=\"text-gray-600\">{nav_link2}</a></li></ul></div></nav>"
        },
        {
          "name": "Sidebar",
          "is_standalone": true,
          "description": "- Standalone - Displays the sidebar with navigation options.",
          "html": "<aside class=\"w-64 bg-white border-r border-gray-200\"><nav class=\"px-4\"><ul><li><a href=\"#\" class=\"block py-2\">{sidebar_link1}</a></li><li><a href=\"#\" class=\"block py-2\">{sidebar_link2}</a></li></ul></nav></aside>"
        },
        {
          "name": "DataCard",
          "is_standalone": false,
          "description": "- Takes children - Displays a single data insight, such as a chart or graph, with a title and description.",
          "html": "<div class=\"bg-white shadow-md rounded p-4\"><h2 class=\"text-lg\">{title}</h2><p>{description}</p>{children}</div>"
        },
        {
          "name": "DataSection",
          "is_standalone": false,
          "description": "- Takes children - Displays a section of data insights, such as a row of charts or graphs.",
          "html": "<div class=\"flex flex-wrap -mx-4\">{children}</div>"
        },
        {
          "name": "DataTable",
          "is_standalone": false,
          "description": "- Takes children - Displays a table of data with column headers and rows.",
          "html": "<table class=\"w-full\">{children}</table>"
        }
      ]
    }
  ],
  "Call to Action Button Text": [
    {
      "description": "The UI should be a responsive, mobile-first Call to Action (CTA) button with a clear and concise text.",
      "html": "<button class=\"cta-button\"><CallToActionButton/></button>",
      "components": [
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "A standalone component representing the CTA button.",
          "html": "<span class=\"text-sm font-bold text-white\">{cta_text}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first Call to Action (CTA) button with a clear and concise text.",
      "html": "<button class=\"cta-button\"><CallToActionButton/></button>",
      "components": [
        {
          "name": "CallToActionButton",
          "is_standalone": true,
          "description": "A standalone component representing the CTA button.",
          "html": "<span class=\"text-sm font-bold text-white\">{cta_text}</span>"
        }
      ]
    },
    {
      "description": "The UI should be a call-to-action (CTA) button with custom text, responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<button class=\"ActionButton\"/>",
      "components": [
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{ctaButtonText}</button>"
        }
      ]
    }
  ],
  "Webcam/Camera Interfaces": [
    {
      "description": "The UI should display a webcam/video camera interface with a live feed, a capture button, and a toggle switch to switch between the front and rear cameras.",
      "html": "<div class=\"flex flex-col items-center h-screen\"><WebcamFeed/><div class=\"flex justify-center mb-4\"><CaptureButton/><CameraToggle/></div></div>",
      "components": [
        {
          "name": "WebcamFeed",
          "is_standalone": true,
          "description": "(standalone) - displays the live webcam feed",
          "html": "<div class=\"w-full h-full\"><video class=\"w-full h-full object-cover\" id=\"video\"></video></div>"
        },
        {
          "name": "CaptureButton",
          "is_standalone": true,
          "description": "(standalone) - a button to capture a photo/video",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Capture</button>"
        },
        {
          "name": "CameraToggle",
          "is_standalone": true,
          "description": "(standalone) - a toggle switch to switch between the front and rear cameras",
          "html": "<label class=\"switch\"><input type=\"checkbox\"/><span class=\"slider round\"></span>Front/Rear</label>"
        }
      ]
    }
  ],
  "Featured Product Image": [
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    },
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    },
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    },
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    },
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    },
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    },
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    },
    {
      "description": "The featured product image should be a large, high-quality image that showcases the product from the front. It should be responsive, taking up the full width of the container on mobile devices and scaling down on larger screens. The image should have a subtle box shadow to give it depth.",
      "html": "<div class=\"flex justify-center mb-4\"><FeaturedProductImage/></div>",
      "components": [
        {
          "name": "FeaturedProductImage",
          "is_standalone": true,
          "description": "standalone",
          "html": "<img src=\"{image_url}\" alt=\"{product_name}\" class=\"w-full rounded-md shadow-md lg:w-1/2 xl:w-1/3\"/>"
        }
      ]
    }
  ],
  "Content moderation tools for admin teams": [
    {
      "description": "The UI should resemble a dashboard with a navigation menu on the left, and a main content area on the right. The navigation menu should display various moderation tools, and the main content area should display the selected tool. The UI should be responsive, with a mobile-first approach, making it accessible on smaller screens.",
      "html": "<div class=\"flex h-screen\"><SidebarNav/><div class=\"flex-1 overflow-y-auto\"><DashboardHeader/><Breadcrumb><span>Home</span><span>Moderation Tools</span><span>Selected Tool</span></Breadcrumb><ModerationTool><ModerationToolCard><ModerationToolCardHeader/><ModerationToolCardBody><!-- moderation tool content --></ModerationToolCardBody></ModerationToolCard></ModerationTool></div></div>",
      "components": [
        {
          "name": "SidebarNav",
          "is_standalone": true,
          "description": "(standalone): A navigation menu component that displays moderation tools.",
          "html": "<nav class=\"w-64 bg-gray-200 h-screen p-4\"><ul><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 1</a></li><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 2</a></li><!-- more tools --></ul></nav>"
        },
        {
          "name": "ModerationTool",
          "is_standalone": false,
          "description": "(takes children): A component that wraps the selected moderation tool.",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "DashboardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component that displays the admin team's name and a search bar.",
          "html": "<header class=\"p-4 bg-white border-b border-gray-200\"><h1 class=\"text-lg\">{admin_team_name}</h1><input type=\"search\" class=\"w-full pl-10 pr-4 py-2\" placeholder=\"Search\"/></header>"
        },
        {
          "name": "Breadcrumb",
          "is_standalone": false,
          "description": "(takes children): A breadcrumb component that displays the current navigation path.",
          "html": "<nav class=\"flex mb-4\">{children}</nav>"
        },
        {
          "name": "ModerationToolCard",
          "is_standalone": false,
          "description": "(takes children): A card component that displays a moderation tool's information.",
          "html": "<div class=\"bg-white border border-gray-200 p-4\"><ModerationToolCardHeader/><ModerationToolCardBody>{children} </ModerationToolCardBody></div>"
        },
        {
          "name": "ModerationToolCardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component for the moderation tool card.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-lg\">{tool_name}</h2><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Edit </button></header>"
        },
        {
          "name": "ModerationToolCardBody",
          "is_standalone": false,
          "description": "(takes children): A body component for the moderation tool card.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should resemble a dashboard with a navigation menu on the left, and a main content area on the right. The navigation menu should display various moderation tools, and the main content area should display the selected tool. The UI should be responsive, with a mobile-first approach, making it accessible on smaller screens.",
      "html": "<div class=\"flex h-screen\"><SidebarNav/><div class=\"flex-1 overflow-y-auto\"><DashboardHeader/><Breadcrumb><span>Home</span><span>Moderation Tools</span><span>Selected Tool</span></Breadcrumb><ModerationTool><ModerationToolCard><ModerationToolCardHeader/><ModerationToolCardBody><!-- moderation tool content --></ModerationToolCardBody></ModerationToolCard></ModerationTool></div></div>",
      "components": [
        {
          "name": "SidebarNav",
          "is_standalone": true,
          "description": "(standalone): A navigation menu component that displays moderation tools.",
          "html": "<nav class=\"w-64 bg-gray-200 h-screen p-4\"><ul><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 1</a></li><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 2</a></li><!-- more tools --></ul></nav>"
        },
        {
          "name": "ModerationTool",
          "is_standalone": false,
          "description": "(takes children): A component that wraps the selected moderation tool.",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "DashboardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component that displays the admin team's name and a search bar.",
          "html": "<header class=\"p-4 bg-white border-b border-gray-200\"><h1 class=\"text-lg\">{admin_team_name}</h1><input type=\"search\" class=\"w-full pl-10 pr-4 py-2\" placeholder=\"Search\"/></header>"
        },
        {
          "name": "Breadcrumb",
          "is_standalone": false,
          "description": "(takes children): A breadcrumb component that displays the current navigation path.",
          "html": "<nav class=\"flex mb-4\">{children}</nav>"
        },
        {
          "name": "ModerationToolCard",
          "is_standalone": false,
          "description": "(takes children): A card component that displays a moderation tool's information.",
          "html": "<div class=\"bg-white border border-gray-200 p-4\"><ModerationToolCardHeader/><ModerationToolCardBody>{children} </ModerationToolCardBody></div>"
        },
        {
          "name": "ModerationToolCardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component for the moderation tool card.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-lg\">{tool_name}</h2><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Edit </button></header>"
        },
        {
          "name": "ModerationToolCardBody",
          "is_standalone": false,
          "description": "(takes children): A body component for the moderation tool card.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should resemble a dashboard with a navigation menu on the left, and a main content area on the right. The navigation menu should display various moderation tools, and the main content area should display the selected tool. The UI should be responsive, with a mobile-first approach, making it accessible on smaller screens.",
      "html": "<div class=\"flex h-screen\"><SidebarNav/><div class=\"flex-1 overflow-y-auto\"><DashboardHeader/><Breadcrumb><span>Home</span><span>Moderation Tools</span><span>Selected Tool</span></Breadcrumb><ModerationTool><ModerationToolCard><ModerationToolCardHeader/><ModerationToolCardBody><!-- moderation tool content --></ModerationToolCardBody></ModerationToolCard></ModerationTool></div></div>",
      "components": [
        {
          "name": "SidebarNav",
          "is_standalone": true,
          "description": "(standalone): A navigation menu component that displays moderation tools.",
          "html": "<nav class=\"w-64 bg-gray-200 h-screen p-4\"><ul><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 1</a></li><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 2</a></li><!-- more tools --></ul></nav>"
        },
        {
          "name": "ModerationTool",
          "is_standalone": false,
          "description": "(takes children): A component that wraps the selected moderation tool.",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "DashboardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component that displays the admin team's name and a search bar.",
          "html": "<header class=\"p-4 bg-white border-b border-gray-200\"><h1 class=\"text-lg\">{admin_team_name}</h1><input type=\"search\" class=\"w-full pl-10 pr-4 py-2\" placeholder=\"Search\"/></header>"
        },
        {
          "name": "Breadcrumb",
          "is_standalone": false,
          "description": "(takes children): A breadcrumb component that displays the current navigation path.",
          "html": "<nav class=\"flex mb-4\">{children}</nav>"
        },
        {
          "name": "ModerationToolCard",
          "is_standalone": false,
          "description": "(takes children): A card component that displays a moderation tool's information.",
          "html": "<div class=\"bg-white border border-gray-200 p-4\"><ModerationToolCardHeader/><ModerationToolCardBody>{children} </ModerationToolCardBody></div>"
        },
        {
          "name": "ModerationToolCardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component for the moderation tool card.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-lg\">{tool_name}</h2><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Edit </button></header>"
        },
        {
          "name": "ModerationToolCardBody",
          "is_standalone": false,
          "description": "(takes children): A body component for the moderation tool card.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should resemble a dashboard with a navigation menu on the left, and a main content area on the right. The navigation menu should display various moderation tools, and the main content area should display the selected tool. The UI should be responsive, with a mobile-first approach, making it accessible on smaller screens.",
      "html": "<div class=\"flex h-screen\"><SidebarNav/><div class=\"flex-1 overflow-y-auto\"><DashboardHeader/><Breadcrumb><span>Home</span><span>Moderation Tools</span><span>Selected Tool</span></Breadcrumb><ModerationTool><ModerationToolCard><ModerationToolCardHeader/><ModerationToolCardBody><!-- moderation tool content --></ModerationToolCardBody></ModerationToolCard></ModerationTool></div></div>",
      "components": [
        {
          "name": "SidebarNav",
          "is_standalone": true,
          "description": "(standalone): A navigation menu component that displays moderation tools.",
          "html": "<nav class=\"w-64 bg-gray-200 h-screen p-4\"><ul><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 1</a></li><li><a href=\"#\" class=\"block p-2 hover:bg-gray-300\">Tool 2</a></li><!-- more tools --></ul></nav>"
        },
        {
          "name": "ModerationTool",
          "is_standalone": false,
          "description": "(takes children): A component that wraps the selected moderation tool.",
          "html": "<div class=\"p-4\">{children}</div>"
        },
        {
          "name": "DashboardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component that displays the admin team's name and a search bar.",
          "html": "<header class=\"p-4 bg-white border-b border-gray-200\"><h1 class=\"text-lg\">{admin_team_name}</h1><input type=\"search\" class=\"w-full pl-10 pr-4 py-2\" placeholder=\"Search\"/></header>"
        },
        {
          "name": "Breadcrumb",
          "is_standalone": false,
          "description": "(takes children): A breadcrumb component that displays the current navigation path.",
          "html": "<nav class=\"flex mb-4\">{children}</nav>"
        },
        {
          "name": "ModerationToolCard",
          "is_standalone": false,
          "description": "(takes children): A card component that displays a moderation tool's information.",
          "html": "<div class=\"bg-white border border-gray-200 p-4\"><ModerationToolCardHeader/><ModerationToolCardBody>{children} </ModerationToolCardBody></div>"
        },
        {
          "name": "ModerationToolCardHeader",
          "is_standalone": true,
          "description": "(standalone): A header component for the moderation tool card.",
          "html": "<header class=\"flex justify-between mb-4\"><h2 class=\"text-lg\">{tool_name}</h2><button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Edit </button></header>"
        },
        {
          "name": "ModerationToolCardBody",
          "is_standalone": false,
          "description": "(takes children): A body component for the moderation tool card.",
          "html": "<div class=\"p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Header: Site title and navigation links": [
    {
      "description": "The UI should be a header section at the top of the webpage, featuring a site title on the left side and navigation links on the right side. The site title should be prominent and centered on mobile devices, while the navigation links should be stacked on top of each other on mobile devices and aligned horizontally on larger screens.",
      "html": "<header><Header><SiteTitle/><NavLinks><NavLink/><NavLink/><!-- Add more NavLink components as needed --></NavLinks></Header></header>",
      "components": [
        {
          "name": "SiteTitle",
          "is_standalone": true,
          "description": "(standalone): displays the title of the site",
          "html": "<h1 class=\"text-3xl font-bold\">{site_title}</h1>"
        },
        {
          "name": "NavLink",
          "is_standalone": true,
          "description": "(standalone): displays a single navigation link",
          "html": "<a href=\"{nav_link_url}\" class=\"text-lg\">{nav_link_text}</a>"
        },
        {
          "name": "NavLinks",
          "is_standalone": false,
          "description": "(takes children): a container for multiple `NavLink` components",
          "html": "<nav class=\"flex flex-wrap justify-end md:flex-row\">{children}</nav>"
        },
        {
          "name": "Header",
          "is_standalone": false,
          "description": "(takes children): the top-level component that contains the site title and navigation links",
          "html": "<div class=\"container mx-auto p-4 md:flex md:justify-between\">{children}</div>"
        }
      ]
    }
  ],
  "Video upload tool with encoding options": [
    {
      "description": "The UI should be a video upload tool with encoding options. It should have a file input field, a dropdown menu for selecting the encoding preset, a checkbox for enabling watermarks, and a submit button. The UI should be responsive, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6 pb-8\"><VideoUploadForm><UploadInput/><EncodingPresetSelect/><WatermarkCheckbox/><SubmitButton/></VideoUploadForm></div>",
      "components": [
        {
          "name": "UploadInput",
          "is_standalone": true,
          "description": "A standalone component for the file input field.",
          "html": "<div class=\"mb-4\"><input type=\"file\" id=\"video-upload\" class=\"block w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"><label for=\"video-upload\" class=\"sr-only\">Select a video file</label></div>"
        },
        {
          "name": "EncodingPresetSelect",
          "is_standalone": true,
          "description": "A standalone component for the dropdown menu for selecting the encoding preset.",
          "html": "<div class=\"mb-4\"><select id=\"encoding-preset\" class=\"block w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 cursor-pointer dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400\"><option value=\"\">{select_preset}</option><!-- more options will be generated dynamically --></select><label for=\"encoding-preset\" class=\"sr-only\">Select an encoding preset</label></div>"
        },
        {
          "name": "WatermarkCheckbox",
          "is_standalone": true,
          "description": "A standalone component for the checkbox for enabling watermarks.",
          "html": "<div class=\"mb-4\"><input type=\"checkbox\" id=\"watermark\" class=\"w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:ring-blue-500\"><label for=\"watermark\" class=\"ml-2 text-sm text-gray-600\">Enable watermark</label></div>"
        },
        {
          "name": "SubmitButton",
          "is_standalone": true,
          "description": "A standalone component for the submit button.",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Upload Video</button>"
        },
        {
          "name": "VideoUploadForm",
          "is_standalone": false,
          "description": "A component that takes children, which is the parent component that wraps all the other components.",
          "html": "<!-- this component will wrap all the other components --><div class=\"p-4\">{children}</div>"
        }
      ]
    }
  ],
  "Poll/Voting Systems": [
    {
      "description": "A poll/voting system UI should display a question, several options to choose from, and the current voting results. It should also allow users to cast their votes.",
      "html": "<div class=\"flex flex-col gap-4\"><PollQuestion/><div class=\"flex flex-col gap-2\"><PollOption>Option 1</PollOption><PollOption>Option 2</PollOption><PollOption>Option 3</PollOption></div><VoteButton/><VoteResults><p>Results:</p><ul><li>Option 1: {option1_votes} votes</li><li>Option 2: {option2_votes} votes</li><li>Option 3: {option3_votes} votes</li></ul></VoteResults></div>",
      "components": [
        {
          "name": "PollQuestion",
          "is_standalone": true,
          "description": "standalone, displays the question being asked",
          "html": "<h2 class=\"text-2xl\">{question_text}</h2>"
        },
        {
          "name": "PollOption",
          "is_standalone": false,
          "description": "takes children, represents a single option with a vote count",
          "html": "<div class=\"flex items-center gap-2\"><input type=\"radio\" name=\"poll_option\" id={`option_${option_id}`}/><label for={`option_${option_id}`}>{children}</label><span class=\"text-gray-500\">{vote_count} votes</span></div>"
        },
        {
          "name": "VoteButton",
          "is_standalone": true,
          "description": "standalone, allows users to cast their vote",
          "html": "<button class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Cast Your Vote</button>"
        },
        {
          "name": "VoteResults",
          "is_standalone": false,
          "description": "takes children, displays the current voting results",
          "html": "<div class=\"bg-gray-100 p-4 rounded\">{children}</div>"
        }
      ]
    }
  ],
  "Post Text Editor: Input field for writing a new post": [
    {
      "description": "A minimalist text editor for writing a new post, consisting of a text input field with a subtle border, padding, and a hint of typography. The input field should be responsive, taking up the full width on mobile devices and shrinking to a comfortable size on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TextInput/></div>",
      "components": [
        {
          "name": "TextInput",
          "is_standalone": true,
          "description": "(standalone): A simple text input field with a label and minimal styling.",
          "html": "<div class=\"flex flex-col mb-4\"><label class=\"text-sm text-gray-600\" for=\"post-input\">Write a new post:</label><input id=\"post-input\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" placeholder=\"Start typing...\"/></div>"
        }
      ]
    },
    {
      "description": "A minimalist text editor for writing a new post, consisting of a text input field with a subtle border, padding, and a hint of typography. The input field should be responsive, taking up the full width on mobile devices and shrinking to a comfortable size on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TextInput/></div>",
      "components": [
        {
          "name": "TextInput",
          "is_standalone": true,
          "description": "(standalone): A simple text input field with a label and minimal styling.",
          "html": "<div class=\"flex flex-col mb-4\"><label class=\"text-sm text-gray-600\" for=\"post-input\">Write a new post:</label><input id=\"post-input\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" placeholder=\"Start typing...\"/></div>"
        }
      ]
    },
    {
      "description": "A minimalist text editor for writing a new post, consisting of a text input field with a subtle border, padding, and a hint of typography. The input field should be responsive, taking up the full width on mobile devices and shrinking to a comfortable size on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TextInput/></div>",
      "components": [
        {
          "name": "TextInput",
          "is_standalone": true,
          "description": "(standalone): A simple text input field with a label and minimal styling.",
          "html": "<div class=\"flex flex-col mb-4\"><label class=\"text-sm text-gray-600\" for=\"post-input\">Write a new post:</label><input id=\"post-input\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" placeholder=\"Start typing...\"/></div>"
        }
      ]
    },
    {
      "description": "A minimalist text editor for writing a new post, consisting of a text input field with a subtle border, padding, and a hint of typography. The input field should be responsive, taking up the full width on mobile devices and shrinking to a comfortable size on larger screens.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><TextInput/></div>",
      "components": [
        {
          "name": "TextInput",
          "is_standalone": true,
          "description": "(standalone): A simple text input field with a label and minimal styling.",
          "html": "<div class=\"flex flex-col mb-4\"><label class=\"text-sm text-gray-600\" for=\"post-input\">Write a new post:</label><input id=\"post-input\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" type=\"text\" placeholder=\"Start typing...\"/></div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple text input field with a placeholder for writing a new post. It should be responsive, mobile-first, and accessible.",
      "html": "<div class=\"flex flex-col w-full p-4 md:p-6 lg:p-8\"><PostEditor/></div>",
      "components": [
        {
          "name": "PostEditor",
          "is_standalone": true,
          "description": "A standalone component that contains the text input field.",
          "html": "<div class=\"flex flex-col w-full\"><InputField/></div>"
        },
        {
          "name": "InputField",
          "is_standalone": true,
          "description": "A standalone component that represents the text input field.",
          "html": "<textarea class=\"w-full p-2 pl-4 pr-4 bg-gray-100 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\" placeholder=\"Write a new post...\" rows=\"5\"></textarea>"
        }
      ]
    }
  ],
  "Voice Command/Audio Feedback": [
    {
      "description": "The UI should be a simple audio feedback component that visually indicates when the voice command is listening and provides a visual cue for audio feedback.",
      "html": "<div class=\"flex justify-center mb-4\"><AudioIndicator/><AudioFeedback/></div>",
      "components": [
        {
          "name": "AudioIndicator",
          "is_standalone": true,
          "description": "A standalone component that indicates when the voice command is listening. It will be a circle that changes color to indicate when the voice command is active.",
          "html": "<div class=\"h-8 w-8 bg-gray-200 rounded-full {audio_indicator_state}\" <!-- audio_indicator_state will be 'bg-green-500' when listening, otherwise 'bg-gray-200' --><div class=\"h-4 w-4 bg-white rounded-full mx-auto mt-2\" <!-- inner circle --></div></div>"
        },
        {
          "name": "AudioFeedback",
          "is_standalone": true,
          "description": "A standalone component that provides a visual cue for audio feedback. It will display a waveform or a similar visual representation of the audio input.",
          "html": "<div class=\"w-full h-4 bg-gray-200 rounded-lg overflow-hidden\"><div class=\"h-4 bg-blue-500 rounded-lg\" style=\"width: {audio_feedback_width}%\" <!-- audio_feedback_width is a value between 0 and 100 --></div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple audio feedback component that visually indicates when the voice command is listening and provides a visual cue for audio feedback.",
      "html": "<div class=\"flex justify-center mb-4\"><AudioIndicator/><AudioFeedback/></div>",
      "components": [
        {
          "name": "AudioIndicator",
          "is_standalone": true,
          "description": "A standalone component that indicates when the voice command is listening. It will be a circle that changes color to indicate when the voice command is active.",
          "html": "<div class=\"h-8 w-8 bg-gray-200 rounded-full {audio_indicator_state}\" <!-- audio_indicator_state will be 'bg-green-500' when listening, otherwise 'bg-gray-200' --><div class=\"h-4 w-4 bg-white rounded-full mx-auto mt-2\" <!-- inner circle --></div></div>"
        },
        {
          "name": "AudioFeedback",
          "is_standalone": true,
          "description": "A standalone component that provides a visual cue for audio feedback. It will display a waveform or a similar visual representation of the audio input.",
          "html": "<div class=\"w-full h-4 bg-gray-200 rounded-lg overflow-hidden\"><div class=\"h-4 bg-blue-500 rounded-lg\" style=\"width: {audio_feedback_width}%\" <!-- audio_feedback_width is a value between 0 and 100 --></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a microphone icon and a circle that represents the audio feedback. The microphone icon should be surrounded by a circle that changes color based on the audio feedback level. The UI should also display a text that indicates the audio feedback level.",
      "html": "<div class=\"flex justify-center mb-4\"><div class=\"relative\"><MicrophoneIcon/><AudioFeedbackCircle/></div><AudioFeedbackText/></div>",
      "components": [
        {
          "name": "MicrophoneIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a microphone icon.",
          "html": "<i class=\"fas fa-microphone text-lg text-gray-500\"/>"
        },
        {
          "name": "AudioFeedbackCircle",
          "is_standalone": true,
          "description": "A standalone component that displays a circle that changes color based on the audio feedback level.",
          "html": "<div class={`w-12 h-12 bg-${audio_feedback_level_color} rounded-full`}/>"
        },
        {
          "name": "AudioFeedbackText",
          "is_standalone": true,
          "description": "A standalone component that displays the audio feedback level.",
          "html": "<p class=\"text-sm text-gray-500\">{audio_feedback_level_text}</p>"
        }
      ]
    },
    {
      "description": "The UI should be a simple audio feedback component that visually indicates when the voice command is listening and provides a visual cue for audio feedback.",
      "html": "<div class=\"flex justify-center mb-4\"><AudioIndicator/><AudioFeedback/></div>",
      "components": [
        {
          "name": "AudioIndicator",
          "is_standalone": true,
          "description": "A standalone component that indicates when the voice command is listening. It will be a circle that changes color to indicate when the voice command is active.",
          "html": "<div class=\"h-8 w-8 bg-gray-200 rounded-full {audio_indicator_state}\" <!-- audio_indicator_state will be 'bg-green-500' when listening, otherwise 'bg-gray-200' --><div class=\"h-4 w-4 bg-white rounded-full mx-auto mt-2\" <!-- inner circle --></div></div>"
        },
        {
          "name": "AudioFeedback",
          "is_standalone": true,
          "description": "A standalone component that provides a visual cue for audio feedback. It will display a waveform or a similar visual representation of the audio input.",
          "html": "<div class=\"w-full h-4 bg-gray-200 rounded-lg overflow-hidden\"><div class=\"h-4 bg-blue-500 rounded-lg\" style=\"width: {audio_feedback_width}%\" <!-- audio_feedback_width is a value between 0 and 100 --></div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a simple audio feedback component that visually indicates when the voice command is listening and provides a visual cue for audio feedback.",
      "html": "<div class=\"flex justify-center mb-4\"><AudioIndicator/><AudioFeedback/></div>",
      "components": [
        {
          "name": "AudioIndicator",
          "is_standalone": true,
          "description": "A standalone component that indicates when the voice command is listening. It will be a circle that changes color to indicate when the voice command is active.",
          "html": "<div class=\"h-8 w-8 bg-gray-200 rounded-full {audio_indicator_state}\" <!-- audio_indicator_state will be 'bg-green-500' when listening, otherwise 'bg-gray-200' --><div class=\"h-4 w-4 bg-white rounded-full mx-auto mt-2\" <!-- inner circle --></div></div>"
        },
        {
          "name": "AudioFeedback",
          "is_standalone": true,
          "description": "A standalone component that provides a visual cue for audio feedback. It will display a waveform or a similar visual representation of the audio input.",
          "html": "<div class=\"w-full h-4 bg-gray-200 rounded-lg overflow-hidden\"><div class=\"h-4 bg-blue-500 rounded-lg\" style=\"width: {audio_feedback_width}%\" <!-- audio_feedback_width is a value between 0 and 100 --></div></div>"
        }
      ]
    }
  ],
  "Featured Video Poster Image": [
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component that displays a poster image, a play button, and optional video title and duration.",
      "html": "<div class=\"w-full h-full relative\"><VideoPosterImage/></div>",
      "components": [
        {
          "name": "VideoPosterImage",
          "is_standalone": true,
          "description": "standalone component that renders the poster image, play button, and optional video title and duration.",
          "html": "<div class=\"w-full h-full overflow-hidden rounded-lg shadow-md\"><!-- poster image --><img src={poster_image_url} alt={video_title} class=\"w-full h-full object-cover rounded-lg\"/><!-- play button --><div class=\"absolute bottom-4 left-4 flex justify-center\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg\"><i class=\"fas fa-play\"></i></button></div><!-- optional video title and duration --><div class=\"absolute bottom-4 right-4 text-white text-sm\"><p>{video_title}</p><p>{video_duration} minutes</p></div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component that displays a poster image, a play button, and optional video title and duration.",
      "html": "<div class=\"w-full h-full relative\"><VideoPosterImage/></div>",
      "components": [
        {
          "name": "VideoPosterImage",
          "is_standalone": true,
          "description": "standalone component that renders the poster image, play button, and optional video title and duration.",
          "html": "<div class=\"w-full h-full overflow-hidden rounded-lg shadow-md\"><!-- poster image --><img src={poster_image_url} alt={video_title} class=\"w-full h-full object-cover rounded-lg\"/><!-- play button --><div class=\"absolute bottom-4 left-4 flex justify-center\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg\"><i class=\"fas fa-play\"></i></button></div><!-- optional video title and duration --><div class=\"absolute bottom-4 right-4 text-white text-sm\"><p>{video_title}</p><p>{video_duration} minutes</p></div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component that displays a poster image, a play button, and optional video title and duration.",
      "html": "<div class=\"w-full h-full relative\"><VideoPosterImage/></div>",
      "components": [
        {
          "name": "VideoPosterImage",
          "is_standalone": true,
          "description": "standalone component that renders the poster image, play button, and optional video title and duration.",
          "html": "<div class=\"w-full h-full overflow-hidden rounded-lg shadow-md\"><!-- poster image --><img src={poster_image_url} alt={video_title} class=\"w-full h-full object-cover rounded-lg\"/><!-- play button --><div class=\"absolute bottom-4 left-4 flex justify-center\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg\"><i class=\"fas fa-play\"></i></button></div><!-- optional video title and duration --><div class=\"absolute bottom-4 right-4 text-white text-sm\"><p>{video_title}</p><p>{video_duration} minutes</p></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive, accessible, and SEO-friendly featured video poster image component. The image should be centered and take up the full width of the container on mobile devices and smaller screens, and resize to fit the container on larger screens.",
      "html": "<div class=\"container mx-auto p-4\"><FeaturedVideoPosterImage/></div>",
      "components": [
        {
          "name": "FeaturedVideoPosterImage",
          "is_standalone": true,
          "description": "(standalone): This component will contain the featured video poster image.",
          "html": "<img class=\"object-cover w-full h-64 md:h-80 lg:h-96 xl:h-112 mb-4\" src={poster_image_url} alt={poster_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component that displays a poster image, a play button, and optional video title and duration.",
      "html": "<div class=\"w-full h-full relative\"><VideoPosterImage/></div>",
      "components": [
        {
          "name": "VideoPosterImage",
          "is_standalone": true,
          "description": "standalone component that renders the poster image, play button, and optional video title and duration.",
          "html": "<div class=\"w-full h-full overflow-hidden rounded-lg shadow-md\"><!-- poster image --><img src={poster_image_url} alt={video_title} class=\"w-full h-full object-cover rounded-lg\"/><!-- play button --><div class=\"absolute bottom-4 left-4 flex justify-center\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg\"><i class=\"fas fa-play\"></i></button></div><!-- optional video title and duration --><div class=\"absolute bottom-4 right-4 text-white text-sm\"><p>{video_title}</p><p>{video_duration} minutes</p></div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component that displays a poster image, a play button, and optional video title and duration.",
      "html": "<div class=\"w-full h-full relative\"><VideoPosterImage/></div>",
      "components": [
        {
          "name": "VideoPosterImage",
          "is_standalone": true,
          "description": "standalone component that renders the poster image, play button, and optional video title and duration.",
          "html": "<div class=\"w-full h-full overflow-hidden rounded-lg shadow-md\"><!-- poster image --><img src={poster_image_url} alt={video_title} class=\"w-full h-full object-cover rounded-lg\"/><!-- play button --><div class=\"absolute bottom-4 left-4 flex justify-center\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg\"><i class=\"fas fa-play\"></i></button></div><!-- optional video title and duration --><div class=\"absolute bottom-4 right-4 text-white text-sm\"><p>{video_title}</p><p>{video_duration} minutes</p></div></div>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component that displays a poster image, a play button, and optional video title and duration.",
      "html": "<div class=\"w-full h-full relative\"><VideoPosterImage/></div>",
      "components": [
        {
          "name": "VideoPosterImage",
          "is_standalone": true,
          "description": "standalone component that renders the poster image, play button, and optional video title and duration.",
          "html": "<div class=\"w-full h-full overflow-hidden rounded-lg shadow-md\"><!-- poster image --><img src={poster_image_url} alt={video_title} class=\"w-full h-full object-cover rounded-lg\"/><!-- play button --><div class=\"absolute bottom-4 left-4 flex justify-center\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg\"><i class=\"fas fa-play\"></i></button></div><!-- optional video title and duration --><div class=\"absolute bottom-4 right-4 text-white text-sm\"><p>{video_title}</p><p>{video_duration} minutes</p></div></div>"
        }
      ]
    },
    {
      "description": "The UI should display a responsive, accessible, and SEO-friendly featured video poster image component. The image should be centered and take up the full width of the container on mobile devices and smaller screens, and resize to fit the container on larger screens.",
      "html": "<div class=\"container mx-auto p-4\"><FeaturedVideoPosterImage/></div>",
      "components": [
        {
          "name": "FeaturedVideoPosterImage",
          "is_standalone": true,
          "description": "(standalone): This component will contain the featured video poster image.",
          "html": "<img class=\"object-cover w-full h-64 md:h-80 lg:h-96 xl:h-112 mb-4\" src={poster_image_url} alt={poster_image_alt_text}/>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component. It should display a poster image for a video, with an optional play button overlay.",
      "html": "<div class=\"container mx-auto p-4\"><FeaturedVideoPosterImage/></div>",
      "components": [
        {
          "name": "FeaturedVideoPosterImage",
          "is_standalone": true,
          "description": "(standalone): The main component for the featured video poster image.",
          "html": "<img src=\"{poster_image_url}\" alt=\"{video_title}\" class=\"w-full h-full object-cover rounded-lg shadow-lg\"/><!-- Optional play button overlay -->{play_button ? <PlayButton/>: null}"
        },
        {
          "name": "PlayButton",
          "is_standalone": true,
          "description": "(standalone): An optional play button that can be overlaid on the poster image.",
          "html": "<button class=\"absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-white text-black rounded-full p-2\"><span class=\"sr-only\">Play video</span><i class=\"fas fa-play\" aria-hidden=\"true\"></i></button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive, mobile-first, accessible, and SEO-friendly featured video poster image component that displays a poster image, a play button, and optional video title and duration.",
      "html": "<div class=\"w-full h-full relative\"><VideoPosterImage/></div>",
      "components": [
        {
          "name": "VideoPosterImage",
          "is_standalone": true,
          "description": "standalone component that renders the poster image, play button, and optional video title and duration.",
          "html": "<div class=\"w-full h-full overflow-hidden rounded-lg shadow-md\"><!-- poster image --><img src={poster_image_url} alt={video_title} class=\"w-full h-full object-cover rounded-lg\"/><!-- play button --><div class=\"absolute bottom-4 left-4 flex justify-center\"><button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded-lg\"><i class=\"fas fa-play\"></i></button></div><!-- optional video title and duration --><div class=\"absolute bottom-4 right-4 text-white text-sm\"><p>{video_title}</p><p>{video_duration} minutes</p></div></div>"
        }
      ]
    }
  ],
  "Product Feature Icon Size": [
    {
      "description": "The UI should display a product feature icon with a size indicator, which is responsive, mobile-first, accessible, SEO-friendly, and well-documented.",
      "html": "<div class=\"flex items-center\"><FeatureIcon/><IconSizeIndicator/></div>",
      "components": [
        {
          "name": "FeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays a icon representing a product feature.",
          "html": "<i class=\"fas fa-{icon_type} text-2xl\" aria-label=\"{icon_label}\"></i>"
        },
        {
          "name": "IconSizeIndicator",
          "is_standalone": true,
          "description": "A standalone component that displays the size of the icon.",
          "html": "<span class=\"text-sm\">{icon_size}px</span>"
        }
      ]
    },
    {
      "description": "The UI should display a product feature icon with a specific size. The icon should be responsive and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><ProductFeatureIcon/></div>",
      "components": [
        {
          "name": "ProductFeatureIcon",
          "is_standalone": true,
          "description": "A standalone component that displays an icon with a specific size.",
          "html": "<i class=\"fas fa-{icon_type} text-{icon_color} text-{icon_size}\"></i>"
        }
      ]
    }
  ],
  "Tweet delete button for post removal": [
    {
      "description": "A small delete button with a trash can icon to remove a tweet from a post.",
      "html": "<button class=\"text-gray-500 hover:text-gray-800 transition duration-300 ease-in-out\"><TweetDeleteButton/></button>",
      "components": [
        {
          "name": "TweetDeleteButton",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span class=\"text-lg inline-block\"><i class=\"fas fa-trash-alt\"></i></span>"
        }
      ]
    }
  ],
  "Customizable Themes: Brand your interface": [
    {
      "description": "A menu with a list of theme options, where each option displays a preview of the theme and allows the user to select it.",
      "html": "<div class=\"w-full p-4 bg-gray-100 rounded\"><h2 class=\"text-lg font-bold mb-2\">Customizable Themes</h2><ThemeSelector><ThemeOption/><ThemeOption/><ThemeOption/><!-- more theme options here --></ThemeSelector></div>",
      "components": [
        {
          "name": "ThemeOption",
          "is_standalone": true,
          "description": "(standalone): a single theme option with a preview and a checkbox to select it",
          "html": "<div class=\"flex items-center mb-2\"><input type=\"checkbox\" class=\"mr-2\"/><div class=\"w-12 h-6 bg-{theme_color} mr-2\"/><span class=\"text-sm\">{theme_name}</span></div>"
        },
        {
          "name": "ThemeSelector",
          "is_standalone": false,
          "description": "(takes children): a container for a list of theme options",
          "html": "<ul class=\"list-none mb-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Case Study and Description Text": [
    {
      "description": "The UI should display a section that showcases a case study with a description text. The layout should be responsive, with the description text wrapping to the next line on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-white rounded shadow-md\"><CaseStudySection/><DescriptionText/></section>",
      "components": [
        {
          "name": "CaseStudySection",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-3xl font-bold\">{case_study_title}</h2>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<p class=\"text-lg leading-relaxed\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a section that showcases a case study with a description text. The layout should be responsive, with the description text wrapping to the next line on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-white rounded shadow-md\"><CaseStudySection/><DescriptionText/></section>",
      "components": [
        {
          "name": "CaseStudySection",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-3xl font-bold\">{case_study_title}</h2>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<p class=\"text-lg leading-relaxed\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a section that showcases a case study with a description text. The layout should be responsive, with the description text wrapping to the next line on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-white rounded shadow-md\"><CaseStudySection/><DescriptionText/></section>",
      "components": [
        {
          "name": "CaseStudySection",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-3xl font-bold\">{case_study_title}</h2>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<p class=\"text-lg leading-relaxed\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a section that showcases a case study with a description text. The layout should be responsive, with the description text wrapping to the next line on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-white rounded shadow-md\"><CaseStudySection/><DescriptionText/></section>",
      "components": [
        {
          "name": "CaseStudySection",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-3xl font-bold\">{case_study_title}</h2>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<p class=\"text-lg leading-relaxed\">{children}</p>"
        }
      ]
    },
    {
      "description": "The UI should display a section that showcases a case study with a description text. The layout should be responsive, with the description text wrapping to the next line on smaller screens.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-white rounded shadow-md\"><CaseStudySection/><DescriptionText/></section>",
      "components": [
        {
          "name": "CaseStudySection",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<h2 class=\"text-3xl font-bold\">{case_study_title}</h2>"
        },
        {
          "name": "DescriptionText",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<p class=\"text-lg leading-relaxed\">{children}</p>"
        }
      ]
    }
  ],
  "Featured Product Badge": [
    {
      "description": "The UI should display a small badge indicating that a product is featured, with a subtle background color, white text, and a slight rounded corner.",
      "html": "<span class=\"inline-block px-2 py-1 rounded-md bg-amber-500 text-white text-xs\"><FeaturedBadge/></span>",
      "components": [
        {
          "name": "FeaturedBadge",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span>Featured</span>"
        }
      ]
    },
    {
      "description": "The UI should display a small badge indicating that a product is featured, with a subtle background color, white text, and a slight rounded corner.",
      "html": "<span class=\"inline-block px-2 py-1 rounded-md bg-amber-500 text-white text-xs\"><FeaturedBadge/></span>",
      "components": [
        {
          "name": "FeaturedBadge",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span>Featured</span>"
        }
      ]
    },
    {
      "description": "The UI should display a small badge indicating that a product is featured, with a subtle background color, white text, and a slight rounded corner.",
      "html": "<span class=\"inline-block px-2 py-1 rounded-md bg-amber-500 text-white text-xs\"><FeaturedBadge/></span>",
      "components": [
        {
          "name": "FeaturedBadge",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span>Featured</span>"
        }
      ]
    },
    {
      "description": "The UI should display a small badge indicating that a product is featured, with a subtle background color, white text, and a slight rounded corner.",
      "html": "<span class=\"inline-block px-2 py-1 rounded-md bg-amber-500 text-white text-xs\"><FeaturedBadge/></span>",
      "components": [
        {
          "name": "FeaturedBadge",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<span>Featured</span>"
        }
      ]
    }
  ],
  "Social media feed with latest posts and images": [
    {
      "description": "The UI should be a social media feed that displays the latest posts and images in a responsive, mobile-first layout. The feed should be accessible and SEO-friendly, with alt text for images and semantic HTML5 elements.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><SocialMediaFeed><PostCard/><PostCard/><!-- Repeat PostCard components for each post in the feed --></SocialMediaFeed></div>",
      "components": [
        {
          "name": "PostCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single post with an image, post text, and post author.",
          "html": "<article class=\"flex flex-col mb-4 md:mb-6 lg:mb-12\"><PostImage/><PostText/><PostAuthor/></article>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image with alt text.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full h-48 object-cover rounded-md\">"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "A standalone component that displays the post text.",
          "html": "<p class=\"text-lg\">{post_text}</p>"
        },
        {
          "name": "PostAuthor",
          "is_standalone": true,
          "description": "A standalone component that displays the post author's name.",
          "html": "<p class=\"text-sm text-gray-600\">{post_author_name}</p>"
        },
        {
          "name": "SocialMediaFeed",
          "is_standalone": false,
          "description": "A component that takes children (multiple PostCard components) and displays them in a feed layout.",
          "html": "<div class=\"flex flex-col divide-y divide-gray-200\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should be a social media feed that displays the latest posts and images in a responsive, mobile-first layout. The feed should be accessible and SEO-friendly, with alt text for images and semantic HTML5 elements.",
      "html": "<div class=\"container mx-auto p-4 pt-6 md:p-6 lg:p-12\"><SocialMediaFeed><PostCard/><PostCard/><!-- Repeat PostCard components for each post in the feed --></SocialMediaFeed></div>",
      "components": [
        {
          "name": "PostCard",
          "is_standalone": true,
          "description": "A standalone component that displays a single post with an image, post text, and post author.",
          "html": "<article class=\"flex flex-col mb-4 md:mb-6 lg:mb-12\"><PostImage/><PostText/><PostAuthor/></article>"
        },
        {
          "name": "PostImage",
          "is_standalone": true,
          "description": "A standalone component that displays an image with alt text.",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt_text}\" class=\"w-full h-48 object-cover rounded-md\">"
        },
        {
          "name": "PostText",
          "is_standalone": true,
          "description": "A standalone component that displays the post text.",
          "html": "<p class=\"text-lg\">{post_text}</p>"
        },
        {
          "name": "PostAuthor",
          "is_standalone": true,
          "description": "A standalone component that displays the post author's name.",
          "html": "<p class=\"text-sm text-gray-600\">{post_author_name}</p>"
        },
        {
          "name": "SocialMediaFeed",
          "is_standalone": false,
          "description": "A component that takes children (multiple PostCard components) and displays them in a feed layout.",
          "html": "<div class=\"flex flex-col divide-y divide-gray-200\">{children}</div>"
        }
      ]
    }
  ],
  "Featured Product Card": [
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    },
    {
      "description": "The UI should be a responsive product card that displays a featured product. The card should have a prominent image of the product, a heading with the product name, a short description, and a call-to-action (CTA) button to encourage purchases. The design should be mobile-first, accessible, and SEO-friendly.",
      "html": "<div class=\"max-w-sm rounded overflow-hidden bg-white shadow-md\"><ProductImage/><div class=\"px-6 py-4\"><ProductName/><ProductDescription/></div><ActionButton/></div>",
      "components": [
        {
          "name": "ProductImage",
          "is_standalone": true,
          "description": "(standalone): Displays the product image",
          "html": "<img src=\"{image_url}\" alt=\"{image_alt}\" class=\"w-full h-48 object-cover\"/>"
        },
        {
          "name": "ProductName",
          "is_standalone": true,
          "description": "(standalone): Displays the product name",
          "html": "<h5 class=\"text-lg font-bold\">{product_name}</h5>"
        },
        {
          "name": "ProductDescription",
          "is_standalone": true,
          "description": "(standalone): Displays a short description of the product",
          "html": "<p class=\"text-gray-700 text-base\">{product_description}</p>"
        },
        {
          "name": "ActionButton",
          "is_standalone": true,
          "description": "(standalone): Displays a CTA button",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">Buy Now</button>"
        }
      ]
    }
  ],
  "Social Sharing Buttons": [
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media sharing buttons, each with an icon and a text label. The buttons should be medium-sized, round, and have a slight hover effect. The row should be centered and have some padding.",
      "html": "<div class=\"flex justify-center py-4\"><SocialSharingButtonsRow><SocialSharingButton/><SocialSharingButton/><SocialSharingButton/><!-- add more buttons here --></SocialSharingButtonsRow></div>",
      "components": [
        {
          "name": "SocialSharingButton",
          "is_standalone": true,
          "description": "(standalone): a single social media sharing button with an icon and text label",
          "html": "<a href=\"{sharing_url}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"inline-flex items-center justify-center w-10 h-10 rounded-full hover:bg-gray-200\"><i class={`fab fa-${social_media_icon} text-lg`}></i><span class=\"sr-only\">{social_media_name}</span></a>"
        },
        {
          "name": "SocialSharingButtonsRow",
          "is_standalone": false,
          "description": "(takes children): a horizontal row of social sharing buttons",
          "html": "<div class=\"flex flex-wrap justify-center\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should display a horizontal row of social media buttons, with each button representing a different social media platform (e.g. Facebook, Twitter, LinkedIn, etc.). The buttons should be responsive, mobile-friendly, and accessible.",
      "html": "<div class=\"flex justify-center mb-4\"><SocialSharingButtons><SocialMediaButton/><SocialMediaButton/><SocialMediaButton/><!-- Add more SocialMediaButton components here --></SocialSharingButtons></div>",
      "components": [
        {
          "name": "SocialMediaButton",
          "is_standalone": true,
          "description": "(standalone): a single social media button",
          "html": "<a href={social_media_url} target=\"_blank\" rel=\"noopener noreferrer\" class=\"w-8 h-8 rounded-full bg-{social_media_color} mr-2 hover:bg-{social_media_hover_color}\"><i class={`fa fa-${social_media_icon} text-lg text-white`}></i></a>"
        },
        {
          "name": "SocialSharingButtons",
          "is_standalone": false,
          "description": "(takes children): a container for multiple social media buttons",
          "html": "<div class=\"flex flex-wrap justify-center mb-4\">{children}</div>"
        }
      ]
    }
  ],
  "News or updates section with date and title": [
    {
      "description": "The UI should be a list of news or updates, each with a date and title. The date should be displayed in a smaller text above the title. The title should be a heading element to provide structure and hierarchy. The list should be responsive, with each item taking up the full width on mobile devices and being stacked horizontally on larger screens.",
      "html": "<div class=\"container max-w-md mx-auto p-4 md:p-8\"><h2>News and Updates</h2><NewsList><NewsCard/><NewsCard/><NewsCard/></NewsList></div>",
      "components": [
        {
          "name": "NewsCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single news or update item.",
          "html": "<div class=\"mb-4 p-4 border-b border-gray-200\"><time dateTime=\"{date_iso}\">{date_display}</time><h3>{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of news or update items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates with each item displaying a date and title. The list should be responsive and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">News & Updates</h2><NewsList><NewsItem/><NewsItem/><!-- insert more NewsItem components here --></NewsList></div>",
      "components": [
        {
          "name": "NewsItem",
          "is_standalone": true,
          "description": "component: standalone",
          "html": "<div class=\"flex mb-4\"><p class=\"text-gray-500 text-sm\">{date}</p><h3 class=\"text-lg font-bold\">{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "component: takes children",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates, each with a date and title. The date should be displayed in a smaller text above the title. The title should be a heading element to provide structure and hierarchy. The list should be responsive, with each item taking up the full width on mobile devices and being stacked horizontally on larger screens.",
      "html": "<div class=\"container max-w-md mx-auto p-4 md:p-8\"><h2>News and Updates</h2><NewsList><NewsCard/><NewsCard/><NewsCard/></NewsList></div>",
      "components": [
        {
          "name": "NewsCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single news or update item.",
          "html": "<div class=\"mb-4 p-4 border-b border-gray-200\"><time dateTime=\"{date_iso}\">{date_display}</time><h3>{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of news or update items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates, each with a date and title. The date should be displayed in a smaller text above the title. The title should be a heading element to provide structure and hierarchy. The list should be responsive, with each item taking up the full width on mobile devices and being stacked horizontally on larger screens.",
      "html": "<div class=\"container max-w-md mx-auto p-4 md:p-8\"><h2>News and Updates</h2><NewsList><NewsCard/><NewsCard/><NewsCard/></NewsList></div>",
      "components": [
        {
          "name": "NewsCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single news or update item.",
          "html": "<div class=\"mb-4 p-4 border-b border-gray-200\"><time dateTime=\"{date_iso}\">{date_display}</time><h3>{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of news or update items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates with each item displaying a date and title. The list should be responsive and accessible on various devices.",
      "html": "<div class=\"max-w-md mx-auto p-4\"><h2 class=\"text-2xl font-bold mb-4\">News & Updates</h2><NewsList><NewsItem/><NewsItem/><!-- insert more NewsItem components here --></NewsList></div>",
      "components": [
        {
          "name": "NewsItem",
          "is_standalone": true,
          "description": "component: standalone",
          "html": "<div class=\"flex mb-4\"><p class=\"text-gray-500 text-sm\">{date}</p><h3 class=\"text-lg font-bold\">{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "component: takes children",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "A section displaying news or updates with a date and title.",
      "html": "<section class=\"max-w-md mx-auto p-4 pt-6 mb-4 bg-white rounded shadow-md\"><UpdateCard/><UpdateCard/><!-- Add more UpdateCard components as needed --></section>",
      "components": [
        {
          "name": "UpdateCard",
          "is_standalone": true,
          "description": "Standalone component displaying a single update.",
          "html": "<div class=\"flex flex-wrap mb-4\"><UpdateDate/><UpdateTitle/></div>"
        },
        {
          "name": "UpdateDate",
          "is_standalone": true,
          "description": "Standalone component displaying the date of the update.",
          "html": "<p class=\"text-sm text-gray-600\">{date}</p>"
        },
        {
          "name": "UpdateTitle",
          "is_standalone": true,
          "description": "Standalone component displaying the title of the update.",
          "html": "<h3 class=\"text-lg font-bold\">{title}</h3>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates, each with a date and title. The date should be displayed in a smaller text above the title. The title should be a heading element to provide structure and hierarchy. The list should be responsive, with each item taking up the full width on mobile devices and being stacked horizontally on larger screens.",
      "html": "<div class=\"container max-w-md mx-auto p-4 md:p-8\"><h2>News and Updates</h2><NewsList><NewsCard/><NewsCard/><NewsCard/></NewsList></div>",
      "components": [
        {
          "name": "NewsCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single news or update item.",
          "html": "<div class=\"mb-4 p-4 border-b border-gray-200\"><time dateTime=\"{date_iso}\">{date_display}</time><h3>{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of news or update items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates, each with a date and title. The date should be displayed in a smaller text above the title. The title should be a heading element to provide structure and hierarchy. The list should be responsive, with each item taking up the full width on mobile devices and being stacked horizontally on larger screens.",
      "html": "<div class=\"container max-w-md mx-auto p-4 md:p-8\"><h2>News and Updates</h2><NewsList><NewsCard/><NewsCard/><NewsCard/></NewsList></div>",
      "components": [
        {
          "name": "NewsCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single news or update item.",
          "html": "<div class=\"mb-4 p-4 border-b border-gray-200\"><time dateTime=\"{date_iso}\">{date_display}</time><h3>{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of news or update items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates, each with a date and title. The date should be displayed in a smaller text above the title. The title should be a heading element to provide structure and hierarchy. The list should be responsive, with each item taking up the full width on mobile devices and being stacked horizontally on larger screens.",
      "html": "<div class=\"container max-w-md mx-auto p-4 md:p-8\"><h2>News and Updates</h2><NewsList><NewsCard/><NewsCard/><NewsCard/></NewsList></div>",
      "components": [
        {
          "name": "NewsCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single news or update item.",
          "html": "<div class=\"mb-4 p-4 border-b border-gray-200\"><time dateTime=\"{date_iso}\">{date_display}</time><h3>{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of news or update items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    },
    {
      "description": "The UI should be a list of news or updates, each with a date and title. The date should be displayed in a smaller text above the title. The title should be a heading element to provide structure and hierarchy. The list should be responsive, with each item taking up the full width on mobile devices and being stacked horizontally on larger screens.",
      "html": "<div class=\"container max-w-md mx-auto p-4 md:p-8\"><h2>News and Updates</h2><NewsList><NewsCard/><NewsCard/><NewsCard/></NewsList></div>",
      "components": [
        {
          "name": "NewsCard",
          "is_standalone": true,
          "description": "A standalone component that represents a single news or update item.",
          "html": "<div class=\"mb-4 p-4 border-b border-gray-200\"><time dateTime=\"{date_iso}\">{date_display}</time><h3>{title}</h3></div>"
        },
        {
          "name": "NewsList",
          "is_standalone": false,
          "description": "A component that takes children, representing a list of news or update items.",
          "html": "<ul class=\"list-none p-0 m-0\">{children}</ul>"
        }
      ]
    }
  ],
  "Search Bar": [
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><SearchBarContainer/></div>",
      "components": [
        {
          "name": "SearchBarContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the search bar.",
          "html": "<div class=\"flex w-full max-w-md mx-auto rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone): The input field for the search query.",
          "html": "<input type=\"search\" id=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone): The submit button for the search.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><SearchBarContainer/></div>",
      "components": [
        {
          "name": "SearchBarContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the search bar.",
          "html": "<div class=\"flex w-full max-w-md mx-auto rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone): The input field for the search query.",
          "html": "<input type=\"search\" id=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone): The submit button for the search.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a button to submit the search query. The search bar should be responsive and adapt to different screen sizes.",
      "html": "<div class=\"max-w-md mx-auto p-4 pt-6\"><SearchBar/></div>",
      "components": [
        {
          "name": "SearchBar",
          "is_standalone": true,
          "description": "standalone component that contains the input field and search button.",
          "html": "<div class=\"flex items-center mb-4\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "standalone component that represents the input field.",
          "html": "<input type=\"search\" id=\"search\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Search...\">"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "standalone component that represents the search button.",
          "html": "<button type=\"submit\" class=\"text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5\">Search</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><SearchBarContainer/></div>",
      "components": [
        {
          "name": "SearchBarContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the search bar.",
          "html": "<div class=\"flex w-full max-w-md mx-auto rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone): The input field for the search query.",
          "html": "<input type=\"search\" id=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone): The submit button for the search.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><SearchBarContainer/></div>",
      "components": [
        {
          "name": "SearchBarContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the search bar.",
          "html": "<div class=\"flex w-full max-w-md mx-auto rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone): The input field for the search query.",
          "html": "<input type=\"search\" id=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone): The submit button for the search.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><SearchBarContainer/></div>",
      "components": [
        {
          "name": "SearchBarContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the search bar.",
          "html": "<div class=\"flex w-full max-w-md mx-auto rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone): The input field for the search query.",
          "html": "<input type=\"search\" id=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone): The submit button for the search.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    },
    {
      "description": "The UI should be a simple search bar with a input field and a submit button. It should be responsive and mobile-friendly.",
      "html": "<div class=\"flex justify-center mb-4\"><SearchBarContainer/></div>",
      "components": [
        {
          "name": "SearchBarContainer",
          "is_standalone": true,
          "description": "(standalone): The outer container for the search bar.",
          "html": "<div class=\"flex w-full max-w-md mx-auto rounded-md shadow-md\"><SearchInput/><SearchButton/></div>"
        },
        {
          "name": "SearchInput",
          "is_standalone": true,
          "description": "(standalone): The input field for the search query.",
          "html": "<input type=\"search\" id=\"search\" class=\"w-full p-2 pl-10 text-sm text-gray-700\" placeholder=\"{search_placeholder}\"/>"
        },
        {
          "name": "SearchButton",
          "is_standalone": true,
          "description": "(standalone): The submit button for the search.",
          "html": "<button class=\"bg-orange-500 hover:bg-orange-700 text-white font-bold py-2 px-4 rounded\">{search_button_text}</button>"
        }
      ]
    }
  ],
  "Breadcrumb Home Link": [
    {
      "description": "The UI should be a single link that represents the home breadcrumb. It should be a simple, responsive, and accessible link that indicates the current location in a breadcrumb trail.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li><BreadcrumbHomeLink/></li><!-- other breadcrumb links will go here --></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbHomeLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a class=\"text-gray-600 hover:text-gray-900\" href={homeUrl}>Home</a>"
        }
      ]
    },
    {
      "description": "The UI should be a single link that represents the home breadcrumb. It should be a simple, responsive, and accessible link that indicates the current location in a breadcrumb trail.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li><BreadcrumbHomeLink/></li><!-- other breadcrumb links will go here --></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbHomeLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a class=\"text-gray-600 hover:text-gray-900\" href={homeUrl}>Home</a>"
        }
      ]
    },
    {
      "description": "The UI should be a single link that represents the home breadcrumb. It should be a simple, responsive, and accessible link that indicates the current location in a breadcrumb trail.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li><BreadcrumbHomeLink/></li><!-- other breadcrumb links will go here --></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbHomeLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a class=\"text-gray-600 hover:text-gray-900\" href={homeUrl}>Home</a>"
        }
      ]
    },
    {
      "description": "The UI should be a single link that represents the home breadcrumb. It should be a simple, responsive, and accessible link that indicates the current location in a breadcrumb trail.",
      "html": "<nav aria-label=\"Breadcrumb\"><ol class=\"flex\"><li><BreadcrumbHomeLink/></li><!-- other breadcrumb links will go here --></ol></nav>",
      "components": [
        {
          "name": "BreadcrumbHomeLink",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<a class=\"text-gray-600 hover:text-gray-900\" href={homeUrl}>Home</a>"
        }
      ]
    }
  ],
  "Sticky Header/Footer": [
    {
      "description": "The UI should have a sticky header and footer that remain at the top and bottom of the viewport, respectively, even when the user scrolls.",
      "html": "<div class=\"min-h-screen flex flex-col\"><StickyHeader/><MainContent><!-- page content goes here --></MainContent><StickyFooter/></div>",
      "components": [
        {
          "name": "StickyHeader",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<header class=\"sticky top-0 z-50 bg-white shadow-md py-2 px-4\"><!-- header content goes here --><nav><ul><li><a href=\"#\">Link 1</a></li><li><a href=\"#\">Link 2</a></li><li><a href=\"#\">Link 3</a></li></ul></nav></header>"
        },
        {
          "name": "StickyFooter",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<footer class=\"sticky bottom-0 bg-gray-200 py-2 px-4\"><!-- footer content goes here --><p>&copy; {year} My Website</p></footer>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"flex-grow p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a sticky header and footer that remain at the top and bottom of the viewport, respectively, even when the user scrolls.",
      "html": "<div class=\"min-h-screen flex flex-col\"><StickyHeader/><MainContent><!-- page content goes here --></MainContent><StickyFooter/></div>",
      "components": [
        {
          "name": "StickyHeader",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<header class=\"sticky top-0 z-50 bg-white shadow-md py-2 px-4\"><!-- header content goes here --><nav><ul><li><a href=\"#\">Link 1</a></li><li><a href=\"#\">Link 2</a></li><li><a href=\"#\">Link 3</a></li></ul></nav></header>"
        },
        {
          "name": "StickyFooter",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<footer class=\"sticky bottom-0 bg-gray-200 py-2 px-4\"><!-- footer content goes here --><p>&copy; {year} My Website</p></footer>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"flex-grow p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a sticky header at the top of the page, a main content area in the middle, and a sticky footer at the bottom of the page. The header and footer should remain fixed at the top and bottom of the page, respectively, even when the user scrolls.",
      "html": "<div class=\"h-screen flex flex-col\"><StickyHeader/><ContentArea><!-- main content goes here --></ContentArea><StickyFooter/></div>",
      "components": [
        {
          "name": "StickyHeader",
          "is_standalone": true,
          "description": "A standalone component that represents the sticky header.",
          "html": "<header class=\"sticky top-0 z-50 w-full h-16 bg-gray-800 text-white p-4 flex justify-center\"><!-- header content goes here --><h1>{header_title}</h1></header>"
        },
        {
          "name": "StickyFooter",
          "is_standalone": true,
          "description": "A standalone component that represents the sticky footer.",
          "html": "<footer class=\"sticky bottom-0 z-50 w-full h-16 bg-gray-800 text-white p-4 flex justify-center\"><!-- footer content goes here --><p>{copyright_text}</p></footer>"
        },
        {
          "name": "ContentArea",
          "is_standalone": false,
          "description": "A component that takes children, representing the main content area of the page.",
          "html": "<div class=\"flex-1 overflow-y-auto p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a sticky header and footer that remain at the top and bottom of the viewport, respectively, even when the user scrolls.",
      "html": "<div class=\"min-h-screen flex flex-col\"><StickyHeader/><MainContent><!-- page content goes here --></MainContent><StickyFooter/></div>",
      "components": [
        {
          "name": "StickyHeader",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<header class=\"sticky top-0 z-50 bg-white shadow-md py-2 px-4\"><!-- header content goes here --><nav><ul><li><a href=\"#\">Link 1</a></li><li><a href=\"#\">Link 2</a></li><li><a href=\"#\">Link 3</a></li></ul></nav></header>"
        },
        {
          "name": "StickyFooter",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<footer class=\"sticky bottom-0 bg-gray-200 py-2 px-4\"><!-- footer content goes here --><p>&copy; {year} My Website</p></footer>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"flex-grow p-4\">{children}</div>"
        }
      ]
    },
    {
      "description": "The UI should have a sticky header and footer that remain at the top and bottom of the viewport, respectively, even when the user scrolls.",
      "html": "<div class=\"min-h-screen flex flex-col\"><StickyHeader/><MainContent><!-- page content goes here --></MainContent><StickyFooter/></div>",
      "components": [
        {
          "name": "StickyHeader",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<header class=\"sticky top-0 z-50 bg-white shadow-md py-2 px-4\"><!-- header content goes here --><nav><ul><li><a href=\"#\">Link 1</a></li><li><a href=\"#\">Link 2</a></li><li><a href=\"#\">Link 3</a></li></ul></nav></header>"
        },
        {
          "name": "StickyFooter",
          "is_standalone": true,
          "description": "(standalone)",
          "html": "<footer class=\"sticky bottom-0 bg-gray-200 py-2 px-4\"><!-- footer content goes here --><p>&copy; {year} My Website</p></footer>"
        },
        {
          "name": "MainContent",
          "is_standalone": false,
          "description": "(takes children)",
          "html": "<div class=\"flex-grow p-4\">{children}</div>"
        }
      ]
    }
  ]
}